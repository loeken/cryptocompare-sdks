/*
 * CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry
 *
 * CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: data@cryptocompare.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// SPOTINSTRUMENTMETADATA
    /// </summary>
    [DataContract]
    public partial class SPOTINSTRUMENTMETADATA :  IEquatable<SPOTINSTRUMENTMETADATA>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SPOTINSTRUMENTMETADATA" /> class.
        /// </summary>
        /// <param name="fIRSTSEENONBLOBTS">This is the first time instrument was seen on instrumentListSourceType BLOB..</param>
        /// <param name="fIRSTSEENONFIXTS">This is the first time instrument was seen on instrumentListSourceType FIX..</param>
        /// <param name="fIRSTSEENONHARDCODEDTS">This is the first time instrument was seen on instrumentListSourceType HARDCODED..</param>
        /// <param name="fIRSTSEENONINDEXCOMPOSITIONTS">This is the first time instrument was seen on instrumentListSourceType INDEX_COMPOSITION..</param>
        /// <param name="fIRSTSEENONNSQTS">This is the first time instrument was seen on instrumentListSourceType NSQ..</param>
        /// <param name="fIRSTSEENONPOLLINGTS">This is the first time instrument was seen on instrumentListSourceType POLLING..</param>
        /// <param name="fIRSTSEENONSTREAMINGTS">This is the first time instrument was seen on instrumentListSourceType STREAMING..</param>
        /// <param name="fIRSTTRADESPOTFROMBACKFILL">This is the first TRADE_SPOT that we have seen on the specific source type in internal format..</param>
        /// <param name="fIRSTTRADESPOTFROMBACKFILLEXTERNAL">This is the first TRADE_SPOT that we have seen on the specific source type in external format..</param>
        /// <param name="fIRSTTRADESPOTFROMBLOB">This is the first TRADE_SPOT that we have seen on the specific source type in internal format..</param>
        /// <param name="fIRSTTRADESPOTFROMBLOBEXTERNAL">This is the first TRADE_SPOT that we have seen on the specific source type in external format..</param>
        /// <param name="fIRSTTRADESPOTFROMCALCULATED">This is the first TRADE_SPOT that we have seen on the specific source type in internal format..</param>
        /// <param name="fIRSTTRADESPOTFROMCALCULATEDEXTERNAL">This is the first TRADE_SPOT that we have seen on the specific source type in external format..</param>
        /// <param name="fIRSTTRADESPOTFROMFIX">This is the first TRADE_SPOT that we have seen on the specific source type in internal format..</param>
        /// <param name="fIRSTTRADESPOTFROMFIXEXTERNAL">This is the first TRADE_SPOT that we have seen on the specific source type in external format..</param>
        /// <param name="fIRSTTRADESPOTFROMGO">This is the first TRADE_SPOT that we have seen on the specific source type in internal format..</param>
        /// <param name="fIRSTTRADESPOTFROMGOEXTERNAL">This is the first TRADE_SPOT that we have seen on the specific source type in external format..</param>
        /// <param name="fIRSTTRADESPOTFROMPOLLING">This is the first TRADE_SPOT that we have seen on the specific source type in internal format..</param>
        /// <param name="fIRSTTRADESPOTFROMPOLLINGEXTERNAL">This is the first TRADE_SPOT that we have seen on the specific source type in external format..</param>
        /// <param name="fIRSTTRADESPOTFROMSTREAMING">This is the first TRADE_SPOT that we have seen on the specific source type in internal format..</param>
        /// <param name="fIRSTTRADESPOTFROMSTREAMINGEXTERNAL">This is the first TRADE_SPOT that we have seen on the specific source type in external format..</param>
        /// <param name="hOSTMIGRATIONDESTINATION">The migration destination vm hostname..</param>
        /// <param name="hOSTMIGRATIONSOURCE">The migration source vm hostname..</param>
        /// <param name="hOSTMIGRATIONSTATUS">The migration status of the symbol, we only poll / stream / connect empty or SETTLED.</param>
        /// <param name="iNSTRUMENT">The instrument ID as it is on the exchange with small modifications - we do not allow the following characters inside isntrument ids: ,/&amp;?.</param>
        /// <param name="iNSTRUMENTEXTERNALDATA">The full data we get from the polling endpoint for this specific instrument. This is a JSON stringified object with different properties per exchange..</param>
        /// <param name="iNSTRUMENTMAPPING">The current mapping information for this instrument.</param>
        /// <param name="iNSTRUMENTMAPPINGHISTORY">Historical mapping information for this instrument.</param>
        /// <param name="iNSTRUMENTSOURCEBACKFILL">Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from..</param>
        /// <param name="iNSTRUMENTSOURCEBLOB">Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from..</param>
        /// <param name="iNSTRUMENTSOURCECALCULATED">Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from..</param>
        /// <param name="iNSTRUMENTSOURCEFIX">Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from..</param>
        /// <param name="iNSTRUMENTSOURCEGO">Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from..</param>
        /// <param name="iNSTRUMENTSOURCEPOLLING">Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from..</param>
        /// <param name="iNSTRUMENTSOURCESTREAMING">Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from..</param>
        /// <param name="iNSTRUMENTSTATUS">The status of the symbol, we only poll / stream / connect to the ACTIVE ones, for the RETIRED / IGNORED / EXPIRED  one we no longer query for data. (default to &quot;ACTIVE&quot;).</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMBACKFILLLASTPROXIEDRESTREQUEST">The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTREQUESTTS">The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTRESPONSETS">The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMBACKFILLRESTURINEXTREQUESTTS">The next time we expect to make a request for TRADE_SPOT on this instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMBLOBLASTPROXIEDRESTREQUEST">The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMBLOBRESTURILASTREQUESTTS">The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMBLOBRESTURILASTRESPONSETS">The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMBLOBRESTURINEXTREQUESTTS">The next time we expect to make a request for TRADE_SPOT on this instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMCALCULATEDLASTPROXIEDRESTREQUEST">The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTREQUESTTS">The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTRESPONSETS">The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMCALCULATEDRESTURINEXTREQUESTTS">The next time we expect to make a request for TRADE_SPOT on this instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMFIXLASTPROXIEDRESTREQUEST">The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMFIXRESTURILASTREQUESTTS">The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMFIXRESTURILASTRESPONSETS">The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMFIXRESTURINEXTREQUESTTS">The next time we expect to make a request for TRADE_SPOT on this instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMGOLASTPROXIEDRESTREQUEST">The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMGORESTURILASTREQUESTTS">The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMGORESTURILASTRESPONSETS">The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMGORESTURINEXTREQUESTTS">The next time we expect to make a request for TRADE_SPOT on this instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMPOLLINGLASTPROXIEDRESTREQUEST">The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTREQUESTTS">The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTRESPONSETS">The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMPOLLINGRESTURINEXTREQUESTTS">The next time we expect to make a request for TRADE_SPOT on this instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMSTREAMINGLASTPROXIEDRESTREQUEST">The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTREQUESTTS">The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTRESPONSETS">The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTFROMSTREAMINGRESTURINEXTREQUESTTS">The next time we expect to make a request for TRADE_SPOT on this instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTISREADYFORSTREAMINGINTEGRATION">This flags the exchange instrument as in ready to consume TRADE_SPOT via a streaming integration. (default to false).</param>
        /// <param name="iNSTRUMENTTRADESPOTRESTURI">This is used to build up the request in some cases, this is where we put the id we use when querying for TRADE_SPOT..</param>
        /// <param name="iNSTRUMENTTRADESPOTRESTURL">The URL we send to the proxy swarm to get TRADE_SPOT for the instrument..</param>
        /// <param name="iNSTRUMENTTRADESPOTSTREAMINGSUBSCRIPTION">This is used to build up the subscription in some cases, this is where we put the id we use when subscribing for TRADE_SPOT on this instrument..</param>
        /// <param name="lASTCONCURRENTBATCHOFTRADESSPOTMS">The timestamp last encountered where the batch of trades from TRADES_SPOT all occured at the same time. This is an issue when making the next request that requires polling by timestamp as a start/from parameter.</param>
        /// <param name="lASTSEENONBLOBTS">This is the last time instrument was seen on instrumentListSourceType BLOB..</param>
        /// <param name="lASTSEENONFIXTS">This is the last time instrument was seen on instrumentListSourceType FIX..</param>
        /// <param name="lASTSEENONHARDCODEDTS">This is the last time instrument was seen on instrumentListSourceType HARDCODED..</param>
        /// <param name="lASTSEENONINDEXCOMPOSITIONTS">This is the last time instrument was seen on instrumentListSourceType INDEX_COMPOSITION..</param>
        /// <param name="lASTSEENONNSQTS">This is the last time instrument was seen on instrumentListSourceType NSQ..</param>
        /// <param name="lASTSEENONPOLLINGTS">This is the last time instrument was seen on instrumentListSourceType POLLING..</param>
        /// <param name="lASTSEENONSTREAMINGTS">This is the last time instrument was seen on instrumentListSourceType STREAMING..</param>
        /// <param name="lASTTRADESPOTFROMBACKFILL">This is the last TRADE_SPOT that we have seen on the specific source type in internal format..</param>
        /// <param name="lASTTRADESPOTFROMBACKFILLEXTERNAL">This is the last TRADE_SPOT that we have seen on the specific trade source in external format..</param>
        /// <param name="lASTTRADESPOTFROMBLOB">This is the last TRADE_SPOT that we have seen on the specific source type in internal format..</param>
        /// <param name="lASTTRADESPOTFROMBLOBEXTERNAL">This is the last TRADE_SPOT that we have seen on the specific trade source in external format..</param>
        /// <param name="lASTTRADESPOTFROMCALCULATED">This is the last TRADE_SPOT that we have seen on the specific source type in internal format..</param>
        /// <param name="lASTTRADESPOTFROMCALCULATEDEXTERNAL">This is the last TRADE_SPOT that we have seen on the specific trade source in external format..</param>
        /// <param name="lASTTRADESPOTFROMFIX">This is the last TRADE_SPOT that we have seen on the specific source type in internal format..</param>
        /// <param name="lASTTRADESPOTFROMFIXEXTERNAL">This is the last TRADE_SPOT that we have seen on the specific trade source in external format..</param>
        /// <param name="lASTTRADESPOTFROMGO">This is the last TRADE_SPOT that we have seen on the specific source type in internal format..</param>
        /// <param name="lASTTRADESPOTFROMGOEXTERNAL">This is the last TRADE_SPOT that we have seen on the specific trade source in external format..</param>
        /// <param name="lASTTRADESPOTFROMPOLLING">This is the last TRADE_SPOT that we have seen on the specific source type in internal format..</param>
        /// <param name="lASTTRADESPOTFROMPOLLINGEXTERNAL">This is the last TRADE_SPOT that we have seen on the specific trade source in external format..</param>
        /// <param name="lASTTRADESPOTFROMSTREAMING">This is the last TRADE_SPOT that we have seen on the specific source type in internal format..</param>
        /// <param name="lASTTRADESPOTFROMSTREAMINGEXTERNAL">This is the last TRADE_SPOT that we have seen on the specific trade source in external format..</param>
        /// <param name="mETADATAVERSION">The version of metadata, used for version conversions/migrates. (default to 4).</param>
        /// <param name="pROCESSINGTRADESFROMBLOBSTATUS">This states the status of blob migration for this intrument on this exchange..</param>
        /// <param name="tOTALTRADESSPOT">This is both the CCSEQ and the total TRADES_SPOT we have processed on this instrument.</param>
        /// <param name="uNSTRUCTUREDTRADESPOTFROMBACKFILLINTERNALDATA">This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service..</param>
        /// <param name="uNSTRUCTUREDTRADESPOTFROMBLOBINTERNALDATA">This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service..</param>
        /// <param name="uNSTRUCTUREDTRADESPOTFROMCALCULATEDINTERNALDATA">This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service..</param>
        /// <param name="uNSTRUCTUREDTRADESPOTFROMFIXINTERNALDATA">This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service..</param>
        /// <param name="uNSTRUCTUREDTRADESPOTFROMGOINTERNALDATA">This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service..</param>
        /// <param name="uNSTRUCTUREDTRADESPOTFROMPOLLINGINTERNALDATA">This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service..</param>
        /// <param name="uNSTRUCTUREDTRADESPOTFROMSTREAMINGINTERNALDATA">This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service..</param>
        public SPOTINSTRUMENTMETADATA(int fIRSTSEENONBLOBTS = default(int), int fIRSTSEENONFIXTS = default(int), int fIRSTSEENONHARDCODEDTS = default(int), int fIRSTSEENONINDEXCOMPOSITIONTS = default(int), int fIRSTSEENONNSQTS = default(int), int fIRSTSEENONPOLLINGTS = default(int), int fIRSTSEENONSTREAMINGTS = default(int), Object fIRSTTRADESPOTFROMBACKFILL = default(Object), Object fIRSTTRADESPOTFROMBACKFILLEXTERNAL = default(Object), Object fIRSTTRADESPOTFROMBLOB = default(Object), Object fIRSTTRADESPOTFROMBLOBEXTERNAL = default(Object), Object fIRSTTRADESPOTFROMCALCULATED = default(Object), Object fIRSTTRADESPOTFROMCALCULATEDEXTERNAL = default(Object), Object fIRSTTRADESPOTFROMFIX = default(Object), Object fIRSTTRADESPOTFROMFIXEXTERNAL = default(Object), Object fIRSTTRADESPOTFROMGO = default(Object), Object fIRSTTRADESPOTFROMGOEXTERNAL = default(Object), Object fIRSTTRADESPOTFROMPOLLING = default(Object), Object fIRSTTRADESPOTFROMPOLLINGEXTERNAL = default(Object), Object fIRSTTRADESPOTFROMSTREAMING = default(Object), Object fIRSTTRADESPOTFROMSTREAMINGEXTERNAL = default(Object), string hOSTMIGRATIONDESTINATION = default(string), string hOSTMIGRATIONSOURCE = default(string), string hOSTMIGRATIONSTATUS = default(string), string iNSTRUMENT = default(string), string iNSTRUMENTEXTERNALDATA = default(string), Object iNSTRUMENTMAPPING = default(Object), List<string> iNSTRUMENTMAPPINGHISTORY = default(List<string>), string iNSTRUMENTSOURCEBACKFILL = default(string), string iNSTRUMENTSOURCEBLOB = default(string), string iNSTRUMENTSOURCECALCULATED = default(string), string iNSTRUMENTSOURCEFIX = default(string), string iNSTRUMENTSOURCEGO = default(string), string iNSTRUMENTSOURCEPOLLING = default(string), string iNSTRUMENTSOURCESTREAMING = default(string), string iNSTRUMENTSTATUS = "ACTIVE", Object iNSTRUMENTTRADESPOTFROMBACKFILLLASTPROXIEDRESTREQUEST = default(Object), int iNSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTREQUESTTS = default(int), int iNSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTRESPONSETS = default(int), int iNSTRUMENTTRADESPOTFROMBACKFILLRESTURINEXTREQUESTTS = default(int), Object iNSTRUMENTTRADESPOTFROMBLOBLASTPROXIEDRESTREQUEST = default(Object), int iNSTRUMENTTRADESPOTFROMBLOBRESTURILASTREQUESTTS = default(int), int iNSTRUMENTTRADESPOTFROMBLOBRESTURILASTRESPONSETS = default(int), int iNSTRUMENTTRADESPOTFROMBLOBRESTURINEXTREQUESTTS = default(int), Object iNSTRUMENTTRADESPOTFROMCALCULATEDLASTPROXIEDRESTREQUEST = default(Object), int iNSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTREQUESTTS = default(int), int iNSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTRESPONSETS = default(int), int iNSTRUMENTTRADESPOTFROMCALCULATEDRESTURINEXTREQUESTTS = default(int), Object iNSTRUMENTTRADESPOTFROMFIXLASTPROXIEDRESTREQUEST = default(Object), int iNSTRUMENTTRADESPOTFROMFIXRESTURILASTREQUESTTS = default(int), int iNSTRUMENTTRADESPOTFROMFIXRESTURILASTRESPONSETS = default(int), int iNSTRUMENTTRADESPOTFROMFIXRESTURINEXTREQUESTTS = default(int), Object iNSTRUMENTTRADESPOTFROMGOLASTPROXIEDRESTREQUEST = default(Object), int iNSTRUMENTTRADESPOTFROMGORESTURILASTREQUESTTS = default(int), int iNSTRUMENTTRADESPOTFROMGORESTURILASTRESPONSETS = default(int), int iNSTRUMENTTRADESPOTFROMGORESTURINEXTREQUESTTS = default(int), Object iNSTRUMENTTRADESPOTFROMPOLLINGLASTPROXIEDRESTREQUEST = default(Object), int iNSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTREQUESTTS = default(int), int iNSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTRESPONSETS = default(int), int iNSTRUMENTTRADESPOTFROMPOLLINGRESTURINEXTREQUESTTS = default(int), Object iNSTRUMENTTRADESPOTFROMSTREAMINGLASTPROXIEDRESTREQUEST = default(Object), int iNSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTREQUESTTS = default(int), int iNSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTRESPONSETS = default(int), int iNSTRUMENTTRADESPOTFROMSTREAMINGRESTURINEXTREQUESTTS = default(int), bool iNSTRUMENTTRADESPOTISREADYFORSTREAMINGINTEGRATION = false, string iNSTRUMENTTRADESPOTRESTURI = default(string), string iNSTRUMENTTRADESPOTRESTURL = default(string), string iNSTRUMENTTRADESPOTSTREAMINGSUBSCRIPTION = default(string), int lASTCONCURRENTBATCHOFTRADESSPOTMS = default(int), int lASTSEENONBLOBTS = default(int), int lASTSEENONFIXTS = default(int), int lASTSEENONHARDCODEDTS = default(int), int lASTSEENONINDEXCOMPOSITIONTS = default(int), int lASTSEENONNSQTS = default(int), int lASTSEENONPOLLINGTS = default(int), int lASTSEENONSTREAMINGTS = default(int), Object lASTTRADESPOTFROMBACKFILL = default(Object), Object lASTTRADESPOTFROMBACKFILLEXTERNAL = default(Object), Object lASTTRADESPOTFROMBLOB = default(Object), Object lASTTRADESPOTFROMBLOBEXTERNAL = default(Object), Object lASTTRADESPOTFROMCALCULATED = default(Object), Object lASTTRADESPOTFROMCALCULATEDEXTERNAL = default(Object), Object lASTTRADESPOTFROMFIX = default(Object), Object lASTTRADESPOTFROMFIXEXTERNAL = default(Object), Object lASTTRADESPOTFROMGO = default(Object), Object lASTTRADESPOTFROMGOEXTERNAL = default(Object), Object lASTTRADESPOTFROMPOLLING = default(Object), Object lASTTRADESPOTFROMPOLLINGEXTERNAL = default(Object), Object lASTTRADESPOTFROMSTREAMING = default(Object), Object lASTTRADESPOTFROMSTREAMINGEXTERNAL = default(Object), int mETADATAVERSION = 4, string pROCESSINGTRADESFROMBLOBSTATUS = default(string), int tOTALTRADESSPOT = default(int), Object uNSTRUCTUREDTRADESPOTFROMBACKFILLINTERNALDATA = default(Object), Object uNSTRUCTUREDTRADESPOTFROMBLOBINTERNALDATA = default(Object), Object uNSTRUCTUREDTRADESPOTFROMCALCULATEDINTERNALDATA = default(Object), Object uNSTRUCTUREDTRADESPOTFROMFIXINTERNALDATA = default(Object), Object uNSTRUCTUREDTRADESPOTFROMGOINTERNALDATA = default(Object), Object uNSTRUCTUREDTRADESPOTFROMPOLLINGINTERNALDATA = default(Object), Object uNSTRUCTUREDTRADESPOTFROMSTREAMINGINTERNALDATA = default(Object))
        {
            this.FIRST_SEEN_ON_BLOB_TS = fIRSTSEENONBLOBTS;
            this.FIRST_SEEN_ON_FIX_TS = fIRSTSEENONFIXTS;
            this.FIRST_SEEN_ON_HARDCODED_TS = fIRSTSEENONHARDCODEDTS;
            this.FIRST_SEEN_ON_INDEX_COMPOSITION_TS = fIRSTSEENONINDEXCOMPOSITIONTS;
            this.FIRST_SEEN_ON_NSQ_TS = fIRSTSEENONNSQTS;
            this.FIRST_SEEN_ON_POLLING_TS = fIRSTSEENONPOLLINGTS;
            this.FIRST_SEEN_ON_STREAMING_TS = fIRSTSEENONSTREAMINGTS;
            this.FIRST_TRADE_SPOT_FROM_BACKFILL = fIRSTTRADESPOTFROMBACKFILL;
            this.FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL = fIRSTTRADESPOTFROMBACKFILLEXTERNAL;
            this.FIRST_TRADE_SPOT_FROM_BLOB = fIRSTTRADESPOTFROMBLOB;
            this.FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL = fIRSTTRADESPOTFROMBLOBEXTERNAL;
            this.FIRST_TRADE_SPOT_FROM_CALCULATED = fIRSTTRADESPOTFROMCALCULATED;
            this.FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL = fIRSTTRADESPOTFROMCALCULATEDEXTERNAL;
            this.FIRST_TRADE_SPOT_FROM_FIX = fIRSTTRADESPOTFROMFIX;
            this.FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL = fIRSTTRADESPOTFROMFIXEXTERNAL;
            this.FIRST_TRADE_SPOT_FROM_GO = fIRSTTRADESPOTFROMGO;
            this.FIRST_TRADE_SPOT_FROM_GO_EXTERNAL = fIRSTTRADESPOTFROMGOEXTERNAL;
            this.FIRST_TRADE_SPOT_FROM_POLLING = fIRSTTRADESPOTFROMPOLLING;
            this.FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL = fIRSTTRADESPOTFROMPOLLINGEXTERNAL;
            this.FIRST_TRADE_SPOT_FROM_STREAMING = fIRSTTRADESPOTFROMSTREAMING;
            this.FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL = fIRSTTRADESPOTFROMSTREAMINGEXTERNAL;
            this.HOST_MIGRATION_DESTINATION = hOSTMIGRATIONDESTINATION;
            this.HOST_MIGRATION_SOURCE = hOSTMIGRATIONSOURCE;
            this.HOST_MIGRATION_STATUS = hOSTMIGRATIONSTATUS;
            this.INSTRUMENT = iNSTRUMENT;
            this.INSTRUMENT_EXTERNAL_DATA = iNSTRUMENTEXTERNALDATA;
            this.INSTRUMENT_MAPPING = iNSTRUMENTMAPPING;
            this.INSTRUMENT_MAPPING_HISTORY = iNSTRUMENTMAPPINGHISTORY;
            this.INSTRUMENT_SOURCE_BACKFILL = iNSTRUMENTSOURCEBACKFILL;
            this.INSTRUMENT_SOURCE_BLOB = iNSTRUMENTSOURCEBLOB;
            this.INSTRUMENT_SOURCE_CALCULATED = iNSTRUMENTSOURCECALCULATED;
            this.INSTRUMENT_SOURCE_FIX = iNSTRUMENTSOURCEFIX;
            this.INSTRUMENT_SOURCE_GO = iNSTRUMENTSOURCEGO;
            this.INSTRUMENT_SOURCE_POLLING = iNSTRUMENTSOURCEPOLLING;
            this.INSTRUMENT_SOURCE_STREAMING = iNSTRUMENTSOURCESTREAMING;
            // use default value if no "iNSTRUMENTSTATUS" provided
            if (iNSTRUMENTSTATUS == null)
            {
                this.INSTRUMENT_STATUS = "ACTIVE";
            }
            else
            {
                this.INSTRUMENT_STATUS = iNSTRUMENTSTATUS;
            }
            this.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST = iNSTRUMENTTRADESPOTFROMBACKFILLLASTPROXIEDRESTREQUEST;
            this.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS = iNSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTREQUESTTS;
            this.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS = iNSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTRESPONSETS;
            this.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS = iNSTRUMENTTRADESPOTFROMBACKFILLRESTURINEXTREQUESTTS;
            this.INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST = iNSTRUMENTTRADESPOTFROMBLOBLASTPROXIEDRESTREQUEST;
            this.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS = iNSTRUMENTTRADESPOTFROMBLOBRESTURILASTREQUESTTS;
            this.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS = iNSTRUMENTTRADESPOTFROMBLOBRESTURILASTRESPONSETS;
            this.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS = iNSTRUMENTTRADESPOTFROMBLOBRESTURINEXTREQUESTTS;
            this.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST = iNSTRUMENTTRADESPOTFROMCALCULATEDLASTPROXIEDRESTREQUEST;
            this.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS = iNSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTREQUESTTS;
            this.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS = iNSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTRESPONSETS;
            this.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS = iNSTRUMENTTRADESPOTFROMCALCULATEDRESTURINEXTREQUESTTS;
            this.INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST = iNSTRUMENTTRADESPOTFROMFIXLASTPROXIEDRESTREQUEST;
            this.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS = iNSTRUMENTTRADESPOTFROMFIXRESTURILASTREQUESTTS;
            this.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS = iNSTRUMENTTRADESPOTFROMFIXRESTURILASTRESPONSETS;
            this.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS = iNSTRUMENTTRADESPOTFROMFIXRESTURINEXTREQUESTTS;
            this.INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST = iNSTRUMENTTRADESPOTFROMGOLASTPROXIEDRESTREQUEST;
            this.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS = iNSTRUMENTTRADESPOTFROMGORESTURILASTREQUESTTS;
            this.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS = iNSTRUMENTTRADESPOTFROMGORESTURILASTRESPONSETS;
            this.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS = iNSTRUMENTTRADESPOTFROMGORESTURINEXTREQUESTTS;
            this.INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST = iNSTRUMENTTRADESPOTFROMPOLLINGLASTPROXIEDRESTREQUEST;
            this.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS = iNSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTREQUESTTS;
            this.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS = iNSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTRESPONSETS;
            this.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS = iNSTRUMENTTRADESPOTFROMPOLLINGRESTURINEXTREQUESTTS;
            this.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST = iNSTRUMENTTRADESPOTFROMSTREAMINGLASTPROXIEDRESTREQUEST;
            this.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS = iNSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTREQUESTTS;
            this.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS = iNSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTRESPONSETS;
            this.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS = iNSTRUMENTTRADESPOTFROMSTREAMINGRESTURINEXTREQUESTTS;
            // use default value if no "iNSTRUMENTTRADESPOTISREADYFORSTREAMINGINTEGRATION" provided
            if (iNSTRUMENTTRADESPOTISREADYFORSTREAMINGINTEGRATION == null)
            {
                this.INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION = false;
            }
            else
            {
                this.INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION = iNSTRUMENTTRADESPOTISREADYFORSTREAMINGINTEGRATION;
            }
            this.INSTRUMENT_TRADE_SPOT_REST_URI = iNSTRUMENTTRADESPOTRESTURI;
            this.INSTRUMENT_TRADE_SPOT_REST_URL = iNSTRUMENTTRADESPOTRESTURL;
            this.INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION = iNSTRUMENTTRADESPOTSTREAMINGSUBSCRIPTION;
            this.LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS = lASTCONCURRENTBATCHOFTRADESSPOTMS;
            this.LAST_SEEN_ON_BLOB_TS = lASTSEENONBLOBTS;
            this.LAST_SEEN_ON_FIX_TS = lASTSEENONFIXTS;
            this.LAST_SEEN_ON_HARDCODED_TS = lASTSEENONHARDCODEDTS;
            this.LAST_SEEN_ON_INDEX_COMPOSITION_TS = lASTSEENONINDEXCOMPOSITIONTS;
            this.LAST_SEEN_ON_NSQ_TS = lASTSEENONNSQTS;
            this.LAST_SEEN_ON_POLLING_TS = lASTSEENONPOLLINGTS;
            this.LAST_SEEN_ON_STREAMING_TS = lASTSEENONSTREAMINGTS;
            this.LAST_TRADE_SPOT_FROM_BACKFILL = lASTTRADESPOTFROMBACKFILL;
            this.LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL = lASTTRADESPOTFROMBACKFILLEXTERNAL;
            this.LAST_TRADE_SPOT_FROM_BLOB = lASTTRADESPOTFROMBLOB;
            this.LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL = lASTTRADESPOTFROMBLOBEXTERNAL;
            this.LAST_TRADE_SPOT_FROM_CALCULATED = lASTTRADESPOTFROMCALCULATED;
            this.LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL = lASTTRADESPOTFROMCALCULATEDEXTERNAL;
            this.LAST_TRADE_SPOT_FROM_FIX = lASTTRADESPOTFROMFIX;
            this.LAST_TRADE_SPOT_FROM_FIX_EXTERNAL = lASTTRADESPOTFROMFIXEXTERNAL;
            this.LAST_TRADE_SPOT_FROM_GO = lASTTRADESPOTFROMGO;
            this.LAST_TRADE_SPOT_FROM_GO_EXTERNAL = lASTTRADESPOTFROMGOEXTERNAL;
            this.LAST_TRADE_SPOT_FROM_POLLING = lASTTRADESPOTFROMPOLLING;
            this.LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL = lASTTRADESPOTFROMPOLLINGEXTERNAL;
            this.LAST_TRADE_SPOT_FROM_STREAMING = lASTTRADESPOTFROMSTREAMING;
            this.LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL = lASTTRADESPOTFROMSTREAMINGEXTERNAL;
            // use default value if no "mETADATAVERSION" provided
            if (mETADATAVERSION == null)
            {
                this.METADATA_VERSION = 4;
            }
            else
            {
                this.METADATA_VERSION = mETADATAVERSION;
            }
            this.PROCESSING_TRADES_FROM_BLOB_STATUS = pROCESSINGTRADESFROMBLOBSTATUS;
            this.TOTAL_TRADES_SPOT = tOTALTRADESSPOT;
            this.UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA = uNSTRUCTUREDTRADESPOTFROMBACKFILLINTERNALDATA;
            this.UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA = uNSTRUCTUREDTRADESPOTFROMBLOBINTERNALDATA;
            this.UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA = uNSTRUCTUREDTRADESPOTFROMCALCULATEDINTERNALDATA;
            this.UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA = uNSTRUCTUREDTRADESPOTFROMFIXINTERNALDATA;
            this.UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA = uNSTRUCTUREDTRADESPOTFROMGOINTERNALDATA;
            this.UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA = uNSTRUCTUREDTRADESPOTFROMPOLLINGINTERNALDATA;
            this.UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA = uNSTRUCTUREDTRADESPOTFROMSTREAMINGINTERNALDATA;
        }

        /// <summary>
        /// This is the first time instrument was seen on instrumentListSourceType BLOB.
        /// </summary>
        /// <value>This is the first time instrument was seen on instrumentListSourceType BLOB.</value>
        [DataMember(Name="FIRST_SEEN_ON_BLOB_TS", EmitDefaultValue=false)]
        public int FIRST_SEEN_ON_BLOB_TS { get; set; }

        /// <summary>
        /// This is the first time instrument was seen on instrumentListSourceType FIX.
        /// </summary>
        /// <value>This is the first time instrument was seen on instrumentListSourceType FIX.</value>
        [DataMember(Name="FIRST_SEEN_ON_FIX_TS", EmitDefaultValue=false)]
        public int FIRST_SEEN_ON_FIX_TS { get; set; }

        /// <summary>
        /// This is the first time instrument was seen on instrumentListSourceType HARDCODED.
        /// </summary>
        /// <value>This is the first time instrument was seen on instrumentListSourceType HARDCODED.</value>
        [DataMember(Name="FIRST_SEEN_ON_HARDCODED_TS", EmitDefaultValue=false)]
        public int FIRST_SEEN_ON_HARDCODED_TS { get; set; }

        /// <summary>
        /// This is the first time instrument was seen on instrumentListSourceType INDEX_COMPOSITION.
        /// </summary>
        /// <value>This is the first time instrument was seen on instrumentListSourceType INDEX_COMPOSITION.</value>
        [DataMember(Name="FIRST_SEEN_ON_INDEX_COMPOSITION_TS", EmitDefaultValue=false)]
        public int FIRST_SEEN_ON_INDEX_COMPOSITION_TS { get; set; }

        /// <summary>
        /// This is the first time instrument was seen on instrumentListSourceType NSQ.
        /// </summary>
        /// <value>This is the first time instrument was seen on instrumentListSourceType NSQ.</value>
        [DataMember(Name="FIRST_SEEN_ON_NSQ_TS", EmitDefaultValue=false)]
        public int FIRST_SEEN_ON_NSQ_TS { get; set; }

        /// <summary>
        /// This is the first time instrument was seen on instrumentListSourceType POLLING.
        /// </summary>
        /// <value>This is the first time instrument was seen on instrumentListSourceType POLLING.</value>
        [DataMember(Name="FIRST_SEEN_ON_POLLING_TS", EmitDefaultValue=false)]
        public int FIRST_SEEN_ON_POLLING_TS { get; set; }

        /// <summary>
        /// This is the first time instrument was seen on instrumentListSourceType STREAMING.
        /// </summary>
        /// <value>This is the first time instrument was seen on instrumentListSourceType STREAMING.</value>
        [DataMember(Name="FIRST_SEEN_ON_STREAMING_TS", EmitDefaultValue=false)]
        public int FIRST_SEEN_ON_STREAMING_TS { get; set; }

        /// <summary>
        /// This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
        /// </summary>
        /// <value>This is the first TRADE_SPOT that we have seen on the specific source type in internal format.</value>
        [DataMember(Name="FIRST_TRADE_SPOT_FROM_BACKFILL", EmitDefaultValue=false)]
        public Object FIRST_TRADE_SPOT_FROM_BACKFILL { get; set; }

        /// <summary>
        /// This is the first TRADE_SPOT that we have seen on the specific source type in external format.
        /// </summary>
        /// <value>This is the first TRADE_SPOT that we have seen on the specific source type in external format.</value>
        [DataMember(Name="FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL", EmitDefaultValue=false)]
        public Object FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL { get; set; }

        /// <summary>
        /// This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
        /// </summary>
        /// <value>This is the first TRADE_SPOT that we have seen on the specific source type in internal format.</value>
        [DataMember(Name="FIRST_TRADE_SPOT_FROM_BLOB", EmitDefaultValue=false)]
        public Object FIRST_TRADE_SPOT_FROM_BLOB { get; set; }

        /// <summary>
        /// This is the first TRADE_SPOT that we have seen on the specific source type in external format.
        /// </summary>
        /// <value>This is the first TRADE_SPOT that we have seen on the specific source type in external format.</value>
        [DataMember(Name="FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL", EmitDefaultValue=false)]
        public Object FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL { get; set; }

        /// <summary>
        /// This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
        /// </summary>
        /// <value>This is the first TRADE_SPOT that we have seen on the specific source type in internal format.</value>
        [DataMember(Name="FIRST_TRADE_SPOT_FROM_CALCULATED", EmitDefaultValue=false)]
        public Object FIRST_TRADE_SPOT_FROM_CALCULATED { get; set; }

        /// <summary>
        /// This is the first TRADE_SPOT that we have seen on the specific source type in external format.
        /// </summary>
        /// <value>This is the first TRADE_SPOT that we have seen on the specific source type in external format.</value>
        [DataMember(Name="FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL", EmitDefaultValue=false)]
        public Object FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL { get; set; }

        /// <summary>
        /// This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
        /// </summary>
        /// <value>This is the first TRADE_SPOT that we have seen on the specific source type in internal format.</value>
        [DataMember(Name="FIRST_TRADE_SPOT_FROM_FIX", EmitDefaultValue=false)]
        public Object FIRST_TRADE_SPOT_FROM_FIX { get; set; }

        /// <summary>
        /// This is the first TRADE_SPOT that we have seen on the specific source type in external format.
        /// </summary>
        /// <value>This is the first TRADE_SPOT that we have seen on the specific source type in external format.</value>
        [DataMember(Name="FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL", EmitDefaultValue=false)]
        public Object FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL { get; set; }

        /// <summary>
        /// This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
        /// </summary>
        /// <value>This is the first TRADE_SPOT that we have seen on the specific source type in internal format.</value>
        [DataMember(Name="FIRST_TRADE_SPOT_FROM_GO", EmitDefaultValue=false)]
        public Object FIRST_TRADE_SPOT_FROM_GO { get; set; }

        /// <summary>
        /// This is the first TRADE_SPOT that we have seen on the specific source type in external format.
        /// </summary>
        /// <value>This is the first TRADE_SPOT that we have seen on the specific source type in external format.</value>
        [DataMember(Name="FIRST_TRADE_SPOT_FROM_GO_EXTERNAL", EmitDefaultValue=false)]
        public Object FIRST_TRADE_SPOT_FROM_GO_EXTERNAL { get; set; }

        /// <summary>
        /// This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
        /// </summary>
        /// <value>This is the first TRADE_SPOT that we have seen on the specific source type in internal format.</value>
        [DataMember(Name="FIRST_TRADE_SPOT_FROM_POLLING", EmitDefaultValue=false)]
        public Object FIRST_TRADE_SPOT_FROM_POLLING { get; set; }

        /// <summary>
        /// This is the first TRADE_SPOT that we have seen on the specific source type in external format.
        /// </summary>
        /// <value>This is the first TRADE_SPOT that we have seen on the specific source type in external format.</value>
        [DataMember(Name="FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL", EmitDefaultValue=false)]
        public Object FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL { get; set; }

        /// <summary>
        /// This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
        /// </summary>
        /// <value>This is the first TRADE_SPOT that we have seen on the specific source type in internal format.</value>
        [DataMember(Name="FIRST_TRADE_SPOT_FROM_STREAMING", EmitDefaultValue=false)]
        public Object FIRST_TRADE_SPOT_FROM_STREAMING { get; set; }

        /// <summary>
        /// This is the first TRADE_SPOT that we have seen on the specific source type in external format.
        /// </summary>
        /// <value>This is the first TRADE_SPOT that we have seen on the specific source type in external format.</value>
        [DataMember(Name="FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL", EmitDefaultValue=false)]
        public Object FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL { get; set; }

        /// <summary>
        /// The migration destination vm hostname.
        /// </summary>
        /// <value>The migration destination vm hostname.</value>
        [DataMember(Name="HOST_MIGRATION_DESTINATION", EmitDefaultValue=false)]
        public string HOST_MIGRATION_DESTINATION { get; set; }

        /// <summary>
        /// The migration source vm hostname.
        /// </summary>
        /// <value>The migration source vm hostname.</value>
        [DataMember(Name="HOST_MIGRATION_SOURCE", EmitDefaultValue=false)]
        public string HOST_MIGRATION_SOURCE { get; set; }

        /// <summary>
        /// The migration status of the symbol, we only poll / stream / connect empty or SETTLED
        /// </summary>
        /// <value>The migration status of the symbol, we only poll / stream / connect empty or SETTLED</value>
        [DataMember(Name="HOST_MIGRATION_STATUS", EmitDefaultValue=false)]
        public string HOST_MIGRATION_STATUS { get; set; }

        /// <summary>
        /// The instrument ID as it is on the exchange with small modifications - we do not allow the following characters inside isntrument ids: ,/&amp;?
        /// </summary>
        /// <value>The instrument ID as it is on the exchange with small modifications - we do not allow the following characters inside isntrument ids: ,/&amp;?</value>
        [DataMember(Name="INSTRUMENT", EmitDefaultValue=false)]
        public string INSTRUMENT { get; set; }

        /// <summary>
        /// The full data we get from the polling endpoint for this specific instrument. This is a JSON stringified object with different properties per exchange.
        /// </summary>
        /// <value>The full data we get from the polling endpoint for this specific instrument. This is a JSON stringified object with different properties per exchange.</value>
        [DataMember(Name="INSTRUMENT_EXTERNAL_DATA", EmitDefaultValue=false)]
        public string INSTRUMENT_EXTERNAL_DATA { get; set; }

        /// <summary>
        /// The current mapping information for this instrument
        /// </summary>
        /// <value>The current mapping information for this instrument</value>
        [DataMember(Name="INSTRUMENT_MAPPING", EmitDefaultValue=false)]
        public Object INSTRUMENT_MAPPING { get; set; }

        /// <summary>
        /// Historical mapping information for this instrument
        /// </summary>
        /// <value>Historical mapping information for this instrument</value>
        [DataMember(Name="INSTRUMENT_MAPPING_HISTORY", EmitDefaultValue=false)]
        public List<string> INSTRUMENT_MAPPING_HISTORY { get; set; }

        /// <summary>
        /// Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
        /// </summary>
        /// <value>Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.</value>
        [DataMember(Name="INSTRUMENT_SOURCE_BACKFILL", EmitDefaultValue=false)]
        public string INSTRUMENT_SOURCE_BACKFILL { get; set; }

        /// <summary>
        /// Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
        /// </summary>
        /// <value>Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.</value>
        [DataMember(Name="INSTRUMENT_SOURCE_BLOB", EmitDefaultValue=false)]
        public string INSTRUMENT_SOURCE_BLOB { get; set; }

        /// <summary>
        /// Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
        /// </summary>
        /// <value>Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.</value>
        [DataMember(Name="INSTRUMENT_SOURCE_CALCULATED", EmitDefaultValue=false)]
        public string INSTRUMENT_SOURCE_CALCULATED { get; set; }

        /// <summary>
        /// Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
        /// </summary>
        /// <value>Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.</value>
        [DataMember(Name="INSTRUMENT_SOURCE_FIX", EmitDefaultValue=false)]
        public string INSTRUMENT_SOURCE_FIX { get; set; }

        /// <summary>
        /// Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
        /// </summary>
        /// <value>Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.</value>
        [DataMember(Name="INSTRUMENT_SOURCE_GO", EmitDefaultValue=false)]
        public string INSTRUMENT_SOURCE_GO { get; set; }

        /// <summary>
        /// Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
        /// </summary>
        /// <value>Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.</value>
        [DataMember(Name="INSTRUMENT_SOURCE_POLLING", EmitDefaultValue=false)]
        public string INSTRUMENT_SOURCE_POLLING { get; set; }

        /// <summary>
        /// Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
        /// </summary>
        /// <value>Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.</value>
        [DataMember(Name="INSTRUMENT_SOURCE_STREAMING", EmitDefaultValue=false)]
        public string INSTRUMENT_SOURCE_STREAMING { get; set; }

        /// <summary>
        /// The status of the symbol, we only poll / stream / connect to the ACTIVE ones, for the RETIRED / IGNORED / EXPIRED  one we no longer query for data.
        /// </summary>
        /// <value>The status of the symbol, we only poll / stream / connect to the ACTIVE ones, for the RETIRED / IGNORED / EXPIRED  one we no longer query for data.</value>
        [DataMember(Name="INSTRUMENT_STATUS", EmitDefaultValue=false)]
        public string INSTRUMENT_STATUS { get; set; }

        /// <summary>
        /// The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
        /// </summary>
        /// <value>The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST", EmitDefaultValue=false)]
        public Object INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST { get; set; }

        /// <summary>
        /// The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
        /// </summary>
        /// <value>The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS", EmitDefaultValue=false)]
        public int INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS { get; set; }

        /// <summary>
        /// The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
        /// </summary>
        /// <value>The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS", EmitDefaultValue=false)]
        public int INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS { get; set; }

        /// <summary>
        /// The next time we expect to make a request for TRADE_SPOT on this instrument.
        /// </summary>
        /// <value>The next time we expect to make a request for TRADE_SPOT on this instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS", EmitDefaultValue=false)]
        public int INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS { get; set; }

        /// <summary>
        /// The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
        /// </summary>
        /// <value>The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST", EmitDefaultValue=false)]
        public Object INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST { get; set; }

        /// <summary>
        /// The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
        /// </summary>
        /// <value>The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS", EmitDefaultValue=false)]
        public int INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS { get; set; }

        /// <summary>
        /// The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
        /// </summary>
        /// <value>The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS", EmitDefaultValue=false)]
        public int INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS { get; set; }

        /// <summary>
        /// The next time we expect to make a request for TRADE_SPOT on this instrument.
        /// </summary>
        /// <value>The next time we expect to make a request for TRADE_SPOT on this instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS", EmitDefaultValue=false)]
        public int INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS { get; set; }

        /// <summary>
        /// The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
        /// </summary>
        /// <value>The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST", EmitDefaultValue=false)]
        public Object INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST { get; set; }

        /// <summary>
        /// The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
        /// </summary>
        /// <value>The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS", EmitDefaultValue=false)]
        public int INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS { get; set; }

        /// <summary>
        /// The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
        /// </summary>
        /// <value>The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS", EmitDefaultValue=false)]
        public int INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS { get; set; }

        /// <summary>
        /// The next time we expect to make a request for TRADE_SPOT on this instrument.
        /// </summary>
        /// <value>The next time we expect to make a request for TRADE_SPOT on this instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS", EmitDefaultValue=false)]
        public int INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS { get; set; }

        /// <summary>
        /// The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
        /// </summary>
        /// <value>The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST", EmitDefaultValue=false)]
        public Object INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST { get; set; }

        /// <summary>
        /// The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
        /// </summary>
        /// <value>The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS", EmitDefaultValue=false)]
        public int INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS { get; set; }

        /// <summary>
        /// The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
        /// </summary>
        /// <value>The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS", EmitDefaultValue=false)]
        public int INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS { get; set; }

        /// <summary>
        /// The next time we expect to make a request for TRADE_SPOT on this instrument.
        /// </summary>
        /// <value>The next time we expect to make a request for TRADE_SPOT on this instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS", EmitDefaultValue=false)]
        public int INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS { get; set; }

        /// <summary>
        /// The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
        /// </summary>
        /// <value>The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST", EmitDefaultValue=false)]
        public Object INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST { get; set; }

        /// <summary>
        /// The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
        /// </summary>
        /// <value>The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS", EmitDefaultValue=false)]
        public int INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS { get; set; }

        /// <summary>
        /// The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
        /// </summary>
        /// <value>The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS", EmitDefaultValue=false)]
        public int INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS { get; set; }

        /// <summary>
        /// The next time we expect to make a request for TRADE_SPOT on this instrument.
        /// </summary>
        /// <value>The next time we expect to make a request for TRADE_SPOT on this instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS", EmitDefaultValue=false)]
        public int INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS { get; set; }

        /// <summary>
        /// The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
        /// </summary>
        /// <value>The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST", EmitDefaultValue=false)]
        public Object INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST { get; set; }

        /// <summary>
        /// The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
        /// </summary>
        /// <value>The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS", EmitDefaultValue=false)]
        public int INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS { get; set; }

        /// <summary>
        /// The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
        /// </summary>
        /// <value>The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS", EmitDefaultValue=false)]
        public int INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS { get; set; }

        /// <summary>
        /// The next time we expect to make a request for TRADE_SPOT on this instrument.
        /// </summary>
        /// <value>The next time we expect to make a request for TRADE_SPOT on this instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS", EmitDefaultValue=false)]
        public int INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS { get; set; }

        /// <summary>
        /// The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
        /// </summary>
        /// <value>The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST", EmitDefaultValue=false)]
        public Object INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST { get; set; }

        /// <summary>
        /// The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
        /// </summary>
        /// <value>The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS", EmitDefaultValue=false)]
        public int INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS { get; set; }

        /// <summary>
        /// The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
        /// </summary>
        /// <value>The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS", EmitDefaultValue=false)]
        public int INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS { get; set; }

        /// <summary>
        /// The next time we expect to make a request for TRADE_SPOT on this instrument.
        /// </summary>
        /// <value>The next time we expect to make a request for TRADE_SPOT on this instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS", EmitDefaultValue=false)]
        public int INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS { get; set; }

        /// <summary>
        /// This flags the exchange instrument as in ready to consume TRADE_SPOT via a streaming integration.
        /// </summary>
        /// <value>This flags the exchange instrument as in ready to consume TRADE_SPOT via a streaming integration.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION", EmitDefaultValue=false)]
        public bool INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION { get; set; }

        /// <summary>
        /// This is used to build up the request in some cases, this is where we put the id we use when querying for TRADE_SPOT.
        /// </summary>
        /// <value>This is used to build up the request in some cases, this is where we put the id we use when querying for TRADE_SPOT.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_REST_URI", EmitDefaultValue=false)]
        public string INSTRUMENT_TRADE_SPOT_REST_URI { get; set; }

        /// <summary>
        /// The URL we send to the proxy swarm to get TRADE_SPOT for the instrument.
        /// </summary>
        /// <value>The URL we send to the proxy swarm to get TRADE_SPOT for the instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_REST_URL", EmitDefaultValue=false)]
        public string INSTRUMENT_TRADE_SPOT_REST_URL { get; set; }

        /// <summary>
        /// This is used to build up the subscription in some cases, this is where we put the id we use when subscribing for TRADE_SPOT on this instrument.
        /// </summary>
        /// <value>This is used to build up the subscription in some cases, this is where we put the id we use when subscribing for TRADE_SPOT on this instrument.</value>
        [DataMember(Name="INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION", EmitDefaultValue=false)]
        public string INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION { get; set; }

        /// <summary>
        /// The timestamp last encountered where the batch of trades from TRADES_SPOT all occured at the same time. This is an issue when making the next request that requires polling by timestamp as a start/from parameter
        /// </summary>
        /// <value>The timestamp last encountered where the batch of trades from TRADES_SPOT all occured at the same time. This is an issue when making the next request that requires polling by timestamp as a start/from parameter</value>
        [DataMember(Name="LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS", EmitDefaultValue=false)]
        public int LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS { get; set; }

        /// <summary>
        /// This is the last time instrument was seen on instrumentListSourceType BLOB.
        /// </summary>
        /// <value>This is the last time instrument was seen on instrumentListSourceType BLOB.</value>
        [DataMember(Name="LAST_SEEN_ON_BLOB_TS", EmitDefaultValue=false)]
        public int LAST_SEEN_ON_BLOB_TS { get; set; }

        /// <summary>
        /// This is the last time instrument was seen on instrumentListSourceType FIX.
        /// </summary>
        /// <value>This is the last time instrument was seen on instrumentListSourceType FIX.</value>
        [DataMember(Name="LAST_SEEN_ON_FIX_TS", EmitDefaultValue=false)]
        public int LAST_SEEN_ON_FIX_TS { get; set; }

        /// <summary>
        /// This is the last time instrument was seen on instrumentListSourceType HARDCODED.
        /// </summary>
        /// <value>This is the last time instrument was seen on instrumentListSourceType HARDCODED.</value>
        [DataMember(Name="LAST_SEEN_ON_HARDCODED_TS", EmitDefaultValue=false)]
        public int LAST_SEEN_ON_HARDCODED_TS { get; set; }

        /// <summary>
        /// This is the last time instrument was seen on instrumentListSourceType INDEX_COMPOSITION.
        /// </summary>
        /// <value>This is the last time instrument was seen on instrumentListSourceType INDEX_COMPOSITION.</value>
        [DataMember(Name="LAST_SEEN_ON_INDEX_COMPOSITION_TS", EmitDefaultValue=false)]
        public int LAST_SEEN_ON_INDEX_COMPOSITION_TS { get; set; }

        /// <summary>
        /// This is the last time instrument was seen on instrumentListSourceType NSQ.
        /// </summary>
        /// <value>This is the last time instrument was seen on instrumentListSourceType NSQ.</value>
        [DataMember(Name="LAST_SEEN_ON_NSQ_TS", EmitDefaultValue=false)]
        public int LAST_SEEN_ON_NSQ_TS { get; set; }

        /// <summary>
        /// This is the last time instrument was seen on instrumentListSourceType POLLING.
        /// </summary>
        /// <value>This is the last time instrument was seen on instrumentListSourceType POLLING.</value>
        [DataMember(Name="LAST_SEEN_ON_POLLING_TS", EmitDefaultValue=false)]
        public int LAST_SEEN_ON_POLLING_TS { get; set; }

        /// <summary>
        /// This is the last time instrument was seen on instrumentListSourceType STREAMING.
        /// </summary>
        /// <value>This is the last time instrument was seen on instrumentListSourceType STREAMING.</value>
        [DataMember(Name="LAST_SEEN_ON_STREAMING_TS", EmitDefaultValue=false)]
        public int LAST_SEEN_ON_STREAMING_TS { get; set; }

        /// <summary>
        /// This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
        /// </summary>
        /// <value>This is the last TRADE_SPOT that we have seen on the specific source type in internal format.</value>
        [DataMember(Name="LAST_TRADE_SPOT_FROM_BACKFILL", EmitDefaultValue=false)]
        public Object LAST_TRADE_SPOT_FROM_BACKFILL { get; set; }

        /// <summary>
        /// This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
        /// </summary>
        /// <value>This is the last TRADE_SPOT that we have seen on the specific trade source in external format.</value>
        [DataMember(Name="LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL", EmitDefaultValue=false)]
        public Object LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL { get; set; }

        /// <summary>
        /// This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
        /// </summary>
        /// <value>This is the last TRADE_SPOT that we have seen on the specific source type in internal format.</value>
        [DataMember(Name="LAST_TRADE_SPOT_FROM_BLOB", EmitDefaultValue=false)]
        public Object LAST_TRADE_SPOT_FROM_BLOB { get; set; }

        /// <summary>
        /// This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
        /// </summary>
        /// <value>This is the last TRADE_SPOT that we have seen on the specific trade source in external format.</value>
        [DataMember(Name="LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL", EmitDefaultValue=false)]
        public Object LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL { get; set; }

        /// <summary>
        /// This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
        /// </summary>
        /// <value>This is the last TRADE_SPOT that we have seen on the specific source type in internal format.</value>
        [DataMember(Name="LAST_TRADE_SPOT_FROM_CALCULATED", EmitDefaultValue=false)]
        public Object LAST_TRADE_SPOT_FROM_CALCULATED { get; set; }

        /// <summary>
        /// This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
        /// </summary>
        /// <value>This is the last TRADE_SPOT that we have seen on the specific trade source in external format.</value>
        [DataMember(Name="LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL", EmitDefaultValue=false)]
        public Object LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL { get; set; }

        /// <summary>
        /// This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
        /// </summary>
        /// <value>This is the last TRADE_SPOT that we have seen on the specific source type in internal format.</value>
        [DataMember(Name="LAST_TRADE_SPOT_FROM_FIX", EmitDefaultValue=false)]
        public Object LAST_TRADE_SPOT_FROM_FIX { get; set; }

        /// <summary>
        /// This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
        /// </summary>
        /// <value>This is the last TRADE_SPOT that we have seen on the specific trade source in external format.</value>
        [DataMember(Name="LAST_TRADE_SPOT_FROM_FIX_EXTERNAL", EmitDefaultValue=false)]
        public Object LAST_TRADE_SPOT_FROM_FIX_EXTERNAL { get; set; }

        /// <summary>
        /// This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
        /// </summary>
        /// <value>This is the last TRADE_SPOT that we have seen on the specific source type in internal format.</value>
        [DataMember(Name="LAST_TRADE_SPOT_FROM_GO", EmitDefaultValue=false)]
        public Object LAST_TRADE_SPOT_FROM_GO { get; set; }

        /// <summary>
        /// This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
        /// </summary>
        /// <value>This is the last TRADE_SPOT that we have seen on the specific trade source in external format.</value>
        [DataMember(Name="LAST_TRADE_SPOT_FROM_GO_EXTERNAL", EmitDefaultValue=false)]
        public Object LAST_TRADE_SPOT_FROM_GO_EXTERNAL { get; set; }

        /// <summary>
        /// This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
        /// </summary>
        /// <value>This is the last TRADE_SPOT that we have seen on the specific source type in internal format.</value>
        [DataMember(Name="LAST_TRADE_SPOT_FROM_POLLING", EmitDefaultValue=false)]
        public Object LAST_TRADE_SPOT_FROM_POLLING { get; set; }

        /// <summary>
        /// This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
        /// </summary>
        /// <value>This is the last TRADE_SPOT that we have seen on the specific trade source in external format.</value>
        [DataMember(Name="LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL", EmitDefaultValue=false)]
        public Object LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL { get; set; }

        /// <summary>
        /// This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
        /// </summary>
        /// <value>This is the last TRADE_SPOT that we have seen on the specific source type in internal format.</value>
        [DataMember(Name="LAST_TRADE_SPOT_FROM_STREAMING", EmitDefaultValue=false)]
        public Object LAST_TRADE_SPOT_FROM_STREAMING { get; set; }

        /// <summary>
        /// This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
        /// </summary>
        /// <value>This is the last TRADE_SPOT that we have seen on the specific trade source in external format.</value>
        [DataMember(Name="LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL", EmitDefaultValue=false)]
        public Object LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL { get; set; }

        /// <summary>
        /// The version of metadata, used for version conversions/migrates.
        /// </summary>
        /// <value>The version of metadata, used for version conversions/migrates.</value>
        [DataMember(Name="METADATA_VERSION", EmitDefaultValue=false)]
        public int METADATA_VERSION { get; set; }

        /// <summary>
        /// This states the status of blob migration for this intrument on this exchange.
        /// </summary>
        /// <value>This states the status of blob migration for this intrument on this exchange.</value>
        [DataMember(Name="PROCESSING_TRADES_FROM_BLOB_STATUS", EmitDefaultValue=false)]
        public string PROCESSING_TRADES_FROM_BLOB_STATUS { get; set; }

        /// <summary>
        /// This is both the CCSEQ and the total TRADES_SPOT we have processed on this instrument
        /// </summary>
        /// <value>This is both the CCSEQ and the total TRADES_SPOT we have processed on this instrument</value>
        [DataMember(Name="TOTAL_TRADES_SPOT", EmitDefaultValue=false)]
        public int TOTAL_TRADES_SPOT { get; set; }

        /// <summary>
        /// This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
        /// </summary>
        /// <value>This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.</value>
        [DataMember(Name="UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA", EmitDefaultValue=false)]
        public Object UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA { get; set; }

        /// <summary>
        /// This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
        /// </summary>
        /// <value>This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.</value>
        [DataMember(Name="UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA", EmitDefaultValue=false)]
        public Object UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA { get; set; }

        /// <summary>
        /// This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
        /// </summary>
        /// <value>This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.</value>
        [DataMember(Name="UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA", EmitDefaultValue=false)]
        public Object UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA { get; set; }

        /// <summary>
        /// This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
        /// </summary>
        /// <value>This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.</value>
        [DataMember(Name="UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA", EmitDefaultValue=false)]
        public Object UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA { get; set; }

        /// <summary>
        /// This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
        /// </summary>
        /// <value>This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.</value>
        [DataMember(Name="UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA", EmitDefaultValue=false)]
        public Object UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA { get; set; }

        /// <summary>
        /// This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
        /// </summary>
        /// <value>This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.</value>
        [DataMember(Name="UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA", EmitDefaultValue=false)]
        public Object UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA { get; set; }

        /// <summary>
        /// This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
        /// </summary>
        /// <value>This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.</value>
        [DataMember(Name="UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA", EmitDefaultValue=false)]
        public Object UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SPOTINSTRUMENTMETADATA {\n");
            sb.Append("  FIRST_SEEN_ON_BLOB_TS: ").Append(FIRST_SEEN_ON_BLOB_TS).Append("\n");
            sb.Append("  FIRST_SEEN_ON_FIX_TS: ").Append(FIRST_SEEN_ON_FIX_TS).Append("\n");
            sb.Append("  FIRST_SEEN_ON_HARDCODED_TS: ").Append(FIRST_SEEN_ON_HARDCODED_TS).Append("\n");
            sb.Append("  FIRST_SEEN_ON_INDEX_COMPOSITION_TS: ").Append(FIRST_SEEN_ON_INDEX_COMPOSITION_TS).Append("\n");
            sb.Append("  FIRST_SEEN_ON_NSQ_TS: ").Append(FIRST_SEEN_ON_NSQ_TS).Append("\n");
            sb.Append("  FIRST_SEEN_ON_POLLING_TS: ").Append(FIRST_SEEN_ON_POLLING_TS).Append("\n");
            sb.Append("  FIRST_SEEN_ON_STREAMING_TS: ").Append(FIRST_SEEN_ON_STREAMING_TS).Append("\n");
            sb.Append("  FIRST_TRADE_SPOT_FROM_BACKFILL: ").Append(FIRST_TRADE_SPOT_FROM_BACKFILL).Append("\n");
            sb.Append("  FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL: ").Append(FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL).Append("\n");
            sb.Append("  FIRST_TRADE_SPOT_FROM_BLOB: ").Append(FIRST_TRADE_SPOT_FROM_BLOB).Append("\n");
            sb.Append("  FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL: ").Append(FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL).Append("\n");
            sb.Append("  FIRST_TRADE_SPOT_FROM_CALCULATED: ").Append(FIRST_TRADE_SPOT_FROM_CALCULATED).Append("\n");
            sb.Append("  FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL: ").Append(FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL).Append("\n");
            sb.Append("  FIRST_TRADE_SPOT_FROM_FIX: ").Append(FIRST_TRADE_SPOT_FROM_FIX).Append("\n");
            sb.Append("  FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL: ").Append(FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL).Append("\n");
            sb.Append("  FIRST_TRADE_SPOT_FROM_GO: ").Append(FIRST_TRADE_SPOT_FROM_GO).Append("\n");
            sb.Append("  FIRST_TRADE_SPOT_FROM_GO_EXTERNAL: ").Append(FIRST_TRADE_SPOT_FROM_GO_EXTERNAL).Append("\n");
            sb.Append("  FIRST_TRADE_SPOT_FROM_POLLING: ").Append(FIRST_TRADE_SPOT_FROM_POLLING).Append("\n");
            sb.Append("  FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL: ").Append(FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL).Append("\n");
            sb.Append("  FIRST_TRADE_SPOT_FROM_STREAMING: ").Append(FIRST_TRADE_SPOT_FROM_STREAMING).Append("\n");
            sb.Append("  FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL: ").Append(FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL).Append("\n");
            sb.Append("  HOST_MIGRATION_DESTINATION: ").Append(HOST_MIGRATION_DESTINATION).Append("\n");
            sb.Append("  HOST_MIGRATION_SOURCE: ").Append(HOST_MIGRATION_SOURCE).Append("\n");
            sb.Append("  HOST_MIGRATION_STATUS: ").Append(HOST_MIGRATION_STATUS).Append("\n");
            sb.Append("  INSTRUMENT: ").Append(INSTRUMENT).Append("\n");
            sb.Append("  INSTRUMENT_EXTERNAL_DATA: ").Append(INSTRUMENT_EXTERNAL_DATA).Append("\n");
            sb.Append("  INSTRUMENT_MAPPING: ").Append(INSTRUMENT_MAPPING).Append("\n");
            sb.Append("  INSTRUMENT_MAPPING_HISTORY: ").Append(INSTRUMENT_MAPPING_HISTORY).Append("\n");
            sb.Append("  INSTRUMENT_SOURCE_BACKFILL: ").Append(INSTRUMENT_SOURCE_BACKFILL).Append("\n");
            sb.Append("  INSTRUMENT_SOURCE_BLOB: ").Append(INSTRUMENT_SOURCE_BLOB).Append("\n");
            sb.Append("  INSTRUMENT_SOURCE_CALCULATED: ").Append(INSTRUMENT_SOURCE_CALCULATED).Append("\n");
            sb.Append("  INSTRUMENT_SOURCE_FIX: ").Append(INSTRUMENT_SOURCE_FIX).Append("\n");
            sb.Append("  INSTRUMENT_SOURCE_GO: ").Append(INSTRUMENT_SOURCE_GO).Append("\n");
            sb.Append("  INSTRUMENT_SOURCE_POLLING: ").Append(INSTRUMENT_SOURCE_POLLING).Append("\n");
            sb.Append("  INSTRUMENT_SOURCE_STREAMING: ").Append(INSTRUMENT_SOURCE_STREAMING).Append("\n");
            sb.Append("  INSTRUMENT_STATUS: ").Append(INSTRUMENT_STATUS).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST: ").Append(INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS: ").Append(INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS: ").Append(INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS: ").Append(INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST: ").Append(INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS: ").Append(INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS: ").Append(INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS: ").Append(INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST: ").Append(INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS: ").Append(INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS: ").Append(INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS: ").Append(INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST: ").Append(INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS: ").Append(INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS: ").Append(INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS: ").Append(INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST: ").Append(INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS: ").Append(INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS: ").Append(INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS: ").Append(INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST: ").Append(INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS: ").Append(INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS: ").Append(INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS: ").Append(INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST: ").Append(INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS: ").Append(INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS: ").Append(INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS: ").Append(INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION: ").Append(INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_REST_URI: ").Append(INSTRUMENT_TRADE_SPOT_REST_URI).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_REST_URL: ").Append(INSTRUMENT_TRADE_SPOT_REST_URL).Append("\n");
            sb.Append("  INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION: ").Append(INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION).Append("\n");
            sb.Append("  LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS: ").Append(LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS).Append("\n");
            sb.Append("  LAST_SEEN_ON_BLOB_TS: ").Append(LAST_SEEN_ON_BLOB_TS).Append("\n");
            sb.Append("  LAST_SEEN_ON_FIX_TS: ").Append(LAST_SEEN_ON_FIX_TS).Append("\n");
            sb.Append("  LAST_SEEN_ON_HARDCODED_TS: ").Append(LAST_SEEN_ON_HARDCODED_TS).Append("\n");
            sb.Append("  LAST_SEEN_ON_INDEX_COMPOSITION_TS: ").Append(LAST_SEEN_ON_INDEX_COMPOSITION_TS).Append("\n");
            sb.Append("  LAST_SEEN_ON_NSQ_TS: ").Append(LAST_SEEN_ON_NSQ_TS).Append("\n");
            sb.Append("  LAST_SEEN_ON_POLLING_TS: ").Append(LAST_SEEN_ON_POLLING_TS).Append("\n");
            sb.Append("  LAST_SEEN_ON_STREAMING_TS: ").Append(LAST_SEEN_ON_STREAMING_TS).Append("\n");
            sb.Append("  LAST_TRADE_SPOT_FROM_BACKFILL: ").Append(LAST_TRADE_SPOT_FROM_BACKFILL).Append("\n");
            sb.Append("  LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL: ").Append(LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL).Append("\n");
            sb.Append("  LAST_TRADE_SPOT_FROM_BLOB: ").Append(LAST_TRADE_SPOT_FROM_BLOB).Append("\n");
            sb.Append("  LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL: ").Append(LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL).Append("\n");
            sb.Append("  LAST_TRADE_SPOT_FROM_CALCULATED: ").Append(LAST_TRADE_SPOT_FROM_CALCULATED).Append("\n");
            sb.Append("  LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL: ").Append(LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL).Append("\n");
            sb.Append("  LAST_TRADE_SPOT_FROM_FIX: ").Append(LAST_TRADE_SPOT_FROM_FIX).Append("\n");
            sb.Append("  LAST_TRADE_SPOT_FROM_FIX_EXTERNAL: ").Append(LAST_TRADE_SPOT_FROM_FIX_EXTERNAL).Append("\n");
            sb.Append("  LAST_TRADE_SPOT_FROM_GO: ").Append(LAST_TRADE_SPOT_FROM_GO).Append("\n");
            sb.Append("  LAST_TRADE_SPOT_FROM_GO_EXTERNAL: ").Append(LAST_TRADE_SPOT_FROM_GO_EXTERNAL).Append("\n");
            sb.Append("  LAST_TRADE_SPOT_FROM_POLLING: ").Append(LAST_TRADE_SPOT_FROM_POLLING).Append("\n");
            sb.Append("  LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL: ").Append(LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL).Append("\n");
            sb.Append("  LAST_TRADE_SPOT_FROM_STREAMING: ").Append(LAST_TRADE_SPOT_FROM_STREAMING).Append("\n");
            sb.Append("  LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL: ").Append(LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL).Append("\n");
            sb.Append("  METADATA_VERSION: ").Append(METADATA_VERSION).Append("\n");
            sb.Append("  PROCESSING_TRADES_FROM_BLOB_STATUS: ").Append(PROCESSING_TRADES_FROM_BLOB_STATUS).Append("\n");
            sb.Append("  TOTAL_TRADES_SPOT: ").Append(TOTAL_TRADES_SPOT).Append("\n");
            sb.Append("  UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA: ").Append(UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA).Append("\n");
            sb.Append("  UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA: ").Append(UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA).Append("\n");
            sb.Append("  UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA: ").Append(UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA).Append("\n");
            sb.Append("  UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA: ").Append(UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA).Append("\n");
            sb.Append("  UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA: ").Append(UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA).Append("\n");
            sb.Append("  UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA: ").Append(UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA).Append("\n");
            sb.Append("  UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA: ").Append(UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SPOTINSTRUMENTMETADATA);
        }

        /// <summary>
        /// Returns true if SPOTINSTRUMENTMETADATA instances are equal
        /// </summary>
        /// <param name="input">Instance of SPOTINSTRUMENTMETADATA to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SPOTINSTRUMENTMETADATA input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.FIRST_SEEN_ON_BLOB_TS == input.FIRST_SEEN_ON_BLOB_TS ||
                    (this.FIRST_SEEN_ON_BLOB_TS != null &&
                    this.FIRST_SEEN_ON_BLOB_TS.Equals(input.FIRST_SEEN_ON_BLOB_TS))
                ) && 
                (
                    this.FIRST_SEEN_ON_FIX_TS == input.FIRST_SEEN_ON_FIX_TS ||
                    (this.FIRST_SEEN_ON_FIX_TS != null &&
                    this.FIRST_SEEN_ON_FIX_TS.Equals(input.FIRST_SEEN_ON_FIX_TS))
                ) && 
                (
                    this.FIRST_SEEN_ON_HARDCODED_TS == input.FIRST_SEEN_ON_HARDCODED_TS ||
                    (this.FIRST_SEEN_ON_HARDCODED_TS != null &&
                    this.FIRST_SEEN_ON_HARDCODED_TS.Equals(input.FIRST_SEEN_ON_HARDCODED_TS))
                ) && 
                (
                    this.FIRST_SEEN_ON_INDEX_COMPOSITION_TS == input.FIRST_SEEN_ON_INDEX_COMPOSITION_TS ||
                    (this.FIRST_SEEN_ON_INDEX_COMPOSITION_TS != null &&
                    this.FIRST_SEEN_ON_INDEX_COMPOSITION_TS.Equals(input.FIRST_SEEN_ON_INDEX_COMPOSITION_TS))
                ) && 
                (
                    this.FIRST_SEEN_ON_NSQ_TS == input.FIRST_SEEN_ON_NSQ_TS ||
                    (this.FIRST_SEEN_ON_NSQ_TS != null &&
                    this.FIRST_SEEN_ON_NSQ_TS.Equals(input.FIRST_SEEN_ON_NSQ_TS))
                ) && 
                (
                    this.FIRST_SEEN_ON_POLLING_TS == input.FIRST_SEEN_ON_POLLING_TS ||
                    (this.FIRST_SEEN_ON_POLLING_TS != null &&
                    this.FIRST_SEEN_ON_POLLING_TS.Equals(input.FIRST_SEEN_ON_POLLING_TS))
                ) && 
                (
                    this.FIRST_SEEN_ON_STREAMING_TS == input.FIRST_SEEN_ON_STREAMING_TS ||
                    (this.FIRST_SEEN_ON_STREAMING_TS != null &&
                    this.FIRST_SEEN_ON_STREAMING_TS.Equals(input.FIRST_SEEN_ON_STREAMING_TS))
                ) && 
                (
                    this.FIRST_TRADE_SPOT_FROM_BACKFILL == input.FIRST_TRADE_SPOT_FROM_BACKFILL ||
                    (this.FIRST_TRADE_SPOT_FROM_BACKFILL != null &&
                    this.FIRST_TRADE_SPOT_FROM_BACKFILL.Equals(input.FIRST_TRADE_SPOT_FROM_BACKFILL))
                ) && 
                (
                    this.FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL == input.FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL ||
                    (this.FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL != null &&
                    this.FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL.Equals(input.FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL))
                ) && 
                (
                    this.FIRST_TRADE_SPOT_FROM_BLOB == input.FIRST_TRADE_SPOT_FROM_BLOB ||
                    (this.FIRST_TRADE_SPOT_FROM_BLOB != null &&
                    this.FIRST_TRADE_SPOT_FROM_BLOB.Equals(input.FIRST_TRADE_SPOT_FROM_BLOB))
                ) && 
                (
                    this.FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL == input.FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL ||
                    (this.FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL != null &&
                    this.FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL.Equals(input.FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL))
                ) && 
                (
                    this.FIRST_TRADE_SPOT_FROM_CALCULATED == input.FIRST_TRADE_SPOT_FROM_CALCULATED ||
                    (this.FIRST_TRADE_SPOT_FROM_CALCULATED != null &&
                    this.FIRST_TRADE_SPOT_FROM_CALCULATED.Equals(input.FIRST_TRADE_SPOT_FROM_CALCULATED))
                ) && 
                (
                    this.FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL == input.FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL ||
                    (this.FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL != null &&
                    this.FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL.Equals(input.FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL))
                ) && 
                (
                    this.FIRST_TRADE_SPOT_FROM_FIX == input.FIRST_TRADE_SPOT_FROM_FIX ||
                    (this.FIRST_TRADE_SPOT_FROM_FIX != null &&
                    this.FIRST_TRADE_SPOT_FROM_FIX.Equals(input.FIRST_TRADE_SPOT_FROM_FIX))
                ) && 
                (
                    this.FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL == input.FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL ||
                    (this.FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL != null &&
                    this.FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL.Equals(input.FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL))
                ) && 
                (
                    this.FIRST_TRADE_SPOT_FROM_GO == input.FIRST_TRADE_SPOT_FROM_GO ||
                    (this.FIRST_TRADE_SPOT_FROM_GO != null &&
                    this.FIRST_TRADE_SPOT_FROM_GO.Equals(input.FIRST_TRADE_SPOT_FROM_GO))
                ) && 
                (
                    this.FIRST_TRADE_SPOT_FROM_GO_EXTERNAL == input.FIRST_TRADE_SPOT_FROM_GO_EXTERNAL ||
                    (this.FIRST_TRADE_SPOT_FROM_GO_EXTERNAL != null &&
                    this.FIRST_TRADE_SPOT_FROM_GO_EXTERNAL.Equals(input.FIRST_TRADE_SPOT_FROM_GO_EXTERNAL))
                ) && 
                (
                    this.FIRST_TRADE_SPOT_FROM_POLLING == input.FIRST_TRADE_SPOT_FROM_POLLING ||
                    (this.FIRST_TRADE_SPOT_FROM_POLLING != null &&
                    this.FIRST_TRADE_SPOT_FROM_POLLING.Equals(input.FIRST_TRADE_SPOT_FROM_POLLING))
                ) && 
                (
                    this.FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL == input.FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL ||
                    (this.FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL != null &&
                    this.FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL.Equals(input.FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL))
                ) && 
                (
                    this.FIRST_TRADE_SPOT_FROM_STREAMING == input.FIRST_TRADE_SPOT_FROM_STREAMING ||
                    (this.FIRST_TRADE_SPOT_FROM_STREAMING != null &&
                    this.FIRST_TRADE_SPOT_FROM_STREAMING.Equals(input.FIRST_TRADE_SPOT_FROM_STREAMING))
                ) && 
                (
                    this.FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL == input.FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL ||
                    (this.FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL != null &&
                    this.FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL.Equals(input.FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL))
                ) && 
                (
                    this.HOST_MIGRATION_DESTINATION == input.HOST_MIGRATION_DESTINATION ||
                    (this.HOST_MIGRATION_DESTINATION != null &&
                    this.HOST_MIGRATION_DESTINATION.Equals(input.HOST_MIGRATION_DESTINATION))
                ) && 
                (
                    this.HOST_MIGRATION_SOURCE == input.HOST_MIGRATION_SOURCE ||
                    (this.HOST_MIGRATION_SOURCE != null &&
                    this.HOST_MIGRATION_SOURCE.Equals(input.HOST_MIGRATION_SOURCE))
                ) && 
                (
                    this.HOST_MIGRATION_STATUS == input.HOST_MIGRATION_STATUS ||
                    (this.HOST_MIGRATION_STATUS != null &&
                    this.HOST_MIGRATION_STATUS.Equals(input.HOST_MIGRATION_STATUS))
                ) && 
                (
                    this.INSTRUMENT == input.INSTRUMENT ||
                    (this.INSTRUMENT != null &&
                    this.INSTRUMENT.Equals(input.INSTRUMENT))
                ) && 
                (
                    this.INSTRUMENT_EXTERNAL_DATA == input.INSTRUMENT_EXTERNAL_DATA ||
                    (this.INSTRUMENT_EXTERNAL_DATA != null &&
                    this.INSTRUMENT_EXTERNAL_DATA.Equals(input.INSTRUMENT_EXTERNAL_DATA))
                ) && 
                (
                    this.INSTRUMENT_MAPPING == input.INSTRUMENT_MAPPING ||
                    (this.INSTRUMENT_MAPPING != null &&
                    this.INSTRUMENT_MAPPING.Equals(input.INSTRUMENT_MAPPING))
                ) && 
                (
                    this.INSTRUMENT_MAPPING_HISTORY == input.INSTRUMENT_MAPPING_HISTORY ||
                    this.INSTRUMENT_MAPPING_HISTORY != null &&
                    input.INSTRUMENT_MAPPING_HISTORY != null &&
                    this.INSTRUMENT_MAPPING_HISTORY.SequenceEqual(input.INSTRUMENT_MAPPING_HISTORY)
                ) && 
                (
                    this.INSTRUMENT_SOURCE_BACKFILL == input.INSTRUMENT_SOURCE_BACKFILL ||
                    (this.INSTRUMENT_SOURCE_BACKFILL != null &&
                    this.INSTRUMENT_SOURCE_BACKFILL.Equals(input.INSTRUMENT_SOURCE_BACKFILL))
                ) && 
                (
                    this.INSTRUMENT_SOURCE_BLOB == input.INSTRUMENT_SOURCE_BLOB ||
                    (this.INSTRUMENT_SOURCE_BLOB != null &&
                    this.INSTRUMENT_SOURCE_BLOB.Equals(input.INSTRUMENT_SOURCE_BLOB))
                ) && 
                (
                    this.INSTRUMENT_SOURCE_CALCULATED == input.INSTRUMENT_SOURCE_CALCULATED ||
                    (this.INSTRUMENT_SOURCE_CALCULATED != null &&
                    this.INSTRUMENT_SOURCE_CALCULATED.Equals(input.INSTRUMENT_SOURCE_CALCULATED))
                ) && 
                (
                    this.INSTRUMENT_SOURCE_FIX == input.INSTRUMENT_SOURCE_FIX ||
                    (this.INSTRUMENT_SOURCE_FIX != null &&
                    this.INSTRUMENT_SOURCE_FIX.Equals(input.INSTRUMENT_SOURCE_FIX))
                ) && 
                (
                    this.INSTRUMENT_SOURCE_GO == input.INSTRUMENT_SOURCE_GO ||
                    (this.INSTRUMENT_SOURCE_GO != null &&
                    this.INSTRUMENT_SOURCE_GO.Equals(input.INSTRUMENT_SOURCE_GO))
                ) && 
                (
                    this.INSTRUMENT_SOURCE_POLLING == input.INSTRUMENT_SOURCE_POLLING ||
                    (this.INSTRUMENT_SOURCE_POLLING != null &&
                    this.INSTRUMENT_SOURCE_POLLING.Equals(input.INSTRUMENT_SOURCE_POLLING))
                ) && 
                (
                    this.INSTRUMENT_SOURCE_STREAMING == input.INSTRUMENT_SOURCE_STREAMING ||
                    (this.INSTRUMENT_SOURCE_STREAMING != null &&
                    this.INSTRUMENT_SOURCE_STREAMING.Equals(input.INSTRUMENT_SOURCE_STREAMING))
                ) && 
                (
                    this.INSTRUMENT_STATUS == input.INSTRUMENT_STATUS ||
                    (this.INSTRUMENT_STATUS != null &&
                    this.INSTRUMENT_STATUS.Equals(input.INSTRUMENT_STATUS))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST == input.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS == input.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS == input.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS == input.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST == input.INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS == input.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS == input.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS == input.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST == input.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS == input.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS == input.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS == input.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST == input.INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS == input.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS == input.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS == input.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST == input.INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS == input.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS == input.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS == input.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST == input.INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS == input.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS == input.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS == input.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST == input.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS == input.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS == input.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS == input.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS ||
                    (this.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS != null &&
                    this.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS.Equals(input.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION == input.INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION ||
                    (this.INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION != null &&
                    this.INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION.Equals(input.INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_REST_URI == input.INSTRUMENT_TRADE_SPOT_REST_URI ||
                    (this.INSTRUMENT_TRADE_SPOT_REST_URI != null &&
                    this.INSTRUMENT_TRADE_SPOT_REST_URI.Equals(input.INSTRUMENT_TRADE_SPOT_REST_URI))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_REST_URL == input.INSTRUMENT_TRADE_SPOT_REST_URL ||
                    (this.INSTRUMENT_TRADE_SPOT_REST_URL != null &&
                    this.INSTRUMENT_TRADE_SPOT_REST_URL.Equals(input.INSTRUMENT_TRADE_SPOT_REST_URL))
                ) && 
                (
                    this.INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION == input.INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION ||
                    (this.INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION != null &&
                    this.INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION.Equals(input.INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION))
                ) && 
                (
                    this.LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS == input.LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS ||
                    (this.LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS != null &&
                    this.LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS.Equals(input.LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS))
                ) && 
                (
                    this.LAST_SEEN_ON_BLOB_TS == input.LAST_SEEN_ON_BLOB_TS ||
                    (this.LAST_SEEN_ON_BLOB_TS != null &&
                    this.LAST_SEEN_ON_BLOB_TS.Equals(input.LAST_SEEN_ON_BLOB_TS))
                ) && 
                (
                    this.LAST_SEEN_ON_FIX_TS == input.LAST_SEEN_ON_FIX_TS ||
                    (this.LAST_SEEN_ON_FIX_TS != null &&
                    this.LAST_SEEN_ON_FIX_TS.Equals(input.LAST_SEEN_ON_FIX_TS))
                ) && 
                (
                    this.LAST_SEEN_ON_HARDCODED_TS == input.LAST_SEEN_ON_HARDCODED_TS ||
                    (this.LAST_SEEN_ON_HARDCODED_TS != null &&
                    this.LAST_SEEN_ON_HARDCODED_TS.Equals(input.LAST_SEEN_ON_HARDCODED_TS))
                ) && 
                (
                    this.LAST_SEEN_ON_INDEX_COMPOSITION_TS == input.LAST_SEEN_ON_INDEX_COMPOSITION_TS ||
                    (this.LAST_SEEN_ON_INDEX_COMPOSITION_TS != null &&
                    this.LAST_SEEN_ON_INDEX_COMPOSITION_TS.Equals(input.LAST_SEEN_ON_INDEX_COMPOSITION_TS))
                ) && 
                (
                    this.LAST_SEEN_ON_NSQ_TS == input.LAST_SEEN_ON_NSQ_TS ||
                    (this.LAST_SEEN_ON_NSQ_TS != null &&
                    this.LAST_SEEN_ON_NSQ_TS.Equals(input.LAST_SEEN_ON_NSQ_TS))
                ) && 
                (
                    this.LAST_SEEN_ON_POLLING_TS == input.LAST_SEEN_ON_POLLING_TS ||
                    (this.LAST_SEEN_ON_POLLING_TS != null &&
                    this.LAST_SEEN_ON_POLLING_TS.Equals(input.LAST_SEEN_ON_POLLING_TS))
                ) && 
                (
                    this.LAST_SEEN_ON_STREAMING_TS == input.LAST_SEEN_ON_STREAMING_TS ||
                    (this.LAST_SEEN_ON_STREAMING_TS != null &&
                    this.LAST_SEEN_ON_STREAMING_TS.Equals(input.LAST_SEEN_ON_STREAMING_TS))
                ) && 
                (
                    this.LAST_TRADE_SPOT_FROM_BACKFILL == input.LAST_TRADE_SPOT_FROM_BACKFILL ||
                    (this.LAST_TRADE_SPOT_FROM_BACKFILL != null &&
                    this.LAST_TRADE_SPOT_FROM_BACKFILL.Equals(input.LAST_TRADE_SPOT_FROM_BACKFILL))
                ) && 
                (
                    this.LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL == input.LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL ||
                    (this.LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL != null &&
                    this.LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL.Equals(input.LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL))
                ) && 
                (
                    this.LAST_TRADE_SPOT_FROM_BLOB == input.LAST_TRADE_SPOT_FROM_BLOB ||
                    (this.LAST_TRADE_SPOT_FROM_BLOB != null &&
                    this.LAST_TRADE_SPOT_FROM_BLOB.Equals(input.LAST_TRADE_SPOT_FROM_BLOB))
                ) && 
                (
                    this.LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL == input.LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL ||
                    (this.LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL != null &&
                    this.LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL.Equals(input.LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL))
                ) && 
                (
                    this.LAST_TRADE_SPOT_FROM_CALCULATED == input.LAST_TRADE_SPOT_FROM_CALCULATED ||
                    (this.LAST_TRADE_SPOT_FROM_CALCULATED != null &&
                    this.LAST_TRADE_SPOT_FROM_CALCULATED.Equals(input.LAST_TRADE_SPOT_FROM_CALCULATED))
                ) && 
                (
                    this.LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL == input.LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL ||
                    (this.LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL != null &&
                    this.LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL.Equals(input.LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL))
                ) && 
                (
                    this.LAST_TRADE_SPOT_FROM_FIX == input.LAST_TRADE_SPOT_FROM_FIX ||
                    (this.LAST_TRADE_SPOT_FROM_FIX != null &&
                    this.LAST_TRADE_SPOT_FROM_FIX.Equals(input.LAST_TRADE_SPOT_FROM_FIX))
                ) && 
                (
                    this.LAST_TRADE_SPOT_FROM_FIX_EXTERNAL == input.LAST_TRADE_SPOT_FROM_FIX_EXTERNAL ||
                    (this.LAST_TRADE_SPOT_FROM_FIX_EXTERNAL != null &&
                    this.LAST_TRADE_SPOT_FROM_FIX_EXTERNAL.Equals(input.LAST_TRADE_SPOT_FROM_FIX_EXTERNAL))
                ) && 
                (
                    this.LAST_TRADE_SPOT_FROM_GO == input.LAST_TRADE_SPOT_FROM_GO ||
                    (this.LAST_TRADE_SPOT_FROM_GO != null &&
                    this.LAST_TRADE_SPOT_FROM_GO.Equals(input.LAST_TRADE_SPOT_FROM_GO))
                ) && 
                (
                    this.LAST_TRADE_SPOT_FROM_GO_EXTERNAL == input.LAST_TRADE_SPOT_FROM_GO_EXTERNAL ||
                    (this.LAST_TRADE_SPOT_FROM_GO_EXTERNAL != null &&
                    this.LAST_TRADE_SPOT_FROM_GO_EXTERNAL.Equals(input.LAST_TRADE_SPOT_FROM_GO_EXTERNAL))
                ) && 
                (
                    this.LAST_TRADE_SPOT_FROM_POLLING == input.LAST_TRADE_SPOT_FROM_POLLING ||
                    (this.LAST_TRADE_SPOT_FROM_POLLING != null &&
                    this.LAST_TRADE_SPOT_FROM_POLLING.Equals(input.LAST_TRADE_SPOT_FROM_POLLING))
                ) && 
                (
                    this.LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL == input.LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL ||
                    (this.LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL != null &&
                    this.LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL.Equals(input.LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL))
                ) && 
                (
                    this.LAST_TRADE_SPOT_FROM_STREAMING == input.LAST_TRADE_SPOT_FROM_STREAMING ||
                    (this.LAST_TRADE_SPOT_FROM_STREAMING != null &&
                    this.LAST_TRADE_SPOT_FROM_STREAMING.Equals(input.LAST_TRADE_SPOT_FROM_STREAMING))
                ) && 
                (
                    this.LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL == input.LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL ||
                    (this.LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL != null &&
                    this.LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL.Equals(input.LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL))
                ) && 
                (
                    this.METADATA_VERSION == input.METADATA_VERSION ||
                    (this.METADATA_VERSION != null &&
                    this.METADATA_VERSION.Equals(input.METADATA_VERSION))
                ) && 
                (
                    this.PROCESSING_TRADES_FROM_BLOB_STATUS == input.PROCESSING_TRADES_FROM_BLOB_STATUS ||
                    (this.PROCESSING_TRADES_FROM_BLOB_STATUS != null &&
                    this.PROCESSING_TRADES_FROM_BLOB_STATUS.Equals(input.PROCESSING_TRADES_FROM_BLOB_STATUS))
                ) && 
                (
                    this.TOTAL_TRADES_SPOT == input.TOTAL_TRADES_SPOT ||
                    (this.TOTAL_TRADES_SPOT != null &&
                    this.TOTAL_TRADES_SPOT.Equals(input.TOTAL_TRADES_SPOT))
                ) && 
                (
                    this.UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA == input.UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA ||
                    (this.UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA != null &&
                    this.UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA.Equals(input.UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA))
                ) && 
                (
                    this.UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA == input.UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA ||
                    (this.UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA != null &&
                    this.UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA.Equals(input.UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA))
                ) && 
                (
                    this.UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA == input.UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA ||
                    (this.UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA != null &&
                    this.UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA.Equals(input.UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA))
                ) && 
                (
                    this.UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA == input.UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA ||
                    (this.UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA != null &&
                    this.UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA.Equals(input.UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA))
                ) && 
                (
                    this.UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA == input.UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA ||
                    (this.UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA != null &&
                    this.UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA.Equals(input.UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA))
                ) && 
                (
                    this.UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA == input.UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA ||
                    (this.UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA != null &&
                    this.UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA.Equals(input.UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA))
                ) && 
                (
                    this.UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA == input.UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA ||
                    (this.UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA != null &&
                    this.UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA.Equals(input.UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.FIRST_SEEN_ON_BLOB_TS != null)
                    hashCode = hashCode * 59 + this.FIRST_SEEN_ON_BLOB_TS.GetHashCode();
                if (this.FIRST_SEEN_ON_FIX_TS != null)
                    hashCode = hashCode * 59 + this.FIRST_SEEN_ON_FIX_TS.GetHashCode();
                if (this.FIRST_SEEN_ON_HARDCODED_TS != null)
                    hashCode = hashCode * 59 + this.FIRST_SEEN_ON_HARDCODED_TS.GetHashCode();
                if (this.FIRST_SEEN_ON_INDEX_COMPOSITION_TS != null)
                    hashCode = hashCode * 59 + this.FIRST_SEEN_ON_INDEX_COMPOSITION_TS.GetHashCode();
                if (this.FIRST_SEEN_ON_NSQ_TS != null)
                    hashCode = hashCode * 59 + this.FIRST_SEEN_ON_NSQ_TS.GetHashCode();
                if (this.FIRST_SEEN_ON_POLLING_TS != null)
                    hashCode = hashCode * 59 + this.FIRST_SEEN_ON_POLLING_TS.GetHashCode();
                if (this.FIRST_SEEN_ON_STREAMING_TS != null)
                    hashCode = hashCode * 59 + this.FIRST_SEEN_ON_STREAMING_TS.GetHashCode();
                if (this.FIRST_TRADE_SPOT_FROM_BACKFILL != null)
                    hashCode = hashCode * 59 + this.FIRST_TRADE_SPOT_FROM_BACKFILL.GetHashCode();
                if (this.FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL != null)
                    hashCode = hashCode * 59 + this.FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL.GetHashCode();
                if (this.FIRST_TRADE_SPOT_FROM_BLOB != null)
                    hashCode = hashCode * 59 + this.FIRST_TRADE_SPOT_FROM_BLOB.GetHashCode();
                if (this.FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL != null)
                    hashCode = hashCode * 59 + this.FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL.GetHashCode();
                if (this.FIRST_TRADE_SPOT_FROM_CALCULATED != null)
                    hashCode = hashCode * 59 + this.FIRST_TRADE_SPOT_FROM_CALCULATED.GetHashCode();
                if (this.FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL != null)
                    hashCode = hashCode * 59 + this.FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL.GetHashCode();
                if (this.FIRST_TRADE_SPOT_FROM_FIX != null)
                    hashCode = hashCode * 59 + this.FIRST_TRADE_SPOT_FROM_FIX.GetHashCode();
                if (this.FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL != null)
                    hashCode = hashCode * 59 + this.FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL.GetHashCode();
                if (this.FIRST_TRADE_SPOT_FROM_GO != null)
                    hashCode = hashCode * 59 + this.FIRST_TRADE_SPOT_FROM_GO.GetHashCode();
                if (this.FIRST_TRADE_SPOT_FROM_GO_EXTERNAL != null)
                    hashCode = hashCode * 59 + this.FIRST_TRADE_SPOT_FROM_GO_EXTERNAL.GetHashCode();
                if (this.FIRST_TRADE_SPOT_FROM_POLLING != null)
                    hashCode = hashCode * 59 + this.FIRST_TRADE_SPOT_FROM_POLLING.GetHashCode();
                if (this.FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL != null)
                    hashCode = hashCode * 59 + this.FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL.GetHashCode();
                if (this.FIRST_TRADE_SPOT_FROM_STREAMING != null)
                    hashCode = hashCode * 59 + this.FIRST_TRADE_SPOT_FROM_STREAMING.GetHashCode();
                if (this.FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL != null)
                    hashCode = hashCode * 59 + this.FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL.GetHashCode();
                if (this.HOST_MIGRATION_DESTINATION != null)
                    hashCode = hashCode * 59 + this.HOST_MIGRATION_DESTINATION.GetHashCode();
                if (this.HOST_MIGRATION_SOURCE != null)
                    hashCode = hashCode * 59 + this.HOST_MIGRATION_SOURCE.GetHashCode();
                if (this.HOST_MIGRATION_STATUS != null)
                    hashCode = hashCode * 59 + this.HOST_MIGRATION_STATUS.GetHashCode();
                if (this.INSTRUMENT != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT.GetHashCode();
                if (this.INSTRUMENT_EXTERNAL_DATA != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_EXTERNAL_DATA.GetHashCode();
                if (this.INSTRUMENT_MAPPING != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_MAPPING.GetHashCode();
                if (this.INSTRUMENT_MAPPING_HISTORY != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_MAPPING_HISTORY.GetHashCode();
                if (this.INSTRUMENT_SOURCE_BACKFILL != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_SOURCE_BACKFILL.GetHashCode();
                if (this.INSTRUMENT_SOURCE_BLOB != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_SOURCE_BLOB.GetHashCode();
                if (this.INSTRUMENT_SOURCE_CALCULATED != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_SOURCE_CALCULATED.GetHashCode();
                if (this.INSTRUMENT_SOURCE_FIX != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_SOURCE_FIX.GetHashCode();
                if (this.INSTRUMENT_SOURCE_GO != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_SOURCE_GO.GetHashCode();
                if (this.INSTRUMENT_SOURCE_POLLING != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_SOURCE_POLLING.GetHashCode();
                if (this.INSTRUMENT_SOURCE_STREAMING != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_SOURCE_STREAMING.GetHashCode();
                if (this.INSTRUMENT_STATUS != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_STATUS.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_REST_URI != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_REST_URI.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_REST_URL != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_REST_URL.GetHashCode();
                if (this.INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION != null)
                    hashCode = hashCode * 59 + this.INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION.GetHashCode();
                if (this.LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS != null)
                    hashCode = hashCode * 59 + this.LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS.GetHashCode();
                if (this.LAST_SEEN_ON_BLOB_TS != null)
                    hashCode = hashCode * 59 + this.LAST_SEEN_ON_BLOB_TS.GetHashCode();
                if (this.LAST_SEEN_ON_FIX_TS != null)
                    hashCode = hashCode * 59 + this.LAST_SEEN_ON_FIX_TS.GetHashCode();
                if (this.LAST_SEEN_ON_HARDCODED_TS != null)
                    hashCode = hashCode * 59 + this.LAST_SEEN_ON_HARDCODED_TS.GetHashCode();
                if (this.LAST_SEEN_ON_INDEX_COMPOSITION_TS != null)
                    hashCode = hashCode * 59 + this.LAST_SEEN_ON_INDEX_COMPOSITION_TS.GetHashCode();
                if (this.LAST_SEEN_ON_NSQ_TS != null)
                    hashCode = hashCode * 59 + this.LAST_SEEN_ON_NSQ_TS.GetHashCode();
                if (this.LAST_SEEN_ON_POLLING_TS != null)
                    hashCode = hashCode * 59 + this.LAST_SEEN_ON_POLLING_TS.GetHashCode();
                if (this.LAST_SEEN_ON_STREAMING_TS != null)
                    hashCode = hashCode * 59 + this.LAST_SEEN_ON_STREAMING_TS.GetHashCode();
                if (this.LAST_TRADE_SPOT_FROM_BACKFILL != null)
                    hashCode = hashCode * 59 + this.LAST_TRADE_SPOT_FROM_BACKFILL.GetHashCode();
                if (this.LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL != null)
                    hashCode = hashCode * 59 + this.LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL.GetHashCode();
                if (this.LAST_TRADE_SPOT_FROM_BLOB != null)
                    hashCode = hashCode * 59 + this.LAST_TRADE_SPOT_FROM_BLOB.GetHashCode();
                if (this.LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL != null)
                    hashCode = hashCode * 59 + this.LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL.GetHashCode();
                if (this.LAST_TRADE_SPOT_FROM_CALCULATED != null)
                    hashCode = hashCode * 59 + this.LAST_TRADE_SPOT_FROM_CALCULATED.GetHashCode();
                if (this.LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL != null)
                    hashCode = hashCode * 59 + this.LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL.GetHashCode();
                if (this.LAST_TRADE_SPOT_FROM_FIX != null)
                    hashCode = hashCode * 59 + this.LAST_TRADE_SPOT_FROM_FIX.GetHashCode();
                if (this.LAST_TRADE_SPOT_FROM_FIX_EXTERNAL != null)
                    hashCode = hashCode * 59 + this.LAST_TRADE_SPOT_FROM_FIX_EXTERNAL.GetHashCode();
                if (this.LAST_TRADE_SPOT_FROM_GO != null)
                    hashCode = hashCode * 59 + this.LAST_TRADE_SPOT_FROM_GO.GetHashCode();
                if (this.LAST_TRADE_SPOT_FROM_GO_EXTERNAL != null)
                    hashCode = hashCode * 59 + this.LAST_TRADE_SPOT_FROM_GO_EXTERNAL.GetHashCode();
                if (this.LAST_TRADE_SPOT_FROM_POLLING != null)
                    hashCode = hashCode * 59 + this.LAST_TRADE_SPOT_FROM_POLLING.GetHashCode();
                if (this.LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL != null)
                    hashCode = hashCode * 59 + this.LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL.GetHashCode();
                if (this.LAST_TRADE_SPOT_FROM_STREAMING != null)
                    hashCode = hashCode * 59 + this.LAST_TRADE_SPOT_FROM_STREAMING.GetHashCode();
                if (this.LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL != null)
                    hashCode = hashCode * 59 + this.LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL.GetHashCode();
                if (this.METADATA_VERSION != null)
                    hashCode = hashCode * 59 + this.METADATA_VERSION.GetHashCode();
                if (this.PROCESSING_TRADES_FROM_BLOB_STATUS != null)
                    hashCode = hashCode * 59 + this.PROCESSING_TRADES_FROM_BLOB_STATUS.GetHashCode();
                if (this.TOTAL_TRADES_SPOT != null)
                    hashCode = hashCode * 59 + this.TOTAL_TRADES_SPOT.GetHashCode();
                if (this.UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA != null)
                    hashCode = hashCode * 59 + this.UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA.GetHashCode();
                if (this.UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA != null)
                    hashCode = hashCode * 59 + this.UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA.GetHashCode();
                if (this.UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA != null)
                    hashCode = hashCode * 59 + this.UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA.GetHashCode();
                if (this.UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA != null)
                    hashCode = hashCode * 59 + this.UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA.GetHashCode();
                if (this.UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA != null)
                    hashCode = hashCode * 59 + this.UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA.GetHashCode();
                if (this.UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA != null)
                    hashCode = hashCode * 59 + this.UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA.GetHashCode();
                if (this.UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA != null)
                    hashCode = hashCode * 59 + this.UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
