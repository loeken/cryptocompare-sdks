/*
 * CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry
 *
 * CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: data@cryptocompare.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing OverviewApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class OverviewApiTests
    {
        private OverviewApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new OverviewApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of OverviewApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' OverviewApi
            //Assert.IsInstanceOf(typeof(OverviewApi), instance);
        }

        
        /// <summary>
        /// Test OverviewV1HistoricalMarketcapAllAssetsDays
        /// </summary>
        [Test]
        public void OverviewV1HistoricalMarketcapAllAssetsDaysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> groups = null;
            //int? limit = null;
            //int? toTs = null;
            //int? aggregate = null;
            //bool? fill = null;
            //string responseFormat = null;
            //var response = instance.OverviewV1HistoricalMarketcapAllAssetsDays(groups, limit, toTs, aggregate, fill, responseFormat);
            //Assert.IsInstanceOf(typeof(GENERICRESPONSE), response, "response is GENERICRESPONSE");
        }
        
        /// <summary>
        /// Test OverviewV1HistoricalMarketcapAllAssetsHours
        /// </summary>
        [Test]
        public void OverviewV1HistoricalMarketcapAllAssetsHoursTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> groups = null;
            //int? limit = null;
            //int? toTs = null;
            //int? aggregate = null;
            //bool? fill = null;
            //string responseFormat = null;
            //var response = instance.OverviewV1HistoricalMarketcapAllAssetsHours(groups, limit, toTs, aggregate, fill, responseFormat);
            //Assert.IsInstanceOf(typeof(GENERICRESPONSE), response, "response is GENERICRESPONSE");
        }
        
        /// <summary>
        /// Test OverviewV1HistoricalMarketcapFtwAssetsDays
        /// </summary>
        [Test]
        public void OverviewV1HistoricalMarketcapFtwAssetsDaysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> groups = null;
            //int? limit = null;
            //int? toTs = null;
            //int? aggregate = null;
            //bool? fill = null;
            //string responseFormat = null;
            //var response = instance.OverviewV1HistoricalMarketcapFtwAssetsDays(groups, limit, toTs, aggregate, fill, responseFormat);
            //Assert.IsInstanceOf(typeof(GENERICRESPONSE), response, "response is GENERICRESPONSE");
        }
        
        /// <summary>
        /// Test OverviewV1HistoricalMarketcapFtwAssetsHours
        /// </summary>
        [Test]
        public void OverviewV1HistoricalMarketcapFtwAssetsHoursTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> groups = null;
            //int? limit = null;
            //int? toTs = null;
            //int? aggregate = null;
            //bool? fill = null;
            //string responseFormat = null;
            //var response = instance.OverviewV1HistoricalMarketcapFtwAssetsHours(groups, limit, toTs, aggregate, fill, responseFormat);
            //Assert.IsInstanceOf(typeof(GENERICRESPONSE), response, "response is GENERICRESPONSE");
        }
        
        /// <summary>
        /// Test OverviewV1LatestMarketcapAllTick
        /// </summary>
        [Test]
        public void OverviewV1LatestMarketcapAllTickTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> groups = null;
            //var response = instance.OverviewV1LatestMarketcapAllTick(groups);
            //Assert.IsInstanceOf(typeof(GENERICRESPONSE), response, "response is GENERICRESPONSE");
        }
        
        /// <summary>
        /// Test OverviewV1LatestMarketcapFtwTick
        /// </summary>
        [Test]
        public void OverviewV1LatestMarketcapFtwTickTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> groups = null;
            //var response = instance.OverviewV1LatestMarketcapFtwTick(groups);
            //Assert.IsInstanceOf(typeof(GENERICRESPONSE), response, "response is GENERICRESPONSE");
        }
        
    }

}
