/**
 * CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry
 * CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: data@cryptocompare.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.3.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "CppRestOpenAPIClient/model/SPOT_INSTRUMENT_METADATA.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {



SPOT_INSTRUMENT_METADATA::SPOT_INSTRUMENT_METADATA()
{
    m_FIRST_SEEN_ON_BLOB_TS = 0;
    m_FIRST_SEEN_ON_BLOB_TSIsSet = false;
    m_FIRST_SEEN_ON_FIX_TS = 0;
    m_FIRST_SEEN_ON_FIX_TSIsSet = false;
    m_FIRST_SEEN_ON_HARDCODED_TS = 0;
    m_FIRST_SEEN_ON_HARDCODED_TSIsSet = false;
    m_FIRST_SEEN_ON_INDEX_COMPOSITION_TS = 0;
    m_FIRST_SEEN_ON_INDEX_COMPOSITION_TSIsSet = false;
    m_FIRST_SEEN_ON_NSQ_TS = 0;
    m_FIRST_SEEN_ON_NSQ_TSIsSet = false;
    m_FIRST_SEEN_ON_POLLING_TS = 0;
    m_FIRST_SEEN_ON_POLLING_TSIsSet = false;
    m_FIRST_SEEN_ON_STREAMING_TS = 0;
    m_FIRST_SEEN_ON_STREAMING_TSIsSet = false;
    m_FIRST_TRADE_SPOT_FROM_BACKFILLIsSet = false;
    m_FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNALIsSet = false;
    m_FIRST_TRADE_SPOT_FROM_BLOBIsSet = false;
    m_FIRST_TRADE_SPOT_FROM_BLOB_EXTERNALIsSet = false;
    m_FIRST_TRADE_SPOT_FROM_CALCULATEDIsSet = false;
    m_FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNALIsSet = false;
    m_FIRST_TRADE_SPOT_FROM_FIXIsSet = false;
    m_FIRST_TRADE_SPOT_FROM_FIX_EXTERNALIsSet = false;
    m_FIRST_TRADE_SPOT_FROM_GOIsSet = false;
    m_FIRST_TRADE_SPOT_FROM_GO_EXTERNALIsSet = false;
    m_FIRST_TRADE_SPOT_FROM_POLLINGIsSet = false;
    m_FIRST_TRADE_SPOT_FROM_POLLING_EXTERNALIsSet = false;
    m_FIRST_TRADE_SPOT_FROM_STREAMINGIsSet = false;
    m_FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNALIsSet = false;
    m_HOST_MIGRATION_DESTINATION = utility::conversions::to_string_t("");
    m_HOST_MIGRATION_DESTINATIONIsSet = false;
    m_HOST_MIGRATION_SOURCE = utility::conversions::to_string_t("");
    m_HOST_MIGRATION_SOURCEIsSet = false;
    m_HOST_MIGRATION_STATUS = utility::conversions::to_string_t("");
    m_HOST_MIGRATION_STATUSIsSet = false;
    m_INSTRUMENT = utility::conversions::to_string_t("");
    m_INSTRUMENTIsSet = false;
    m_INSTRUMENT_EXTERNAL_DATA = utility::conversions::to_string_t("");
    m_INSTRUMENT_EXTERNAL_DATAIsSet = false;
    m_INSTRUMENT_MAPPINGIsSet = false;
    m_INSTRUMENT_MAPPING_HISTORYIsSet = false;
    m_INSTRUMENT_SOURCE_BACKFILL = utility::conversions::to_string_t("");
    m_INSTRUMENT_SOURCE_BACKFILLIsSet = false;
    m_INSTRUMENT_SOURCE_BLOB = utility::conversions::to_string_t("");
    m_INSTRUMENT_SOURCE_BLOBIsSet = false;
    m_INSTRUMENT_SOURCE_CALCULATED = utility::conversions::to_string_t("");
    m_INSTRUMENT_SOURCE_CALCULATEDIsSet = false;
    m_INSTRUMENT_SOURCE_FIX = utility::conversions::to_string_t("");
    m_INSTRUMENT_SOURCE_FIXIsSet = false;
    m_INSTRUMENT_SOURCE_GO = utility::conversions::to_string_t("");
    m_INSTRUMENT_SOURCE_GOIsSet = false;
    m_INSTRUMENT_SOURCE_POLLING = utility::conversions::to_string_t("");
    m_INSTRUMENT_SOURCE_POLLINGIsSet = false;
    m_INSTRUMENT_SOURCE_STREAMING = utility::conversions::to_string_t("");
    m_INSTRUMENT_SOURCE_STREAMINGIsSet = false;
    m_INSTRUMENT_STATUS = utility::conversions::to_string_t("");
    m_INSTRUMENT_STATUSIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUESTIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS = 0;
    m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TSIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS = 0;
    m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TSIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS = 0;
    m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TSIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUESTIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS = 0;
    m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TSIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS = 0;
    m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TSIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS = 0;
    m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TSIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUESTIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS = 0;
    m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TSIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS = 0;
    m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TSIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS = 0;
    m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TSIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUESTIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS = 0;
    m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TSIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS = 0;
    m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TSIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS = 0;
    m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TSIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUESTIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS = 0;
    m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TSIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS = 0;
    m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TSIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS = 0;
    m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TSIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUESTIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS = 0;
    m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TSIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS = 0;
    m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TSIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS = 0;
    m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TSIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUESTIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS = 0;
    m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TSIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS = 0;
    m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TSIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS = 0;
    m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TSIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION = false;
    m_INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATIONIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_REST_URI = utility::conversions::to_string_t("");
    m_INSTRUMENT_TRADE_SPOT_REST_URIIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_REST_URL = utility::conversions::to_string_t("");
    m_INSTRUMENT_TRADE_SPOT_REST_URLIsSet = false;
    m_INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION = utility::conversions::to_string_t("");
    m_INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTIONIsSet = false;
    m_LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS = 0;
    m_LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MSIsSet = false;
    m_LAST_SEEN_ON_BLOB_TS = 0;
    m_LAST_SEEN_ON_BLOB_TSIsSet = false;
    m_LAST_SEEN_ON_FIX_TS = 0;
    m_LAST_SEEN_ON_FIX_TSIsSet = false;
    m_LAST_SEEN_ON_HARDCODED_TS = 0;
    m_LAST_SEEN_ON_HARDCODED_TSIsSet = false;
    m_LAST_SEEN_ON_INDEX_COMPOSITION_TS = 0;
    m_LAST_SEEN_ON_INDEX_COMPOSITION_TSIsSet = false;
    m_LAST_SEEN_ON_NSQ_TS = 0;
    m_LAST_SEEN_ON_NSQ_TSIsSet = false;
    m_LAST_SEEN_ON_POLLING_TS = 0;
    m_LAST_SEEN_ON_POLLING_TSIsSet = false;
    m_LAST_SEEN_ON_STREAMING_TS = 0;
    m_LAST_SEEN_ON_STREAMING_TSIsSet = false;
    m_LAST_TRADE_SPOT_FROM_BACKFILLIsSet = false;
    m_LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNALIsSet = false;
    m_LAST_TRADE_SPOT_FROM_BLOBIsSet = false;
    m_LAST_TRADE_SPOT_FROM_BLOB_EXTERNALIsSet = false;
    m_LAST_TRADE_SPOT_FROM_CALCULATEDIsSet = false;
    m_LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNALIsSet = false;
    m_LAST_TRADE_SPOT_FROM_FIXIsSet = false;
    m_LAST_TRADE_SPOT_FROM_FIX_EXTERNALIsSet = false;
    m_LAST_TRADE_SPOT_FROM_GOIsSet = false;
    m_LAST_TRADE_SPOT_FROM_GO_EXTERNALIsSet = false;
    m_LAST_TRADE_SPOT_FROM_POLLINGIsSet = false;
    m_LAST_TRADE_SPOT_FROM_POLLING_EXTERNALIsSet = false;
    m_LAST_TRADE_SPOT_FROM_STREAMINGIsSet = false;
    m_LAST_TRADE_SPOT_FROM_STREAMING_EXTERNALIsSet = false;
    m_METADATA_VERSION = 0;
    m_METADATA_VERSIONIsSet = false;
    m_PROCESSING_TRADES_FROM_BLOB_STATUS = utility::conversions::to_string_t("");
    m_PROCESSING_TRADES_FROM_BLOB_STATUSIsSet = false;
    m_TOTAL_TRADES_SPOT = 0;
    m_TOTAL_TRADES_SPOTIsSet = false;
    m_UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATAIsSet = false;
    m_UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATAIsSet = false;
    m_UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATAIsSet = false;
    m_UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATAIsSet = false;
    m_UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATAIsSet = false;
    m_UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATAIsSet = false;
    m_UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATAIsSet = false;
}

SPOT_INSTRUMENT_METADATA::~SPOT_INSTRUMENT_METADATA()
{
}

void SPOT_INSTRUMENT_METADATA::validate()
{
    // TODO: implement validation
}

web::json::value SPOT_INSTRUMENT_METADATA::toJson() const
{

    web::json::value val = web::json::value::object();
    
    if(m_FIRST_SEEN_ON_BLOB_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("FIRST_SEEN_ON_BLOB_TS"))] = ModelBase::toJson(m_FIRST_SEEN_ON_BLOB_TS);
    }
    if(m_FIRST_SEEN_ON_FIX_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("FIRST_SEEN_ON_FIX_TS"))] = ModelBase::toJson(m_FIRST_SEEN_ON_FIX_TS);
    }
    if(m_FIRST_SEEN_ON_HARDCODED_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("FIRST_SEEN_ON_HARDCODED_TS"))] = ModelBase::toJson(m_FIRST_SEEN_ON_HARDCODED_TS);
    }
    if(m_FIRST_SEEN_ON_INDEX_COMPOSITION_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("FIRST_SEEN_ON_INDEX_COMPOSITION_TS"))] = ModelBase::toJson(m_FIRST_SEEN_ON_INDEX_COMPOSITION_TS);
    }
    if(m_FIRST_SEEN_ON_NSQ_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("FIRST_SEEN_ON_NSQ_TS"))] = ModelBase::toJson(m_FIRST_SEEN_ON_NSQ_TS);
    }
    if(m_FIRST_SEEN_ON_POLLING_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("FIRST_SEEN_ON_POLLING_TS"))] = ModelBase::toJson(m_FIRST_SEEN_ON_POLLING_TS);
    }
    if(m_FIRST_SEEN_ON_STREAMING_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("FIRST_SEEN_ON_STREAMING_TS"))] = ModelBase::toJson(m_FIRST_SEEN_ON_STREAMING_TS);
    }
    if(m_FIRST_TRADE_SPOT_FROM_BACKFILLIsSet)
    {
        val[utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_BACKFILL"))] = ModelBase::toJson(m_FIRST_TRADE_SPOT_FROM_BACKFILL);
    }
    if(m_FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNALIsSet)
    {
        val[utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL"))] = ModelBase::toJson(m_FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL);
    }
    if(m_FIRST_TRADE_SPOT_FROM_BLOBIsSet)
    {
        val[utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_BLOB"))] = ModelBase::toJson(m_FIRST_TRADE_SPOT_FROM_BLOB);
    }
    if(m_FIRST_TRADE_SPOT_FROM_BLOB_EXTERNALIsSet)
    {
        val[utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL"))] = ModelBase::toJson(m_FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL);
    }
    if(m_FIRST_TRADE_SPOT_FROM_CALCULATEDIsSet)
    {
        val[utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_CALCULATED"))] = ModelBase::toJson(m_FIRST_TRADE_SPOT_FROM_CALCULATED);
    }
    if(m_FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNALIsSet)
    {
        val[utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL"))] = ModelBase::toJson(m_FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL);
    }
    if(m_FIRST_TRADE_SPOT_FROM_FIXIsSet)
    {
        val[utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_FIX"))] = ModelBase::toJson(m_FIRST_TRADE_SPOT_FROM_FIX);
    }
    if(m_FIRST_TRADE_SPOT_FROM_FIX_EXTERNALIsSet)
    {
        val[utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL"))] = ModelBase::toJson(m_FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL);
    }
    if(m_FIRST_TRADE_SPOT_FROM_GOIsSet)
    {
        val[utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_GO"))] = ModelBase::toJson(m_FIRST_TRADE_SPOT_FROM_GO);
    }
    if(m_FIRST_TRADE_SPOT_FROM_GO_EXTERNALIsSet)
    {
        val[utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_GO_EXTERNAL"))] = ModelBase::toJson(m_FIRST_TRADE_SPOT_FROM_GO_EXTERNAL);
    }
    if(m_FIRST_TRADE_SPOT_FROM_POLLINGIsSet)
    {
        val[utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_POLLING"))] = ModelBase::toJson(m_FIRST_TRADE_SPOT_FROM_POLLING);
    }
    if(m_FIRST_TRADE_SPOT_FROM_POLLING_EXTERNALIsSet)
    {
        val[utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL"))] = ModelBase::toJson(m_FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL);
    }
    if(m_FIRST_TRADE_SPOT_FROM_STREAMINGIsSet)
    {
        val[utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_STREAMING"))] = ModelBase::toJson(m_FIRST_TRADE_SPOT_FROM_STREAMING);
    }
    if(m_FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNALIsSet)
    {
        val[utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL"))] = ModelBase::toJson(m_FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL);
    }
    if(m_HOST_MIGRATION_DESTINATIONIsSet)
    {
        val[utility::conversions::to_string_t(U("HOST_MIGRATION_DESTINATION"))] = ModelBase::toJson(m_HOST_MIGRATION_DESTINATION);
    }
    if(m_HOST_MIGRATION_SOURCEIsSet)
    {
        val[utility::conversions::to_string_t(U("HOST_MIGRATION_SOURCE"))] = ModelBase::toJson(m_HOST_MIGRATION_SOURCE);
    }
    if(m_HOST_MIGRATION_STATUSIsSet)
    {
        val[utility::conversions::to_string_t(U("HOST_MIGRATION_STATUS"))] = ModelBase::toJson(m_HOST_MIGRATION_STATUS);
    }
    if(m_INSTRUMENTIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT"))] = ModelBase::toJson(m_INSTRUMENT);
    }
    if(m_INSTRUMENT_EXTERNAL_DATAIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_EXTERNAL_DATA"))] = ModelBase::toJson(m_INSTRUMENT_EXTERNAL_DATA);
    }
    if(m_INSTRUMENT_MAPPINGIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_MAPPING"))] = ModelBase::toJson(m_INSTRUMENT_MAPPING);
    }
    if(m_INSTRUMENT_MAPPING_HISTORYIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_MAPPING_HISTORY"))] = ModelBase::toJson(m_INSTRUMENT_MAPPING_HISTORY);
    }
    if(m_INSTRUMENT_SOURCE_BACKFILLIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_BACKFILL"))] = ModelBase::toJson(m_INSTRUMENT_SOURCE_BACKFILL);
    }
    if(m_INSTRUMENT_SOURCE_BLOBIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_BLOB"))] = ModelBase::toJson(m_INSTRUMENT_SOURCE_BLOB);
    }
    if(m_INSTRUMENT_SOURCE_CALCULATEDIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_CALCULATED"))] = ModelBase::toJson(m_INSTRUMENT_SOURCE_CALCULATED);
    }
    if(m_INSTRUMENT_SOURCE_FIXIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_FIX"))] = ModelBase::toJson(m_INSTRUMENT_SOURCE_FIX);
    }
    if(m_INSTRUMENT_SOURCE_GOIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_GO"))] = ModelBase::toJson(m_INSTRUMENT_SOURCE_GO);
    }
    if(m_INSTRUMENT_SOURCE_POLLINGIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_POLLING"))] = ModelBase::toJson(m_INSTRUMENT_SOURCE_POLLING);
    }
    if(m_INSTRUMENT_SOURCE_STREAMINGIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_STREAMING"))] = ModelBase::toJson(m_INSTRUMENT_SOURCE_STREAMING);
    }
    if(m_INSTRUMENT_STATUSIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_STATUS"))] = ModelBase::toJson(m_INSTRUMENT_STATUS);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUESTIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUESTIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUESTIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUESTIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUESTIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUESTIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUESTIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS);
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS);
    }
    if(m_INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATIONIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION);
    }
    if(m_INSTRUMENT_TRADE_SPOT_REST_URIIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_REST_URI"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_REST_URI);
    }
    if(m_INSTRUMENT_TRADE_SPOT_REST_URLIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_REST_URL"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_REST_URL);
    }
    if(m_INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTIONIsSet)
    {
        val[utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION"))] = ModelBase::toJson(m_INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION);
    }
    if(m_LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MSIsSet)
    {
        val[utility::conversions::to_string_t(U("LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS"))] = ModelBase::toJson(m_LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS);
    }
    if(m_LAST_SEEN_ON_BLOB_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("LAST_SEEN_ON_BLOB_TS"))] = ModelBase::toJson(m_LAST_SEEN_ON_BLOB_TS);
    }
    if(m_LAST_SEEN_ON_FIX_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("LAST_SEEN_ON_FIX_TS"))] = ModelBase::toJson(m_LAST_SEEN_ON_FIX_TS);
    }
    if(m_LAST_SEEN_ON_HARDCODED_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("LAST_SEEN_ON_HARDCODED_TS"))] = ModelBase::toJson(m_LAST_SEEN_ON_HARDCODED_TS);
    }
    if(m_LAST_SEEN_ON_INDEX_COMPOSITION_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("LAST_SEEN_ON_INDEX_COMPOSITION_TS"))] = ModelBase::toJson(m_LAST_SEEN_ON_INDEX_COMPOSITION_TS);
    }
    if(m_LAST_SEEN_ON_NSQ_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("LAST_SEEN_ON_NSQ_TS"))] = ModelBase::toJson(m_LAST_SEEN_ON_NSQ_TS);
    }
    if(m_LAST_SEEN_ON_POLLING_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("LAST_SEEN_ON_POLLING_TS"))] = ModelBase::toJson(m_LAST_SEEN_ON_POLLING_TS);
    }
    if(m_LAST_SEEN_ON_STREAMING_TSIsSet)
    {
        val[utility::conversions::to_string_t(U("LAST_SEEN_ON_STREAMING_TS"))] = ModelBase::toJson(m_LAST_SEEN_ON_STREAMING_TS);
    }
    if(m_LAST_TRADE_SPOT_FROM_BACKFILLIsSet)
    {
        val[utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_BACKFILL"))] = ModelBase::toJson(m_LAST_TRADE_SPOT_FROM_BACKFILL);
    }
    if(m_LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNALIsSet)
    {
        val[utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL"))] = ModelBase::toJson(m_LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL);
    }
    if(m_LAST_TRADE_SPOT_FROM_BLOBIsSet)
    {
        val[utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_BLOB"))] = ModelBase::toJson(m_LAST_TRADE_SPOT_FROM_BLOB);
    }
    if(m_LAST_TRADE_SPOT_FROM_BLOB_EXTERNALIsSet)
    {
        val[utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL"))] = ModelBase::toJson(m_LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL);
    }
    if(m_LAST_TRADE_SPOT_FROM_CALCULATEDIsSet)
    {
        val[utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_CALCULATED"))] = ModelBase::toJson(m_LAST_TRADE_SPOT_FROM_CALCULATED);
    }
    if(m_LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNALIsSet)
    {
        val[utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL"))] = ModelBase::toJson(m_LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL);
    }
    if(m_LAST_TRADE_SPOT_FROM_FIXIsSet)
    {
        val[utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_FIX"))] = ModelBase::toJson(m_LAST_TRADE_SPOT_FROM_FIX);
    }
    if(m_LAST_TRADE_SPOT_FROM_FIX_EXTERNALIsSet)
    {
        val[utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_FIX_EXTERNAL"))] = ModelBase::toJson(m_LAST_TRADE_SPOT_FROM_FIX_EXTERNAL);
    }
    if(m_LAST_TRADE_SPOT_FROM_GOIsSet)
    {
        val[utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_GO"))] = ModelBase::toJson(m_LAST_TRADE_SPOT_FROM_GO);
    }
    if(m_LAST_TRADE_SPOT_FROM_GO_EXTERNALIsSet)
    {
        val[utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_GO_EXTERNAL"))] = ModelBase::toJson(m_LAST_TRADE_SPOT_FROM_GO_EXTERNAL);
    }
    if(m_LAST_TRADE_SPOT_FROM_POLLINGIsSet)
    {
        val[utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_POLLING"))] = ModelBase::toJson(m_LAST_TRADE_SPOT_FROM_POLLING);
    }
    if(m_LAST_TRADE_SPOT_FROM_POLLING_EXTERNALIsSet)
    {
        val[utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL"))] = ModelBase::toJson(m_LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL);
    }
    if(m_LAST_TRADE_SPOT_FROM_STREAMINGIsSet)
    {
        val[utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_STREAMING"))] = ModelBase::toJson(m_LAST_TRADE_SPOT_FROM_STREAMING);
    }
    if(m_LAST_TRADE_SPOT_FROM_STREAMING_EXTERNALIsSet)
    {
        val[utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL"))] = ModelBase::toJson(m_LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL);
    }
    if(m_METADATA_VERSIONIsSet)
    {
        val[utility::conversions::to_string_t(U("METADATA_VERSION"))] = ModelBase::toJson(m_METADATA_VERSION);
    }
    if(m_PROCESSING_TRADES_FROM_BLOB_STATUSIsSet)
    {
        val[utility::conversions::to_string_t(U("PROCESSING_TRADES_FROM_BLOB_STATUS"))] = ModelBase::toJson(m_PROCESSING_TRADES_FROM_BLOB_STATUS);
    }
    if(m_TOTAL_TRADES_SPOTIsSet)
    {
        val[utility::conversions::to_string_t(U("TOTAL_TRADES_SPOT"))] = ModelBase::toJson(m_TOTAL_TRADES_SPOT);
    }
    if(m_UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATAIsSet)
    {
        val[utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA"))] = ModelBase::toJson(m_UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA);
    }
    if(m_UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATAIsSet)
    {
        val[utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA"))] = ModelBase::toJson(m_UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA);
    }
    if(m_UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATAIsSet)
    {
        val[utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA"))] = ModelBase::toJson(m_UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA);
    }
    if(m_UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATAIsSet)
    {
        val[utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA"))] = ModelBase::toJson(m_UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA);
    }
    if(m_UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATAIsSet)
    {
        val[utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA"))] = ModelBase::toJson(m_UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA);
    }
    if(m_UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATAIsSet)
    {
        val[utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA"))] = ModelBase::toJson(m_UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA);
    }
    if(m_UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATAIsSet)
    {
        val[utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA"))] = ModelBase::toJson(m_UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA);
    }

    return val;
}

bool SPOT_INSTRUMENT_METADATA::fromJson(const web::json::value& val)
{
    bool ok = true;
    
    if(val.has_field(utility::conversions::to_string_t(U("FIRST_SEEN_ON_BLOB_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("FIRST_SEEN_ON_BLOB_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setFIRSTSEENONBLOBTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setFIRSTSEENONBLOBTS);
            setFIRSTSEENONBLOBTS(refVal_setFIRSTSEENONBLOBTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("FIRST_SEEN_ON_FIX_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("FIRST_SEEN_ON_FIX_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setFIRSTSEENONFIXTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setFIRSTSEENONFIXTS);
            setFIRSTSEENONFIXTS(refVal_setFIRSTSEENONFIXTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("FIRST_SEEN_ON_HARDCODED_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("FIRST_SEEN_ON_HARDCODED_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setFIRSTSEENONHARDCODEDTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setFIRSTSEENONHARDCODEDTS);
            setFIRSTSEENONHARDCODEDTS(refVal_setFIRSTSEENONHARDCODEDTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("FIRST_SEEN_ON_INDEX_COMPOSITION_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("FIRST_SEEN_ON_INDEX_COMPOSITION_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setFIRSTSEENONINDEXCOMPOSITIONTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setFIRSTSEENONINDEXCOMPOSITIONTS);
            setFIRSTSEENONINDEXCOMPOSITIONTS(refVal_setFIRSTSEENONINDEXCOMPOSITIONTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("FIRST_SEEN_ON_NSQ_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("FIRST_SEEN_ON_NSQ_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setFIRSTSEENONNSQTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setFIRSTSEENONNSQTS);
            setFIRSTSEENONNSQTS(refVal_setFIRSTSEENONNSQTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("FIRST_SEEN_ON_POLLING_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("FIRST_SEEN_ON_POLLING_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setFIRSTSEENONPOLLINGTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setFIRSTSEENONPOLLINGTS);
            setFIRSTSEENONPOLLINGTS(refVal_setFIRSTSEENONPOLLINGTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("FIRST_SEEN_ON_STREAMING_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("FIRST_SEEN_ON_STREAMING_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setFIRSTSEENONSTREAMINGTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setFIRSTSEENONSTREAMINGTS);
            setFIRSTSEENONSTREAMINGTS(refVal_setFIRSTSEENONSTREAMINGTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_BACKFILL"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_BACKFILL")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMBACKFILL;
            ok &= ModelBase::fromJson(fieldValue, refVal_setFIRSTTRADESPOTFROMBACKFILL);
            setFIRSTTRADESPOTFROMBACKFILL(refVal_setFIRSTTRADESPOTFROMBACKFILL);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMBACKFILLEXTERNAL;
            ok &= ModelBase::fromJson(fieldValue, refVal_setFIRSTTRADESPOTFROMBACKFILLEXTERNAL);
            setFIRSTTRADESPOTFROMBACKFILLEXTERNAL(refVal_setFIRSTTRADESPOTFROMBACKFILLEXTERNAL);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_BLOB"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_BLOB")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMBLOB;
            ok &= ModelBase::fromJson(fieldValue, refVal_setFIRSTTRADESPOTFROMBLOB);
            setFIRSTTRADESPOTFROMBLOB(refVal_setFIRSTTRADESPOTFROMBLOB);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMBLOBEXTERNAL;
            ok &= ModelBase::fromJson(fieldValue, refVal_setFIRSTTRADESPOTFROMBLOBEXTERNAL);
            setFIRSTTRADESPOTFROMBLOBEXTERNAL(refVal_setFIRSTTRADESPOTFROMBLOBEXTERNAL);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_CALCULATED"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_CALCULATED")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMCALCULATED;
            ok &= ModelBase::fromJson(fieldValue, refVal_setFIRSTTRADESPOTFROMCALCULATED);
            setFIRSTTRADESPOTFROMCALCULATED(refVal_setFIRSTTRADESPOTFROMCALCULATED);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMCALCULATEDEXTERNAL;
            ok &= ModelBase::fromJson(fieldValue, refVal_setFIRSTTRADESPOTFROMCALCULATEDEXTERNAL);
            setFIRSTTRADESPOTFROMCALCULATEDEXTERNAL(refVal_setFIRSTTRADESPOTFROMCALCULATEDEXTERNAL);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_FIX"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_FIX")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMFIX;
            ok &= ModelBase::fromJson(fieldValue, refVal_setFIRSTTRADESPOTFROMFIX);
            setFIRSTTRADESPOTFROMFIX(refVal_setFIRSTTRADESPOTFROMFIX);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMFIXEXTERNAL;
            ok &= ModelBase::fromJson(fieldValue, refVal_setFIRSTTRADESPOTFROMFIXEXTERNAL);
            setFIRSTTRADESPOTFROMFIXEXTERNAL(refVal_setFIRSTTRADESPOTFROMFIXEXTERNAL);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_GO"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_GO")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMGO;
            ok &= ModelBase::fromJson(fieldValue, refVal_setFIRSTTRADESPOTFROMGO);
            setFIRSTTRADESPOTFROMGO(refVal_setFIRSTTRADESPOTFROMGO);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_GO_EXTERNAL"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_GO_EXTERNAL")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMGOEXTERNAL;
            ok &= ModelBase::fromJson(fieldValue, refVal_setFIRSTTRADESPOTFROMGOEXTERNAL);
            setFIRSTTRADESPOTFROMGOEXTERNAL(refVal_setFIRSTTRADESPOTFROMGOEXTERNAL);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_POLLING"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_POLLING")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMPOLLING;
            ok &= ModelBase::fromJson(fieldValue, refVal_setFIRSTTRADESPOTFROMPOLLING);
            setFIRSTTRADESPOTFROMPOLLING(refVal_setFIRSTTRADESPOTFROMPOLLING);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMPOLLINGEXTERNAL;
            ok &= ModelBase::fromJson(fieldValue, refVal_setFIRSTTRADESPOTFROMPOLLINGEXTERNAL);
            setFIRSTTRADESPOTFROMPOLLINGEXTERNAL(refVal_setFIRSTTRADESPOTFROMPOLLINGEXTERNAL);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_STREAMING"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_STREAMING")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMSTREAMING;
            ok &= ModelBase::fromJson(fieldValue, refVal_setFIRSTTRADESPOTFROMSTREAMING);
            setFIRSTTRADESPOTFROMSTREAMING(refVal_setFIRSTTRADESPOTFROMSTREAMING);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMSTREAMINGEXTERNAL;
            ok &= ModelBase::fromJson(fieldValue, refVal_setFIRSTTRADESPOTFROMSTREAMINGEXTERNAL);
            setFIRSTTRADESPOTFROMSTREAMINGEXTERNAL(refVal_setFIRSTTRADESPOTFROMSTREAMINGEXTERNAL);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("HOST_MIGRATION_DESTINATION"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("HOST_MIGRATION_DESTINATION")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setHOSTMIGRATIONDESTINATION;
            ok &= ModelBase::fromJson(fieldValue, refVal_setHOSTMIGRATIONDESTINATION);
            setHOSTMIGRATIONDESTINATION(refVal_setHOSTMIGRATIONDESTINATION);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("HOST_MIGRATION_SOURCE"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("HOST_MIGRATION_SOURCE")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setHOSTMIGRATIONSOURCE;
            ok &= ModelBase::fromJson(fieldValue, refVal_setHOSTMIGRATIONSOURCE);
            setHOSTMIGRATIONSOURCE(refVal_setHOSTMIGRATIONSOURCE);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("HOST_MIGRATION_STATUS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("HOST_MIGRATION_STATUS")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setHOSTMIGRATIONSTATUS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setHOSTMIGRATIONSTATUS);
            setHOSTMIGRATIONSTATUS(refVal_setHOSTMIGRATIONSTATUS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setINSTRUMENT;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENT);
            setINSTRUMENT(refVal_setINSTRUMENT);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_EXTERNAL_DATA"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_EXTERNAL_DATA")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setINSTRUMENTEXTERNALDATA;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTEXTERNALDATA);
            setINSTRUMENTEXTERNALDATA(refVal_setINSTRUMENTEXTERNALDATA);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_MAPPING"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_MAPPING")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setINSTRUMENTMAPPING;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTMAPPING);
            setINSTRUMENTMAPPING(refVal_setINSTRUMENTMAPPING);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_MAPPING_HISTORY"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_MAPPING_HISTORY")));
        if(!fieldValue.is_null())
        {
            std::vector<utility::string_t> refVal_setINSTRUMENTMAPPINGHISTORY;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTMAPPINGHISTORY);
            setINSTRUMENTMAPPINGHISTORY(refVal_setINSTRUMENTMAPPINGHISTORY);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_BACKFILL"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_BACKFILL")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setINSTRUMENTSOURCEBACKFILL;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTSOURCEBACKFILL);
            setINSTRUMENTSOURCEBACKFILL(refVal_setINSTRUMENTSOURCEBACKFILL);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_BLOB"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_BLOB")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setINSTRUMENTSOURCEBLOB;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTSOURCEBLOB);
            setINSTRUMENTSOURCEBLOB(refVal_setINSTRUMENTSOURCEBLOB);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_CALCULATED"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_CALCULATED")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setINSTRUMENTSOURCECALCULATED;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTSOURCECALCULATED);
            setINSTRUMENTSOURCECALCULATED(refVal_setINSTRUMENTSOURCECALCULATED);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_FIX"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_FIX")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setINSTRUMENTSOURCEFIX;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTSOURCEFIX);
            setINSTRUMENTSOURCEFIX(refVal_setINSTRUMENTSOURCEFIX);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_GO"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_GO")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setINSTRUMENTSOURCEGO;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTSOURCEGO);
            setINSTRUMENTSOURCEGO(refVal_setINSTRUMENTSOURCEGO);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_POLLING"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_POLLING")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setINSTRUMENTSOURCEPOLLING;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTSOURCEPOLLING);
            setINSTRUMENTSOURCEPOLLING(refVal_setINSTRUMENTSOURCEPOLLING);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_STREAMING"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_STREAMING")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setINSTRUMENTSOURCESTREAMING;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTSOURCESTREAMING);
            setINSTRUMENTSOURCESTREAMING(refVal_setINSTRUMENTSOURCESTREAMING);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_STATUS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_STATUS")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setINSTRUMENTSTATUS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTSTATUS);
            setINSTRUMENTSTATUS(refVal_setINSTRUMENTSTATUS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setINSTRUMENTTRADESPOTFROMBACKFILLLASTPROXIEDRESTREQUEST;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMBACKFILLLASTPROXIEDRESTREQUEST);
            setINSTRUMENTTRADESPOTFROMBACKFILLLASTPROXIEDRESTREQUEST(refVal_setINSTRUMENTTRADESPOTFROMBACKFILLLASTPROXIEDRESTREQUEST);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setINSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTREQUESTTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTREQUESTTS);
            setINSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTREQUESTTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setINSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTRESPONSETS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTRESPONSETS);
            setINSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTRESPONSETS(refVal_setINSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTRESPONSETS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setINSTRUMENTTRADESPOTFROMBACKFILLRESTURINEXTREQUESTTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMBACKFILLRESTURINEXTREQUESTTS);
            setINSTRUMENTTRADESPOTFROMBACKFILLRESTURINEXTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMBACKFILLRESTURINEXTREQUESTTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setINSTRUMENTTRADESPOTFROMBLOBLASTPROXIEDRESTREQUEST;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMBLOBLASTPROXIEDRESTREQUEST);
            setINSTRUMENTTRADESPOTFROMBLOBLASTPROXIEDRESTREQUEST(refVal_setINSTRUMENTTRADESPOTFROMBLOBLASTPROXIEDRESTREQUEST);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setINSTRUMENTTRADESPOTFROMBLOBRESTURILASTREQUESTTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMBLOBRESTURILASTREQUESTTS);
            setINSTRUMENTTRADESPOTFROMBLOBRESTURILASTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMBLOBRESTURILASTREQUESTTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setINSTRUMENTTRADESPOTFROMBLOBRESTURILASTRESPONSETS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMBLOBRESTURILASTRESPONSETS);
            setINSTRUMENTTRADESPOTFROMBLOBRESTURILASTRESPONSETS(refVal_setINSTRUMENTTRADESPOTFROMBLOBRESTURILASTRESPONSETS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setINSTRUMENTTRADESPOTFROMBLOBRESTURINEXTREQUESTTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMBLOBRESTURINEXTREQUESTTS);
            setINSTRUMENTTRADESPOTFROMBLOBRESTURINEXTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMBLOBRESTURINEXTREQUESTTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setINSTRUMENTTRADESPOTFROMCALCULATEDLASTPROXIEDRESTREQUEST;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMCALCULATEDLASTPROXIEDRESTREQUEST);
            setINSTRUMENTTRADESPOTFROMCALCULATEDLASTPROXIEDRESTREQUEST(refVal_setINSTRUMENTTRADESPOTFROMCALCULATEDLASTPROXIEDRESTREQUEST);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTREQUESTTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTREQUESTTS);
            setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTREQUESTTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTRESPONSETS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTRESPONSETS);
            setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTRESPONSETS(refVal_setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTRESPONSETS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURINEXTREQUESTTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURINEXTREQUESTTS);
            setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURINEXTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURINEXTREQUESTTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setINSTRUMENTTRADESPOTFROMFIXLASTPROXIEDRESTREQUEST;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMFIXLASTPROXIEDRESTREQUEST);
            setINSTRUMENTTRADESPOTFROMFIXLASTPROXIEDRESTREQUEST(refVal_setINSTRUMENTTRADESPOTFROMFIXLASTPROXIEDRESTREQUEST);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setINSTRUMENTTRADESPOTFROMFIXRESTURILASTREQUESTTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMFIXRESTURILASTREQUESTTS);
            setINSTRUMENTTRADESPOTFROMFIXRESTURILASTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMFIXRESTURILASTREQUESTTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setINSTRUMENTTRADESPOTFROMFIXRESTURILASTRESPONSETS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMFIXRESTURILASTRESPONSETS);
            setINSTRUMENTTRADESPOTFROMFIXRESTURILASTRESPONSETS(refVal_setINSTRUMENTTRADESPOTFROMFIXRESTURILASTRESPONSETS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setINSTRUMENTTRADESPOTFROMFIXRESTURINEXTREQUESTTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMFIXRESTURINEXTREQUESTTS);
            setINSTRUMENTTRADESPOTFROMFIXRESTURINEXTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMFIXRESTURINEXTREQUESTTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setINSTRUMENTTRADESPOTFROMGOLASTPROXIEDRESTREQUEST;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMGOLASTPROXIEDRESTREQUEST);
            setINSTRUMENTTRADESPOTFROMGOLASTPROXIEDRESTREQUEST(refVal_setINSTRUMENTTRADESPOTFROMGOLASTPROXIEDRESTREQUEST);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setINSTRUMENTTRADESPOTFROMGORESTURILASTREQUESTTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMGORESTURILASTREQUESTTS);
            setINSTRUMENTTRADESPOTFROMGORESTURILASTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMGORESTURILASTREQUESTTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setINSTRUMENTTRADESPOTFROMGORESTURILASTRESPONSETS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMGORESTURILASTRESPONSETS);
            setINSTRUMENTTRADESPOTFROMGORESTURILASTRESPONSETS(refVal_setINSTRUMENTTRADESPOTFROMGORESTURILASTRESPONSETS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setINSTRUMENTTRADESPOTFROMGORESTURINEXTREQUESTTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMGORESTURINEXTREQUESTTS);
            setINSTRUMENTTRADESPOTFROMGORESTURINEXTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMGORESTURINEXTREQUESTTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setINSTRUMENTTRADESPOTFROMPOLLINGLASTPROXIEDRESTREQUEST;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMPOLLINGLASTPROXIEDRESTREQUEST);
            setINSTRUMENTTRADESPOTFROMPOLLINGLASTPROXIEDRESTREQUEST(refVal_setINSTRUMENTTRADESPOTFROMPOLLINGLASTPROXIEDRESTREQUEST);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setINSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTREQUESTTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTREQUESTTS);
            setINSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTREQUESTTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setINSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTRESPONSETS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTRESPONSETS);
            setINSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTRESPONSETS(refVal_setINSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTRESPONSETS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setINSTRUMENTTRADESPOTFROMPOLLINGRESTURINEXTREQUESTTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMPOLLINGRESTURINEXTREQUESTTS);
            setINSTRUMENTTRADESPOTFROMPOLLINGRESTURINEXTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMPOLLINGRESTURINEXTREQUESTTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setINSTRUMENTTRADESPOTFROMSTREAMINGLASTPROXIEDRESTREQUEST;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMSTREAMINGLASTPROXIEDRESTREQUEST);
            setINSTRUMENTTRADESPOTFROMSTREAMINGLASTPROXIEDRESTREQUEST(refVal_setINSTRUMENTTRADESPOTFROMSTREAMINGLASTPROXIEDRESTREQUEST);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTREQUESTTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTREQUESTTS);
            setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTREQUESTTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTRESPONSETS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTRESPONSETS);
            setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTRESPONSETS(refVal_setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTRESPONSETS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURINEXTREQUESTTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURINEXTREQUESTTS);
            setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURINEXTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURINEXTREQUESTTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION")));
        if(!fieldValue.is_null())
        {
            bool refVal_setINSTRUMENTTRADESPOTISREADYFORSTREAMINGINTEGRATION;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTISREADYFORSTREAMINGINTEGRATION);
            setINSTRUMENTTRADESPOTISREADYFORSTREAMINGINTEGRATION(refVal_setINSTRUMENTTRADESPOTISREADYFORSTREAMINGINTEGRATION);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_REST_URI"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_REST_URI")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setINSTRUMENTTRADESPOTRESTURI;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTRESTURI);
            setINSTRUMENTTRADESPOTRESTURI(refVal_setINSTRUMENTTRADESPOTRESTURI);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_REST_URL"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_REST_URL")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setINSTRUMENTTRADESPOTRESTURL;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTRESTURL);
            setINSTRUMENTTRADESPOTRESTURL(refVal_setINSTRUMENTTRADESPOTRESTURL);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setINSTRUMENTTRADESPOTSTREAMINGSUBSCRIPTION;
            ok &= ModelBase::fromJson(fieldValue, refVal_setINSTRUMENTTRADESPOTSTREAMINGSUBSCRIPTION);
            setINSTRUMENTTRADESPOTSTREAMINGSUBSCRIPTION(refVal_setINSTRUMENTTRADESPOTSTREAMINGSUBSCRIPTION);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setLASTCONCURRENTBATCHOFTRADESSPOTMS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setLASTCONCURRENTBATCHOFTRADESSPOTMS);
            setLASTCONCURRENTBATCHOFTRADESSPOTMS(refVal_setLASTCONCURRENTBATCHOFTRADESSPOTMS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("LAST_SEEN_ON_BLOB_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("LAST_SEEN_ON_BLOB_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setLASTSEENONBLOBTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setLASTSEENONBLOBTS);
            setLASTSEENONBLOBTS(refVal_setLASTSEENONBLOBTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("LAST_SEEN_ON_FIX_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("LAST_SEEN_ON_FIX_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setLASTSEENONFIXTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setLASTSEENONFIXTS);
            setLASTSEENONFIXTS(refVal_setLASTSEENONFIXTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("LAST_SEEN_ON_HARDCODED_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("LAST_SEEN_ON_HARDCODED_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setLASTSEENONHARDCODEDTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setLASTSEENONHARDCODEDTS);
            setLASTSEENONHARDCODEDTS(refVal_setLASTSEENONHARDCODEDTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("LAST_SEEN_ON_INDEX_COMPOSITION_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("LAST_SEEN_ON_INDEX_COMPOSITION_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setLASTSEENONINDEXCOMPOSITIONTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setLASTSEENONINDEXCOMPOSITIONTS);
            setLASTSEENONINDEXCOMPOSITIONTS(refVal_setLASTSEENONINDEXCOMPOSITIONTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("LAST_SEEN_ON_NSQ_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("LAST_SEEN_ON_NSQ_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setLASTSEENONNSQTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setLASTSEENONNSQTS);
            setLASTSEENONNSQTS(refVal_setLASTSEENONNSQTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("LAST_SEEN_ON_POLLING_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("LAST_SEEN_ON_POLLING_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setLASTSEENONPOLLINGTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setLASTSEENONPOLLINGTS);
            setLASTSEENONPOLLINGTS(refVal_setLASTSEENONPOLLINGTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("LAST_SEEN_ON_STREAMING_TS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("LAST_SEEN_ON_STREAMING_TS")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setLASTSEENONSTREAMINGTS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setLASTSEENONSTREAMINGTS);
            setLASTSEENONSTREAMINGTS(refVal_setLASTSEENONSTREAMINGTS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_BACKFILL"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_BACKFILL")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMBACKFILL;
            ok &= ModelBase::fromJson(fieldValue, refVal_setLASTTRADESPOTFROMBACKFILL);
            setLASTTRADESPOTFROMBACKFILL(refVal_setLASTTRADESPOTFROMBACKFILL);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMBACKFILLEXTERNAL;
            ok &= ModelBase::fromJson(fieldValue, refVal_setLASTTRADESPOTFROMBACKFILLEXTERNAL);
            setLASTTRADESPOTFROMBACKFILLEXTERNAL(refVal_setLASTTRADESPOTFROMBACKFILLEXTERNAL);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_BLOB"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_BLOB")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMBLOB;
            ok &= ModelBase::fromJson(fieldValue, refVal_setLASTTRADESPOTFROMBLOB);
            setLASTTRADESPOTFROMBLOB(refVal_setLASTTRADESPOTFROMBLOB);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMBLOBEXTERNAL;
            ok &= ModelBase::fromJson(fieldValue, refVal_setLASTTRADESPOTFROMBLOBEXTERNAL);
            setLASTTRADESPOTFROMBLOBEXTERNAL(refVal_setLASTTRADESPOTFROMBLOBEXTERNAL);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_CALCULATED"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_CALCULATED")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMCALCULATED;
            ok &= ModelBase::fromJson(fieldValue, refVal_setLASTTRADESPOTFROMCALCULATED);
            setLASTTRADESPOTFROMCALCULATED(refVal_setLASTTRADESPOTFROMCALCULATED);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMCALCULATEDEXTERNAL;
            ok &= ModelBase::fromJson(fieldValue, refVal_setLASTTRADESPOTFROMCALCULATEDEXTERNAL);
            setLASTTRADESPOTFROMCALCULATEDEXTERNAL(refVal_setLASTTRADESPOTFROMCALCULATEDEXTERNAL);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_FIX"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_FIX")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMFIX;
            ok &= ModelBase::fromJson(fieldValue, refVal_setLASTTRADESPOTFROMFIX);
            setLASTTRADESPOTFROMFIX(refVal_setLASTTRADESPOTFROMFIX);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_FIX_EXTERNAL"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_FIX_EXTERNAL")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMFIXEXTERNAL;
            ok &= ModelBase::fromJson(fieldValue, refVal_setLASTTRADESPOTFROMFIXEXTERNAL);
            setLASTTRADESPOTFROMFIXEXTERNAL(refVal_setLASTTRADESPOTFROMFIXEXTERNAL);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_GO"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_GO")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMGO;
            ok &= ModelBase::fromJson(fieldValue, refVal_setLASTTRADESPOTFROMGO);
            setLASTTRADESPOTFROMGO(refVal_setLASTTRADESPOTFROMGO);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_GO_EXTERNAL"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_GO_EXTERNAL")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMGOEXTERNAL;
            ok &= ModelBase::fromJson(fieldValue, refVal_setLASTTRADESPOTFROMGOEXTERNAL);
            setLASTTRADESPOTFROMGOEXTERNAL(refVal_setLASTTRADESPOTFROMGOEXTERNAL);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_POLLING"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_POLLING")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMPOLLING;
            ok &= ModelBase::fromJson(fieldValue, refVal_setLASTTRADESPOTFROMPOLLING);
            setLASTTRADESPOTFROMPOLLING(refVal_setLASTTRADESPOTFROMPOLLING);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMPOLLINGEXTERNAL;
            ok &= ModelBase::fromJson(fieldValue, refVal_setLASTTRADESPOTFROMPOLLINGEXTERNAL);
            setLASTTRADESPOTFROMPOLLINGEXTERNAL(refVal_setLASTTRADESPOTFROMPOLLINGEXTERNAL);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_STREAMING"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_STREAMING")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMSTREAMING;
            ok &= ModelBase::fromJson(fieldValue, refVal_setLASTTRADESPOTFROMSTREAMING);
            setLASTTRADESPOTFROMSTREAMING(refVal_setLASTTRADESPOTFROMSTREAMING);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMSTREAMINGEXTERNAL;
            ok &= ModelBase::fromJson(fieldValue, refVal_setLASTTRADESPOTFROMSTREAMINGEXTERNAL);
            setLASTTRADESPOTFROMSTREAMINGEXTERNAL(refVal_setLASTTRADESPOTFROMSTREAMINGEXTERNAL);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("METADATA_VERSION"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("METADATA_VERSION")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setMETADATAVERSION;
            ok &= ModelBase::fromJson(fieldValue, refVal_setMETADATAVERSION);
            setMETADATAVERSION(refVal_setMETADATAVERSION);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("PROCESSING_TRADES_FROM_BLOB_STATUS"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("PROCESSING_TRADES_FROM_BLOB_STATUS")));
        if(!fieldValue.is_null())
        {
            utility::string_t refVal_setPROCESSINGTRADESFROMBLOBSTATUS;
            ok &= ModelBase::fromJson(fieldValue, refVal_setPROCESSINGTRADESFROMBLOBSTATUS);
            setPROCESSINGTRADESFROMBLOBSTATUS(refVal_setPROCESSINGTRADESFROMBLOBSTATUS);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("TOTAL_TRADES_SPOT"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("TOTAL_TRADES_SPOT")));
        if(!fieldValue.is_null())
        {
            int32_t refVal_setTOTALTRADESSPOT;
            ok &= ModelBase::fromJson(fieldValue, refVal_setTOTALTRADESSPOT);
            setTOTALTRADESSPOT(refVal_setTOTALTRADESSPOT);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setUNSTRUCTUREDTRADESPOTFROMBACKFILLINTERNALDATA;
            ok &= ModelBase::fromJson(fieldValue, refVal_setUNSTRUCTUREDTRADESPOTFROMBACKFILLINTERNALDATA);
            setUNSTRUCTUREDTRADESPOTFROMBACKFILLINTERNALDATA(refVal_setUNSTRUCTUREDTRADESPOTFROMBACKFILLINTERNALDATA);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setUNSTRUCTUREDTRADESPOTFROMBLOBINTERNALDATA;
            ok &= ModelBase::fromJson(fieldValue, refVal_setUNSTRUCTUREDTRADESPOTFROMBLOBINTERNALDATA);
            setUNSTRUCTUREDTRADESPOTFROMBLOBINTERNALDATA(refVal_setUNSTRUCTUREDTRADESPOTFROMBLOBINTERNALDATA);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setUNSTRUCTUREDTRADESPOTFROMCALCULATEDINTERNALDATA;
            ok &= ModelBase::fromJson(fieldValue, refVal_setUNSTRUCTUREDTRADESPOTFROMCALCULATEDINTERNALDATA);
            setUNSTRUCTUREDTRADESPOTFROMCALCULATEDINTERNALDATA(refVal_setUNSTRUCTUREDTRADESPOTFROMCALCULATEDINTERNALDATA);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setUNSTRUCTUREDTRADESPOTFROMFIXINTERNALDATA;
            ok &= ModelBase::fromJson(fieldValue, refVal_setUNSTRUCTUREDTRADESPOTFROMFIXINTERNALDATA);
            setUNSTRUCTUREDTRADESPOTFROMFIXINTERNALDATA(refVal_setUNSTRUCTUREDTRADESPOTFROMFIXINTERNALDATA);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setUNSTRUCTUREDTRADESPOTFROMGOINTERNALDATA;
            ok &= ModelBase::fromJson(fieldValue, refVal_setUNSTRUCTUREDTRADESPOTFROMGOINTERNALDATA);
            setUNSTRUCTUREDTRADESPOTFROMGOINTERNALDATA(refVal_setUNSTRUCTUREDTRADESPOTFROMGOINTERNALDATA);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setUNSTRUCTUREDTRADESPOTFROMPOLLINGINTERNALDATA;
            ok &= ModelBase::fromJson(fieldValue, refVal_setUNSTRUCTUREDTRADESPOTFROMPOLLINGINTERNALDATA);
            setUNSTRUCTUREDTRADESPOTFROMPOLLINGINTERNALDATA(refVal_setUNSTRUCTUREDTRADESPOTFROMPOLLINGINTERNALDATA);
        }
    }
    if(val.has_field(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA"))))
    {
        const web::json::value& fieldValue = val.at(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA")));
        if(!fieldValue.is_null())
        {
            std::shared_ptr<Object> refVal_setUNSTRUCTUREDTRADESPOTFROMSTREAMINGINTERNALDATA;
            ok &= ModelBase::fromJson(fieldValue, refVal_setUNSTRUCTUREDTRADESPOTFROMSTREAMINGINTERNALDATA);
            setUNSTRUCTUREDTRADESPOTFROMSTREAMINGINTERNALDATA(refVal_setUNSTRUCTUREDTRADESPOTFROMSTREAMINGINTERNALDATA);
        }
    }
    return ok;
}

void SPOT_INSTRUMENT_METADATA::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t(U(".")))
    {
        namePrefix += utility::conversions::to_string_t(U("."));
    }
    if(m_FIRST_SEEN_ON_BLOB_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("FIRST_SEEN_ON_BLOB_TS")), m_FIRST_SEEN_ON_BLOB_TS));
    }
    if(m_FIRST_SEEN_ON_FIX_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("FIRST_SEEN_ON_FIX_TS")), m_FIRST_SEEN_ON_FIX_TS));
    }
    if(m_FIRST_SEEN_ON_HARDCODED_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("FIRST_SEEN_ON_HARDCODED_TS")), m_FIRST_SEEN_ON_HARDCODED_TS));
    }
    if(m_FIRST_SEEN_ON_INDEX_COMPOSITION_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("FIRST_SEEN_ON_INDEX_COMPOSITION_TS")), m_FIRST_SEEN_ON_INDEX_COMPOSITION_TS));
    }
    if(m_FIRST_SEEN_ON_NSQ_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("FIRST_SEEN_ON_NSQ_TS")), m_FIRST_SEEN_ON_NSQ_TS));
    }
    if(m_FIRST_SEEN_ON_POLLING_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("FIRST_SEEN_ON_POLLING_TS")), m_FIRST_SEEN_ON_POLLING_TS));
    }
    if(m_FIRST_SEEN_ON_STREAMING_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("FIRST_SEEN_ON_STREAMING_TS")), m_FIRST_SEEN_ON_STREAMING_TS));
    }
    if(m_FIRST_TRADE_SPOT_FROM_BACKFILLIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_BACKFILL")), m_FIRST_TRADE_SPOT_FROM_BACKFILL));
    }
    if(m_FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNALIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL")), m_FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL));
    }
    if(m_FIRST_TRADE_SPOT_FROM_BLOBIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_BLOB")), m_FIRST_TRADE_SPOT_FROM_BLOB));
    }
    if(m_FIRST_TRADE_SPOT_FROM_BLOB_EXTERNALIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL")), m_FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL));
    }
    if(m_FIRST_TRADE_SPOT_FROM_CALCULATEDIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_CALCULATED")), m_FIRST_TRADE_SPOT_FROM_CALCULATED));
    }
    if(m_FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNALIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL")), m_FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL));
    }
    if(m_FIRST_TRADE_SPOT_FROM_FIXIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_FIX")), m_FIRST_TRADE_SPOT_FROM_FIX));
    }
    if(m_FIRST_TRADE_SPOT_FROM_FIX_EXTERNALIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL")), m_FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL));
    }
    if(m_FIRST_TRADE_SPOT_FROM_GOIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_GO")), m_FIRST_TRADE_SPOT_FROM_GO));
    }
    if(m_FIRST_TRADE_SPOT_FROM_GO_EXTERNALIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_GO_EXTERNAL")), m_FIRST_TRADE_SPOT_FROM_GO_EXTERNAL));
    }
    if(m_FIRST_TRADE_SPOT_FROM_POLLINGIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_POLLING")), m_FIRST_TRADE_SPOT_FROM_POLLING));
    }
    if(m_FIRST_TRADE_SPOT_FROM_POLLING_EXTERNALIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL")), m_FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL));
    }
    if(m_FIRST_TRADE_SPOT_FROM_STREAMINGIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_STREAMING")), m_FIRST_TRADE_SPOT_FROM_STREAMING));
    }
    if(m_FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNALIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL")), m_FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL));
    }
    if(m_HOST_MIGRATION_DESTINATIONIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("HOST_MIGRATION_DESTINATION")), m_HOST_MIGRATION_DESTINATION));
    }
    if(m_HOST_MIGRATION_SOURCEIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("HOST_MIGRATION_SOURCE")), m_HOST_MIGRATION_SOURCE));
    }
    if(m_HOST_MIGRATION_STATUSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("HOST_MIGRATION_STATUS")), m_HOST_MIGRATION_STATUS));
    }
    if(m_INSTRUMENTIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT")), m_INSTRUMENT));
    }
    if(m_INSTRUMENT_EXTERNAL_DATAIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_EXTERNAL_DATA")), m_INSTRUMENT_EXTERNAL_DATA));
    }
    if(m_INSTRUMENT_MAPPINGIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_MAPPING")), m_INSTRUMENT_MAPPING));
    }
    if(m_INSTRUMENT_MAPPING_HISTORYIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_MAPPING_HISTORY")), m_INSTRUMENT_MAPPING_HISTORY));
    }
    if(m_INSTRUMENT_SOURCE_BACKFILLIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_BACKFILL")), m_INSTRUMENT_SOURCE_BACKFILL));
    }
    if(m_INSTRUMENT_SOURCE_BLOBIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_BLOB")), m_INSTRUMENT_SOURCE_BLOB));
    }
    if(m_INSTRUMENT_SOURCE_CALCULATEDIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_CALCULATED")), m_INSTRUMENT_SOURCE_CALCULATED));
    }
    if(m_INSTRUMENT_SOURCE_FIXIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_FIX")), m_INSTRUMENT_SOURCE_FIX));
    }
    if(m_INSTRUMENT_SOURCE_GOIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_GO")), m_INSTRUMENT_SOURCE_GO));
    }
    if(m_INSTRUMENT_SOURCE_POLLINGIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_POLLING")), m_INSTRUMENT_SOURCE_POLLING));
    }
    if(m_INSTRUMENT_SOURCE_STREAMINGIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_STREAMING")), m_INSTRUMENT_SOURCE_STREAMING));
    }
    if(m_INSTRUMENT_STATUSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_STATUS")), m_INSTRUMENT_STATUS));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUESTIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST")), m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS")), m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS")), m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS")), m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUESTIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST")), m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS")), m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS")), m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS")), m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUESTIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST")), m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS")), m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS")), m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS")), m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUESTIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST")), m_INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS")), m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS")), m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS")), m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUESTIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST")), m_INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS")), m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS")), m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS")), m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUESTIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST")), m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS")), m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS")), m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS")), m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUESTIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST")), m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS")), m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS")), m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS));
    }
    if(m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS")), m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS));
    }
    if(m_INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATIONIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION")), m_INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION));
    }
    if(m_INSTRUMENT_TRADE_SPOT_REST_URIIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_REST_URI")), m_INSTRUMENT_TRADE_SPOT_REST_URI));
    }
    if(m_INSTRUMENT_TRADE_SPOT_REST_URLIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_REST_URL")), m_INSTRUMENT_TRADE_SPOT_REST_URL));
    }
    if(m_INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTIONIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION")), m_INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION));
    }
    if(m_LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS")), m_LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS));
    }
    if(m_LAST_SEEN_ON_BLOB_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("LAST_SEEN_ON_BLOB_TS")), m_LAST_SEEN_ON_BLOB_TS));
    }
    if(m_LAST_SEEN_ON_FIX_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("LAST_SEEN_ON_FIX_TS")), m_LAST_SEEN_ON_FIX_TS));
    }
    if(m_LAST_SEEN_ON_HARDCODED_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("LAST_SEEN_ON_HARDCODED_TS")), m_LAST_SEEN_ON_HARDCODED_TS));
    }
    if(m_LAST_SEEN_ON_INDEX_COMPOSITION_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("LAST_SEEN_ON_INDEX_COMPOSITION_TS")), m_LAST_SEEN_ON_INDEX_COMPOSITION_TS));
    }
    if(m_LAST_SEEN_ON_NSQ_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("LAST_SEEN_ON_NSQ_TS")), m_LAST_SEEN_ON_NSQ_TS));
    }
    if(m_LAST_SEEN_ON_POLLING_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("LAST_SEEN_ON_POLLING_TS")), m_LAST_SEEN_ON_POLLING_TS));
    }
    if(m_LAST_SEEN_ON_STREAMING_TSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("LAST_SEEN_ON_STREAMING_TS")), m_LAST_SEEN_ON_STREAMING_TS));
    }
    if(m_LAST_TRADE_SPOT_FROM_BACKFILLIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_BACKFILL")), m_LAST_TRADE_SPOT_FROM_BACKFILL));
    }
    if(m_LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNALIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL")), m_LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL));
    }
    if(m_LAST_TRADE_SPOT_FROM_BLOBIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_BLOB")), m_LAST_TRADE_SPOT_FROM_BLOB));
    }
    if(m_LAST_TRADE_SPOT_FROM_BLOB_EXTERNALIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL")), m_LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL));
    }
    if(m_LAST_TRADE_SPOT_FROM_CALCULATEDIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_CALCULATED")), m_LAST_TRADE_SPOT_FROM_CALCULATED));
    }
    if(m_LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNALIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL")), m_LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL));
    }
    if(m_LAST_TRADE_SPOT_FROM_FIXIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_FIX")), m_LAST_TRADE_SPOT_FROM_FIX));
    }
    if(m_LAST_TRADE_SPOT_FROM_FIX_EXTERNALIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_FIX_EXTERNAL")), m_LAST_TRADE_SPOT_FROM_FIX_EXTERNAL));
    }
    if(m_LAST_TRADE_SPOT_FROM_GOIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_GO")), m_LAST_TRADE_SPOT_FROM_GO));
    }
    if(m_LAST_TRADE_SPOT_FROM_GO_EXTERNALIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_GO_EXTERNAL")), m_LAST_TRADE_SPOT_FROM_GO_EXTERNAL));
    }
    if(m_LAST_TRADE_SPOT_FROM_POLLINGIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_POLLING")), m_LAST_TRADE_SPOT_FROM_POLLING));
    }
    if(m_LAST_TRADE_SPOT_FROM_POLLING_EXTERNALIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL")), m_LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL));
    }
    if(m_LAST_TRADE_SPOT_FROM_STREAMINGIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_STREAMING")), m_LAST_TRADE_SPOT_FROM_STREAMING));
    }
    if(m_LAST_TRADE_SPOT_FROM_STREAMING_EXTERNALIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL")), m_LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL));
    }
    if(m_METADATA_VERSIONIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("METADATA_VERSION")), m_METADATA_VERSION));
    }
    if(m_PROCESSING_TRADES_FROM_BLOB_STATUSIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("PROCESSING_TRADES_FROM_BLOB_STATUS")), m_PROCESSING_TRADES_FROM_BLOB_STATUS));
    }
    if(m_TOTAL_TRADES_SPOTIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("TOTAL_TRADES_SPOT")), m_TOTAL_TRADES_SPOT));
    }
    if(m_UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATAIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA")), m_UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA));
    }
    if(m_UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATAIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA")), m_UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA));
    }
    if(m_UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATAIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA")), m_UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA));
    }
    if(m_UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATAIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA")), m_UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA));
    }
    if(m_UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATAIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA")), m_UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA));
    }
    if(m_UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATAIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA")), m_UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA));
    }
    if(m_UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATAIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA")), m_UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA));
    }
}

bool SPOT_INSTRUMENT_METADATA::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    bool ok = true;
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t(U(".")))
    {
        namePrefix += utility::conversions::to_string_t(U("."));
    }

    if(multipart->hasContent(utility::conversions::to_string_t(U("FIRST_SEEN_ON_BLOB_TS"))))
    {
        int32_t refVal_setFIRSTSEENONBLOBTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("FIRST_SEEN_ON_BLOB_TS"))), refVal_setFIRSTSEENONBLOBTS );
        setFIRSTSEENONBLOBTS(refVal_setFIRSTSEENONBLOBTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("FIRST_SEEN_ON_FIX_TS"))))
    {
        int32_t refVal_setFIRSTSEENONFIXTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("FIRST_SEEN_ON_FIX_TS"))), refVal_setFIRSTSEENONFIXTS );
        setFIRSTSEENONFIXTS(refVal_setFIRSTSEENONFIXTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("FIRST_SEEN_ON_HARDCODED_TS"))))
    {
        int32_t refVal_setFIRSTSEENONHARDCODEDTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("FIRST_SEEN_ON_HARDCODED_TS"))), refVal_setFIRSTSEENONHARDCODEDTS );
        setFIRSTSEENONHARDCODEDTS(refVal_setFIRSTSEENONHARDCODEDTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("FIRST_SEEN_ON_INDEX_COMPOSITION_TS"))))
    {
        int32_t refVal_setFIRSTSEENONINDEXCOMPOSITIONTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("FIRST_SEEN_ON_INDEX_COMPOSITION_TS"))), refVal_setFIRSTSEENONINDEXCOMPOSITIONTS );
        setFIRSTSEENONINDEXCOMPOSITIONTS(refVal_setFIRSTSEENONINDEXCOMPOSITIONTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("FIRST_SEEN_ON_NSQ_TS"))))
    {
        int32_t refVal_setFIRSTSEENONNSQTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("FIRST_SEEN_ON_NSQ_TS"))), refVal_setFIRSTSEENONNSQTS );
        setFIRSTSEENONNSQTS(refVal_setFIRSTSEENONNSQTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("FIRST_SEEN_ON_POLLING_TS"))))
    {
        int32_t refVal_setFIRSTSEENONPOLLINGTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("FIRST_SEEN_ON_POLLING_TS"))), refVal_setFIRSTSEENONPOLLINGTS );
        setFIRSTSEENONPOLLINGTS(refVal_setFIRSTSEENONPOLLINGTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("FIRST_SEEN_ON_STREAMING_TS"))))
    {
        int32_t refVal_setFIRSTSEENONSTREAMINGTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("FIRST_SEEN_ON_STREAMING_TS"))), refVal_setFIRSTSEENONSTREAMINGTS );
        setFIRSTSEENONSTREAMINGTS(refVal_setFIRSTSEENONSTREAMINGTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_BACKFILL"))))
    {
        std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMBACKFILL;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_BACKFILL"))), refVal_setFIRSTTRADESPOTFROMBACKFILL );
        setFIRSTTRADESPOTFROMBACKFILL(refVal_setFIRSTTRADESPOTFROMBACKFILL);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL"))))
    {
        std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMBACKFILLEXTERNAL;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL"))), refVal_setFIRSTTRADESPOTFROMBACKFILLEXTERNAL );
        setFIRSTTRADESPOTFROMBACKFILLEXTERNAL(refVal_setFIRSTTRADESPOTFROMBACKFILLEXTERNAL);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_BLOB"))))
    {
        std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMBLOB;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_BLOB"))), refVal_setFIRSTTRADESPOTFROMBLOB );
        setFIRSTTRADESPOTFROMBLOB(refVal_setFIRSTTRADESPOTFROMBLOB);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL"))))
    {
        std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMBLOBEXTERNAL;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL"))), refVal_setFIRSTTRADESPOTFROMBLOBEXTERNAL );
        setFIRSTTRADESPOTFROMBLOBEXTERNAL(refVal_setFIRSTTRADESPOTFROMBLOBEXTERNAL);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_CALCULATED"))))
    {
        std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMCALCULATED;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_CALCULATED"))), refVal_setFIRSTTRADESPOTFROMCALCULATED );
        setFIRSTTRADESPOTFROMCALCULATED(refVal_setFIRSTTRADESPOTFROMCALCULATED);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL"))))
    {
        std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMCALCULATEDEXTERNAL;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL"))), refVal_setFIRSTTRADESPOTFROMCALCULATEDEXTERNAL );
        setFIRSTTRADESPOTFROMCALCULATEDEXTERNAL(refVal_setFIRSTTRADESPOTFROMCALCULATEDEXTERNAL);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_FIX"))))
    {
        std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMFIX;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_FIX"))), refVal_setFIRSTTRADESPOTFROMFIX );
        setFIRSTTRADESPOTFROMFIX(refVal_setFIRSTTRADESPOTFROMFIX);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL"))))
    {
        std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMFIXEXTERNAL;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL"))), refVal_setFIRSTTRADESPOTFROMFIXEXTERNAL );
        setFIRSTTRADESPOTFROMFIXEXTERNAL(refVal_setFIRSTTRADESPOTFROMFIXEXTERNAL);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_GO"))))
    {
        std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMGO;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_GO"))), refVal_setFIRSTTRADESPOTFROMGO );
        setFIRSTTRADESPOTFROMGO(refVal_setFIRSTTRADESPOTFROMGO);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_GO_EXTERNAL"))))
    {
        std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMGOEXTERNAL;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_GO_EXTERNAL"))), refVal_setFIRSTTRADESPOTFROMGOEXTERNAL );
        setFIRSTTRADESPOTFROMGOEXTERNAL(refVal_setFIRSTTRADESPOTFROMGOEXTERNAL);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_POLLING"))))
    {
        std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMPOLLING;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_POLLING"))), refVal_setFIRSTTRADESPOTFROMPOLLING );
        setFIRSTTRADESPOTFROMPOLLING(refVal_setFIRSTTRADESPOTFROMPOLLING);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL"))))
    {
        std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMPOLLINGEXTERNAL;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL"))), refVal_setFIRSTTRADESPOTFROMPOLLINGEXTERNAL );
        setFIRSTTRADESPOTFROMPOLLINGEXTERNAL(refVal_setFIRSTTRADESPOTFROMPOLLINGEXTERNAL);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_STREAMING"))))
    {
        std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMSTREAMING;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_STREAMING"))), refVal_setFIRSTTRADESPOTFROMSTREAMING );
        setFIRSTTRADESPOTFROMSTREAMING(refVal_setFIRSTTRADESPOTFROMSTREAMING);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL"))))
    {
        std::shared_ptr<Object> refVal_setFIRSTTRADESPOTFROMSTREAMINGEXTERNAL;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL"))), refVal_setFIRSTTRADESPOTFROMSTREAMINGEXTERNAL );
        setFIRSTTRADESPOTFROMSTREAMINGEXTERNAL(refVal_setFIRSTTRADESPOTFROMSTREAMINGEXTERNAL);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("HOST_MIGRATION_DESTINATION"))))
    {
        utility::string_t refVal_setHOSTMIGRATIONDESTINATION;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("HOST_MIGRATION_DESTINATION"))), refVal_setHOSTMIGRATIONDESTINATION );
        setHOSTMIGRATIONDESTINATION(refVal_setHOSTMIGRATIONDESTINATION);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("HOST_MIGRATION_SOURCE"))))
    {
        utility::string_t refVal_setHOSTMIGRATIONSOURCE;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("HOST_MIGRATION_SOURCE"))), refVal_setHOSTMIGRATIONSOURCE );
        setHOSTMIGRATIONSOURCE(refVal_setHOSTMIGRATIONSOURCE);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("HOST_MIGRATION_STATUS"))))
    {
        utility::string_t refVal_setHOSTMIGRATIONSTATUS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("HOST_MIGRATION_STATUS"))), refVal_setHOSTMIGRATIONSTATUS );
        setHOSTMIGRATIONSTATUS(refVal_setHOSTMIGRATIONSTATUS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT"))))
    {
        utility::string_t refVal_setINSTRUMENT;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT"))), refVal_setINSTRUMENT );
        setINSTRUMENT(refVal_setINSTRUMENT);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_EXTERNAL_DATA"))))
    {
        utility::string_t refVal_setINSTRUMENTEXTERNALDATA;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_EXTERNAL_DATA"))), refVal_setINSTRUMENTEXTERNALDATA );
        setINSTRUMENTEXTERNALDATA(refVal_setINSTRUMENTEXTERNALDATA);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_MAPPING"))))
    {
        std::shared_ptr<Object> refVal_setINSTRUMENTMAPPING;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_MAPPING"))), refVal_setINSTRUMENTMAPPING );
        setINSTRUMENTMAPPING(refVal_setINSTRUMENTMAPPING);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_MAPPING_HISTORY"))))
    {
        std::vector<utility::string_t> refVal_setINSTRUMENTMAPPINGHISTORY;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_MAPPING_HISTORY"))), refVal_setINSTRUMENTMAPPINGHISTORY );
        setINSTRUMENTMAPPINGHISTORY(refVal_setINSTRUMENTMAPPINGHISTORY);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_BACKFILL"))))
    {
        utility::string_t refVal_setINSTRUMENTSOURCEBACKFILL;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_BACKFILL"))), refVal_setINSTRUMENTSOURCEBACKFILL );
        setINSTRUMENTSOURCEBACKFILL(refVal_setINSTRUMENTSOURCEBACKFILL);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_BLOB"))))
    {
        utility::string_t refVal_setINSTRUMENTSOURCEBLOB;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_BLOB"))), refVal_setINSTRUMENTSOURCEBLOB );
        setINSTRUMENTSOURCEBLOB(refVal_setINSTRUMENTSOURCEBLOB);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_CALCULATED"))))
    {
        utility::string_t refVal_setINSTRUMENTSOURCECALCULATED;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_CALCULATED"))), refVal_setINSTRUMENTSOURCECALCULATED );
        setINSTRUMENTSOURCECALCULATED(refVal_setINSTRUMENTSOURCECALCULATED);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_FIX"))))
    {
        utility::string_t refVal_setINSTRUMENTSOURCEFIX;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_FIX"))), refVal_setINSTRUMENTSOURCEFIX );
        setINSTRUMENTSOURCEFIX(refVal_setINSTRUMENTSOURCEFIX);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_GO"))))
    {
        utility::string_t refVal_setINSTRUMENTSOURCEGO;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_GO"))), refVal_setINSTRUMENTSOURCEGO );
        setINSTRUMENTSOURCEGO(refVal_setINSTRUMENTSOURCEGO);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_POLLING"))))
    {
        utility::string_t refVal_setINSTRUMENTSOURCEPOLLING;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_POLLING"))), refVal_setINSTRUMENTSOURCEPOLLING );
        setINSTRUMENTSOURCEPOLLING(refVal_setINSTRUMENTSOURCEPOLLING);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_STREAMING"))))
    {
        utility::string_t refVal_setINSTRUMENTSOURCESTREAMING;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_SOURCE_STREAMING"))), refVal_setINSTRUMENTSOURCESTREAMING );
        setINSTRUMENTSOURCESTREAMING(refVal_setINSTRUMENTSOURCESTREAMING);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_STATUS"))))
    {
        utility::string_t refVal_setINSTRUMENTSTATUS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_STATUS"))), refVal_setINSTRUMENTSTATUS );
        setINSTRUMENTSTATUS(refVal_setINSTRUMENTSTATUS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST"))))
    {
        std::shared_ptr<Object> refVal_setINSTRUMENTTRADESPOTFROMBACKFILLLASTPROXIEDRESTREQUEST;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST"))), refVal_setINSTRUMENTTRADESPOTFROMBACKFILLLASTPROXIEDRESTREQUEST );
        setINSTRUMENTTRADESPOTFROMBACKFILLLASTPROXIEDRESTREQUEST(refVal_setINSTRUMENTTRADESPOTFROMBACKFILLLASTPROXIEDRESTREQUEST);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS"))))
    {
        int32_t refVal_setINSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTREQUESTTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS"))), refVal_setINSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTREQUESTTS );
        setINSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTREQUESTTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS"))))
    {
        int32_t refVal_setINSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTRESPONSETS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS"))), refVal_setINSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTRESPONSETS );
        setINSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTRESPONSETS(refVal_setINSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTRESPONSETS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS"))))
    {
        int32_t refVal_setINSTRUMENTTRADESPOTFROMBACKFILLRESTURINEXTREQUESTTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS"))), refVal_setINSTRUMENTTRADESPOTFROMBACKFILLRESTURINEXTREQUESTTS );
        setINSTRUMENTTRADESPOTFROMBACKFILLRESTURINEXTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMBACKFILLRESTURINEXTREQUESTTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST"))))
    {
        std::shared_ptr<Object> refVal_setINSTRUMENTTRADESPOTFROMBLOBLASTPROXIEDRESTREQUEST;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST"))), refVal_setINSTRUMENTTRADESPOTFROMBLOBLASTPROXIEDRESTREQUEST );
        setINSTRUMENTTRADESPOTFROMBLOBLASTPROXIEDRESTREQUEST(refVal_setINSTRUMENTTRADESPOTFROMBLOBLASTPROXIEDRESTREQUEST);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS"))))
    {
        int32_t refVal_setINSTRUMENTTRADESPOTFROMBLOBRESTURILASTREQUESTTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS"))), refVal_setINSTRUMENTTRADESPOTFROMBLOBRESTURILASTREQUESTTS );
        setINSTRUMENTTRADESPOTFROMBLOBRESTURILASTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMBLOBRESTURILASTREQUESTTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS"))))
    {
        int32_t refVal_setINSTRUMENTTRADESPOTFROMBLOBRESTURILASTRESPONSETS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS"))), refVal_setINSTRUMENTTRADESPOTFROMBLOBRESTURILASTRESPONSETS );
        setINSTRUMENTTRADESPOTFROMBLOBRESTURILASTRESPONSETS(refVal_setINSTRUMENTTRADESPOTFROMBLOBRESTURILASTRESPONSETS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS"))))
    {
        int32_t refVal_setINSTRUMENTTRADESPOTFROMBLOBRESTURINEXTREQUESTTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS"))), refVal_setINSTRUMENTTRADESPOTFROMBLOBRESTURINEXTREQUESTTS );
        setINSTRUMENTTRADESPOTFROMBLOBRESTURINEXTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMBLOBRESTURINEXTREQUESTTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST"))))
    {
        std::shared_ptr<Object> refVal_setINSTRUMENTTRADESPOTFROMCALCULATEDLASTPROXIEDRESTREQUEST;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST"))), refVal_setINSTRUMENTTRADESPOTFROMCALCULATEDLASTPROXIEDRESTREQUEST );
        setINSTRUMENTTRADESPOTFROMCALCULATEDLASTPROXIEDRESTREQUEST(refVal_setINSTRUMENTTRADESPOTFROMCALCULATEDLASTPROXIEDRESTREQUEST);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS"))))
    {
        int32_t refVal_setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTREQUESTTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS"))), refVal_setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTREQUESTTS );
        setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTREQUESTTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS"))))
    {
        int32_t refVal_setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTRESPONSETS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS"))), refVal_setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTRESPONSETS );
        setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTRESPONSETS(refVal_setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTRESPONSETS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS"))))
    {
        int32_t refVal_setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURINEXTREQUESTTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS"))), refVal_setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURINEXTREQUESTTS );
        setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURINEXTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURINEXTREQUESTTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST"))))
    {
        std::shared_ptr<Object> refVal_setINSTRUMENTTRADESPOTFROMFIXLASTPROXIEDRESTREQUEST;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST"))), refVal_setINSTRUMENTTRADESPOTFROMFIXLASTPROXIEDRESTREQUEST );
        setINSTRUMENTTRADESPOTFROMFIXLASTPROXIEDRESTREQUEST(refVal_setINSTRUMENTTRADESPOTFROMFIXLASTPROXIEDRESTREQUEST);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS"))))
    {
        int32_t refVal_setINSTRUMENTTRADESPOTFROMFIXRESTURILASTREQUESTTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS"))), refVal_setINSTRUMENTTRADESPOTFROMFIXRESTURILASTREQUESTTS );
        setINSTRUMENTTRADESPOTFROMFIXRESTURILASTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMFIXRESTURILASTREQUESTTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS"))))
    {
        int32_t refVal_setINSTRUMENTTRADESPOTFROMFIXRESTURILASTRESPONSETS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS"))), refVal_setINSTRUMENTTRADESPOTFROMFIXRESTURILASTRESPONSETS );
        setINSTRUMENTTRADESPOTFROMFIXRESTURILASTRESPONSETS(refVal_setINSTRUMENTTRADESPOTFROMFIXRESTURILASTRESPONSETS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS"))))
    {
        int32_t refVal_setINSTRUMENTTRADESPOTFROMFIXRESTURINEXTREQUESTTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS"))), refVal_setINSTRUMENTTRADESPOTFROMFIXRESTURINEXTREQUESTTS );
        setINSTRUMENTTRADESPOTFROMFIXRESTURINEXTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMFIXRESTURINEXTREQUESTTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST"))))
    {
        std::shared_ptr<Object> refVal_setINSTRUMENTTRADESPOTFROMGOLASTPROXIEDRESTREQUEST;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST"))), refVal_setINSTRUMENTTRADESPOTFROMGOLASTPROXIEDRESTREQUEST );
        setINSTRUMENTTRADESPOTFROMGOLASTPROXIEDRESTREQUEST(refVal_setINSTRUMENTTRADESPOTFROMGOLASTPROXIEDRESTREQUEST);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS"))))
    {
        int32_t refVal_setINSTRUMENTTRADESPOTFROMGORESTURILASTREQUESTTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS"))), refVal_setINSTRUMENTTRADESPOTFROMGORESTURILASTREQUESTTS );
        setINSTRUMENTTRADESPOTFROMGORESTURILASTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMGORESTURILASTREQUESTTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS"))))
    {
        int32_t refVal_setINSTRUMENTTRADESPOTFROMGORESTURILASTRESPONSETS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS"))), refVal_setINSTRUMENTTRADESPOTFROMGORESTURILASTRESPONSETS );
        setINSTRUMENTTRADESPOTFROMGORESTURILASTRESPONSETS(refVal_setINSTRUMENTTRADESPOTFROMGORESTURILASTRESPONSETS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS"))))
    {
        int32_t refVal_setINSTRUMENTTRADESPOTFROMGORESTURINEXTREQUESTTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS"))), refVal_setINSTRUMENTTRADESPOTFROMGORESTURINEXTREQUESTTS );
        setINSTRUMENTTRADESPOTFROMGORESTURINEXTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMGORESTURINEXTREQUESTTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST"))))
    {
        std::shared_ptr<Object> refVal_setINSTRUMENTTRADESPOTFROMPOLLINGLASTPROXIEDRESTREQUEST;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST"))), refVal_setINSTRUMENTTRADESPOTFROMPOLLINGLASTPROXIEDRESTREQUEST );
        setINSTRUMENTTRADESPOTFROMPOLLINGLASTPROXIEDRESTREQUEST(refVal_setINSTRUMENTTRADESPOTFROMPOLLINGLASTPROXIEDRESTREQUEST);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS"))))
    {
        int32_t refVal_setINSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTREQUESTTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS"))), refVal_setINSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTREQUESTTS );
        setINSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTREQUESTTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS"))))
    {
        int32_t refVal_setINSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTRESPONSETS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS"))), refVal_setINSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTRESPONSETS );
        setINSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTRESPONSETS(refVal_setINSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTRESPONSETS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS"))))
    {
        int32_t refVal_setINSTRUMENTTRADESPOTFROMPOLLINGRESTURINEXTREQUESTTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS"))), refVal_setINSTRUMENTTRADESPOTFROMPOLLINGRESTURINEXTREQUESTTS );
        setINSTRUMENTTRADESPOTFROMPOLLINGRESTURINEXTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMPOLLINGRESTURINEXTREQUESTTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST"))))
    {
        std::shared_ptr<Object> refVal_setINSTRUMENTTRADESPOTFROMSTREAMINGLASTPROXIEDRESTREQUEST;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST"))), refVal_setINSTRUMENTTRADESPOTFROMSTREAMINGLASTPROXIEDRESTREQUEST );
        setINSTRUMENTTRADESPOTFROMSTREAMINGLASTPROXIEDRESTREQUEST(refVal_setINSTRUMENTTRADESPOTFROMSTREAMINGLASTPROXIEDRESTREQUEST);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS"))))
    {
        int32_t refVal_setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTREQUESTTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS"))), refVal_setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTREQUESTTS );
        setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTREQUESTTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS"))))
    {
        int32_t refVal_setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTRESPONSETS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS"))), refVal_setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTRESPONSETS );
        setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTRESPONSETS(refVal_setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTRESPONSETS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS"))))
    {
        int32_t refVal_setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURINEXTREQUESTTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS"))), refVal_setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURINEXTREQUESTTS );
        setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURINEXTREQUESTTS(refVal_setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURINEXTREQUESTTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION"))))
    {
        bool refVal_setINSTRUMENTTRADESPOTISREADYFORSTREAMINGINTEGRATION;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION"))), refVal_setINSTRUMENTTRADESPOTISREADYFORSTREAMINGINTEGRATION );
        setINSTRUMENTTRADESPOTISREADYFORSTREAMINGINTEGRATION(refVal_setINSTRUMENTTRADESPOTISREADYFORSTREAMINGINTEGRATION);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_REST_URI"))))
    {
        utility::string_t refVal_setINSTRUMENTTRADESPOTRESTURI;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_REST_URI"))), refVal_setINSTRUMENTTRADESPOTRESTURI );
        setINSTRUMENTTRADESPOTRESTURI(refVal_setINSTRUMENTTRADESPOTRESTURI);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_REST_URL"))))
    {
        utility::string_t refVal_setINSTRUMENTTRADESPOTRESTURL;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_REST_URL"))), refVal_setINSTRUMENTTRADESPOTRESTURL );
        setINSTRUMENTTRADESPOTRESTURL(refVal_setINSTRUMENTTRADESPOTRESTURL);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION"))))
    {
        utility::string_t refVal_setINSTRUMENTTRADESPOTSTREAMINGSUBSCRIPTION;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION"))), refVal_setINSTRUMENTTRADESPOTSTREAMINGSUBSCRIPTION );
        setINSTRUMENTTRADESPOTSTREAMINGSUBSCRIPTION(refVal_setINSTRUMENTTRADESPOTSTREAMINGSUBSCRIPTION);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS"))))
    {
        int32_t refVal_setLASTCONCURRENTBATCHOFTRADESSPOTMS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS"))), refVal_setLASTCONCURRENTBATCHOFTRADESSPOTMS );
        setLASTCONCURRENTBATCHOFTRADESSPOTMS(refVal_setLASTCONCURRENTBATCHOFTRADESSPOTMS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("LAST_SEEN_ON_BLOB_TS"))))
    {
        int32_t refVal_setLASTSEENONBLOBTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("LAST_SEEN_ON_BLOB_TS"))), refVal_setLASTSEENONBLOBTS );
        setLASTSEENONBLOBTS(refVal_setLASTSEENONBLOBTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("LAST_SEEN_ON_FIX_TS"))))
    {
        int32_t refVal_setLASTSEENONFIXTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("LAST_SEEN_ON_FIX_TS"))), refVal_setLASTSEENONFIXTS );
        setLASTSEENONFIXTS(refVal_setLASTSEENONFIXTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("LAST_SEEN_ON_HARDCODED_TS"))))
    {
        int32_t refVal_setLASTSEENONHARDCODEDTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("LAST_SEEN_ON_HARDCODED_TS"))), refVal_setLASTSEENONHARDCODEDTS );
        setLASTSEENONHARDCODEDTS(refVal_setLASTSEENONHARDCODEDTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("LAST_SEEN_ON_INDEX_COMPOSITION_TS"))))
    {
        int32_t refVal_setLASTSEENONINDEXCOMPOSITIONTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("LAST_SEEN_ON_INDEX_COMPOSITION_TS"))), refVal_setLASTSEENONINDEXCOMPOSITIONTS );
        setLASTSEENONINDEXCOMPOSITIONTS(refVal_setLASTSEENONINDEXCOMPOSITIONTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("LAST_SEEN_ON_NSQ_TS"))))
    {
        int32_t refVal_setLASTSEENONNSQTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("LAST_SEEN_ON_NSQ_TS"))), refVal_setLASTSEENONNSQTS );
        setLASTSEENONNSQTS(refVal_setLASTSEENONNSQTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("LAST_SEEN_ON_POLLING_TS"))))
    {
        int32_t refVal_setLASTSEENONPOLLINGTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("LAST_SEEN_ON_POLLING_TS"))), refVal_setLASTSEENONPOLLINGTS );
        setLASTSEENONPOLLINGTS(refVal_setLASTSEENONPOLLINGTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("LAST_SEEN_ON_STREAMING_TS"))))
    {
        int32_t refVal_setLASTSEENONSTREAMINGTS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("LAST_SEEN_ON_STREAMING_TS"))), refVal_setLASTSEENONSTREAMINGTS );
        setLASTSEENONSTREAMINGTS(refVal_setLASTSEENONSTREAMINGTS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_BACKFILL"))))
    {
        std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMBACKFILL;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_BACKFILL"))), refVal_setLASTTRADESPOTFROMBACKFILL );
        setLASTTRADESPOTFROMBACKFILL(refVal_setLASTTRADESPOTFROMBACKFILL);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL"))))
    {
        std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMBACKFILLEXTERNAL;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL"))), refVal_setLASTTRADESPOTFROMBACKFILLEXTERNAL );
        setLASTTRADESPOTFROMBACKFILLEXTERNAL(refVal_setLASTTRADESPOTFROMBACKFILLEXTERNAL);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_BLOB"))))
    {
        std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMBLOB;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_BLOB"))), refVal_setLASTTRADESPOTFROMBLOB );
        setLASTTRADESPOTFROMBLOB(refVal_setLASTTRADESPOTFROMBLOB);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL"))))
    {
        std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMBLOBEXTERNAL;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL"))), refVal_setLASTTRADESPOTFROMBLOBEXTERNAL );
        setLASTTRADESPOTFROMBLOBEXTERNAL(refVal_setLASTTRADESPOTFROMBLOBEXTERNAL);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_CALCULATED"))))
    {
        std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMCALCULATED;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_CALCULATED"))), refVal_setLASTTRADESPOTFROMCALCULATED );
        setLASTTRADESPOTFROMCALCULATED(refVal_setLASTTRADESPOTFROMCALCULATED);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL"))))
    {
        std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMCALCULATEDEXTERNAL;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL"))), refVal_setLASTTRADESPOTFROMCALCULATEDEXTERNAL );
        setLASTTRADESPOTFROMCALCULATEDEXTERNAL(refVal_setLASTTRADESPOTFROMCALCULATEDEXTERNAL);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_FIX"))))
    {
        std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMFIX;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_FIX"))), refVal_setLASTTRADESPOTFROMFIX );
        setLASTTRADESPOTFROMFIX(refVal_setLASTTRADESPOTFROMFIX);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_FIX_EXTERNAL"))))
    {
        std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMFIXEXTERNAL;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_FIX_EXTERNAL"))), refVal_setLASTTRADESPOTFROMFIXEXTERNAL );
        setLASTTRADESPOTFROMFIXEXTERNAL(refVal_setLASTTRADESPOTFROMFIXEXTERNAL);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_GO"))))
    {
        std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMGO;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_GO"))), refVal_setLASTTRADESPOTFROMGO );
        setLASTTRADESPOTFROMGO(refVal_setLASTTRADESPOTFROMGO);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_GO_EXTERNAL"))))
    {
        std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMGOEXTERNAL;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_GO_EXTERNAL"))), refVal_setLASTTRADESPOTFROMGOEXTERNAL );
        setLASTTRADESPOTFROMGOEXTERNAL(refVal_setLASTTRADESPOTFROMGOEXTERNAL);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_POLLING"))))
    {
        std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMPOLLING;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_POLLING"))), refVal_setLASTTRADESPOTFROMPOLLING );
        setLASTTRADESPOTFROMPOLLING(refVal_setLASTTRADESPOTFROMPOLLING);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL"))))
    {
        std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMPOLLINGEXTERNAL;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL"))), refVal_setLASTTRADESPOTFROMPOLLINGEXTERNAL );
        setLASTTRADESPOTFROMPOLLINGEXTERNAL(refVal_setLASTTRADESPOTFROMPOLLINGEXTERNAL);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_STREAMING"))))
    {
        std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMSTREAMING;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_STREAMING"))), refVal_setLASTTRADESPOTFROMSTREAMING );
        setLASTTRADESPOTFROMSTREAMING(refVal_setLASTTRADESPOTFROMSTREAMING);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL"))))
    {
        std::shared_ptr<Object> refVal_setLASTTRADESPOTFROMSTREAMINGEXTERNAL;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL"))), refVal_setLASTTRADESPOTFROMSTREAMINGEXTERNAL );
        setLASTTRADESPOTFROMSTREAMINGEXTERNAL(refVal_setLASTTRADESPOTFROMSTREAMINGEXTERNAL);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("METADATA_VERSION"))))
    {
        int32_t refVal_setMETADATAVERSION;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("METADATA_VERSION"))), refVal_setMETADATAVERSION );
        setMETADATAVERSION(refVal_setMETADATAVERSION);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("PROCESSING_TRADES_FROM_BLOB_STATUS"))))
    {
        utility::string_t refVal_setPROCESSINGTRADESFROMBLOBSTATUS;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("PROCESSING_TRADES_FROM_BLOB_STATUS"))), refVal_setPROCESSINGTRADESFROMBLOBSTATUS );
        setPROCESSINGTRADESFROMBLOBSTATUS(refVal_setPROCESSINGTRADESFROMBLOBSTATUS);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("TOTAL_TRADES_SPOT"))))
    {
        int32_t refVal_setTOTALTRADESSPOT;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("TOTAL_TRADES_SPOT"))), refVal_setTOTALTRADESSPOT );
        setTOTALTRADESSPOT(refVal_setTOTALTRADESSPOT);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA"))))
    {
        std::shared_ptr<Object> refVal_setUNSTRUCTUREDTRADESPOTFROMBACKFILLINTERNALDATA;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA"))), refVal_setUNSTRUCTUREDTRADESPOTFROMBACKFILLINTERNALDATA );
        setUNSTRUCTUREDTRADESPOTFROMBACKFILLINTERNALDATA(refVal_setUNSTRUCTUREDTRADESPOTFROMBACKFILLINTERNALDATA);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA"))))
    {
        std::shared_ptr<Object> refVal_setUNSTRUCTUREDTRADESPOTFROMBLOBINTERNALDATA;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA"))), refVal_setUNSTRUCTUREDTRADESPOTFROMBLOBINTERNALDATA );
        setUNSTRUCTUREDTRADESPOTFROMBLOBINTERNALDATA(refVal_setUNSTRUCTUREDTRADESPOTFROMBLOBINTERNALDATA);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA"))))
    {
        std::shared_ptr<Object> refVal_setUNSTRUCTUREDTRADESPOTFROMCALCULATEDINTERNALDATA;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA"))), refVal_setUNSTRUCTUREDTRADESPOTFROMCALCULATEDINTERNALDATA );
        setUNSTRUCTUREDTRADESPOTFROMCALCULATEDINTERNALDATA(refVal_setUNSTRUCTUREDTRADESPOTFROMCALCULATEDINTERNALDATA);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA"))))
    {
        std::shared_ptr<Object> refVal_setUNSTRUCTUREDTRADESPOTFROMFIXINTERNALDATA;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA"))), refVal_setUNSTRUCTUREDTRADESPOTFROMFIXINTERNALDATA );
        setUNSTRUCTUREDTRADESPOTFROMFIXINTERNALDATA(refVal_setUNSTRUCTUREDTRADESPOTFROMFIXINTERNALDATA);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA"))))
    {
        std::shared_ptr<Object> refVal_setUNSTRUCTUREDTRADESPOTFROMGOINTERNALDATA;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA"))), refVal_setUNSTRUCTUREDTRADESPOTFROMGOINTERNALDATA );
        setUNSTRUCTUREDTRADESPOTFROMGOINTERNALDATA(refVal_setUNSTRUCTUREDTRADESPOTFROMGOINTERNALDATA);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA"))))
    {
        std::shared_ptr<Object> refVal_setUNSTRUCTUREDTRADESPOTFROMPOLLINGINTERNALDATA;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA"))), refVal_setUNSTRUCTUREDTRADESPOTFROMPOLLINGINTERNALDATA );
        setUNSTRUCTUREDTRADESPOTFROMPOLLINGINTERNALDATA(refVal_setUNSTRUCTUREDTRADESPOTFROMPOLLINGINTERNALDATA);
    }
    if(multipart->hasContent(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA"))))
    {
        std::shared_ptr<Object> refVal_setUNSTRUCTUREDTRADESPOTFROMSTREAMINGINTERNALDATA;
        ok &= ModelBase::fromHttpContent(multipart->getContent(utility::conversions::to_string_t(U("UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA"))), refVal_setUNSTRUCTUREDTRADESPOTFROMSTREAMINGINTERNALDATA );
        setUNSTRUCTUREDTRADESPOTFROMSTREAMINGINTERNALDATA(refVal_setUNSTRUCTUREDTRADESPOTFROMSTREAMINGINTERNALDATA);
    }
    return ok;
}

int32_t SPOT_INSTRUMENT_METADATA::getFIRSTSEENONBLOBTS() const
{
    return m_FIRST_SEEN_ON_BLOB_TS;
}

void SPOT_INSTRUMENT_METADATA::setFIRSTSEENONBLOBTS(int32_t value)
{
    m_FIRST_SEEN_ON_BLOB_TS = value;
    m_FIRST_SEEN_ON_BLOB_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::fIRSTSEENONBLOBTSIsSet() const
{
    return m_FIRST_SEEN_ON_BLOB_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetFIRST_SEEN_ON_BLOB_TS()
{
    m_FIRST_SEEN_ON_BLOB_TSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getFIRSTSEENONFIXTS() const
{
    return m_FIRST_SEEN_ON_FIX_TS;
}

void SPOT_INSTRUMENT_METADATA::setFIRSTSEENONFIXTS(int32_t value)
{
    m_FIRST_SEEN_ON_FIX_TS = value;
    m_FIRST_SEEN_ON_FIX_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::fIRSTSEENONFIXTSIsSet() const
{
    return m_FIRST_SEEN_ON_FIX_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetFIRST_SEEN_ON_FIX_TS()
{
    m_FIRST_SEEN_ON_FIX_TSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getFIRSTSEENONHARDCODEDTS() const
{
    return m_FIRST_SEEN_ON_HARDCODED_TS;
}

void SPOT_INSTRUMENT_METADATA::setFIRSTSEENONHARDCODEDTS(int32_t value)
{
    m_FIRST_SEEN_ON_HARDCODED_TS = value;
    m_FIRST_SEEN_ON_HARDCODED_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::fIRSTSEENONHARDCODEDTSIsSet() const
{
    return m_FIRST_SEEN_ON_HARDCODED_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetFIRST_SEEN_ON_HARDCODED_TS()
{
    m_FIRST_SEEN_ON_HARDCODED_TSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getFIRSTSEENONINDEXCOMPOSITIONTS() const
{
    return m_FIRST_SEEN_ON_INDEX_COMPOSITION_TS;
}

void SPOT_INSTRUMENT_METADATA::setFIRSTSEENONINDEXCOMPOSITIONTS(int32_t value)
{
    m_FIRST_SEEN_ON_INDEX_COMPOSITION_TS = value;
    m_FIRST_SEEN_ON_INDEX_COMPOSITION_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::fIRSTSEENONINDEXCOMPOSITIONTSIsSet() const
{
    return m_FIRST_SEEN_ON_INDEX_COMPOSITION_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetFIRST_SEEN_ON_INDEX_COMPOSITION_TS()
{
    m_FIRST_SEEN_ON_INDEX_COMPOSITION_TSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getFIRSTSEENONNSQTS() const
{
    return m_FIRST_SEEN_ON_NSQ_TS;
}

void SPOT_INSTRUMENT_METADATA::setFIRSTSEENONNSQTS(int32_t value)
{
    m_FIRST_SEEN_ON_NSQ_TS = value;
    m_FIRST_SEEN_ON_NSQ_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::fIRSTSEENONNSQTSIsSet() const
{
    return m_FIRST_SEEN_ON_NSQ_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetFIRST_SEEN_ON_NSQ_TS()
{
    m_FIRST_SEEN_ON_NSQ_TSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getFIRSTSEENONPOLLINGTS() const
{
    return m_FIRST_SEEN_ON_POLLING_TS;
}

void SPOT_INSTRUMENT_METADATA::setFIRSTSEENONPOLLINGTS(int32_t value)
{
    m_FIRST_SEEN_ON_POLLING_TS = value;
    m_FIRST_SEEN_ON_POLLING_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::fIRSTSEENONPOLLINGTSIsSet() const
{
    return m_FIRST_SEEN_ON_POLLING_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetFIRST_SEEN_ON_POLLING_TS()
{
    m_FIRST_SEEN_ON_POLLING_TSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getFIRSTSEENONSTREAMINGTS() const
{
    return m_FIRST_SEEN_ON_STREAMING_TS;
}

void SPOT_INSTRUMENT_METADATA::setFIRSTSEENONSTREAMINGTS(int32_t value)
{
    m_FIRST_SEEN_ON_STREAMING_TS = value;
    m_FIRST_SEEN_ON_STREAMING_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::fIRSTSEENONSTREAMINGTSIsSet() const
{
    return m_FIRST_SEEN_ON_STREAMING_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetFIRST_SEEN_ON_STREAMING_TS()
{
    m_FIRST_SEEN_ON_STREAMING_TSIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getFIRSTTRADESPOTFROMBACKFILL() const
{
    return m_FIRST_TRADE_SPOT_FROM_BACKFILL;
}

void SPOT_INSTRUMENT_METADATA::setFIRSTTRADESPOTFROMBACKFILL(const std::shared_ptr<Object>& value)
{
    m_FIRST_TRADE_SPOT_FROM_BACKFILL = value;
    m_FIRST_TRADE_SPOT_FROM_BACKFILLIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::fIRSTTRADESPOTFROMBACKFILLIsSet() const
{
    return m_FIRST_TRADE_SPOT_FROM_BACKFILLIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetFIRST_TRADE_SPOT_FROM_BACKFILL()
{
    m_FIRST_TRADE_SPOT_FROM_BACKFILLIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getFIRSTTRADESPOTFROMBACKFILLEXTERNAL() const
{
    return m_FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL;
}

void SPOT_INSTRUMENT_METADATA::setFIRSTTRADESPOTFROMBACKFILLEXTERNAL(const std::shared_ptr<Object>& value)
{
    m_FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL = value;
    m_FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNALIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::fIRSTTRADESPOTFROMBACKFILLEXTERNALIsSet() const
{
    return m_FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNALIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetFIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL()
{
    m_FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNALIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getFIRSTTRADESPOTFROMBLOB() const
{
    return m_FIRST_TRADE_SPOT_FROM_BLOB;
}

void SPOT_INSTRUMENT_METADATA::setFIRSTTRADESPOTFROMBLOB(const std::shared_ptr<Object>& value)
{
    m_FIRST_TRADE_SPOT_FROM_BLOB = value;
    m_FIRST_TRADE_SPOT_FROM_BLOBIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::fIRSTTRADESPOTFROMBLOBIsSet() const
{
    return m_FIRST_TRADE_SPOT_FROM_BLOBIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetFIRST_TRADE_SPOT_FROM_BLOB()
{
    m_FIRST_TRADE_SPOT_FROM_BLOBIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getFIRSTTRADESPOTFROMBLOBEXTERNAL() const
{
    return m_FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL;
}

void SPOT_INSTRUMENT_METADATA::setFIRSTTRADESPOTFROMBLOBEXTERNAL(const std::shared_ptr<Object>& value)
{
    m_FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL = value;
    m_FIRST_TRADE_SPOT_FROM_BLOB_EXTERNALIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::fIRSTTRADESPOTFROMBLOBEXTERNALIsSet() const
{
    return m_FIRST_TRADE_SPOT_FROM_BLOB_EXTERNALIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetFIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL()
{
    m_FIRST_TRADE_SPOT_FROM_BLOB_EXTERNALIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getFIRSTTRADESPOTFROMCALCULATED() const
{
    return m_FIRST_TRADE_SPOT_FROM_CALCULATED;
}

void SPOT_INSTRUMENT_METADATA::setFIRSTTRADESPOTFROMCALCULATED(const std::shared_ptr<Object>& value)
{
    m_FIRST_TRADE_SPOT_FROM_CALCULATED = value;
    m_FIRST_TRADE_SPOT_FROM_CALCULATEDIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::fIRSTTRADESPOTFROMCALCULATEDIsSet() const
{
    return m_FIRST_TRADE_SPOT_FROM_CALCULATEDIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetFIRST_TRADE_SPOT_FROM_CALCULATED()
{
    m_FIRST_TRADE_SPOT_FROM_CALCULATEDIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getFIRSTTRADESPOTFROMCALCULATEDEXTERNAL() const
{
    return m_FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL;
}

void SPOT_INSTRUMENT_METADATA::setFIRSTTRADESPOTFROMCALCULATEDEXTERNAL(const std::shared_ptr<Object>& value)
{
    m_FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL = value;
    m_FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNALIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::fIRSTTRADESPOTFROMCALCULATEDEXTERNALIsSet() const
{
    return m_FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNALIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetFIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL()
{
    m_FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNALIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getFIRSTTRADESPOTFROMFIX() const
{
    return m_FIRST_TRADE_SPOT_FROM_FIX;
}

void SPOT_INSTRUMENT_METADATA::setFIRSTTRADESPOTFROMFIX(const std::shared_ptr<Object>& value)
{
    m_FIRST_TRADE_SPOT_FROM_FIX = value;
    m_FIRST_TRADE_SPOT_FROM_FIXIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::fIRSTTRADESPOTFROMFIXIsSet() const
{
    return m_FIRST_TRADE_SPOT_FROM_FIXIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetFIRST_TRADE_SPOT_FROM_FIX()
{
    m_FIRST_TRADE_SPOT_FROM_FIXIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getFIRSTTRADESPOTFROMFIXEXTERNAL() const
{
    return m_FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL;
}

void SPOT_INSTRUMENT_METADATA::setFIRSTTRADESPOTFROMFIXEXTERNAL(const std::shared_ptr<Object>& value)
{
    m_FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL = value;
    m_FIRST_TRADE_SPOT_FROM_FIX_EXTERNALIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::fIRSTTRADESPOTFROMFIXEXTERNALIsSet() const
{
    return m_FIRST_TRADE_SPOT_FROM_FIX_EXTERNALIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetFIRST_TRADE_SPOT_FROM_FIX_EXTERNAL()
{
    m_FIRST_TRADE_SPOT_FROM_FIX_EXTERNALIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getFIRSTTRADESPOTFROMGO() const
{
    return m_FIRST_TRADE_SPOT_FROM_GO;
}

void SPOT_INSTRUMENT_METADATA::setFIRSTTRADESPOTFROMGO(const std::shared_ptr<Object>& value)
{
    m_FIRST_TRADE_SPOT_FROM_GO = value;
    m_FIRST_TRADE_SPOT_FROM_GOIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::fIRSTTRADESPOTFROMGOIsSet() const
{
    return m_FIRST_TRADE_SPOT_FROM_GOIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetFIRST_TRADE_SPOT_FROM_GO()
{
    m_FIRST_TRADE_SPOT_FROM_GOIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getFIRSTTRADESPOTFROMGOEXTERNAL() const
{
    return m_FIRST_TRADE_SPOT_FROM_GO_EXTERNAL;
}

void SPOT_INSTRUMENT_METADATA::setFIRSTTRADESPOTFROMGOEXTERNAL(const std::shared_ptr<Object>& value)
{
    m_FIRST_TRADE_SPOT_FROM_GO_EXTERNAL = value;
    m_FIRST_TRADE_SPOT_FROM_GO_EXTERNALIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::fIRSTTRADESPOTFROMGOEXTERNALIsSet() const
{
    return m_FIRST_TRADE_SPOT_FROM_GO_EXTERNALIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetFIRST_TRADE_SPOT_FROM_GO_EXTERNAL()
{
    m_FIRST_TRADE_SPOT_FROM_GO_EXTERNALIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getFIRSTTRADESPOTFROMPOLLING() const
{
    return m_FIRST_TRADE_SPOT_FROM_POLLING;
}

void SPOT_INSTRUMENT_METADATA::setFIRSTTRADESPOTFROMPOLLING(const std::shared_ptr<Object>& value)
{
    m_FIRST_TRADE_SPOT_FROM_POLLING = value;
    m_FIRST_TRADE_SPOT_FROM_POLLINGIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::fIRSTTRADESPOTFROMPOLLINGIsSet() const
{
    return m_FIRST_TRADE_SPOT_FROM_POLLINGIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetFIRST_TRADE_SPOT_FROM_POLLING()
{
    m_FIRST_TRADE_SPOT_FROM_POLLINGIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getFIRSTTRADESPOTFROMPOLLINGEXTERNAL() const
{
    return m_FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL;
}

void SPOT_INSTRUMENT_METADATA::setFIRSTTRADESPOTFROMPOLLINGEXTERNAL(const std::shared_ptr<Object>& value)
{
    m_FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL = value;
    m_FIRST_TRADE_SPOT_FROM_POLLING_EXTERNALIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::fIRSTTRADESPOTFROMPOLLINGEXTERNALIsSet() const
{
    return m_FIRST_TRADE_SPOT_FROM_POLLING_EXTERNALIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetFIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL()
{
    m_FIRST_TRADE_SPOT_FROM_POLLING_EXTERNALIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getFIRSTTRADESPOTFROMSTREAMING() const
{
    return m_FIRST_TRADE_SPOT_FROM_STREAMING;
}

void SPOT_INSTRUMENT_METADATA::setFIRSTTRADESPOTFROMSTREAMING(const std::shared_ptr<Object>& value)
{
    m_FIRST_TRADE_SPOT_FROM_STREAMING = value;
    m_FIRST_TRADE_SPOT_FROM_STREAMINGIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::fIRSTTRADESPOTFROMSTREAMINGIsSet() const
{
    return m_FIRST_TRADE_SPOT_FROM_STREAMINGIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetFIRST_TRADE_SPOT_FROM_STREAMING()
{
    m_FIRST_TRADE_SPOT_FROM_STREAMINGIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getFIRSTTRADESPOTFROMSTREAMINGEXTERNAL() const
{
    return m_FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL;
}

void SPOT_INSTRUMENT_METADATA::setFIRSTTRADESPOTFROMSTREAMINGEXTERNAL(const std::shared_ptr<Object>& value)
{
    m_FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL = value;
    m_FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNALIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::fIRSTTRADESPOTFROMSTREAMINGEXTERNALIsSet() const
{
    return m_FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNALIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetFIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL()
{
    m_FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNALIsSet = false;
}
utility::string_t SPOT_INSTRUMENT_METADATA::getHOSTMIGRATIONDESTINATION() const
{
    return m_HOST_MIGRATION_DESTINATION;
}

void SPOT_INSTRUMENT_METADATA::setHOSTMIGRATIONDESTINATION(const utility::string_t& value)
{
    m_HOST_MIGRATION_DESTINATION = value;
    m_HOST_MIGRATION_DESTINATIONIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::hOSTMIGRATIONDESTINATIONIsSet() const
{
    return m_HOST_MIGRATION_DESTINATIONIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetHOST_MIGRATION_DESTINATION()
{
    m_HOST_MIGRATION_DESTINATIONIsSet = false;
}
utility::string_t SPOT_INSTRUMENT_METADATA::getHOSTMIGRATIONSOURCE() const
{
    return m_HOST_MIGRATION_SOURCE;
}

void SPOT_INSTRUMENT_METADATA::setHOSTMIGRATIONSOURCE(const utility::string_t& value)
{
    m_HOST_MIGRATION_SOURCE = value;
    m_HOST_MIGRATION_SOURCEIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::hOSTMIGRATIONSOURCEIsSet() const
{
    return m_HOST_MIGRATION_SOURCEIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetHOST_MIGRATION_SOURCE()
{
    m_HOST_MIGRATION_SOURCEIsSet = false;
}
utility::string_t SPOT_INSTRUMENT_METADATA::getHOSTMIGRATIONSTATUS() const
{
    return m_HOST_MIGRATION_STATUS;
}

void SPOT_INSTRUMENT_METADATA::setHOSTMIGRATIONSTATUS(const utility::string_t& value)
{
    m_HOST_MIGRATION_STATUS = value;
    m_HOST_MIGRATION_STATUSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::hOSTMIGRATIONSTATUSIsSet() const
{
    return m_HOST_MIGRATION_STATUSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetHOST_MIGRATION_STATUS()
{
    m_HOST_MIGRATION_STATUSIsSet = false;
}
utility::string_t SPOT_INSTRUMENT_METADATA::getINSTRUMENT() const
{
    return m_INSTRUMENT;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENT(const utility::string_t& value)
{
    m_INSTRUMENT = value;
    m_INSTRUMENTIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTIsSet() const
{
    return m_INSTRUMENTIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT()
{
    m_INSTRUMENTIsSet = false;
}
utility::string_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTEXTERNALDATA() const
{
    return m_INSTRUMENT_EXTERNAL_DATA;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTEXTERNALDATA(const utility::string_t& value)
{
    m_INSTRUMENT_EXTERNAL_DATA = value;
    m_INSTRUMENT_EXTERNAL_DATAIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTEXTERNALDATAIsSet() const
{
    return m_INSTRUMENT_EXTERNAL_DATAIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_EXTERNAL_DATA()
{
    m_INSTRUMENT_EXTERNAL_DATAIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getINSTRUMENTMAPPING() const
{
    return m_INSTRUMENT_MAPPING;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTMAPPING(const std::shared_ptr<Object>& value)
{
    m_INSTRUMENT_MAPPING = value;
    m_INSTRUMENT_MAPPINGIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTMAPPINGIsSet() const
{
    return m_INSTRUMENT_MAPPINGIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_MAPPING()
{
    m_INSTRUMENT_MAPPINGIsSet = false;
}
std::vector<utility::string_t>& SPOT_INSTRUMENT_METADATA::getINSTRUMENTMAPPINGHISTORY()
{
    return m_INSTRUMENT_MAPPING_HISTORY;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTMAPPINGHISTORY(const std::vector<utility::string_t>& value)
{
    m_INSTRUMENT_MAPPING_HISTORY = value;
    m_INSTRUMENT_MAPPING_HISTORYIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTMAPPINGHISTORYIsSet() const
{
    return m_INSTRUMENT_MAPPING_HISTORYIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_MAPPING_HISTORY()
{
    m_INSTRUMENT_MAPPING_HISTORYIsSet = false;
}
utility::string_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTSOURCEBACKFILL() const
{
    return m_INSTRUMENT_SOURCE_BACKFILL;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTSOURCEBACKFILL(const utility::string_t& value)
{
    m_INSTRUMENT_SOURCE_BACKFILL = value;
    m_INSTRUMENT_SOURCE_BACKFILLIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTSOURCEBACKFILLIsSet() const
{
    return m_INSTRUMENT_SOURCE_BACKFILLIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_SOURCE_BACKFILL()
{
    m_INSTRUMENT_SOURCE_BACKFILLIsSet = false;
}
utility::string_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTSOURCEBLOB() const
{
    return m_INSTRUMENT_SOURCE_BLOB;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTSOURCEBLOB(const utility::string_t& value)
{
    m_INSTRUMENT_SOURCE_BLOB = value;
    m_INSTRUMENT_SOURCE_BLOBIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTSOURCEBLOBIsSet() const
{
    return m_INSTRUMENT_SOURCE_BLOBIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_SOURCE_BLOB()
{
    m_INSTRUMENT_SOURCE_BLOBIsSet = false;
}
utility::string_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTSOURCECALCULATED() const
{
    return m_INSTRUMENT_SOURCE_CALCULATED;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTSOURCECALCULATED(const utility::string_t& value)
{
    m_INSTRUMENT_SOURCE_CALCULATED = value;
    m_INSTRUMENT_SOURCE_CALCULATEDIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTSOURCECALCULATEDIsSet() const
{
    return m_INSTRUMENT_SOURCE_CALCULATEDIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_SOURCE_CALCULATED()
{
    m_INSTRUMENT_SOURCE_CALCULATEDIsSet = false;
}
utility::string_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTSOURCEFIX() const
{
    return m_INSTRUMENT_SOURCE_FIX;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTSOURCEFIX(const utility::string_t& value)
{
    m_INSTRUMENT_SOURCE_FIX = value;
    m_INSTRUMENT_SOURCE_FIXIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTSOURCEFIXIsSet() const
{
    return m_INSTRUMENT_SOURCE_FIXIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_SOURCE_FIX()
{
    m_INSTRUMENT_SOURCE_FIXIsSet = false;
}
utility::string_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTSOURCEGO() const
{
    return m_INSTRUMENT_SOURCE_GO;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTSOURCEGO(const utility::string_t& value)
{
    m_INSTRUMENT_SOURCE_GO = value;
    m_INSTRUMENT_SOURCE_GOIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTSOURCEGOIsSet() const
{
    return m_INSTRUMENT_SOURCE_GOIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_SOURCE_GO()
{
    m_INSTRUMENT_SOURCE_GOIsSet = false;
}
utility::string_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTSOURCEPOLLING() const
{
    return m_INSTRUMENT_SOURCE_POLLING;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTSOURCEPOLLING(const utility::string_t& value)
{
    m_INSTRUMENT_SOURCE_POLLING = value;
    m_INSTRUMENT_SOURCE_POLLINGIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTSOURCEPOLLINGIsSet() const
{
    return m_INSTRUMENT_SOURCE_POLLINGIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_SOURCE_POLLING()
{
    m_INSTRUMENT_SOURCE_POLLINGIsSet = false;
}
utility::string_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTSOURCESTREAMING() const
{
    return m_INSTRUMENT_SOURCE_STREAMING;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTSOURCESTREAMING(const utility::string_t& value)
{
    m_INSTRUMENT_SOURCE_STREAMING = value;
    m_INSTRUMENT_SOURCE_STREAMINGIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTSOURCESTREAMINGIsSet() const
{
    return m_INSTRUMENT_SOURCE_STREAMINGIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_SOURCE_STREAMING()
{
    m_INSTRUMENT_SOURCE_STREAMINGIsSet = false;
}
utility::string_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTSTATUS() const
{
    return m_INSTRUMENT_STATUS;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTSTATUS(const utility::string_t& value)
{
    m_INSTRUMENT_STATUS = value;
    m_INSTRUMENT_STATUSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTSTATUSIsSet() const
{
    return m_INSTRUMENT_STATUSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_STATUS()
{
    m_INSTRUMENT_STATUSIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMBACKFILLLASTPROXIEDRESTREQUEST() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMBACKFILLLASTPROXIEDRESTREQUEST(const std::shared_ptr<Object>& value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUESTIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMBACKFILLLASTPROXIEDRESTREQUESTIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUESTIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUESTIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTREQUESTTS() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTREQUESTTS(int32_t value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTREQUESTTSIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTRESPONSETS() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTRESPONSETS(int32_t value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMBACKFILLRESTURILASTRESPONSETSIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMBACKFILLRESTURINEXTREQUESTTS() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMBACKFILLRESTURINEXTREQUESTTS(int32_t value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMBACKFILLRESTURINEXTREQUESTTSIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TSIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMBLOBLASTPROXIEDRESTREQUEST() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMBLOBLASTPROXIEDRESTREQUEST(const std::shared_ptr<Object>& value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUESTIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMBLOBLASTPROXIEDRESTREQUESTIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUESTIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUESTIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMBLOBRESTURILASTREQUESTTS() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMBLOBRESTURILASTREQUESTTS(int32_t value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMBLOBRESTURILASTREQUESTTSIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMBLOBRESTURILASTRESPONSETS() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMBLOBRESTURILASTRESPONSETS(int32_t value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMBLOBRESTURILASTRESPONSETSIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMBLOBRESTURINEXTREQUESTTS() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMBLOBRESTURINEXTREQUESTTS(int32_t value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMBLOBRESTURINEXTREQUESTTSIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TSIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMCALCULATEDLASTPROXIEDRESTREQUEST() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMCALCULATEDLASTPROXIEDRESTREQUEST(const std::shared_ptr<Object>& value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUESTIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMCALCULATEDLASTPROXIEDRESTREQUESTIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUESTIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUESTIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTREQUESTTS() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTREQUESTTS(int32_t value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTREQUESTTSIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTRESPONSETS() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTRESPONSETS(int32_t value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMCALCULATEDRESTURILASTRESPONSETSIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMCALCULATEDRESTURINEXTREQUESTTS() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMCALCULATEDRESTURINEXTREQUESTTS(int32_t value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMCALCULATEDRESTURINEXTREQUESTTSIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TSIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMFIXLASTPROXIEDRESTREQUEST() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMFIXLASTPROXIEDRESTREQUEST(const std::shared_ptr<Object>& value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUESTIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMFIXLASTPROXIEDRESTREQUESTIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUESTIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUESTIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMFIXRESTURILASTREQUESTTS() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMFIXRESTURILASTREQUESTTS(int32_t value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMFIXRESTURILASTREQUESTTSIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMFIXRESTURILASTRESPONSETS() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMFIXRESTURILASTRESPONSETS(int32_t value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMFIXRESTURILASTRESPONSETSIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMFIXRESTURINEXTREQUESTTS() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMFIXRESTURINEXTREQUESTTS(int32_t value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMFIXRESTURINEXTREQUESTTSIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TSIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMGOLASTPROXIEDRESTREQUEST() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMGOLASTPROXIEDRESTREQUEST(const std::shared_ptr<Object>& value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUESTIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMGOLASTPROXIEDRESTREQUESTIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUESTIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUESTIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMGORESTURILASTREQUESTTS() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMGORESTURILASTREQUESTTS(int32_t value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMGORESTURILASTREQUESTTSIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMGORESTURILASTRESPONSETS() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMGORESTURILASTRESPONSETS(int32_t value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMGORESTURILASTRESPONSETSIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMGORESTURINEXTREQUESTTS() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMGORESTURINEXTREQUESTTS(int32_t value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMGORESTURINEXTREQUESTTSIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TSIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMPOLLINGLASTPROXIEDRESTREQUEST() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMPOLLINGLASTPROXIEDRESTREQUEST(const std::shared_ptr<Object>& value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUESTIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMPOLLINGLASTPROXIEDRESTREQUESTIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUESTIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUESTIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTREQUESTTS() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTREQUESTTS(int32_t value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTREQUESTTSIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTRESPONSETS() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTRESPONSETS(int32_t value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMPOLLINGRESTURILASTRESPONSETSIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMPOLLINGRESTURINEXTREQUESTTS() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMPOLLINGRESTURINEXTREQUESTTS(int32_t value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMPOLLINGRESTURINEXTREQUESTTSIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TSIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMSTREAMINGLASTPROXIEDRESTREQUEST() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMSTREAMINGLASTPROXIEDRESTREQUEST(const std::shared_ptr<Object>& value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUESTIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMSTREAMINGLASTPROXIEDRESTREQUESTIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUESTIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUESTIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTREQUESTTS() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTREQUESTTS(int32_t value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTREQUESTTSIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTRESPONSETS() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTRESPONSETS(int32_t value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMSTREAMINGRESTURILASTRESPONSETSIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTFROMSTREAMINGRESTURINEXTREQUESTTS() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTFROMSTREAMINGRESTURINEXTREQUESTTS(int32_t value)
{
    m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS = value;
    m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTFROMSTREAMINGRESTURINEXTREQUESTTSIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS()
{
    m_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TSIsSet = false;
}
bool SPOT_INSTRUMENT_METADATA::isINSTRUMENTTRADESPOTISREADYFORSTREAMINGINTEGRATION() const
{
    return m_INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTISREADYFORSTREAMINGINTEGRATION(bool value)
{
    m_INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION = value;
    m_INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATIONIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTISREADYFORSTREAMINGINTEGRATIONIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATIONIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION()
{
    m_INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATIONIsSet = false;
}
utility::string_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTRESTURI() const
{
    return m_INSTRUMENT_TRADE_SPOT_REST_URI;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTRESTURI(const utility::string_t& value)
{
    m_INSTRUMENT_TRADE_SPOT_REST_URI = value;
    m_INSTRUMENT_TRADE_SPOT_REST_URIIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTRESTURIIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_REST_URIIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_REST_URI()
{
    m_INSTRUMENT_TRADE_SPOT_REST_URIIsSet = false;
}
utility::string_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTRESTURL() const
{
    return m_INSTRUMENT_TRADE_SPOT_REST_URL;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTRESTURL(const utility::string_t& value)
{
    m_INSTRUMENT_TRADE_SPOT_REST_URL = value;
    m_INSTRUMENT_TRADE_SPOT_REST_URLIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTRESTURLIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_REST_URLIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_REST_URL()
{
    m_INSTRUMENT_TRADE_SPOT_REST_URLIsSet = false;
}
utility::string_t SPOT_INSTRUMENT_METADATA::getINSTRUMENTTRADESPOTSTREAMINGSUBSCRIPTION() const
{
    return m_INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION;
}

void SPOT_INSTRUMENT_METADATA::setINSTRUMENTTRADESPOTSTREAMINGSUBSCRIPTION(const utility::string_t& value)
{
    m_INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION = value;
    m_INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTIONIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::iNSTRUMENTTRADESPOTSTREAMINGSUBSCRIPTIONIsSet() const
{
    return m_INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTIONIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetINSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION()
{
    m_INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTIONIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getLASTCONCURRENTBATCHOFTRADESSPOTMS() const
{
    return m_LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS;
}

void SPOT_INSTRUMENT_METADATA::setLASTCONCURRENTBATCHOFTRADESSPOTMS(int32_t value)
{
    m_LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS = value;
    m_LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::lASTCONCURRENTBATCHOFTRADESSPOTMSIsSet() const
{
    return m_LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetLAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS()
{
    m_LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getLASTSEENONBLOBTS() const
{
    return m_LAST_SEEN_ON_BLOB_TS;
}

void SPOT_INSTRUMENT_METADATA::setLASTSEENONBLOBTS(int32_t value)
{
    m_LAST_SEEN_ON_BLOB_TS = value;
    m_LAST_SEEN_ON_BLOB_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::lASTSEENONBLOBTSIsSet() const
{
    return m_LAST_SEEN_ON_BLOB_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetLAST_SEEN_ON_BLOB_TS()
{
    m_LAST_SEEN_ON_BLOB_TSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getLASTSEENONFIXTS() const
{
    return m_LAST_SEEN_ON_FIX_TS;
}

void SPOT_INSTRUMENT_METADATA::setLASTSEENONFIXTS(int32_t value)
{
    m_LAST_SEEN_ON_FIX_TS = value;
    m_LAST_SEEN_ON_FIX_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::lASTSEENONFIXTSIsSet() const
{
    return m_LAST_SEEN_ON_FIX_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetLAST_SEEN_ON_FIX_TS()
{
    m_LAST_SEEN_ON_FIX_TSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getLASTSEENONHARDCODEDTS() const
{
    return m_LAST_SEEN_ON_HARDCODED_TS;
}

void SPOT_INSTRUMENT_METADATA::setLASTSEENONHARDCODEDTS(int32_t value)
{
    m_LAST_SEEN_ON_HARDCODED_TS = value;
    m_LAST_SEEN_ON_HARDCODED_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::lASTSEENONHARDCODEDTSIsSet() const
{
    return m_LAST_SEEN_ON_HARDCODED_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetLAST_SEEN_ON_HARDCODED_TS()
{
    m_LAST_SEEN_ON_HARDCODED_TSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getLASTSEENONINDEXCOMPOSITIONTS() const
{
    return m_LAST_SEEN_ON_INDEX_COMPOSITION_TS;
}

void SPOT_INSTRUMENT_METADATA::setLASTSEENONINDEXCOMPOSITIONTS(int32_t value)
{
    m_LAST_SEEN_ON_INDEX_COMPOSITION_TS = value;
    m_LAST_SEEN_ON_INDEX_COMPOSITION_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::lASTSEENONINDEXCOMPOSITIONTSIsSet() const
{
    return m_LAST_SEEN_ON_INDEX_COMPOSITION_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetLAST_SEEN_ON_INDEX_COMPOSITION_TS()
{
    m_LAST_SEEN_ON_INDEX_COMPOSITION_TSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getLASTSEENONNSQTS() const
{
    return m_LAST_SEEN_ON_NSQ_TS;
}

void SPOT_INSTRUMENT_METADATA::setLASTSEENONNSQTS(int32_t value)
{
    m_LAST_SEEN_ON_NSQ_TS = value;
    m_LAST_SEEN_ON_NSQ_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::lASTSEENONNSQTSIsSet() const
{
    return m_LAST_SEEN_ON_NSQ_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetLAST_SEEN_ON_NSQ_TS()
{
    m_LAST_SEEN_ON_NSQ_TSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getLASTSEENONPOLLINGTS() const
{
    return m_LAST_SEEN_ON_POLLING_TS;
}

void SPOT_INSTRUMENT_METADATA::setLASTSEENONPOLLINGTS(int32_t value)
{
    m_LAST_SEEN_ON_POLLING_TS = value;
    m_LAST_SEEN_ON_POLLING_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::lASTSEENONPOLLINGTSIsSet() const
{
    return m_LAST_SEEN_ON_POLLING_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetLAST_SEEN_ON_POLLING_TS()
{
    m_LAST_SEEN_ON_POLLING_TSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getLASTSEENONSTREAMINGTS() const
{
    return m_LAST_SEEN_ON_STREAMING_TS;
}

void SPOT_INSTRUMENT_METADATA::setLASTSEENONSTREAMINGTS(int32_t value)
{
    m_LAST_SEEN_ON_STREAMING_TS = value;
    m_LAST_SEEN_ON_STREAMING_TSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::lASTSEENONSTREAMINGTSIsSet() const
{
    return m_LAST_SEEN_ON_STREAMING_TSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetLAST_SEEN_ON_STREAMING_TS()
{
    m_LAST_SEEN_ON_STREAMING_TSIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getLASTTRADESPOTFROMBACKFILL() const
{
    return m_LAST_TRADE_SPOT_FROM_BACKFILL;
}

void SPOT_INSTRUMENT_METADATA::setLASTTRADESPOTFROMBACKFILL(const std::shared_ptr<Object>& value)
{
    m_LAST_TRADE_SPOT_FROM_BACKFILL = value;
    m_LAST_TRADE_SPOT_FROM_BACKFILLIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::lASTTRADESPOTFROMBACKFILLIsSet() const
{
    return m_LAST_TRADE_SPOT_FROM_BACKFILLIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetLAST_TRADE_SPOT_FROM_BACKFILL()
{
    m_LAST_TRADE_SPOT_FROM_BACKFILLIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getLASTTRADESPOTFROMBACKFILLEXTERNAL() const
{
    return m_LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL;
}

void SPOT_INSTRUMENT_METADATA::setLASTTRADESPOTFROMBACKFILLEXTERNAL(const std::shared_ptr<Object>& value)
{
    m_LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL = value;
    m_LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNALIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::lASTTRADESPOTFROMBACKFILLEXTERNALIsSet() const
{
    return m_LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNALIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetLAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL()
{
    m_LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNALIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getLASTTRADESPOTFROMBLOB() const
{
    return m_LAST_TRADE_SPOT_FROM_BLOB;
}

void SPOT_INSTRUMENT_METADATA::setLASTTRADESPOTFROMBLOB(const std::shared_ptr<Object>& value)
{
    m_LAST_TRADE_SPOT_FROM_BLOB = value;
    m_LAST_TRADE_SPOT_FROM_BLOBIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::lASTTRADESPOTFROMBLOBIsSet() const
{
    return m_LAST_TRADE_SPOT_FROM_BLOBIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetLAST_TRADE_SPOT_FROM_BLOB()
{
    m_LAST_TRADE_SPOT_FROM_BLOBIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getLASTTRADESPOTFROMBLOBEXTERNAL() const
{
    return m_LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL;
}

void SPOT_INSTRUMENT_METADATA::setLASTTRADESPOTFROMBLOBEXTERNAL(const std::shared_ptr<Object>& value)
{
    m_LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL = value;
    m_LAST_TRADE_SPOT_FROM_BLOB_EXTERNALIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::lASTTRADESPOTFROMBLOBEXTERNALIsSet() const
{
    return m_LAST_TRADE_SPOT_FROM_BLOB_EXTERNALIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetLAST_TRADE_SPOT_FROM_BLOB_EXTERNAL()
{
    m_LAST_TRADE_SPOT_FROM_BLOB_EXTERNALIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getLASTTRADESPOTFROMCALCULATED() const
{
    return m_LAST_TRADE_SPOT_FROM_CALCULATED;
}

void SPOT_INSTRUMENT_METADATA::setLASTTRADESPOTFROMCALCULATED(const std::shared_ptr<Object>& value)
{
    m_LAST_TRADE_SPOT_FROM_CALCULATED = value;
    m_LAST_TRADE_SPOT_FROM_CALCULATEDIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::lASTTRADESPOTFROMCALCULATEDIsSet() const
{
    return m_LAST_TRADE_SPOT_FROM_CALCULATEDIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetLAST_TRADE_SPOT_FROM_CALCULATED()
{
    m_LAST_TRADE_SPOT_FROM_CALCULATEDIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getLASTTRADESPOTFROMCALCULATEDEXTERNAL() const
{
    return m_LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL;
}

void SPOT_INSTRUMENT_METADATA::setLASTTRADESPOTFROMCALCULATEDEXTERNAL(const std::shared_ptr<Object>& value)
{
    m_LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL = value;
    m_LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNALIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::lASTTRADESPOTFROMCALCULATEDEXTERNALIsSet() const
{
    return m_LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNALIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetLAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL()
{
    m_LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNALIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getLASTTRADESPOTFROMFIX() const
{
    return m_LAST_TRADE_SPOT_FROM_FIX;
}

void SPOT_INSTRUMENT_METADATA::setLASTTRADESPOTFROMFIX(const std::shared_ptr<Object>& value)
{
    m_LAST_TRADE_SPOT_FROM_FIX = value;
    m_LAST_TRADE_SPOT_FROM_FIXIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::lASTTRADESPOTFROMFIXIsSet() const
{
    return m_LAST_TRADE_SPOT_FROM_FIXIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetLAST_TRADE_SPOT_FROM_FIX()
{
    m_LAST_TRADE_SPOT_FROM_FIXIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getLASTTRADESPOTFROMFIXEXTERNAL() const
{
    return m_LAST_TRADE_SPOT_FROM_FIX_EXTERNAL;
}

void SPOT_INSTRUMENT_METADATA::setLASTTRADESPOTFROMFIXEXTERNAL(const std::shared_ptr<Object>& value)
{
    m_LAST_TRADE_SPOT_FROM_FIX_EXTERNAL = value;
    m_LAST_TRADE_SPOT_FROM_FIX_EXTERNALIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::lASTTRADESPOTFROMFIXEXTERNALIsSet() const
{
    return m_LAST_TRADE_SPOT_FROM_FIX_EXTERNALIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetLAST_TRADE_SPOT_FROM_FIX_EXTERNAL()
{
    m_LAST_TRADE_SPOT_FROM_FIX_EXTERNALIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getLASTTRADESPOTFROMGO() const
{
    return m_LAST_TRADE_SPOT_FROM_GO;
}

void SPOT_INSTRUMENT_METADATA::setLASTTRADESPOTFROMGO(const std::shared_ptr<Object>& value)
{
    m_LAST_TRADE_SPOT_FROM_GO = value;
    m_LAST_TRADE_SPOT_FROM_GOIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::lASTTRADESPOTFROMGOIsSet() const
{
    return m_LAST_TRADE_SPOT_FROM_GOIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetLAST_TRADE_SPOT_FROM_GO()
{
    m_LAST_TRADE_SPOT_FROM_GOIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getLASTTRADESPOTFROMGOEXTERNAL() const
{
    return m_LAST_TRADE_SPOT_FROM_GO_EXTERNAL;
}

void SPOT_INSTRUMENT_METADATA::setLASTTRADESPOTFROMGOEXTERNAL(const std::shared_ptr<Object>& value)
{
    m_LAST_TRADE_SPOT_FROM_GO_EXTERNAL = value;
    m_LAST_TRADE_SPOT_FROM_GO_EXTERNALIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::lASTTRADESPOTFROMGOEXTERNALIsSet() const
{
    return m_LAST_TRADE_SPOT_FROM_GO_EXTERNALIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetLAST_TRADE_SPOT_FROM_GO_EXTERNAL()
{
    m_LAST_TRADE_SPOT_FROM_GO_EXTERNALIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getLASTTRADESPOTFROMPOLLING() const
{
    return m_LAST_TRADE_SPOT_FROM_POLLING;
}

void SPOT_INSTRUMENT_METADATA::setLASTTRADESPOTFROMPOLLING(const std::shared_ptr<Object>& value)
{
    m_LAST_TRADE_SPOT_FROM_POLLING = value;
    m_LAST_TRADE_SPOT_FROM_POLLINGIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::lASTTRADESPOTFROMPOLLINGIsSet() const
{
    return m_LAST_TRADE_SPOT_FROM_POLLINGIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetLAST_TRADE_SPOT_FROM_POLLING()
{
    m_LAST_TRADE_SPOT_FROM_POLLINGIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getLASTTRADESPOTFROMPOLLINGEXTERNAL() const
{
    return m_LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL;
}

void SPOT_INSTRUMENT_METADATA::setLASTTRADESPOTFROMPOLLINGEXTERNAL(const std::shared_ptr<Object>& value)
{
    m_LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL = value;
    m_LAST_TRADE_SPOT_FROM_POLLING_EXTERNALIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::lASTTRADESPOTFROMPOLLINGEXTERNALIsSet() const
{
    return m_LAST_TRADE_SPOT_FROM_POLLING_EXTERNALIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetLAST_TRADE_SPOT_FROM_POLLING_EXTERNAL()
{
    m_LAST_TRADE_SPOT_FROM_POLLING_EXTERNALIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getLASTTRADESPOTFROMSTREAMING() const
{
    return m_LAST_TRADE_SPOT_FROM_STREAMING;
}

void SPOT_INSTRUMENT_METADATA::setLASTTRADESPOTFROMSTREAMING(const std::shared_ptr<Object>& value)
{
    m_LAST_TRADE_SPOT_FROM_STREAMING = value;
    m_LAST_TRADE_SPOT_FROM_STREAMINGIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::lASTTRADESPOTFROMSTREAMINGIsSet() const
{
    return m_LAST_TRADE_SPOT_FROM_STREAMINGIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetLAST_TRADE_SPOT_FROM_STREAMING()
{
    m_LAST_TRADE_SPOT_FROM_STREAMINGIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getLASTTRADESPOTFROMSTREAMINGEXTERNAL() const
{
    return m_LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL;
}

void SPOT_INSTRUMENT_METADATA::setLASTTRADESPOTFROMSTREAMINGEXTERNAL(const std::shared_ptr<Object>& value)
{
    m_LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL = value;
    m_LAST_TRADE_SPOT_FROM_STREAMING_EXTERNALIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::lASTTRADESPOTFROMSTREAMINGEXTERNALIsSet() const
{
    return m_LAST_TRADE_SPOT_FROM_STREAMING_EXTERNALIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetLAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL()
{
    m_LAST_TRADE_SPOT_FROM_STREAMING_EXTERNALIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getMETADATAVERSION() const
{
    return m_METADATA_VERSION;
}

void SPOT_INSTRUMENT_METADATA::setMETADATAVERSION(int32_t value)
{
    m_METADATA_VERSION = value;
    m_METADATA_VERSIONIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::mETADATAVERSIONIsSet() const
{
    return m_METADATA_VERSIONIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetMETADATA_VERSION()
{
    m_METADATA_VERSIONIsSet = false;
}
utility::string_t SPOT_INSTRUMENT_METADATA::getPROCESSINGTRADESFROMBLOBSTATUS() const
{
    return m_PROCESSING_TRADES_FROM_BLOB_STATUS;
}

void SPOT_INSTRUMENT_METADATA::setPROCESSINGTRADESFROMBLOBSTATUS(const utility::string_t& value)
{
    m_PROCESSING_TRADES_FROM_BLOB_STATUS = value;
    m_PROCESSING_TRADES_FROM_BLOB_STATUSIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::pROCESSINGTRADESFROMBLOBSTATUSIsSet() const
{
    return m_PROCESSING_TRADES_FROM_BLOB_STATUSIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetPROCESSING_TRADES_FROM_BLOB_STATUS()
{
    m_PROCESSING_TRADES_FROM_BLOB_STATUSIsSet = false;
}
int32_t SPOT_INSTRUMENT_METADATA::getTOTALTRADESSPOT() const
{
    return m_TOTAL_TRADES_SPOT;
}

void SPOT_INSTRUMENT_METADATA::setTOTALTRADESSPOT(int32_t value)
{
    m_TOTAL_TRADES_SPOT = value;
    m_TOTAL_TRADES_SPOTIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::tOTALTRADESSPOTIsSet() const
{
    return m_TOTAL_TRADES_SPOTIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetTOTAL_TRADES_SPOT()
{
    m_TOTAL_TRADES_SPOTIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getUNSTRUCTUREDTRADESPOTFROMBACKFILLINTERNALDATA() const
{
    return m_UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA;
}

void SPOT_INSTRUMENT_METADATA::setUNSTRUCTUREDTRADESPOTFROMBACKFILLINTERNALDATA(const std::shared_ptr<Object>& value)
{
    m_UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA = value;
    m_UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATAIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::uNSTRUCTUREDTRADESPOTFROMBACKFILLINTERNALDATAIsSet() const
{
    return m_UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATAIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetUNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA()
{
    m_UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATAIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getUNSTRUCTUREDTRADESPOTFROMBLOBINTERNALDATA() const
{
    return m_UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA;
}

void SPOT_INSTRUMENT_METADATA::setUNSTRUCTUREDTRADESPOTFROMBLOBINTERNALDATA(const std::shared_ptr<Object>& value)
{
    m_UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA = value;
    m_UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATAIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::uNSTRUCTUREDTRADESPOTFROMBLOBINTERNALDATAIsSet() const
{
    return m_UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATAIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetUNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA()
{
    m_UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATAIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getUNSTRUCTUREDTRADESPOTFROMCALCULATEDINTERNALDATA() const
{
    return m_UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA;
}

void SPOT_INSTRUMENT_METADATA::setUNSTRUCTUREDTRADESPOTFROMCALCULATEDINTERNALDATA(const std::shared_ptr<Object>& value)
{
    m_UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA = value;
    m_UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATAIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::uNSTRUCTUREDTRADESPOTFROMCALCULATEDINTERNALDATAIsSet() const
{
    return m_UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATAIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetUNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA()
{
    m_UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATAIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getUNSTRUCTUREDTRADESPOTFROMFIXINTERNALDATA() const
{
    return m_UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA;
}

void SPOT_INSTRUMENT_METADATA::setUNSTRUCTUREDTRADESPOTFROMFIXINTERNALDATA(const std::shared_ptr<Object>& value)
{
    m_UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA = value;
    m_UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATAIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::uNSTRUCTUREDTRADESPOTFROMFIXINTERNALDATAIsSet() const
{
    return m_UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATAIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetUNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA()
{
    m_UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATAIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getUNSTRUCTUREDTRADESPOTFROMGOINTERNALDATA() const
{
    return m_UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA;
}

void SPOT_INSTRUMENT_METADATA::setUNSTRUCTUREDTRADESPOTFROMGOINTERNALDATA(const std::shared_ptr<Object>& value)
{
    m_UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA = value;
    m_UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATAIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::uNSTRUCTUREDTRADESPOTFROMGOINTERNALDATAIsSet() const
{
    return m_UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATAIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetUNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA()
{
    m_UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATAIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getUNSTRUCTUREDTRADESPOTFROMPOLLINGINTERNALDATA() const
{
    return m_UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA;
}

void SPOT_INSTRUMENT_METADATA::setUNSTRUCTUREDTRADESPOTFROMPOLLINGINTERNALDATA(const std::shared_ptr<Object>& value)
{
    m_UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA = value;
    m_UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATAIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::uNSTRUCTUREDTRADESPOTFROMPOLLINGINTERNALDATAIsSet() const
{
    return m_UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATAIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetUNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA()
{
    m_UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATAIsSet = false;
}
std::shared_ptr<Object> SPOT_INSTRUMENT_METADATA::getUNSTRUCTUREDTRADESPOTFROMSTREAMINGINTERNALDATA() const
{
    return m_UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA;
}

void SPOT_INSTRUMENT_METADATA::setUNSTRUCTUREDTRADESPOTFROMSTREAMINGINTERNALDATA(const std::shared_ptr<Object>& value)
{
    m_UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA = value;
    m_UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATAIsSet = true;
}

bool SPOT_INSTRUMENT_METADATA::uNSTRUCTUREDTRADESPOTFROMSTREAMINGINTERNALDATAIsSet() const
{
    return m_UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATAIsSet;
}

void SPOT_INSTRUMENT_METADATA::unsetUNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA()
{
    m_UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATAIsSet = false;
}
}
}
}
}


