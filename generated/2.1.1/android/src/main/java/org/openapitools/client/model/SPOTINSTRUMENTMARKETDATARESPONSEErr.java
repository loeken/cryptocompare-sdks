/**
 * CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry
 * CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: data@cryptocompare.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import org.openapitools.client.model.SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class SPOTINSTRUMENTMARKETDATARESPONSEErr {
  
  @SerializedName("message")
  private String message = null;
  @SerializedName("other_info")
  private SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo otherInfo = null;
  @SerializedName("type")
  private Integer type = null;

  /**
   * A message describing the error
   **/
  @ApiModelProperty(value = "A message describing the error")
  public String getMessage() {
    return message;
  }
  public void setMessage(String message) {
    this.message = message;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo getOtherInfo() {
    return otherInfo;
  }
  public void setOtherInfo(SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo otherInfo) {
    this.otherInfo = otherInfo;
  }

  /**
   * A public facing error type. If you want to treat a specific error use the type.
   **/
  @ApiModelProperty(value = "A public facing error type. If you want to treat a specific error use the type.")
  public Integer getType() {
    return type;
  }
  public void setType(Integer type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SPOTINSTRUMENTMARKETDATARESPONSEErr sPOTINSTRUMENTMARKETDATARESPONSEErr = (SPOTINSTRUMENTMARKETDATARESPONSEErr) o;
    return (this.message == null ? sPOTINSTRUMENTMARKETDATARESPONSEErr.message == null : this.message.equals(sPOTINSTRUMENTMARKETDATARESPONSEErr.message)) &&
        (this.otherInfo == null ? sPOTINSTRUMENTMARKETDATARESPONSEErr.otherInfo == null : this.otherInfo.equals(sPOTINSTRUMENTMARKETDATARESPONSEErr.otherInfo)) &&
        (this.type == null ? sPOTINSTRUMENTMARKETDATARESPONSEErr.type == null : this.type.equals(sPOTINSTRUMENTMARKETDATARESPONSEErr.type));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.message == null ? 0: this.message.hashCode());
    result = 31 * result + (this.otherInfo == null ? 0: this.otherInfo.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class SPOTINSTRUMENTMARKETDATARESPONSEErr {\n");
    
    sb.append("  message: ").append(message).append("\n");
    sb.append("  otherInfo: ").append(otherInfo).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
