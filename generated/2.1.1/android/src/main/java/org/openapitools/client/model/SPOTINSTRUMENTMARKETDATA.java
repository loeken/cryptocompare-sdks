/**
 * CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry
 * CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: data@cryptocompare.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class SPOTINSTRUMENTMARKETDATA {
  
  @SerializedName("BASE")
  private String BASE = null;
  @SerializedName("CCSEQ")
  private Integer CCSEQ = null;
  @SerializedName("CURRENT_DAY_HIGH")
  private Integer CURRENT_DAY_HIGH = null;
  @SerializedName("CURRENT_DAY_LOW")
  private Integer CURRENT_DAY_LOW = null;
  @SerializedName("CURRENT_DAY_OPEN")
  private Integer CURRENT_DAY_OPEN = null;
  @SerializedName("CURRENT_DAY_QUOTE_VOLUME")
  private Integer CURRENT_DAY_QUOTE_VOLUME = null;
  @SerializedName("CURRENT_DAY_QUOTE_VOLUME_BUY")
  private Integer CURRENT_DAY_QUOTE_VOLUME_BUY = null;
  @SerializedName("CURRENT_DAY_QUOTE_VOLUME_SELL")
  private Integer CURRENT_DAY_QUOTE_VOLUME_SELL = null;
  @SerializedName("CURRENT_DAY_QUOTE_VOLUME_UNKNOWN")
  private Integer CURRENT_DAY_QUOTE_VOLUME_UNKNOWN = null;
  @SerializedName("CURRENT_DAY_TOTAL_TRADES")
  private Integer CURRENT_DAY_TOTAL_TRADES = null;
  @SerializedName("CURRENT_DAY_TOTAL_TRADES_BUY")
  private Integer CURRENT_DAY_TOTAL_TRADES_BUY = null;
  @SerializedName("CURRENT_DAY_TOTAL_TRADES_SELL")
  private Integer CURRENT_DAY_TOTAL_TRADES_SELL = null;
  @SerializedName("CURRENT_DAY_TOTAL_TRADES_UNKNOWN")
  private Integer CURRENT_DAY_TOTAL_TRADES_UNKNOWN = null;
  @SerializedName("CURRENT_DAY_VOLUME")
  private Integer CURRENT_DAY_VOLUME = null;
  @SerializedName("CURRENT_DAY_VOLUME_BUY")
  private Integer CURRENT_DAY_VOLUME_BUY = null;
  @SerializedName("CURRENT_DAY_VOLUME_SELL")
  private Integer CURRENT_DAY_VOLUME_SELL = null;
  @SerializedName("CURRENT_DAY_VOLUME_UNKNOWN")
  private Integer CURRENT_DAY_VOLUME_UNKNOWN = null;
  @SerializedName("CURRENT_HOUR_HIGH")
  private Integer CURRENT_HOUR_HIGH = null;
  @SerializedName("CURRENT_HOUR_LOW")
  private Integer CURRENT_HOUR_LOW = null;
  @SerializedName("CURRENT_HOUR_OPEN")
  private Integer CURRENT_HOUR_OPEN = null;
  @SerializedName("CURRENT_HOUR_QUOTE_VOLUME")
  private Integer CURRENT_HOUR_QUOTE_VOLUME = null;
  @SerializedName("CURRENT_HOUR_QUOTE_VOLUME_BUY")
  private Integer CURRENT_HOUR_QUOTE_VOLUME_BUY = null;
  @SerializedName("CURRENT_HOUR_QUOTE_VOLUME_SELL")
  private Integer CURRENT_HOUR_QUOTE_VOLUME_SELL = null;
  @SerializedName("CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN")
  private Integer CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN = null;
  @SerializedName("CURRENT_HOUR_TOTAL_TRADES")
  private Integer CURRENT_HOUR_TOTAL_TRADES = null;
  @SerializedName("CURRENT_HOUR_TOTAL_TRADES_BUY")
  private Integer CURRENT_HOUR_TOTAL_TRADES_BUY = null;
  @SerializedName("CURRENT_HOUR_TOTAL_TRADES_SELL")
  private Integer CURRENT_HOUR_TOTAL_TRADES_SELL = null;
  @SerializedName("CURRENT_HOUR_TOTAL_TRADES_UNKNOWN")
  private Integer CURRENT_HOUR_TOTAL_TRADES_UNKNOWN = null;
  @SerializedName("CURRENT_HOUR_VOLUME")
  private Integer CURRENT_HOUR_VOLUME = null;
  @SerializedName("CURRENT_HOUR_VOLUME_BUY")
  private Integer CURRENT_HOUR_VOLUME_BUY = null;
  @SerializedName("CURRENT_HOUR_VOLUME_SELL")
  private Integer CURRENT_HOUR_VOLUME_SELL = null;
  @SerializedName("CURRENT_HOUR_VOLUME_UNKNOWN")
  private Integer CURRENT_HOUR_VOLUME_UNKNOWN = null;
  @SerializedName("CURRENT_MONTH_HIGH")
  private Integer CURRENT_MONTH_HIGH = null;
  @SerializedName("CURRENT_MONTH_LOW")
  private Integer CURRENT_MONTH_LOW = null;
  @SerializedName("CURRENT_MONTH_OPEN")
  private Integer CURRENT_MONTH_OPEN = null;
  @SerializedName("CURRENT_MONTH_QUOTE_VOLUME")
  private Integer CURRENT_MONTH_QUOTE_VOLUME = null;
  @SerializedName("CURRENT_MONTH_QUOTE_VOLUME_BUY")
  private Integer CURRENT_MONTH_QUOTE_VOLUME_BUY = null;
  @SerializedName("CURRENT_MONTH_QUOTE_VOLUME_SELL")
  private Integer CURRENT_MONTH_QUOTE_VOLUME_SELL = null;
  @SerializedName("CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN")
  private Integer CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN = null;
  @SerializedName("CURRENT_MONTH_TOTAL_TRADES")
  private Integer CURRENT_MONTH_TOTAL_TRADES = null;
  @SerializedName("CURRENT_MONTH_TOTAL_TRADES_BUY")
  private Integer CURRENT_MONTH_TOTAL_TRADES_BUY = null;
  @SerializedName("CURRENT_MONTH_TOTAL_TRADES_SELL")
  private Integer CURRENT_MONTH_TOTAL_TRADES_SELL = null;
  @SerializedName("CURRENT_MONTH_TOTAL_TRADES_UNKNOWN")
  private Integer CURRENT_MONTH_TOTAL_TRADES_UNKNOWN = null;
  @SerializedName("CURRENT_MONTH_VOLUME")
  private Integer CURRENT_MONTH_VOLUME = null;
  @SerializedName("CURRENT_MONTH_VOLUME_BUY")
  private Integer CURRENT_MONTH_VOLUME_BUY = null;
  @SerializedName("CURRENT_MONTH_VOLUME_SELL")
  private Integer CURRENT_MONTH_VOLUME_SELL = null;
  @SerializedName("CURRENT_MONTH_VOLUME_UNKNOWN")
  private Integer CURRENT_MONTH_VOLUME_UNKNOWN = null;
  @SerializedName("CURRENT_WEEK_HIGH")
  private Integer CURRENT_WEEK_HIGH = null;
  @SerializedName("CURRENT_WEEK_LOW")
  private Integer CURRENT_WEEK_LOW = null;
  @SerializedName("CURRENT_WEEK_OPEN")
  private Integer CURRENT_WEEK_OPEN = null;
  @SerializedName("CURRENT_WEEK_QUOTE_VOLUME")
  private Integer CURRENT_WEEK_QUOTE_VOLUME = null;
  @SerializedName("CURRENT_WEEK_QUOTE_VOLUME_BUY")
  private Integer CURRENT_WEEK_QUOTE_VOLUME_BUY = null;
  @SerializedName("CURRENT_WEEK_QUOTE_VOLUME_SELL")
  private Integer CURRENT_WEEK_QUOTE_VOLUME_SELL = null;
  @SerializedName("CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN")
  private Integer CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN = null;
  @SerializedName("CURRENT_WEEK_TOTAL_TRADES")
  private Integer CURRENT_WEEK_TOTAL_TRADES = null;
  @SerializedName("CURRENT_WEEK_TOTAL_TRADES_BUY")
  private Integer CURRENT_WEEK_TOTAL_TRADES_BUY = null;
  @SerializedName("CURRENT_WEEK_TOTAL_TRADES_SELL")
  private Integer CURRENT_WEEK_TOTAL_TRADES_SELL = null;
  @SerializedName("CURRENT_WEEK_TOTAL_TRADES_UNKNOWN")
  private Integer CURRENT_WEEK_TOTAL_TRADES_UNKNOWN = null;
  @SerializedName("CURRENT_WEEK_VOLUME")
  private Integer CURRENT_WEEK_VOLUME = null;
  @SerializedName("CURRENT_WEEK_VOLUME_BUY")
  private Integer CURRENT_WEEK_VOLUME_BUY = null;
  @SerializedName("CURRENT_WEEK_VOLUME_SELL")
  private Integer CURRENT_WEEK_VOLUME_SELL = null;
  @SerializedName("CURRENT_WEEK_VOLUME_UNKNOWN")
  private Integer CURRENT_WEEK_VOLUME_UNKNOWN = null;
  @SerializedName("CURRENT_YEAR_HIGH")
  private Integer CURRENT_YEAR_HIGH = null;
  @SerializedName("CURRENT_YEAR_LOW")
  private Integer CURRENT_YEAR_LOW = null;
  @SerializedName("CURRENT_YEAR_OPEN")
  private Integer CURRENT_YEAR_OPEN = null;
  @SerializedName("CURRENT_YEAR_QUOTE_VOLUME")
  private Integer CURRENT_YEAR_QUOTE_VOLUME = null;
  @SerializedName("CURRENT_YEAR_QUOTE_VOLUME_BUY")
  private Integer CURRENT_YEAR_QUOTE_VOLUME_BUY = null;
  @SerializedName("CURRENT_YEAR_QUOTE_VOLUME_SELL")
  private Integer CURRENT_YEAR_QUOTE_VOLUME_SELL = null;
  @SerializedName("CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN")
  private Integer CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN = null;
  @SerializedName("CURRENT_YEAR_TOTAL_TRADES")
  private Integer CURRENT_YEAR_TOTAL_TRADES = null;
  @SerializedName("CURRENT_YEAR_TOTAL_TRADES_BUY")
  private Integer CURRENT_YEAR_TOTAL_TRADES_BUY = null;
  @SerializedName("CURRENT_YEAR_TOTAL_TRADES_SELL")
  private Integer CURRENT_YEAR_TOTAL_TRADES_SELL = null;
  @SerializedName("CURRENT_YEAR_TOTAL_TRADES_UNKNOWN")
  private Integer CURRENT_YEAR_TOTAL_TRADES_UNKNOWN = null;
  @SerializedName("CURRENT_YEAR_VOLUME")
  private Integer CURRENT_YEAR_VOLUME = null;
  @SerializedName("CURRENT_YEAR_VOLUME_BUY")
  private Integer CURRENT_YEAR_VOLUME_BUY = null;
  @SerializedName("CURRENT_YEAR_VOLUME_SELL")
  private Integer CURRENT_YEAR_VOLUME_SELL = null;
  @SerializedName("CURRENT_YEAR_VOLUME_UNKNOWN")
  private Integer CURRENT_YEAR_VOLUME_UNKNOWN = null;
  @SerializedName("INSTRUMENT")
  private String INSTRUMENT = null;
  @SerializedName("LAST_PROCESSED_TRADE_CCSEQ")
  private String LAST_PROCESSED_TRADE_CCSEQ = null;
  @SerializedName("LAST_PROCESSED_TRADE_PRICE")
  private Integer LAST_PROCESSED_TRADE_PRICE = null;
  @SerializedName("LAST_PROCESSED_TRADE_QUANTITY")
  private Integer LAST_PROCESSED_TRADE_QUANTITY = null;
  @SerializedName("LAST_PROCESSED_TRADE_QUOTE_QUANTITY")
  private Integer LAST_PROCESSED_TRADE_QUOTE_QUANTITY = null;
  @SerializedName("LAST_PROCESSED_TRADE_SIDE")
  private String LAST_PROCESSED_TRADE_SIDE = null;
  @SerializedName("LAST_PROCESSED_TRADE_TS")
  private Integer LAST_PROCESSED_TRADE_TS = null;
  @SerializedName("LAST_TRADE_CCSEQ")
  private String LAST_TRADE_CCSEQ = null;
  @SerializedName("LAST_TRADE_ID")
  private String LAST_TRADE_ID = null;
  @SerializedName("LAST_TRADE_QUANTITY")
  private Integer LAST_TRADE_QUANTITY = null;
  @SerializedName("LAST_TRADE_QUOTE_QUANTITY")
  private Integer LAST_TRADE_QUOTE_QUANTITY = null;
  @SerializedName("LAST_TRADE_SIDE")
  private String LAST_TRADE_SIDE = null;
  @SerializedName("LIFETIME_FIRST_TRADE_TS")
  private Integer LIFETIME_FIRST_TRADE_TS = null;
  @SerializedName("LIFETIME_HIGH")
  private Integer LIFETIME_HIGH = null;
  @SerializedName("LIFETIME_HIGH_TS")
  private Integer LIFETIME_HIGH_TS = null;
  @SerializedName("LIFETIME_LOW")
  private Integer LIFETIME_LOW = null;
  @SerializedName("LIFETIME_LOW_TS")
  private Integer LIFETIME_LOW_TS = null;
  @SerializedName("LIFETIME_OPEN")
  private Integer LIFETIME_OPEN = null;
  @SerializedName("LIFETIME_QUOTE_VOLUME")
  private Integer LIFETIME_QUOTE_VOLUME = null;
  @SerializedName("LIFETIME_QUOTE_VOLUME_BUY")
  private Integer LIFETIME_QUOTE_VOLUME_BUY = null;
  @SerializedName("LIFETIME_QUOTE_VOLUME_SELL")
  private Integer LIFETIME_QUOTE_VOLUME_SELL = null;
  @SerializedName("LIFETIME_QUOTE_VOLUME_UNKNOWN")
  private Integer LIFETIME_QUOTE_VOLUME_UNKNOWN = null;
  @SerializedName("LIFETIME_TOTAL_TRADES")
  private Integer LIFETIME_TOTAL_TRADES = null;
  @SerializedName("LIFETIME_TOTAL_TRADES_BUY")
  private Integer LIFETIME_TOTAL_TRADES_BUY = null;
  @SerializedName("LIFETIME_TOTAL_TRADES_SELL")
  private Integer LIFETIME_TOTAL_TRADES_SELL = null;
  @SerializedName("LIFETIME_TOTAL_TRADES_UNKNOWN")
  private Integer LIFETIME_TOTAL_TRADES_UNKNOWN = null;
  @SerializedName("LIFETIME_VOLUME")
  private Integer LIFETIME_VOLUME = null;
  @SerializedName("LIFETIME_VOLUME_BUY")
  private Integer LIFETIME_VOLUME_BUY = null;
  @SerializedName("LIFETIME_VOLUME_SELL")
  private Integer LIFETIME_VOLUME_SELL = null;
  @SerializedName("LIFETIME_VOLUME_UNKNOWN")
  private Integer LIFETIME_VOLUME_UNKNOWN = null;
  @SerializedName("MAPPED_INSTRUMENT")
  private String MAPPED_INSTRUMENT = null;
  @SerializedName("MARKET")
  private String MARKET = null;
  @SerializedName("MOVING_180_DAY_HIGH")
  private Integer mOVING180DAYHIGH = null;
  @SerializedName("MOVING_180_DAY_LOW")
  private Integer mOVING180DAYLOW = null;
  @SerializedName("MOVING_180_DAY_OPEN")
  private Integer mOVING180DAYOPEN = null;
  @SerializedName("MOVING_180_DAY_QUOTE_VOLUME")
  private Integer mOVING180DAYQUOTEVOLUME = null;
  @SerializedName("MOVING_180_DAY_QUOTE_VOLUME_BUY")
  private Integer mOVING180DAYQUOTEVOLUMEBUY = null;
  @SerializedName("MOVING_180_DAY_QUOTE_VOLUME_SELL")
  private Integer mOVING180DAYQUOTEVOLUMESELL = null;
  @SerializedName("MOVING_180_DAY_QUOTE_VOLUME_UNKNOWN")
  private Integer mOVING180DAYQUOTEVOLUMEUNKNOWN = null;
  @SerializedName("MOVING_180_DAY_TOTAL_TRADES")
  private Integer mOVING180DAYTOTALTRADES = null;
  @SerializedName("MOVING_180_DAY_TOTAL_TRADES_BUY")
  private Integer mOVING180DAYTOTALTRADESBUY = null;
  @SerializedName("MOVING_180_DAY_TOTAL_TRADES_SELL")
  private Integer mOVING180DAYTOTALTRADESSELL = null;
  @SerializedName("MOVING_180_DAY_TOTAL_TRADES_UNKNOWN")
  private Integer mOVING180DAYTOTALTRADESUNKNOWN = null;
  @SerializedName("MOVING_180_DAY_VOLUME")
  private Integer mOVING180DAYVOLUME = null;
  @SerializedName("MOVING_180_DAY_VOLUME_BUY")
  private Integer mOVING180DAYVOLUMEBUY = null;
  @SerializedName("MOVING_180_DAY_VOLUME_SELL")
  private Integer mOVING180DAYVOLUMESELL = null;
  @SerializedName("MOVING_180_DAY_VOLUME_UNKNOWN")
  private Integer mOVING180DAYVOLUMEUNKNOWN = null;
  @SerializedName("MOVING_24_HOUR_HIGH")
  private Integer mOVING24HOURHIGH = null;
  @SerializedName("MOVING_24_HOUR_LOW")
  private Integer mOVING24HOURLOW = null;
  @SerializedName("MOVING_24_HOUR_OPEN")
  private Integer mOVING24HOUROPEN = null;
  @SerializedName("MOVING_24_HOUR_QUOTE_VOLUME")
  private Integer mOVING24HOURQUOTEVOLUME = null;
  @SerializedName("MOVING_24_HOUR_QUOTE_VOLUME_BUY")
  private Integer mOVING24HOURQUOTEVOLUMEBUY = null;
  @SerializedName("MOVING_24_HOUR_QUOTE_VOLUME_SELL")
  private Integer mOVING24HOURQUOTEVOLUMESELL = null;
  @SerializedName("MOVING_24_HOUR_QUOTE_VOLUME_UNKNOWN")
  private Integer mOVING24HOURQUOTEVOLUMEUNKNOWN = null;
  @SerializedName("MOVING_24_HOUR_TOTAL_TRADES")
  private Integer mOVING24HOURTOTALTRADES = null;
  @SerializedName("MOVING_24_HOUR_TOTAL_TRADES_BUY")
  private Integer mOVING24HOURTOTALTRADESBUY = null;
  @SerializedName("MOVING_24_HOUR_TOTAL_TRADES_SELL")
  private Integer mOVING24HOURTOTALTRADESSELL = null;
  @SerializedName("MOVING_24_HOUR_TOTAL_TRADES_UNKNOWN")
  private Integer mOVING24HOURTOTALTRADESUNKNOWN = null;
  @SerializedName("MOVING_24_HOUR_VOLUME")
  private Integer mOVING24HOURVOLUME = null;
  @SerializedName("MOVING_24_HOUR_VOLUME_BUY")
  private Integer mOVING24HOURVOLUMEBUY = null;
  @SerializedName("MOVING_24_HOUR_VOLUME_SELL")
  private Integer mOVING24HOURVOLUMESELL = null;
  @SerializedName("MOVING_24_HOUR_VOLUME_UNKNOWN")
  private Integer mOVING24HOURVOLUMEUNKNOWN = null;
  @SerializedName("MOVING_30_DAY_HIGH")
  private Integer mOVING30DAYHIGH = null;
  @SerializedName("MOVING_30_DAY_LOW")
  private Integer mOVING30DAYLOW = null;
  @SerializedName("MOVING_30_DAY_OPEN")
  private Integer mOVING30DAYOPEN = null;
  @SerializedName("MOVING_30_DAY_QUOTE_VOLUME")
  private Integer mOVING30DAYQUOTEVOLUME = null;
  @SerializedName("MOVING_30_DAY_QUOTE_VOLUME_BUY")
  private Integer mOVING30DAYQUOTEVOLUMEBUY = null;
  @SerializedName("MOVING_30_DAY_QUOTE_VOLUME_SELL")
  private Integer mOVING30DAYQUOTEVOLUMESELL = null;
  @SerializedName("MOVING_30_DAY_QUOTE_VOLUME_UNKNOWN")
  private Integer mOVING30DAYQUOTEVOLUMEUNKNOWN = null;
  @SerializedName("MOVING_30_DAY_TOTAL_TRADES")
  private Integer mOVING30DAYTOTALTRADES = null;
  @SerializedName("MOVING_30_DAY_TOTAL_TRADES_BUY")
  private Integer mOVING30DAYTOTALTRADESBUY = null;
  @SerializedName("MOVING_30_DAY_TOTAL_TRADES_SELL")
  private Integer mOVING30DAYTOTALTRADESSELL = null;
  @SerializedName("MOVING_30_DAY_TOTAL_TRADES_UNKNOWN")
  private Integer mOVING30DAYTOTALTRADESUNKNOWN = null;
  @SerializedName("MOVING_30_DAY_VOLUME")
  private Integer mOVING30DAYVOLUME = null;
  @SerializedName("MOVING_30_DAY_VOLUME_BUY")
  private Integer mOVING30DAYVOLUMEBUY = null;
  @SerializedName("MOVING_30_DAY_VOLUME_SELL")
  private Integer mOVING30DAYVOLUMESELL = null;
  @SerializedName("MOVING_30_DAY_VOLUME_UNKNOWN")
  private Integer mOVING30DAYVOLUMEUNKNOWN = null;
  @SerializedName("MOVING_365_DAY_HIGH")
  private Integer mOVING365DAYHIGH = null;
  @SerializedName("MOVING_365_DAY_LOW")
  private Integer mOVING365DAYLOW = null;
  @SerializedName("MOVING_365_DAY_OPEN")
  private Integer mOVING365DAYOPEN = null;
  @SerializedName("MOVING_365_DAY_QUOTE_VOLUME")
  private Integer mOVING365DAYQUOTEVOLUME = null;
  @SerializedName("MOVING_365_DAY_QUOTE_VOLUME_BUY")
  private Integer mOVING365DAYQUOTEVOLUMEBUY = null;
  @SerializedName("MOVING_365_DAY_QUOTE_VOLUME_SELL")
  private Integer mOVING365DAYQUOTEVOLUMESELL = null;
  @SerializedName("MOVING_365_DAY_QUOTE_VOLUME_UNKNOWN")
  private Integer mOVING365DAYQUOTEVOLUMEUNKNOWN = null;
  @SerializedName("MOVING_365_DAY_TOTAL_TRADES")
  private Integer mOVING365DAYTOTALTRADES = null;
  @SerializedName("MOVING_365_DAY_TOTAL_TRADES_BUY")
  private Integer mOVING365DAYTOTALTRADESBUY = null;
  @SerializedName("MOVING_365_DAY_TOTAL_TRADES_SELL")
  private Integer mOVING365DAYTOTALTRADESSELL = null;
  @SerializedName("MOVING_365_DAY_TOTAL_TRADES_UNKNOWN")
  private Integer mOVING365DAYTOTALTRADESUNKNOWN = null;
  @SerializedName("MOVING_365_DAY_VOLUME")
  private Integer mOVING365DAYVOLUME = null;
  @SerializedName("MOVING_365_DAY_VOLUME_BUY")
  private Integer mOVING365DAYVOLUMEBUY = null;
  @SerializedName("MOVING_365_DAY_VOLUME_SELL")
  private Integer mOVING365DAYVOLUMESELL = null;
  @SerializedName("MOVING_365_DAY_VOLUME_UNKNOWN")
  private Integer mOVING365DAYVOLUMEUNKNOWN = null;
  @SerializedName("MOVING_7_DAY_HIGH")
  private Integer mOVING7DAYHIGH = null;
  @SerializedName("MOVING_7_DAY_LOW")
  private Integer mOVING7DAYLOW = null;
  @SerializedName("MOVING_7_DAY_OPEN")
  private Integer mOVING7DAYOPEN = null;
  @SerializedName("MOVING_7_DAY_QUOTE_VOLUME")
  private Integer mOVING7DAYQUOTEVOLUME = null;
  @SerializedName("MOVING_7_DAY_QUOTE_VOLUME_BUY")
  private Integer mOVING7DAYQUOTEVOLUMEBUY = null;
  @SerializedName("MOVING_7_DAY_QUOTE_VOLUME_SELL")
  private Integer mOVING7DAYQUOTEVOLUMESELL = null;
  @SerializedName("MOVING_7_DAY_QUOTE_VOLUME_UNKNOWN")
  private Integer mOVING7DAYQUOTEVOLUMEUNKNOWN = null;
  @SerializedName("MOVING_7_DAY_TOTAL_TRADES")
  private Integer mOVING7DAYTOTALTRADES = null;
  @SerializedName("MOVING_7_DAY_TOTAL_TRADES_BUY")
  private Integer mOVING7DAYTOTALTRADESBUY = null;
  @SerializedName("MOVING_7_DAY_TOTAL_TRADES_SELL")
  private Integer mOVING7DAYTOTALTRADESSELL = null;
  @SerializedName("MOVING_7_DAY_TOTAL_TRADES_UNKNOWN")
  private Integer mOVING7DAYTOTALTRADESUNKNOWN = null;
  @SerializedName("MOVING_7_DAY_VOLUME")
  private Integer mOVING7DAYVOLUME = null;
  @SerializedName("MOVING_7_DAY_VOLUME_BUY")
  private Integer mOVING7DAYVOLUMEBUY = null;
  @SerializedName("MOVING_7_DAY_VOLUME_SELL")
  private Integer mOVING7DAYVOLUMESELL = null;
  @SerializedName("MOVING_7_DAY_VOLUME_UNKNOWN")
  private Integer mOVING7DAYVOLUMEUNKNOWN = null;
  @SerializedName("MOVING_90_DAY_HIGH")
  private Integer mOVING90DAYHIGH = null;
  @SerializedName("MOVING_90_DAY_LOW")
  private Integer mOVING90DAYLOW = null;
  @SerializedName("MOVING_90_DAY_OPEN")
  private Integer mOVING90DAYOPEN = null;
  @SerializedName("MOVING_90_DAY_QUOTE_VOLUME")
  private Integer mOVING90DAYQUOTEVOLUME = null;
  @SerializedName("MOVING_90_DAY_QUOTE_VOLUME_BUY")
  private Integer mOVING90DAYQUOTEVOLUMEBUY = null;
  @SerializedName("MOVING_90_DAY_QUOTE_VOLUME_SELL")
  private Integer mOVING90DAYQUOTEVOLUMESELL = null;
  @SerializedName("MOVING_90_DAY_QUOTE_VOLUME_UNKNOWN")
  private Integer mOVING90DAYQUOTEVOLUMEUNKNOWN = null;
  @SerializedName("MOVING_90_DAY_TOTAL_TRADES")
  private Integer mOVING90DAYTOTALTRADES = null;
  @SerializedName("MOVING_90_DAY_TOTAL_TRADES_BUY")
  private Integer mOVING90DAYTOTALTRADESBUY = null;
  @SerializedName("MOVING_90_DAY_TOTAL_TRADES_SELL")
  private Integer mOVING90DAYTOTALTRADESSELL = null;
  @SerializedName("MOVING_90_DAY_TOTAL_TRADES_UNKNOWN")
  private Integer mOVING90DAYTOTALTRADESUNKNOWN = null;
  @SerializedName("MOVING_90_DAY_VOLUME")
  private Integer mOVING90DAYVOLUME = null;
  @SerializedName("MOVING_90_DAY_VOLUME_BUY")
  private Integer mOVING90DAYVOLUMEBUY = null;
  @SerializedName("MOVING_90_DAY_VOLUME_SELL")
  private Integer mOVING90DAYVOLUMESELL = null;
  @SerializedName("MOVING_90_DAY_VOLUME_UNKNOWN")
  private Integer mOVING90DAYVOLUMEUNKNOWN = null;
  @SerializedName("PRICE")
  private Integer PRICE = null;
  @SerializedName("PRICE_FLAG")
  private String PRICE_FLAG = null;
  @SerializedName("PRICE_LAST_UPDATE_TS")
  private Integer PRICE_LAST_UPDATE_TS = null;
  @SerializedName("QUOTE")
  private String QUOTE = null;
  @SerializedName("TOP_ASK_LAST_UPDATE_TS")
  private Integer TOP_ASK_LAST_UPDATE_TS = null;
  @SerializedName("TOP_ASK_PRICE")
  private Integer TOP_ASK_PRICE = null;
  @SerializedName("TOP_ASK_QUANTITY")
  private Integer TOP_ASK_QUANTITY = null;
  @SerializedName("TOP_BID_LAST_UPDATE_TS")
  private Integer TOP_BID_LAST_UPDATE_TS = null;
  @SerializedName("TOP_BID_PRICE")
  private Integer TOP_BID_PRICE = null;
  @SerializedName("TOP_BID_QUANTITY")
  private Integer TOP_BID_QUANTITY = null;
  @SerializedName("TYPE")
  private String TYPE = null;

  /**
   * The mapped from asset (base / symbol/ coin), e.g. BTC. Only available on instruments that have been mapped.
   **/
  @ApiModelProperty(value = "The mapped from asset (base / symbol/ coin), e.g. BTC. Only available on instruments that have been mapped.")
  public String getBASE() {
    return BASE;
  }
  public void setBASE(String BASE) {
    this.BASE = BASE;
  }

  /**
   * Our internal sequence number for this tick update. This is unique per market / exchange and trading pair / instrument. It will always be increasing by 1 for each new tick update we send.
   **/
  @ApiModelProperty(value = "Our internal sequence number for this tick update. This is unique per market / exchange and trading pair / instrument. It will always be increasing by 1 for each new tick update we send.")
  public Integer getCCSEQ() {
    return CCSEQ;
  }
  public void setCCSEQ(Integer CCSEQ) {
    this.CCSEQ = CCSEQ;
  }

  /**
   * The highest trade price of the current day (00:00:00 GMT/UTC). If there were no updates in the time period, the open price will be given. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The highest trade price of the current day (00:00:00 GMT/UTC). If there were no updates in the time period, the open price will be given. Given in the quote asset.")
  public Integer getCURRENTDAYHIGH() {
    return CURRENT_DAY_HIGH;
  }
  public void setCURRENTDAYHIGH(Integer CURRENT_DAY_HIGH) {
    this.CURRENT_DAY_HIGH = CURRENT_DAY_HIGH;
  }

  /**
   * The lowest trade price of the current day (00:00:00 GMT/UTC). If there were no updates in the time period, the open price will be given. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The lowest trade price of the current day (00:00:00 GMT/UTC). If there were no updates in the time period, the open price will be given. Given in the quote asset.")
  public Integer getCURRENTDAYLOW() {
    return CURRENT_DAY_LOW;
  }
  public void setCURRENTDAYLOW(Integer CURRENT_DAY_LOW) {
    this.CURRENT_DAY_LOW = CURRENT_DAY_LOW;
  }

  /**
   * The open price for the current day, this is based on the closest trade occurring before the start of the current day (00:00:00 GMT/UTC). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The open price for the current day, this is based on the closest trade occurring before the start of the current day (00:00:00 GMT/UTC). Given in the quote asset.")
  public Integer getCURRENTDAYOPEN() {
    return CURRENT_DAY_OPEN;
  }
  public void setCURRENTDAYOPEN(Integer CURRENT_DAY_OPEN) {
    this.CURRENT_DAY_OPEN = CURRENT_DAY_OPEN;
  }

  /**
   * The sum of all trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset.")
  public Integer getCURRENTDAYQUOTEVOLUME() {
    return CURRENT_DAY_QUOTE_VOLUME;
  }
  public void setCURRENTDAYQUOTEVOLUME(Integer CURRENT_DAY_QUOTE_VOLUME) {
    this.CURRENT_DAY_QUOTE_VOLUME = CURRENT_DAY_QUOTE_VOLUME;
  }

  /**
   * The sum of all buy trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all buy trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset.")
  public Integer getCURRENTDAYQUOTEVOLUMEBUY() {
    return CURRENT_DAY_QUOTE_VOLUME_BUY;
  }
  public void setCURRENTDAYQUOTEVOLUMEBUY(Integer CURRENT_DAY_QUOTE_VOLUME_BUY) {
    this.CURRENT_DAY_QUOTE_VOLUME_BUY = CURRENT_DAY_QUOTE_VOLUME_BUY;
  }

  /**
   * The sum of all sell trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all sell trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset.")
  public Integer getCURRENTDAYQUOTEVOLUMESELL() {
    return CURRENT_DAY_QUOTE_VOLUME_SELL;
  }
  public void setCURRENTDAYQUOTEVOLUMESELL(Integer CURRENT_DAY_QUOTE_VOLUME_SELL) {
    this.CURRENT_DAY_QUOTE_VOLUME_SELL = CURRENT_DAY_QUOTE_VOLUME_SELL;
  }

  /**
   * The sum of all unknown trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all unknown trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset.")
  public Integer getCURRENTDAYQUOTEVOLUMEUNKNOWN() {
    return CURRENT_DAY_QUOTE_VOLUME_UNKNOWN;
  }
  public void setCURRENTDAYQUOTEVOLUMEUNKNOWN(Integer CURRENT_DAY_QUOTE_VOLUME_UNKNOWN) {
    this.CURRENT_DAY_QUOTE_VOLUME_UNKNOWN = CURRENT_DAY_QUOTE_VOLUME_UNKNOWN;
  }

  /**
   * The total number of trades that have occurred since the start of the current day (00:00:00 GMT/UTC).
   **/
  @ApiModelProperty(value = "The total number of trades that have occurred since the start of the current day (00:00:00 GMT/UTC).")
  public Integer getCURRENTDAYTOTALTRADES() {
    return CURRENT_DAY_TOTAL_TRADES;
  }
  public void setCURRENTDAYTOTALTRADES(Integer CURRENT_DAY_TOTAL_TRADES) {
    this.CURRENT_DAY_TOTAL_TRADES = CURRENT_DAY_TOTAL_TRADES;
  }

  /**
   * The total number of buy trades since the start of the current day (00:00:00 GMT/UTC).
   **/
  @ApiModelProperty(value = "The total number of buy trades since the start of the current day (00:00:00 GMT/UTC).")
  public Integer getCURRENTDAYTOTALTRADESBUY() {
    return CURRENT_DAY_TOTAL_TRADES_BUY;
  }
  public void setCURRENTDAYTOTALTRADESBUY(Integer CURRENT_DAY_TOTAL_TRADES_BUY) {
    this.CURRENT_DAY_TOTAL_TRADES_BUY = CURRENT_DAY_TOTAL_TRADES_BUY;
  }

  /**
   * The total number of sell trades since the start of the current day (00:00:00 GMT/UTC).
   **/
  @ApiModelProperty(value = "The total number of sell trades since the start of the current day (00:00:00 GMT/UTC).")
  public Integer getCURRENTDAYTOTALTRADESSELL() {
    return CURRENT_DAY_TOTAL_TRADES_SELL;
  }
  public void setCURRENTDAYTOTALTRADESSELL(Integer CURRENT_DAY_TOTAL_TRADES_SELL) {
    this.CURRENT_DAY_TOTAL_TRADES_SELL = CURRENT_DAY_TOTAL_TRADES_SELL;
  }

  /**
   * The total number of unknown trades since the start of the current day (00:00:00 GMT/UTC).
   **/
  @ApiModelProperty(value = "The total number of unknown trades since the start of the current day (00:00:00 GMT/UTC).")
  public Integer getCURRENTDAYTOTALTRADESUNKNOWN() {
    return CURRENT_DAY_TOTAL_TRADES_UNKNOWN;
  }
  public void setCURRENTDAYTOTALTRADESUNKNOWN(Integer CURRENT_DAY_TOTAL_TRADES_UNKNOWN) {
    this.CURRENT_DAY_TOTAL_TRADES_UNKNOWN = CURRENT_DAY_TOTAL_TRADES_UNKNOWN;
  }

  /**
   * The sum of all trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset.")
  public Integer getCURRENTDAYVOLUME() {
    return CURRENT_DAY_VOLUME;
  }
  public void setCURRENTDAYVOLUME(Integer CURRENT_DAY_VOLUME) {
    this.CURRENT_DAY_VOLUME = CURRENT_DAY_VOLUME;
  }

  /**
   * The sum of all buy trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all buy trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset.")
  public Integer getCURRENTDAYVOLUMEBUY() {
    return CURRENT_DAY_VOLUME_BUY;
  }
  public void setCURRENTDAYVOLUMEBUY(Integer CURRENT_DAY_VOLUME_BUY) {
    this.CURRENT_DAY_VOLUME_BUY = CURRENT_DAY_VOLUME_BUY;
  }

  /**
   * The sum of all sell trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all sell trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset.")
  public Integer getCURRENTDAYVOLUMESELL() {
    return CURRENT_DAY_VOLUME_SELL;
  }
  public void setCURRENTDAYVOLUMESELL(Integer CURRENT_DAY_VOLUME_SELL) {
    this.CURRENT_DAY_VOLUME_SELL = CURRENT_DAY_VOLUME_SELL;
  }

  /**
   * The sum of all unknown trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all unknown trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset.")
  public Integer getCURRENTDAYVOLUMEUNKNOWN() {
    return CURRENT_DAY_VOLUME_UNKNOWN;
  }
  public void setCURRENTDAYVOLUMEUNKNOWN(Integer CURRENT_DAY_VOLUME_UNKNOWN) {
    this.CURRENT_DAY_VOLUME_UNKNOWN = CURRENT_DAY_VOLUME_UNKNOWN;
  }

  /**
   * The highest trade price of the current hour. If there were no updates in the time period, the open price will be given. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The highest trade price of the current hour. If there were no updates in the time period, the open price will be given. Given in the quote asset.")
  public Integer getCURRENTHOURHIGH() {
    return CURRENT_HOUR_HIGH;
  }
  public void setCURRENTHOURHIGH(Integer CURRENT_HOUR_HIGH) {
    this.CURRENT_HOUR_HIGH = CURRENT_HOUR_HIGH;
  }

  /**
   * The lowest trade price of the current hour. If there were no updates in the time period, the open price will be given. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The lowest trade price of the current hour. If there were no updates in the time period, the open price will be given. Given in the quote asset.")
  public Integer getCURRENTHOURLOW() {
    return CURRENT_HOUR_LOW;
  }
  public void setCURRENTHOURLOW(Integer CURRENT_HOUR_LOW) {
    this.CURRENT_HOUR_LOW = CURRENT_HOUR_LOW;
  }

  /**
   * The open price for the current hour, this is based on the closest trade occurring before the start of the current hour. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The open price for the current hour, this is based on the closest trade occurring before the start of the current hour. Given in the quote asset.")
  public Integer getCURRENTHOUROPEN() {
    return CURRENT_HOUR_OPEN;
  }
  public void setCURRENTHOUROPEN(Integer CURRENT_HOUR_OPEN) {
    this.CURRENT_HOUR_OPEN = CURRENT_HOUR_OPEN;
  }

  /**
   * The sum of all trade quote quantities from the start of the current hour until now. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quote quantities from the start of the current hour until now. Given in the quote asset.")
  public Integer getCURRENTHOURQUOTEVOLUME() {
    return CURRENT_HOUR_QUOTE_VOLUME;
  }
  public void setCURRENTHOURQUOTEVOLUME(Integer CURRENT_HOUR_QUOTE_VOLUME) {
    this.CURRENT_HOUR_QUOTE_VOLUME = CURRENT_HOUR_QUOTE_VOLUME;
  }

  /**
   * The sum of all buy trade quote quantities from the start of the current hour until now. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all buy trade quote quantities from the start of the current hour until now. Given in the quote asset.")
  public Integer getCURRENTHOURQUOTEVOLUMEBUY() {
    return CURRENT_HOUR_QUOTE_VOLUME_BUY;
  }
  public void setCURRENTHOURQUOTEVOLUMEBUY(Integer CURRENT_HOUR_QUOTE_VOLUME_BUY) {
    this.CURRENT_HOUR_QUOTE_VOLUME_BUY = CURRENT_HOUR_QUOTE_VOLUME_BUY;
  }

  /**
   * The sum of all sell trade quote quantities from the start of the current hour until now. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all sell trade quote quantities from the start of the current hour until now. Given in the quote asset.")
  public Integer getCURRENTHOURQUOTEVOLUMESELL() {
    return CURRENT_HOUR_QUOTE_VOLUME_SELL;
  }
  public void setCURRENTHOURQUOTEVOLUMESELL(Integer CURRENT_HOUR_QUOTE_VOLUME_SELL) {
    this.CURRENT_HOUR_QUOTE_VOLUME_SELL = CURRENT_HOUR_QUOTE_VOLUME_SELL;
  }

  /**
   * The sum of all unknown trade quote quantities from the start of the current hour until now. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all unknown trade quote quantities from the start of the current hour until now. Given in the quote asset.")
  public Integer getCURRENTHOURQUOTEVOLUMEUNKNOWN() {
    return CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN;
  }
  public void setCURRENTHOURQUOTEVOLUMEUNKNOWN(Integer CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN) {
    this.CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN = CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN;
  }

  /**
   * The total number of trades that have occurred since the start of the current hour.
   **/
  @ApiModelProperty(value = "The total number of trades that have occurred since the start of the current hour.")
  public Integer getCURRENTHOURTOTALTRADES() {
    return CURRENT_HOUR_TOTAL_TRADES;
  }
  public void setCURRENTHOURTOTALTRADES(Integer CURRENT_HOUR_TOTAL_TRADES) {
    this.CURRENT_HOUR_TOTAL_TRADES = CURRENT_HOUR_TOTAL_TRADES;
  }

  /**
   * The total number of buy trades since the start of the current hour.
   **/
  @ApiModelProperty(value = "The total number of buy trades since the start of the current hour.")
  public Integer getCURRENTHOURTOTALTRADESBUY() {
    return CURRENT_HOUR_TOTAL_TRADES_BUY;
  }
  public void setCURRENTHOURTOTALTRADESBUY(Integer CURRENT_HOUR_TOTAL_TRADES_BUY) {
    this.CURRENT_HOUR_TOTAL_TRADES_BUY = CURRENT_HOUR_TOTAL_TRADES_BUY;
  }

  /**
   * The total number of sell trades since the start of the current hour.
   **/
  @ApiModelProperty(value = "The total number of sell trades since the start of the current hour.")
  public Integer getCURRENTHOURTOTALTRADESSELL() {
    return CURRENT_HOUR_TOTAL_TRADES_SELL;
  }
  public void setCURRENTHOURTOTALTRADESSELL(Integer CURRENT_HOUR_TOTAL_TRADES_SELL) {
    this.CURRENT_HOUR_TOTAL_TRADES_SELL = CURRENT_HOUR_TOTAL_TRADES_SELL;
  }

  /**
   * The total number of unknown trades since the start of the current hour.
   **/
  @ApiModelProperty(value = "The total number of unknown trades since the start of the current hour.")
  public Integer getCURRENTHOURTOTALTRADESUNKNOWN() {
    return CURRENT_HOUR_TOTAL_TRADES_UNKNOWN;
  }
  public void setCURRENTHOURTOTALTRADESUNKNOWN(Integer CURRENT_HOUR_TOTAL_TRADES_UNKNOWN) {
    this.CURRENT_HOUR_TOTAL_TRADES_UNKNOWN = CURRENT_HOUR_TOTAL_TRADES_UNKNOWN;
  }

  /**
   * The sum of all trade quantities from the start of the current hour until now. Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quantities from the start of the current hour until now. Given in the base asset.")
  public Integer getCURRENTHOURVOLUME() {
    return CURRENT_HOUR_VOLUME;
  }
  public void setCURRENTHOURVOLUME(Integer CURRENT_HOUR_VOLUME) {
    this.CURRENT_HOUR_VOLUME = CURRENT_HOUR_VOLUME;
  }

  /**
   * The sum of all buy trade quantities from the start of the current hour until now. Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all buy trade quantities from the start of the current hour until now. Given in the base asset.")
  public Integer getCURRENTHOURVOLUMEBUY() {
    return CURRENT_HOUR_VOLUME_BUY;
  }
  public void setCURRENTHOURVOLUMEBUY(Integer CURRENT_HOUR_VOLUME_BUY) {
    this.CURRENT_HOUR_VOLUME_BUY = CURRENT_HOUR_VOLUME_BUY;
  }

  /**
   * The sum of all sell trade quantities from the start of the current hour until now. Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all sell trade quantities from the start of the current hour until now. Given in the base asset.")
  public Integer getCURRENTHOURVOLUMESELL() {
    return CURRENT_HOUR_VOLUME_SELL;
  }
  public void setCURRENTHOURVOLUMESELL(Integer CURRENT_HOUR_VOLUME_SELL) {
    this.CURRENT_HOUR_VOLUME_SELL = CURRENT_HOUR_VOLUME_SELL;
  }

  /**
   * The sum of all trade quote quantities from the start of the current hour until now. Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quote quantities from the start of the current hour until now. Given in the base asset.")
  public Integer getCURRENTHOURVOLUMEUNKNOWN() {
    return CURRENT_HOUR_VOLUME_UNKNOWN;
  }
  public void setCURRENTHOURVOLUMEUNKNOWN(Integer CURRENT_HOUR_VOLUME_UNKNOWN) {
    this.CURRENT_HOUR_VOLUME_UNKNOWN = CURRENT_HOUR_VOLUME_UNKNOWN;
  }

  /**
   * The highest traded price of the month excluding the current day. The period will run from the 1st of the month - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the month. If today is the 1st of the month, this value will be CURRENT_MONTH_OPEN. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The highest traded price of the month excluding the current day. The period will run from the 1st of the month - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the month. If today is the 1st of the month, this value will be CURRENT_MONTH_OPEN. Given in the quote asset.")
  public Integer getCURRENTMONTHHIGH() {
    return CURRENT_MONTH_HIGH;
  }
  public void setCURRENTMONTHHIGH(Integer CURRENT_MONTH_HIGH) {
    this.CURRENT_MONTH_HIGH = CURRENT_MONTH_HIGH;
  }

  /**
   * The lowest traded price of the month excluding the current day. The period will run from the 1st of the month - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the month. If today is the 1st of the month, this value will be CURRENT_MONTH_OPEN. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The lowest traded price of the month excluding the current day. The period will run from the 1st of the month - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the month. If today is the 1st of the month, this value will be CURRENT_MONTH_OPEN. Given in the quote asset.")
  public Integer getCURRENTMONTHLOW() {
    return CURRENT_MONTH_LOW;
  }
  public void setCURRENTMONTHLOW(Integer CURRENT_MONTH_LOW) {
    this.CURRENT_MONTH_LOW = CURRENT_MONTH_LOW;
  }

  /**
   * The price of the closest trade to the 1st day (00:00:00 GMT/UTC) of this month. In a highly liquid market, this would be the last trade that happened on the previous month at (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full monthly value. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The price of the closest trade to the 1st day (00:00:00 GMT/UTC) of this month. In a highly liquid market, this would be the last trade that happened on the previous month at (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full monthly value. Given in the quote asset.")
  public Integer getCURRENTMONTHOPEN() {
    return CURRENT_MONTH_OPEN;
  }
  public void setCURRENTMONTHOPEN(Integer CURRENT_MONTH_OPEN) {
    this.CURRENT_MONTH_OPEN = CURRENT_MONTH_OPEN;
  }

  /**
   * The sum of all trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset.")
  public Integer getCURRENTMONTHQUOTEVOLUME() {
    return CURRENT_MONTH_QUOTE_VOLUME;
  }
  public void setCURRENTMONTHQUOTEVOLUME(Integer CURRENT_MONTH_QUOTE_VOLUME) {
    this.CURRENT_MONTH_QUOTE_VOLUME = CURRENT_MONTH_QUOTE_VOLUME;
  }

  /**
   * The sum of all buy trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all buy trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset.")
  public Integer getCURRENTMONTHQUOTEVOLUMEBUY() {
    return CURRENT_MONTH_QUOTE_VOLUME_BUY;
  }
  public void setCURRENTMONTHQUOTEVOLUMEBUY(Integer CURRENT_MONTH_QUOTE_VOLUME_BUY) {
    this.CURRENT_MONTH_QUOTE_VOLUME_BUY = CURRENT_MONTH_QUOTE_VOLUME_BUY;
  }

  /**
   * The sum of all sell trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all sell trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset.")
  public Integer getCURRENTMONTHQUOTEVOLUMESELL() {
    return CURRENT_MONTH_QUOTE_VOLUME_SELL;
  }
  public void setCURRENTMONTHQUOTEVOLUMESELL(Integer CURRENT_MONTH_QUOTE_VOLUME_SELL) {
    this.CURRENT_MONTH_QUOTE_VOLUME_SELL = CURRENT_MONTH_QUOTE_VOLUME_SELL;
  }

  /**
   * The sum of all unknown trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all unknown trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset.")
  public Integer getCURRENTMONTHQUOTEVOLUMEUNKNOWN() {
    return CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN;
  }
  public void setCURRENTMONTHQUOTEVOLUMEUNKNOWN(Integer CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN) {
    this.CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN = CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN;
  }

  /**
   * The total number of trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0.
   **/
  @ApiModelProperty(value = "The total number of trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0.")
  public Integer getCURRENTMONTHTOTALTRADES() {
    return CURRENT_MONTH_TOTAL_TRADES;
  }
  public void setCURRENTMONTHTOTALTRADES(Integer CURRENT_MONTH_TOTAL_TRADES) {
    this.CURRENT_MONTH_TOTAL_TRADES = CURRENT_MONTH_TOTAL_TRADES;
  }

  /**
   * The total number of buy trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0.
   **/
  @ApiModelProperty(value = "The total number of buy trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0.")
  public Integer getCURRENTMONTHTOTALTRADESBUY() {
    return CURRENT_MONTH_TOTAL_TRADES_BUY;
  }
  public void setCURRENTMONTHTOTALTRADESBUY(Integer CURRENT_MONTH_TOTAL_TRADES_BUY) {
    this.CURRENT_MONTH_TOTAL_TRADES_BUY = CURRENT_MONTH_TOTAL_TRADES_BUY;
  }

  /**
   * The total number of sell trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0.
   **/
  @ApiModelProperty(value = "The total number of sell trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0.")
  public Integer getCURRENTMONTHTOTALTRADESSELL() {
    return CURRENT_MONTH_TOTAL_TRADES_SELL;
  }
  public void setCURRENTMONTHTOTALTRADESSELL(Integer CURRENT_MONTH_TOTAL_TRADES_SELL) {
    this.CURRENT_MONTH_TOTAL_TRADES_SELL = CURRENT_MONTH_TOTAL_TRADES_SELL;
  }

  /**
   * The total number of unknown trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0.
   **/
  @ApiModelProperty(value = "The total number of unknown trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0.")
  public Integer getCURRENTMONTHTOTALTRADESUNKNOWN() {
    return CURRENT_MONTH_TOTAL_TRADES_UNKNOWN;
  }
  public void setCURRENTMONTHTOTALTRADESUNKNOWN(Integer CURRENT_MONTH_TOTAL_TRADES_UNKNOWN) {
    this.CURRENT_MONTH_TOTAL_TRADES_UNKNOWN = CURRENT_MONTH_TOTAL_TRADES_UNKNOWN;
  }

  /**
   * The sum of all trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset.")
  public Integer getCURRENTMONTHVOLUME() {
    return CURRENT_MONTH_VOLUME;
  }
  public void setCURRENTMONTHVOLUME(Integer CURRENT_MONTH_VOLUME) {
    this.CURRENT_MONTH_VOLUME = CURRENT_MONTH_VOLUME;
  }

  /**
   * The sum of all buy trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all buy trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset.")
  public Integer getCURRENTMONTHVOLUMEBUY() {
    return CURRENT_MONTH_VOLUME_BUY;
  }
  public void setCURRENTMONTHVOLUMEBUY(Integer CURRENT_MONTH_VOLUME_BUY) {
    this.CURRENT_MONTH_VOLUME_BUY = CURRENT_MONTH_VOLUME_BUY;
  }

  /**
   * The sum of all sell trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all sell trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset.")
  public Integer getCURRENTMONTHVOLUMESELL() {
    return CURRENT_MONTH_VOLUME_SELL;
  }
  public void setCURRENTMONTHVOLUMESELL(Integer CURRENT_MONTH_VOLUME_SELL) {
    this.CURRENT_MONTH_VOLUME_SELL = CURRENT_MONTH_VOLUME_SELL;
  }

  /**
   * The sum of all unknown trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all unknown trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset.")
  public Integer getCURRENTMONTHVOLUMEUNKNOWN() {
    return CURRENT_MONTH_VOLUME_UNKNOWN;
  }
  public void setCURRENTMONTHVOLUMEUNKNOWN(Integer CURRENT_MONTH_VOLUME_UNKNOWN) {
    this.CURRENT_MONTH_VOLUME_UNKNOWN = CURRENT_MONTH_VOLUME_UNKNOWN;
  }

  /**
   * The highest traded price of the week excluding the current day. The period will run from Monday - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the week. If today is Monday, this value will be the same as CURRENT_WEEK_OPEN. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The highest traded price of the week excluding the current day. The period will run from Monday - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the week. If today is Monday, this value will be the same as CURRENT_WEEK_OPEN. Given in the quote asset.")
  public Integer getCURRENTWEEKHIGH() {
    return CURRENT_WEEK_HIGH;
  }
  public void setCURRENTWEEKHIGH(Integer CURRENT_WEEK_HIGH) {
    this.CURRENT_WEEK_HIGH = CURRENT_WEEK_HIGH;
  }

  /**
   * The lowest traded price of the week excluding the current day. The period will run from Monday - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the week. If today is Monday, this value will be CURRENT_WEEK_LOW. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The lowest traded price of the week excluding the current day. The period will run from Monday - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the week. If today is Monday, this value will be CURRENT_WEEK_LOW. Given in the quote asset.")
  public Integer getCURRENTWEEKLOW() {
    return CURRENT_WEEK_LOW;
  }
  public void setCURRENTWEEKLOW(Integer CURRENT_WEEK_LOW) {
    this.CURRENT_WEEK_LOW = CURRENT_WEEK_LOW;
  }

  /**
   * The price of the closest trade to Monday (00:00:00 GMT/UTC) of this week. In a highly liquid market, this would be the last trade that happened on the previous Sunday at (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full weekly value. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The price of the closest trade to Monday (00:00:00 GMT/UTC) of this week. In a highly liquid market, this would be the last trade that happened on the previous Sunday at (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full weekly value. Given in the quote asset.")
  public Integer getCURRENTWEEKOPEN() {
    return CURRENT_WEEK_OPEN;
  }
  public void setCURRENTWEEKOPEN(Integer CURRENT_WEEK_OPEN) {
    this.CURRENT_WEEK_OPEN = CURRENT_WEEK_OPEN;
  }

  /**
   * The sum of all trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset.")
  public Integer getCURRENTWEEKQUOTEVOLUME() {
    return CURRENT_WEEK_QUOTE_VOLUME;
  }
  public void setCURRENTWEEKQUOTEVOLUME(Integer CURRENT_WEEK_QUOTE_VOLUME) {
    this.CURRENT_WEEK_QUOTE_VOLUME = CURRENT_WEEK_QUOTE_VOLUME;
  }

  /**
   * The sum of all buy trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all buy trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset.")
  public Integer getCURRENTWEEKQUOTEVOLUMEBUY() {
    return CURRENT_WEEK_QUOTE_VOLUME_BUY;
  }
  public void setCURRENTWEEKQUOTEVOLUMEBUY(Integer CURRENT_WEEK_QUOTE_VOLUME_BUY) {
    this.CURRENT_WEEK_QUOTE_VOLUME_BUY = CURRENT_WEEK_QUOTE_VOLUME_BUY;
  }

  /**
   * The sum of all sell trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all sell trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset.")
  public Integer getCURRENTWEEKQUOTEVOLUMESELL() {
    return CURRENT_WEEK_QUOTE_VOLUME_SELL;
  }
  public void setCURRENTWEEKQUOTEVOLUMESELL(Integer CURRENT_WEEK_QUOTE_VOLUME_SELL) {
    this.CURRENT_WEEK_QUOTE_VOLUME_SELL = CURRENT_WEEK_QUOTE_VOLUME_SELL;
  }

  /**
   * The sum of all unknown trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all unknown trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset.")
  public Integer getCURRENTWEEKQUOTEVOLUMEUNKNOWN() {
    return CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN;
  }
  public void setCURRENTWEEKQUOTEVOLUMEUNKNOWN(Integer CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN) {
    this.CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN = CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN;
  }

  /**
   * The total number of trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0.
   **/
  @ApiModelProperty(value = "The total number of trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0.")
  public Integer getCURRENTWEEKTOTALTRADES() {
    return CURRENT_WEEK_TOTAL_TRADES;
  }
  public void setCURRENTWEEKTOTALTRADES(Integer CURRENT_WEEK_TOTAL_TRADES) {
    this.CURRENT_WEEK_TOTAL_TRADES = CURRENT_WEEK_TOTAL_TRADES;
  }

  /**
   * The total number of buy trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0.
   **/
  @ApiModelProperty(value = "The total number of buy trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0.")
  public Integer getCURRENTWEEKTOTALTRADESBUY() {
    return CURRENT_WEEK_TOTAL_TRADES_BUY;
  }
  public void setCURRENTWEEKTOTALTRADESBUY(Integer CURRENT_WEEK_TOTAL_TRADES_BUY) {
    this.CURRENT_WEEK_TOTAL_TRADES_BUY = CURRENT_WEEK_TOTAL_TRADES_BUY;
  }

  /**
   * The total number of sell trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0.
   **/
  @ApiModelProperty(value = "The total number of sell trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0.")
  public Integer getCURRENTWEEKTOTALTRADESSELL() {
    return CURRENT_WEEK_TOTAL_TRADES_SELL;
  }
  public void setCURRENTWEEKTOTALTRADESSELL(Integer CURRENT_WEEK_TOTAL_TRADES_SELL) {
    this.CURRENT_WEEK_TOTAL_TRADES_SELL = CURRENT_WEEK_TOTAL_TRADES_SELL;
  }

  /**
   * The total number of unknown trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0.
   **/
  @ApiModelProperty(value = "The total number of unknown trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0.")
  public Integer getCURRENTWEEKTOTALTRADESUNKNOWN() {
    return CURRENT_WEEK_TOTAL_TRADES_UNKNOWN;
  }
  public void setCURRENTWEEKTOTALTRADESUNKNOWN(Integer CURRENT_WEEK_TOTAL_TRADES_UNKNOWN) {
    this.CURRENT_WEEK_TOTAL_TRADES_UNKNOWN = CURRENT_WEEK_TOTAL_TRADES_UNKNOWN;
  }

  /**
   * The sum of all trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset.")
  public Integer getCURRENTWEEKVOLUME() {
    return CURRENT_WEEK_VOLUME;
  }
  public void setCURRENTWEEKVOLUME(Integer CURRENT_WEEK_VOLUME) {
    this.CURRENT_WEEK_VOLUME = CURRENT_WEEK_VOLUME;
  }

  /**
   * The sum of all buy trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all buy trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset.")
  public Integer getCURRENTWEEKVOLUMEBUY() {
    return CURRENT_WEEK_VOLUME_BUY;
  }
  public void setCURRENTWEEKVOLUMEBUY(Integer CURRENT_WEEK_VOLUME_BUY) {
    this.CURRENT_WEEK_VOLUME_BUY = CURRENT_WEEK_VOLUME_BUY;
  }

  /**
   * The sum of all sell trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all sell trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset.")
  public Integer getCURRENTWEEKVOLUMESELL() {
    return CURRENT_WEEK_VOLUME_SELL;
  }
  public void setCURRENTWEEKVOLUMESELL(Integer CURRENT_WEEK_VOLUME_SELL) {
    this.CURRENT_WEEK_VOLUME_SELL = CURRENT_WEEK_VOLUME_SELL;
  }

  /**
   * The sum of all unknown trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all unknown trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset.")
  public Integer getCURRENTWEEKVOLUMEUNKNOWN() {
    return CURRENT_WEEK_VOLUME_UNKNOWN;
  }
  public void setCURRENTWEEKVOLUMEUNKNOWN(Integer CURRENT_WEEK_VOLUME_UNKNOWN) {
    this.CURRENT_WEEK_VOLUME_UNKNOWN = CURRENT_WEEK_VOLUME_UNKNOWN;
  }

  /**
   * The highest traded price of the year excluding the current day. The period runs from the 1st of January - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the year. If today is the 1st of January, this value will be CURRENT_YEAR_OPEN. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The highest traded price of the year excluding the current day. The period runs from the 1st of January - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the year. If today is the 1st of January, this value will be CURRENT_YEAR_OPEN. Given in the quote asset.")
  public Integer getCURRENTYEARHIGH() {
    return CURRENT_YEAR_HIGH;
  }
  public void setCURRENTYEARHIGH(Integer CURRENT_YEAR_HIGH) {
    this.CURRENT_YEAR_HIGH = CURRENT_YEAR_HIGH;
  }

  /**
   * The lowest traded price of the year excluding the current day. The period runs from the 1st of January - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the year. If today is the 1st of January, this value will be CURRENT_YEAR_OPEN. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The lowest traded price of the year excluding the current day. The period runs from the 1st of January - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the year. If today is the 1st of January, this value will be CURRENT_YEAR_OPEN. Given in the quote asset.")
  public Integer getCURRENTYEARLOW() {
    return CURRENT_YEAR_LOW;
  }
  public void setCURRENTYEARLOW(Integer CURRENT_YEAR_LOW) {
    this.CURRENT_YEAR_LOW = CURRENT_YEAR_LOW;
  }

  /**
   * The price of the closest trade to the 1st of January (00:00:00 GMT/UTC) of this year. In a highly liquid market, this would be the last trade that happened on on the 31st of December of the previous year (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full yearly value. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The price of the closest trade to the 1st of January (00:00:00 GMT/UTC) of this year. In a highly liquid market, this would be the last trade that happened on on the 31st of December of the previous year (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full yearly value. Given in the quote asset.")
  public Integer getCURRENTYEAROPEN() {
    return CURRENT_YEAR_OPEN;
  }
  public void setCURRENTYEAROPEN(Integer CURRENT_YEAR_OPEN) {
    this.CURRENT_YEAR_OPEN = CURRENT_YEAR_OPEN;
  }

  /**
   * The sum of all trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset.")
  public Integer getCURRENTYEARQUOTEVOLUME() {
    return CURRENT_YEAR_QUOTE_VOLUME;
  }
  public void setCURRENTYEARQUOTEVOLUME(Integer CURRENT_YEAR_QUOTE_VOLUME) {
    this.CURRENT_YEAR_QUOTE_VOLUME = CURRENT_YEAR_QUOTE_VOLUME;
  }

  /**
   * The sum of all buy trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all buy trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset.")
  public Integer getCURRENTYEARQUOTEVOLUMEBUY() {
    return CURRENT_YEAR_QUOTE_VOLUME_BUY;
  }
  public void setCURRENTYEARQUOTEVOLUMEBUY(Integer CURRENT_YEAR_QUOTE_VOLUME_BUY) {
    this.CURRENT_YEAR_QUOTE_VOLUME_BUY = CURRENT_YEAR_QUOTE_VOLUME_BUY;
  }

  /**
   * The sum of all sell trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all sell trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset.")
  public Integer getCURRENTYEARQUOTEVOLUMESELL() {
    return CURRENT_YEAR_QUOTE_VOLUME_SELL;
  }
  public void setCURRENTYEARQUOTEVOLUMESELL(Integer CURRENT_YEAR_QUOTE_VOLUME_SELL) {
    this.CURRENT_YEAR_QUOTE_VOLUME_SELL = CURRENT_YEAR_QUOTE_VOLUME_SELL;
  }

  /**
   * The sum of all unknown trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all unknown trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset.")
  public Integer getCURRENTYEARQUOTEVOLUMEUNKNOWN() {
    return CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN;
  }
  public void setCURRENTYEARQUOTEVOLUMEUNKNOWN(Integer CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN) {
    this.CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN = CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN;
  }

  /**
   * The total number of trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0.
   **/
  @ApiModelProperty(value = "The total number of trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0.")
  public Integer getCURRENTYEARTOTALTRADES() {
    return CURRENT_YEAR_TOTAL_TRADES;
  }
  public void setCURRENTYEARTOTALTRADES(Integer CURRENT_YEAR_TOTAL_TRADES) {
    this.CURRENT_YEAR_TOTAL_TRADES = CURRENT_YEAR_TOTAL_TRADES;
  }

  /**
   * The total number of buy trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0.
   **/
  @ApiModelProperty(value = "The total number of buy trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0.")
  public Integer getCURRENTYEARTOTALTRADESBUY() {
    return CURRENT_YEAR_TOTAL_TRADES_BUY;
  }
  public void setCURRENTYEARTOTALTRADESBUY(Integer CURRENT_YEAR_TOTAL_TRADES_BUY) {
    this.CURRENT_YEAR_TOTAL_TRADES_BUY = CURRENT_YEAR_TOTAL_TRADES_BUY;
  }

  /**
   * The total number of sell trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0.
   **/
  @ApiModelProperty(value = "The total number of sell trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0.")
  public Integer getCURRENTYEARTOTALTRADESSELL() {
    return CURRENT_YEAR_TOTAL_TRADES_SELL;
  }
  public void setCURRENTYEARTOTALTRADESSELL(Integer CURRENT_YEAR_TOTAL_TRADES_SELL) {
    this.CURRENT_YEAR_TOTAL_TRADES_SELL = CURRENT_YEAR_TOTAL_TRADES_SELL;
  }

  /**
   * The total number of unknown trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0.
   **/
  @ApiModelProperty(value = "The total number of unknown trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0.")
  public Integer getCURRENTYEARTOTALTRADESUNKNOWN() {
    return CURRENT_YEAR_TOTAL_TRADES_UNKNOWN;
  }
  public void setCURRENTYEARTOTALTRADESUNKNOWN(Integer CURRENT_YEAR_TOTAL_TRADES_UNKNOWN) {
    this.CURRENT_YEAR_TOTAL_TRADES_UNKNOWN = CURRENT_YEAR_TOTAL_TRADES_UNKNOWN;
  }

  /**
   * The sum of all trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset.")
  public Integer getCURRENTYEARVOLUME() {
    return CURRENT_YEAR_VOLUME;
  }
  public void setCURRENTYEARVOLUME(Integer CURRENT_YEAR_VOLUME) {
    this.CURRENT_YEAR_VOLUME = CURRENT_YEAR_VOLUME;
  }

  /**
   * The sum of all buy trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all buy trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset.")
  public Integer getCURRENTYEARVOLUMEBUY() {
    return CURRENT_YEAR_VOLUME_BUY;
  }
  public void setCURRENTYEARVOLUMEBUY(Integer CURRENT_YEAR_VOLUME_BUY) {
    this.CURRENT_YEAR_VOLUME_BUY = CURRENT_YEAR_VOLUME_BUY;
  }

  /**
   * The sum of all sell trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all sell trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset.")
  public Integer getCURRENTYEARVOLUMESELL() {
    return CURRENT_YEAR_VOLUME_SELL;
  }
  public void setCURRENTYEARVOLUMESELL(Integer CURRENT_YEAR_VOLUME_SELL) {
    this.CURRENT_YEAR_VOLUME_SELL = CURRENT_YEAR_VOLUME_SELL;
  }

  /**
   * The sum of all unknown trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all unknown trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset.")
  public Integer getCURRENTYEARVOLUMEUNKNOWN() {
    return CURRENT_YEAR_VOLUME_UNKNOWN;
  }
  public void setCURRENTYEARVOLUMEUNKNOWN(Integer CURRENT_YEAR_VOLUME_UNKNOWN) {
    this.CURRENT_YEAR_VOLUME_UNKNOWN = CURRENT_YEAR_VOLUME_UNKNOWN;
  }

  /**
   * The unmapped instrument ID
   **/
  @ApiModelProperty(value = "The unmapped instrument ID")
  public String getINSTRUMENT() {
    return INSTRUMENT;
  }
  public void setINSTRUMENT(String INSTRUMENT) {
    this.INSTRUMENT = INSTRUMENT;
  }

  /**
   * The CCSEQ of the latest trade.
   **/
  @ApiModelProperty(value = "The CCSEQ of the latest trade.")
  public String getLASTPROCESSEDTRADECCSEQ() {
    return LAST_PROCESSED_TRADE_CCSEQ;
  }
  public void setLASTPROCESSEDTRADECCSEQ(String LAST_PROCESSED_TRADE_CCSEQ) {
    this.LAST_PROCESSED_TRADE_CCSEQ = LAST_PROCESSED_TRADE_CCSEQ;
  }

  /**
   * The price in the quote asset of the last trade processed, as reported by the market / exchange.
   **/
  @ApiModelProperty(value = "The price in the quote asset of the last trade processed, as reported by the market / exchange.")
  public Integer getLASTPROCESSEDTRADEPRICE() {
    return LAST_PROCESSED_TRADE_PRICE;
  }
  public void setLASTPROCESSEDTRADEPRICE(Integer LAST_PROCESSED_TRADE_PRICE) {
    this.LAST_PROCESSED_TRADE_PRICE = LAST_PROCESSED_TRADE_PRICE;
  }

  /**
   * The quantity of the last processed trade in the from symbol (base / coin).
   **/
  @ApiModelProperty(value = "The quantity of the last processed trade in the from symbol (base / coin).")
  public Integer getLASTPROCESSEDTRADEQUANTITY() {
    return LAST_PROCESSED_TRADE_QUANTITY;
  }
  public void setLASTPROCESSEDTRADEQUANTITY(Integer LAST_PROCESSED_TRADE_QUANTITY) {
    this.LAST_PROCESSED_TRADE_QUANTITY = LAST_PROCESSED_TRADE_QUANTITY;
  }

  /**
   * The  volume of the last processed trade in the to asset / quote.
   **/
  @ApiModelProperty(value = "The  volume of the last processed trade in the to asset / quote.")
  public Integer getLASTPROCESSEDTRADEQUOTEQUANTITY() {
    return LAST_PROCESSED_TRADE_QUOTE_QUANTITY;
  }
  public void setLASTPROCESSEDTRADEQUOTEQUANTITY(Integer LAST_PROCESSED_TRADE_QUOTE_QUANTITY) {
    this.LAST_PROCESSED_TRADE_QUOTE_QUANTITY = LAST_PROCESSED_TRADE_QUOTE_QUANTITY;
  }

  /**
   * The side of the last processed trade.
   **/
  @ApiModelProperty(value = "The side of the last processed trade.")
  public String getLASTPROCESSEDTRADESIDE() {
    return LAST_PROCESSED_TRADE_SIDE;
  }
  public void setLASTPROCESSEDTRADESIDE(String LAST_PROCESSED_TRADE_SIDE) {
    this.LAST_PROCESSED_TRADE_SIDE = LAST_PROCESSED_TRADE_SIDE;
  }

  /**
   * The timestamp in seconds that the last trade was processed, as reported by the market / exchange. If the market / exchange does not provide this information, the timestamp that the trade was received will be returned.
   **/
  @ApiModelProperty(value = "The timestamp in seconds that the last trade was processed, as reported by the market / exchange. If the market / exchange does not provide this information, the timestamp that the trade was received will be returned.")
  public Integer getLASTPROCESSEDTRADETS() {
    return LAST_PROCESSED_TRADE_TS;
  }
  public void setLASTPROCESSEDTRADETS(Integer LAST_PROCESSED_TRADE_TS) {
    this.LAST_PROCESSED_TRADE_TS = LAST_PROCESSED_TRADE_TS;
  }

  /**
   * The CCSEQ of the latest trade.
   **/
  @ApiModelProperty(value = "The CCSEQ of the latest trade.")
  public String getLASTTRADECCSEQ() {
    return LAST_TRADE_CCSEQ;
  }
  public void setLASTTRADECCSEQ(String LAST_TRADE_CCSEQ) {
    this.LAST_TRADE_CCSEQ = LAST_TRADE_CCSEQ;
  }

  /**
   * The ID of the latest trade.
   **/
  @ApiModelProperty(value = "The ID of the latest trade.")
  public String getLASTTRADEID() {
    return LAST_TRADE_ID;
  }
  public void setLASTTRADEID(String LAST_TRADE_ID) {
    this.LAST_TRADE_ID = LAST_TRADE_ID;
  }

  /**
   * The quantity of the latest trade in the from symbol (base / coin).
   **/
  @ApiModelProperty(value = "The quantity of the latest trade in the from symbol (base / coin).")
  public Integer getLASTTRADEQUANTITY() {
    return LAST_TRADE_QUANTITY;
  }
  public void setLASTTRADEQUANTITY(Integer LAST_TRADE_QUANTITY) {
    this.LAST_TRADE_QUANTITY = LAST_TRADE_QUANTITY;
  }

  /**
   * The volume of the latest trade in the to asset / quote.
   **/
  @ApiModelProperty(value = "The volume of the latest trade in the to asset / quote.")
  public Integer getLASTTRADEQUOTEQUANTITY() {
    return LAST_TRADE_QUOTE_QUANTITY;
  }
  public void setLASTTRADEQUOTEQUANTITY(Integer LAST_TRADE_QUOTE_QUANTITY) {
    this.LAST_TRADE_QUOTE_QUANTITY = LAST_TRADE_QUOTE_QUANTITY;
  }

  /**
   * The side of the latest trade.
   **/
  @ApiModelProperty(value = "The side of the latest trade.")
  public String getLASTTRADESIDE() {
    return LAST_TRADE_SIDE;
  }
  public void setLASTTRADESIDE(String LAST_TRADE_SIDE) {
    this.LAST_TRADE_SIDE = LAST_TRADE_SIDE;
  }

  /**
   * The timestamp of the first trade ever recorded for the instrument
   **/
  @ApiModelProperty(value = "The timestamp of the first trade ever recorded for the instrument")
  public Integer getLIFETIMEFIRSTTRADETS() {
    return LIFETIME_FIRST_TRADE_TS;
  }
  public void setLIFETIMEFIRSTTRADETS(Integer LIFETIME_FIRST_TRADE_TS) {
    this.LIFETIME_FIRST_TRADE_TS = LIFETIME_FIRST_TRADE_TS;
  }

  /**
   * The price of the highest trade ever executed for this instrument. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The price of the highest trade ever executed for this instrument. Given in the quote asset.")
  public Integer getLIFETIMEHIGH() {
    return LIFETIME_HIGH;
  }
  public void setLIFETIMEHIGH(Integer LIFETIME_HIGH) {
    this.LIFETIME_HIGH = LIFETIME_HIGH;
  }

  /**
   * The the timestamp of the highest trade ever executed for this instrument. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The the timestamp of the highest trade ever executed for this instrument. Given in the quote asset.")
  public Integer getLIFETIMEHIGHTS() {
    return LIFETIME_HIGH_TS;
  }
  public void setLIFETIMEHIGHTS(Integer LIFETIME_HIGH_TS) {
    this.LIFETIME_HIGH_TS = LIFETIME_HIGH_TS;
  }

  /**
   * The price of the lowest trade ever executed for this instrument. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The price of the lowest trade ever executed for this instrument. Given in the quote asset.")
  public Integer getLIFETIMELOW() {
    return LIFETIME_LOW;
  }
  public void setLIFETIMELOW(Integer LIFETIME_LOW) {
    this.LIFETIME_LOW = LIFETIME_LOW;
  }

  /**
   * The timestamp of the lowest trade ever executed for this instrument. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The timestamp of the lowest trade ever executed for this instrument. Given in the quote asset.")
  public Integer getLIFETIMELOWTS() {
    return LIFETIME_LOW_TS;
  }
  public void setLIFETIMELOWTS(Integer LIFETIME_LOW_TS) {
    this.LIFETIME_LOW_TS = LIFETIME_LOW_TS;
  }

  /**
   * The price of the first trade of the instrument. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The price of the first trade of the instrument. Given in the quote asset.")
  public Integer getLIFETIMEOPEN() {
    return LIFETIME_OPEN;
  }
  public void setLIFETIMEOPEN(Integer LIFETIME_OPEN) {
    this.LIFETIME_OPEN = LIFETIME_OPEN;
  }

  /**
   * The sum of all trade quote quantities of all the trades of this instrument. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quote quantities of all the trades of this instrument. Given in the quote asset.")
  public Integer getLIFETIMEQUOTEVOLUME() {
    return LIFETIME_QUOTE_VOLUME;
  }
  public void setLIFETIMEQUOTEVOLUME(Integer LIFETIME_QUOTE_VOLUME) {
    this.LIFETIME_QUOTE_VOLUME = LIFETIME_QUOTE_VOLUME;
  }

  /**
   * The sum of all buy trade quote quantities of all the trades of this instrument. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all buy trade quote quantities of all the trades of this instrument. Given in the quote asset.")
  public Integer getLIFETIMEQUOTEVOLUMEBUY() {
    return LIFETIME_QUOTE_VOLUME_BUY;
  }
  public void setLIFETIMEQUOTEVOLUMEBUY(Integer LIFETIME_QUOTE_VOLUME_BUY) {
    this.LIFETIME_QUOTE_VOLUME_BUY = LIFETIME_QUOTE_VOLUME_BUY;
  }

  /**
   * The sum of all sell trade quote quantities of all the trades of this instrument. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all sell trade quote quantities of all the trades of this instrument. Given in the quote asset.")
  public Integer getLIFETIMEQUOTEVOLUMESELL() {
    return LIFETIME_QUOTE_VOLUME_SELL;
  }
  public void setLIFETIMEQUOTEVOLUMESELL(Integer LIFETIME_QUOTE_VOLUME_SELL) {
    this.LIFETIME_QUOTE_VOLUME_SELL = LIFETIME_QUOTE_VOLUME_SELL;
  }

  /**
   * The sum of all unknown trade quote quantities of all the trades of this instrument. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all unknown trade quote quantities of all the trades of this instrument. Given in the quote asset.")
  public Integer getLIFETIMEQUOTEVOLUMEUNKNOWN() {
    return LIFETIME_QUOTE_VOLUME_UNKNOWN;
  }
  public void setLIFETIMEQUOTEVOLUMEUNKNOWN(Integer LIFETIME_QUOTE_VOLUME_UNKNOWN) {
    this.LIFETIME_QUOTE_VOLUME_UNKNOWN = LIFETIME_QUOTE_VOLUME_UNKNOWN;
  }

  /**
   * The total number of all trades that have ever been executed for this instrument.
   **/
  @ApiModelProperty(value = "The total number of all trades that have ever been executed for this instrument.")
  public Integer getLIFETIMETOTALTRADES() {
    return LIFETIME_TOTAL_TRADES;
  }
  public void setLIFETIMETOTALTRADES(Integer LIFETIME_TOTAL_TRADES) {
    this.LIFETIME_TOTAL_TRADES = LIFETIME_TOTAL_TRADES;
  }

  /**
   * The total number of all buy trades that have ever been executed for this instrument.
   **/
  @ApiModelProperty(value = "The total number of all buy trades that have ever been executed for this instrument.")
  public Integer getLIFETIMETOTALTRADESBUY() {
    return LIFETIME_TOTAL_TRADES_BUY;
  }
  public void setLIFETIMETOTALTRADESBUY(Integer LIFETIME_TOTAL_TRADES_BUY) {
    this.LIFETIME_TOTAL_TRADES_BUY = LIFETIME_TOTAL_TRADES_BUY;
  }

  /**
   * The total number of all sell trades that have ever been executed for this instrument.
   **/
  @ApiModelProperty(value = "The total number of all sell trades that have ever been executed for this instrument.")
  public Integer getLIFETIMETOTALTRADESSELL() {
    return LIFETIME_TOTAL_TRADES_SELL;
  }
  public void setLIFETIMETOTALTRADESSELL(Integer LIFETIME_TOTAL_TRADES_SELL) {
    this.LIFETIME_TOTAL_TRADES_SELL = LIFETIME_TOTAL_TRADES_SELL;
  }

  /**
   * The total number of all unknown trades that have ever been executed for this instrument.
   **/
  @ApiModelProperty(value = "The total number of all unknown trades that have ever been executed for this instrument.")
  public Integer getLIFETIMETOTALTRADESUNKNOWN() {
    return LIFETIME_TOTAL_TRADES_UNKNOWN;
  }
  public void setLIFETIMETOTALTRADESUNKNOWN(Integer LIFETIME_TOTAL_TRADES_UNKNOWN) {
    this.LIFETIME_TOTAL_TRADES_UNKNOWN = LIFETIME_TOTAL_TRADES_UNKNOWN;
  }

  /**
   * The sum of all trade quantities of all the trades of this instrument. Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quantities of all the trades of this instrument. Given in the base asset.")
  public Integer getLIFETIMEVOLUME() {
    return LIFETIME_VOLUME;
  }
  public void setLIFETIMEVOLUME(Integer LIFETIME_VOLUME) {
    this.LIFETIME_VOLUME = LIFETIME_VOLUME;
  }

  /**
   * The sum of all buy trade quantities of all the trades of this instrument. Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all buy trade quantities of all the trades of this instrument. Given in the base asset.")
  public Integer getLIFETIMEVOLUMEBUY() {
    return LIFETIME_VOLUME_BUY;
  }
  public void setLIFETIMEVOLUMEBUY(Integer LIFETIME_VOLUME_BUY) {
    this.LIFETIME_VOLUME_BUY = LIFETIME_VOLUME_BUY;
  }

  /**
   * The sum of all sell trade quantities of all the trades of this instrument. Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all sell trade quantities of all the trades of this instrument. Given in the base asset.")
  public Integer getLIFETIMEVOLUMESELL() {
    return LIFETIME_VOLUME_SELL;
  }
  public void setLIFETIMEVOLUMESELL(Integer LIFETIME_VOLUME_SELL) {
    this.LIFETIME_VOLUME_SELL = LIFETIME_VOLUME_SELL;
  }

  /**
   * The sum of all unknown trade quantities of all the trades of this instrument. Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all unknown trade quantities of all the trades of this instrument. Given in the base asset.")
  public Integer getLIFETIMEVOLUMEUNKNOWN() {
    return LIFETIME_VOLUME_UNKNOWN;
  }
  public void setLIFETIMEVOLUMEUNKNOWN(Integer LIFETIME_VOLUME_UNKNOWN) {
    this.LIFETIME_VOLUME_UNKNOWN = LIFETIME_VOLUME_UNKNOWN;
  }

  /**
   * The mapped instrument ID, derived from our mapping rules. This takes the form: \"BASE-QUOTE\" (e.g. BTC-USD). Only available on instruments that have been mapped.
   **/
  @ApiModelProperty(value = "The mapped instrument ID, derived from our mapping rules. This takes the form: \"BASE-QUOTE\" (e.g. BTC-USD). Only available on instruments that have been mapped.")
  public String getMAPPEDINSTRUMENT() {
    return MAPPED_INSTRUMENT;
  }
  public void setMAPPEDINSTRUMENT(String MAPPED_INSTRUMENT) {
    this.MAPPED_INSTRUMENT = MAPPED_INSTRUMENT;
  }

  /**
   * The market / exchange under consideration (e.g. coinbase, kraken, etc).
   **/
  @ApiModelProperty(value = "The market / exchange under consideration (e.g. coinbase, kraken, etc).")
  public String getMARKET() {
    return MARKET;
  }
  public void setMARKET(String MARKET) {
    this.MARKET = MARKET;
  }

  /**
   * The  highest traded price of the period. Here, the period runs from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The  highest traded price of the period. Here, the period runs from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.")
  public Integer getMOVING180DAYHIGH() {
    return mOVING180DAYHIGH;
  }
  public void setMOVING180DAYHIGH(Integer mOVING180DAYHIGH) {
    this.mOVING180DAYHIGH = mOVING180DAYHIGH;
  }

  /**
   * The lowest traded price of the period. Here, the period runs from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The lowest traded price of the period. Here, the period runs from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.")
  public Integer getMOVING180DAYLOW() {
    return mOVING180DAYLOW;
  }
  public void setMOVING180DAYLOW(Integer mOVING180DAYLOW) {
    this.mOVING180DAYLOW = mOVING180DAYLOW;
  }

  /**
   * The price of the closest trade to the period start date (179 days + current day - 00:00:00 GMT/UTC to now). This will always be supplied and there is no need to do any calculation to get the full 180 day value. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The price of the closest trade to the period start date (179 days + current day - 00:00:00 GMT/UTC to now). This will always be supplied and there is no need to do any calculation to get the full 180 day value. Given in the quote asset.")
  public Integer getMOVING180DAYOPEN() {
    return mOVING180DAYOPEN;
  }
  public void setMOVING180DAYOPEN(Integer mOVING180DAYOPEN) {
    this.mOVING180DAYOPEN = mOVING180DAYOPEN;
  }

  /**
   * The sum of all trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.")
  public Integer getMOVING180DAYQUOTEVOLUME() {
    return mOVING180DAYQUOTEVOLUME;
  }
  public void setMOVING180DAYQUOTEVOLUME(Integer mOVING180DAYQUOTEVOLUME) {
    this.mOVING180DAYQUOTEVOLUME = mOVING180DAYQUOTEVOLUME;
  }

  /**
   * The sum of all buy trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all buy trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.")
  public Integer getMOVING180DAYQUOTEVOLUMEBUY() {
    return mOVING180DAYQUOTEVOLUMEBUY;
  }
  public void setMOVING180DAYQUOTEVOLUMEBUY(Integer mOVING180DAYQUOTEVOLUMEBUY) {
    this.mOVING180DAYQUOTEVOLUMEBUY = mOVING180DAYQUOTEVOLUMEBUY;
  }

  /**
   * The sum of all sell trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all sell trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.")
  public Integer getMOVING180DAYQUOTEVOLUMESELL() {
    return mOVING180DAYQUOTEVOLUMESELL;
  }
  public void setMOVING180DAYQUOTEVOLUMESELL(Integer mOVING180DAYQUOTEVOLUMESELL) {
    this.mOVING180DAYQUOTEVOLUMESELL = mOVING180DAYQUOTEVOLUMESELL;
  }

  /**
   * The sum of all unknown trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all unknown trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.")
  public Integer getMOVING180DAYQUOTEVOLUMEUNKNOWN() {
    return mOVING180DAYQUOTEVOLUMEUNKNOWN;
  }
  public void setMOVING180DAYQUOTEVOLUMEUNKNOWN(Integer mOVING180DAYQUOTEVOLUMEUNKNOWN) {
    this.mOVING180DAYQUOTEVOLUMEUNKNOWN = mOVING180DAYQUOTEVOLUMEUNKNOWN;
  }

  /**
   * The total number of trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total).
   **/
  @ApiModelProperty(value = "The total number of trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total).")
  public Integer getMOVING180DAYTOTALTRADES() {
    return mOVING180DAYTOTALTRADES;
  }
  public void setMOVING180DAYTOTALTRADES(Integer mOVING180DAYTOTALTRADES) {
    this.mOVING180DAYTOTALTRADES = mOVING180DAYTOTALTRADES;
  }

  /**
   * The total number of buy trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total).
   **/
  @ApiModelProperty(value = "The total number of buy trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total).")
  public Integer getMOVING180DAYTOTALTRADESBUY() {
    return mOVING180DAYTOTALTRADESBUY;
  }
  public void setMOVING180DAYTOTALTRADESBUY(Integer mOVING180DAYTOTALTRADESBUY) {
    this.mOVING180DAYTOTALTRADESBUY = mOVING180DAYTOTALTRADESBUY;
  }

  /**
   * The total number of sell trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total).
   **/
  @ApiModelProperty(value = "The total number of sell trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total).")
  public Integer getMOVING180DAYTOTALTRADESSELL() {
    return mOVING180DAYTOTALTRADESSELL;
  }
  public void setMOVING180DAYTOTALTRADESSELL(Integer mOVING180DAYTOTALTRADESSELL) {
    this.mOVING180DAYTOTALTRADESSELL = mOVING180DAYTOTALTRADESSELL;
  }

  /**
   * The total number of unknown trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total).
   **/
  @ApiModelProperty(value = "The total number of unknown trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total).")
  public Integer getMOVING180DAYTOTALTRADESUNKNOWN() {
    return mOVING180DAYTOTALTRADESUNKNOWN;
  }
  public void setMOVING180DAYTOTALTRADESUNKNOWN(Integer mOVING180DAYTOTALTRADESUNKNOWN) {
    this.mOVING180DAYTOTALTRADESUNKNOWN = mOVING180DAYTOTALTRADESUNKNOWN;
  }

  /**
   * The sum of all trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset.")
  public Integer getMOVING180DAYVOLUME() {
    return mOVING180DAYVOLUME;
  }
  public void setMOVING180DAYVOLUME(Integer mOVING180DAYVOLUME) {
    this.mOVING180DAYVOLUME = mOVING180DAYVOLUME;
  }

  /**
   * The sum of all trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset.")
  public Integer getMOVING180DAYVOLUMEBUY() {
    return mOVING180DAYVOLUMEBUY;
  }
  public void setMOVING180DAYVOLUMEBUY(Integer mOVING180DAYVOLUMEBUY) {
    this.mOVING180DAYVOLUMEBUY = mOVING180DAYVOLUMEBUY;
  }

  /**
   * The sum of all sell trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all sell trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset.")
  public Integer getMOVING180DAYVOLUMESELL() {
    return mOVING180DAYVOLUMESELL;
  }
  public void setMOVING180DAYVOLUMESELL(Integer mOVING180DAYVOLUMESELL) {
    this.mOVING180DAYVOLUMESELL = mOVING180DAYVOLUMESELL;
  }

  /**
   * The sum of all unknown trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all unknown trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset.")
  public Integer getMOVING180DAYVOLUMEUNKNOWN() {
    return mOVING180DAYVOLUMEUNKNOWN;
  }
  public void setMOVING180DAYVOLUMEUNKNOWN(Integer mOVING180DAYVOLUMEUNKNOWN) {
    this.mOVING180DAYVOLUMEUNKNOWN = mOVING180DAYVOLUMEUNKNOWN;
  }

  /**
   * The highest traded price of the period. Here, the period runs from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The highest traded price of the period. Here, the period runs from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.")
  public Integer getMOVING24HOURHIGH() {
    return mOVING24HOURHIGH;
  }
  public void setMOVING24HOURHIGH(Integer mOVING24HOURHIGH) {
    this.mOVING24HOURHIGH = mOVING24HOURHIGH;
  }

  /**
   * The lowest traded price of the period. Here, the period runs from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The lowest traded price of the period. Here, the period runs from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.")
  public Integer getMOVING24HOURLOW() {
    return mOVING24HOURLOW;
  }
  public void setMOVING24HOURLOW(Integer mOVING24HOURLOW) {
    this.mOVING24HOURLOW = mOVING24HOURLOW;
  }

  /**
   * The price of the closest trade to the period start date (23 hours + current hour ago). This will always be supplied and there is no need to do any calculation to get the full 24 hour value. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The price of the closest trade to the period start date (23 hours + current hour ago). This will always be supplied and there is no need to do any calculation to get the full 24 hour value. Given in the quote asset.")
  public Integer getMOVING24HOUROPEN() {
    return mOVING24HOUROPEN;
  }
  public void setMOVING24HOUROPEN(Integer mOVING24HOUROPEN) {
    this.mOVING24HOUROPEN = mOVING24HOUROPEN;
  }

  /**
   * The sum of all trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.")
  public Integer getMOVING24HOURQUOTEVOLUME() {
    return mOVING24HOURQUOTEVOLUME;
  }
  public void setMOVING24HOURQUOTEVOLUME(Integer mOVING24HOURQUOTEVOLUME) {
    this.mOVING24HOURQUOTEVOLUME = mOVING24HOURQUOTEVOLUME;
  }

  /**
   * The sum of all buy trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all buy trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.")
  public Integer getMOVING24HOURQUOTEVOLUMEBUY() {
    return mOVING24HOURQUOTEVOLUMEBUY;
  }
  public void setMOVING24HOURQUOTEVOLUMEBUY(Integer mOVING24HOURQUOTEVOLUMEBUY) {
    this.mOVING24HOURQUOTEVOLUMEBUY = mOVING24HOURQUOTEVOLUMEBUY;
  }

  /**
   * The sum of all sell trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all sell trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.")
  public Integer getMOVING24HOURQUOTEVOLUMESELL() {
    return mOVING24HOURQUOTEVOLUMESELL;
  }
  public void setMOVING24HOURQUOTEVOLUMESELL(Integer mOVING24HOURQUOTEVOLUMESELL) {
    this.mOVING24HOURQUOTEVOLUMESELL = mOVING24HOURQUOTEVOLUMESELL;
  }

  /**
   * The sum of all unknown trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all unknown trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.")
  public Integer getMOVING24HOURQUOTEVOLUMEUNKNOWN() {
    return mOVING24HOURQUOTEVOLUMEUNKNOWN;
  }
  public void setMOVING24HOURQUOTEVOLUMEUNKNOWN(Integer mOVING24HOURQUOTEVOLUMEUNKNOWN) {
    this.mOVING24HOURQUOTEVOLUMEUNKNOWN = mOVING24HOURQUOTEVOLUMEUNKNOWN;
  }

  /**
   * The total number of trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total).
   **/
  @ApiModelProperty(value = "The total number of trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total).")
  public Integer getMOVING24HOURTOTALTRADES() {
    return mOVING24HOURTOTALTRADES;
  }
  public void setMOVING24HOURTOTALTRADES(Integer mOVING24HOURTOTALTRADES) {
    this.mOVING24HOURTOTALTRADES = mOVING24HOURTOTALTRADES;
  }

  /**
   * The total number of buy trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total).
   **/
  @ApiModelProperty(value = "The total number of buy trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total).")
  public Integer getMOVING24HOURTOTALTRADESBUY() {
    return mOVING24HOURTOTALTRADESBUY;
  }
  public void setMOVING24HOURTOTALTRADESBUY(Integer mOVING24HOURTOTALTRADESBUY) {
    this.mOVING24HOURTOTALTRADESBUY = mOVING24HOURTOTALTRADESBUY;
  }

  /**
   * The total number of sell trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total).
   **/
  @ApiModelProperty(value = "The total number of sell trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total).")
  public Integer getMOVING24HOURTOTALTRADESSELL() {
    return mOVING24HOURTOTALTRADESSELL;
  }
  public void setMOVING24HOURTOTALTRADESSELL(Integer mOVING24HOURTOTALTRADESSELL) {
    this.mOVING24HOURTOTALTRADESSELL = mOVING24HOURTOTALTRADESSELL;
  }

  /**
   * The total number of unknown trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total).
   **/
  @ApiModelProperty(value = "The total number of unknown trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total).")
  public Integer getMOVING24HOURTOTALTRADESUNKNOWN() {
    return mOVING24HOURTOTALTRADESUNKNOWN;
  }
  public void setMOVING24HOURTOTALTRADESUNKNOWN(Integer mOVING24HOURTOTALTRADESUNKNOWN) {
    this.mOVING24HOURTOTALTRADESUNKNOWN = mOVING24HOURTOTALTRADESUNKNOWN;
  }

  /**
   * The sum of all trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset.")
  public Integer getMOVING24HOURVOLUME() {
    return mOVING24HOURVOLUME;
  }
  public void setMOVING24HOURVOLUME(Integer mOVING24HOURVOLUME) {
    this.mOVING24HOURVOLUME = mOVING24HOURVOLUME;
  }

  /**
   * The sum of all buy trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all buy trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset.")
  public Integer getMOVING24HOURVOLUMEBUY() {
    return mOVING24HOURVOLUMEBUY;
  }
  public void setMOVING24HOURVOLUMEBUY(Integer mOVING24HOURVOLUMEBUY) {
    this.mOVING24HOURVOLUMEBUY = mOVING24HOURVOLUMEBUY;
  }

  /**
   * The sum of all sell trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all sell trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset.")
  public Integer getMOVING24HOURVOLUMESELL() {
    return mOVING24HOURVOLUMESELL;
  }
  public void setMOVING24HOURVOLUMESELL(Integer mOVING24HOURVOLUMESELL) {
    this.mOVING24HOURVOLUMESELL = mOVING24HOURVOLUMESELL;
  }

  /**
   * The sum of all unknown trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all unknown trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset.")
  public Integer getMOVING24HOURVOLUMEUNKNOWN() {
    return mOVING24HOURVOLUMEUNKNOWN;
  }
  public void setMOVING24HOURVOLUMEUNKNOWN(Integer mOVING24HOURVOLUMEUNKNOWN) {
    this.mOVING24HOURVOLUMEUNKNOWN = mOVING24HOURVOLUMEUNKNOWN;
  }

  /**
   * The highest traded price of the period. Here, the period runs from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The highest traded price of the period. Here, the period runs from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.")
  public Integer getMOVING30DAYHIGH() {
    return mOVING30DAYHIGH;
  }
  public void setMOVING30DAYHIGH(Integer mOVING30DAYHIGH) {
    this.mOVING30DAYHIGH = mOVING30DAYHIGH;
  }

  /**
   * The lowest traded price of the period. Here, the period runs from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The lowest traded price of the period. Here, the period runs from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.")
  public Integer getMOVING30DAYLOW() {
    return mOVING30DAYLOW;
  }
  public void setMOVING30DAYLOW(Integer mOVING30DAYLOW) {
    this.mOVING30DAYLOW = mOVING30DAYLOW;
  }

  /**
   * The price of the closest trade to the period start date (29 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 30 day value. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The price of the closest trade to the period start date (29 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 30 day value. Given in the quote asset.")
  public Integer getMOVING30DAYOPEN() {
    return mOVING30DAYOPEN;
  }
  public void setMOVING30DAYOPEN(Integer mOVING30DAYOPEN) {
    this.mOVING30DAYOPEN = mOVING30DAYOPEN;
  }

  /**
   * The sum of all trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.")
  public Integer getMOVING30DAYQUOTEVOLUME() {
    return mOVING30DAYQUOTEVOLUME;
  }
  public void setMOVING30DAYQUOTEVOLUME(Integer mOVING30DAYQUOTEVOLUME) {
    this.mOVING30DAYQUOTEVOLUME = mOVING30DAYQUOTEVOLUME;
  }

  /**
   * The sum of all buy trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all buy trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.")
  public Integer getMOVING30DAYQUOTEVOLUMEBUY() {
    return mOVING30DAYQUOTEVOLUMEBUY;
  }
  public void setMOVING30DAYQUOTEVOLUMEBUY(Integer mOVING30DAYQUOTEVOLUMEBUY) {
    this.mOVING30DAYQUOTEVOLUMEBUY = mOVING30DAYQUOTEVOLUMEBUY;
  }

  /**
   * The sum of all sell trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all sell trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.")
  public Integer getMOVING30DAYQUOTEVOLUMESELL() {
    return mOVING30DAYQUOTEVOLUMESELL;
  }
  public void setMOVING30DAYQUOTEVOLUMESELL(Integer mOVING30DAYQUOTEVOLUMESELL) {
    this.mOVING30DAYQUOTEVOLUMESELL = mOVING30DAYQUOTEVOLUMESELL;
  }

  /**
   * The sum of all unknown trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all unknown trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.")
  public Integer getMOVING30DAYQUOTEVOLUMEUNKNOWN() {
    return mOVING30DAYQUOTEVOLUMEUNKNOWN;
  }
  public void setMOVING30DAYQUOTEVOLUMEUNKNOWN(Integer mOVING30DAYQUOTEVOLUMEUNKNOWN) {
    this.mOVING30DAYQUOTEVOLUMEUNKNOWN = mOVING30DAYQUOTEVOLUMEUNKNOWN;
  }

  /**
   * The total number of trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total).
   **/
  @ApiModelProperty(value = "The total number of trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total).")
  public Integer getMOVING30DAYTOTALTRADES() {
    return mOVING30DAYTOTALTRADES;
  }
  public void setMOVING30DAYTOTALTRADES(Integer mOVING30DAYTOTALTRADES) {
    this.mOVING30DAYTOTALTRADES = mOVING30DAYTOTALTRADES;
  }

  /**
   * The total number of buy trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total).
   **/
  @ApiModelProperty(value = "The total number of buy trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total).")
  public Integer getMOVING30DAYTOTALTRADESBUY() {
    return mOVING30DAYTOTALTRADESBUY;
  }
  public void setMOVING30DAYTOTALTRADESBUY(Integer mOVING30DAYTOTALTRADESBUY) {
    this.mOVING30DAYTOTALTRADESBUY = mOVING30DAYTOTALTRADESBUY;
  }

  /**
   * The total number of sell trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total).
   **/
  @ApiModelProperty(value = "The total number of sell trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total).")
  public Integer getMOVING30DAYTOTALTRADESSELL() {
    return mOVING30DAYTOTALTRADESSELL;
  }
  public void setMOVING30DAYTOTALTRADESSELL(Integer mOVING30DAYTOTALTRADESSELL) {
    this.mOVING30DAYTOTALTRADESSELL = mOVING30DAYTOTALTRADESSELL;
  }

  /**
   * The total number of unknown trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total).
   **/
  @ApiModelProperty(value = "The total number of unknown trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total).")
  public Integer getMOVING30DAYTOTALTRADESUNKNOWN() {
    return mOVING30DAYTOTALTRADESUNKNOWN;
  }
  public void setMOVING30DAYTOTALTRADESUNKNOWN(Integer mOVING30DAYTOTALTRADESUNKNOWN) {
    this.mOVING30DAYTOTALTRADESUNKNOWN = mOVING30DAYTOTALTRADESUNKNOWN;
  }

  /**
   * The sum of all trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset.")
  public Integer getMOVING30DAYVOLUME() {
    return mOVING30DAYVOLUME;
  }
  public void setMOVING30DAYVOLUME(Integer mOVING30DAYVOLUME) {
    this.mOVING30DAYVOLUME = mOVING30DAYVOLUME;
  }

  /**
   * The sum of all buy trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all buy trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset.")
  public Integer getMOVING30DAYVOLUMEBUY() {
    return mOVING30DAYVOLUMEBUY;
  }
  public void setMOVING30DAYVOLUMEBUY(Integer mOVING30DAYVOLUMEBUY) {
    this.mOVING30DAYVOLUMEBUY = mOVING30DAYVOLUMEBUY;
  }

  /**
   * The sum of all sell trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all sell trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset.")
  public Integer getMOVING30DAYVOLUMESELL() {
    return mOVING30DAYVOLUMESELL;
  }
  public void setMOVING30DAYVOLUMESELL(Integer mOVING30DAYVOLUMESELL) {
    this.mOVING30DAYVOLUMESELL = mOVING30DAYVOLUMESELL;
  }

  /**
   * The sum of all unknown trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all unknown trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset.")
  public Integer getMOVING30DAYVOLUMEUNKNOWN() {
    return mOVING30DAYVOLUMEUNKNOWN;
  }
  public void setMOVING30DAYVOLUMEUNKNOWN(Integer mOVING30DAYVOLUMEUNKNOWN) {
    this.mOVING30DAYVOLUMEUNKNOWN = mOVING30DAYVOLUMEUNKNOWN;
  }

  /**
   * The highest price of the period. Here, the period runs from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The highest price of the period. Here, the period runs from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.")
  public Integer getMOVING365DAYHIGH() {
    return mOVING365DAYHIGH;
  }
  public void setMOVING365DAYHIGH(Integer mOVING365DAYHIGH) {
    this.mOVING365DAYHIGH = mOVING365DAYHIGH;
  }

  /**
   * The lowest traded price of the period. Here, the period runs from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The lowest traded price of the period. Here, the period runs from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.")
  public Integer getMOVING365DAYLOW() {
    return mOVING365DAYLOW;
  }
  public void setMOVING365DAYLOW(Integer mOVING365DAYLOW) {
    this.mOVING365DAYLOW = mOVING365DAYLOW;
  }

  /**
   * The price of the closest trade to the period start date (364 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 365 day value. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The price of the closest trade to the period start date (364 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 365 day value. Given in the quote asset.")
  public Integer getMOVING365DAYOPEN() {
    return mOVING365DAYOPEN;
  }
  public void setMOVING365DAYOPEN(Integer mOVING365DAYOPEN) {
    this.mOVING365DAYOPEN = mOVING365DAYOPEN;
  }

  /**
   * The sum of all trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.")
  public Integer getMOVING365DAYQUOTEVOLUME() {
    return mOVING365DAYQUOTEVOLUME;
  }
  public void setMOVING365DAYQUOTEVOLUME(Integer mOVING365DAYQUOTEVOLUME) {
    this.mOVING365DAYQUOTEVOLUME = mOVING365DAYQUOTEVOLUME;
  }

  /**
   * The sum of all buy trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all buy trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.")
  public Integer getMOVING365DAYQUOTEVOLUMEBUY() {
    return mOVING365DAYQUOTEVOLUMEBUY;
  }
  public void setMOVING365DAYQUOTEVOLUMEBUY(Integer mOVING365DAYQUOTEVOLUMEBUY) {
    this.mOVING365DAYQUOTEVOLUMEBUY = mOVING365DAYQUOTEVOLUMEBUY;
  }

  /**
   * The sum of all sell trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all sell trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.")
  public Integer getMOVING365DAYQUOTEVOLUMESELL() {
    return mOVING365DAYQUOTEVOLUMESELL;
  }
  public void setMOVING365DAYQUOTEVOLUMESELL(Integer mOVING365DAYQUOTEVOLUMESELL) {
    this.mOVING365DAYQUOTEVOLUMESELL = mOVING365DAYQUOTEVOLUMESELL;
  }

  /**
   * The sum of all unknown trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all unknown trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.")
  public Integer getMOVING365DAYQUOTEVOLUMEUNKNOWN() {
    return mOVING365DAYQUOTEVOLUMEUNKNOWN;
  }
  public void setMOVING365DAYQUOTEVOLUMEUNKNOWN(Integer mOVING365DAYQUOTEVOLUMEUNKNOWN) {
    this.mOVING365DAYQUOTEVOLUMEUNKNOWN = mOVING365DAYQUOTEVOLUMEUNKNOWN;
  }

  /**
   * The total number of trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total).
   **/
  @ApiModelProperty(value = "The total number of trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total).")
  public Integer getMOVING365DAYTOTALTRADES() {
    return mOVING365DAYTOTALTRADES;
  }
  public void setMOVING365DAYTOTALTRADES(Integer mOVING365DAYTOTALTRADES) {
    this.mOVING365DAYTOTALTRADES = mOVING365DAYTOTALTRADES;
  }

  /**
   * The total number of buy trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total).
   **/
  @ApiModelProperty(value = "The total number of buy trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total).")
  public Integer getMOVING365DAYTOTALTRADESBUY() {
    return mOVING365DAYTOTALTRADESBUY;
  }
  public void setMOVING365DAYTOTALTRADESBUY(Integer mOVING365DAYTOTALTRADESBUY) {
    this.mOVING365DAYTOTALTRADESBUY = mOVING365DAYTOTALTRADESBUY;
  }

  /**
   * The total number of sell trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total).
   **/
  @ApiModelProperty(value = "The total number of sell trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total).")
  public Integer getMOVING365DAYTOTALTRADESSELL() {
    return mOVING365DAYTOTALTRADESSELL;
  }
  public void setMOVING365DAYTOTALTRADESSELL(Integer mOVING365DAYTOTALTRADESSELL) {
    this.mOVING365DAYTOTALTRADESSELL = mOVING365DAYTOTALTRADESSELL;
  }

  /**
   * The total number of unknown trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total).
   **/
  @ApiModelProperty(value = "The total number of unknown trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total).")
  public Integer getMOVING365DAYTOTALTRADESUNKNOWN() {
    return mOVING365DAYTOTALTRADESUNKNOWN;
  }
  public void setMOVING365DAYTOTALTRADESUNKNOWN(Integer mOVING365DAYTOTALTRADESUNKNOWN) {
    this.mOVING365DAYTOTALTRADESUNKNOWN = mOVING365DAYTOTALTRADESUNKNOWN;
  }

  /**
   * The sum of all trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset.")
  public Integer getMOVING365DAYVOLUME() {
    return mOVING365DAYVOLUME;
  }
  public void setMOVING365DAYVOLUME(Integer mOVING365DAYVOLUME) {
    this.mOVING365DAYVOLUME = mOVING365DAYVOLUME;
  }

  /**
   * The sum of all trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset.")
  public Integer getMOVING365DAYVOLUMEBUY() {
    return mOVING365DAYVOLUMEBUY;
  }
  public void setMOVING365DAYVOLUMEBUY(Integer mOVING365DAYVOLUMEBUY) {
    this.mOVING365DAYVOLUMEBUY = mOVING365DAYVOLUMEBUY;
  }

  /**
   * The sum of all sell trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all sell trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset.")
  public Integer getMOVING365DAYVOLUMESELL() {
    return mOVING365DAYVOLUMESELL;
  }
  public void setMOVING365DAYVOLUMESELL(Integer mOVING365DAYVOLUMESELL) {
    this.mOVING365DAYVOLUMESELL = mOVING365DAYVOLUMESELL;
  }

  /**
   * The sum of all unknown trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all unknown trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset.")
  public Integer getMOVING365DAYVOLUMEUNKNOWN() {
    return mOVING365DAYVOLUMEUNKNOWN;
  }
  public void setMOVING365DAYVOLUMEUNKNOWN(Integer mOVING365DAYVOLUMEUNKNOWN) {
    this.mOVING365DAYVOLUMEUNKNOWN = mOVING365DAYVOLUMEUNKNOWN;
  }

  /**
   * The highest traded price of the period. Here, the period runs from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The highest traded price of the period. Here, the period runs from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.")
  public Integer getMOVING7DAYHIGH() {
    return mOVING7DAYHIGH;
  }
  public void setMOVING7DAYHIGH(Integer mOVING7DAYHIGH) {
    this.mOVING7DAYHIGH = mOVING7DAYHIGH;
  }

  /**
   * The lowest traded price of the period. Here, the period runs from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The lowest traded price of the period. Here, the period runs from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.")
  public Integer getMOVING7DAYLOW() {
    return mOVING7DAYLOW;
  }
  public void setMOVING7DAYLOW(Integer mOVING7DAYLOW) {
    this.mOVING7DAYLOW = mOVING7DAYLOW;
  }

  /**
   * The price of the closest trade to the period start date (6 days + current day - 00:00:00 GMT/UTC to now). This will always be supplied and there is no need to do any calculation to get the full 7 day value. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The price of the closest trade to the period start date (6 days + current day - 00:00:00 GMT/UTC to now). This will always be supplied and there is no need to do any calculation to get the full 7 day value. Given in the quote asset.")
  public Integer getMOVING7DAYOPEN() {
    return mOVING7DAYOPEN;
  }
  public void setMOVING7DAYOPEN(Integer mOVING7DAYOPEN) {
    this.mOVING7DAYOPEN = mOVING7DAYOPEN;
  }

  /**
   * The sum of all trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.")
  public Integer getMOVING7DAYQUOTEVOLUME() {
    return mOVING7DAYQUOTEVOLUME;
  }
  public void setMOVING7DAYQUOTEVOLUME(Integer mOVING7DAYQUOTEVOLUME) {
    this.mOVING7DAYQUOTEVOLUME = mOVING7DAYQUOTEVOLUME;
  }

  /**
   * The sum of all buy trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all buy trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.")
  public Integer getMOVING7DAYQUOTEVOLUMEBUY() {
    return mOVING7DAYQUOTEVOLUMEBUY;
  }
  public void setMOVING7DAYQUOTEVOLUMEBUY(Integer mOVING7DAYQUOTEVOLUMEBUY) {
    this.mOVING7DAYQUOTEVOLUMEBUY = mOVING7DAYQUOTEVOLUMEBUY;
  }

  /**
   * The sum of all sell trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all sell trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.")
  public Integer getMOVING7DAYQUOTEVOLUMESELL() {
    return mOVING7DAYQUOTEVOLUMESELL;
  }
  public void setMOVING7DAYQUOTEVOLUMESELL(Integer mOVING7DAYQUOTEVOLUMESELL) {
    this.mOVING7DAYQUOTEVOLUMESELL = mOVING7DAYQUOTEVOLUMESELL;
  }

  /**
   * The sum of all unknown trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all unknown trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.")
  public Integer getMOVING7DAYQUOTEVOLUMEUNKNOWN() {
    return mOVING7DAYQUOTEVOLUMEUNKNOWN;
  }
  public void setMOVING7DAYQUOTEVOLUMEUNKNOWN(Integer mOVING7DAYQUOTEVOLUMEUNKNOWN) {
    this.mOVING7DAYQUOTEVOLUMEUNKNOWN = mOVING7DAYQUOTEVOLUMEUNKNOWN;
  }

  /**
   * The total number of trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total).
   **/
  @ApiModelProperty(value = "The total number of trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total).")
  public Integer getMOVING7DAYTOTALTRADES() {
    return mOVING7DAYTOTALTRADES;
  }
  public void setMOVING7DAYTOTALTRADES(Integer mOVING7DAYTOTALTRADES) {
    this.mOVING7DAYTOTALTRADES = mOVING7DAYTOTALTRADES;
  }

  /**
   * The total number of buy trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total).
   **/
  @ApiModelProperty(value = "The total number of buy trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total).")
  public Integer getMOVING7DAYTOTALTRADESBUY() {
    return mOVING7DAYTOTALTRADESBUY;
  }
  public void setMOVING7DAYTOTALTRADESBUY(Integer mOVING7DAYTOTALTRADESBUY) {
    this.mOVING7DAYTOTALTRADESBUY = mOVING7DAYTOTALTRADESBUY;
  }

  /**
   * The total number of sell trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total).
   **/
  @ApiModelProperty(value = "The total number of sell trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total).")
  public Integer getMOVING7DAYTOTALTRADESSELL() {
    return mOVING7DAYTOTALTRADESSELL;
  }
  public void setMOVING7DAYTOTALTRADESSELL(Integer mOVING7DAYTOTALTRADESSELL) {
    this.mOVING7DAYTOTALTRADESSELL = mOVING7DAYTOTALTRADESSELL;
  }

  /**
   * The total number of unknown trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total).
   **/
  @ApiModelProperty(value = "The total number of unknown trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total).")
  public Integer getMOVING7DAYTOTALTRADESUNKNOWN() {
    return mOVING7DAYTOTALTRADESUNKNOWN;
  }
  public void setMOVING7DAYTOTALTRADESUNKNOWN(Integer mOVING7DAYTOTALTRADESUNKNOWN) {
    this.mOVING7DAYTOTALTRADESUNKNOWN = mOVING7DAYTOTALTRADESUNKNOWN;
  }

  /**
   * The sum of all trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset.")
  public Integer getMOVING7DAYVOLUME() {
    return mOVING7DAYVOLUME;
  }
  public void setMOVING7DAYVOLUME(Integer mOVING7DAYVOLUME) {
    this.mOVING7DAYVOLUME = mOVING7DAYVOLUME;
  }

  /**
   * The sum of all buy trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all buy trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset.")
  public Integer getMOVING7DAYVOLUMEBUY() {
    return mOVING7DAYVOLUMEBUY;
  }
  public void setMOVING7DAYVOLUMEBUY(Integer mOVING7DAYVOLUMEBUY) {
    this.mOVING7DAYVOLUMEBUY = mOVING7DAYVOLUMEBUY;
  }

  /**
   * The sum of all sell trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all sell trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset.")
  public Integer getMOVING7DAYVOLUMESELL() {
    return mOVING7DAYVOLUMESELL;
  }
  public void setMOVING7DAYVOLUMESELL(Integer mOVING7DAYVOLUMESELL) {
    this.mOVING7DAYVOLUMESELL = mOVING7DAYVOLUMESELL;
  }

  /**
   * The sum of all unknown trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all unknown trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset.")
  public Integer getMOVING7DAYVOLUMEUNKNOWN() {
    return mOVING7DAYVOLUMEUNKNOWN;
  }
  public void setMOVING7DAYVOLUMEUNKNOWN(Integer mOVING7DAYVOLUMEUNKNOWN) {
    this.mOVING7DAYVOLUMEUNKNOWN = mOVING7DAYVOLUMEUNKNOWN;
  }

  /**
   * The highest value between the MOVING_90_DAY_OPEN and the highest traded price of the period. Here, the period runs from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The highest value between the MOVING_90_DAY_OPEN and the highest traded price of the period. Here, the period runs from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.")
  public Integer getMOVING90DAYHIGH() {
    return mOVING90DAYHIGH;
  }
  public void setMOVING90DAYHIGH(Integer mOVING90DAYHIGH) {
    this.mOVING90DAYHIGH = mOVING90DAYHIGH;
  }

  /**
   * The lowest traded price of the period. Here, the period runs from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The lowest traded price of the period. Here, the period runs from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.")
  public Integer getMOVING90DAYLOW() {
    return mOVING90DAYLOW;
  }
  public void setMOVING90DAYLOW(Integer mOVING90DAYLOW) {
    this.mOVING90DAYLOW = mOVING90DAYLOW;
  }

  /**
   * The price of the closest trade to the period start date (89 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 90 day value. Given in the quote asset.
   **/
  @ApiModelProperty(value = "The price of the closest trade to the period start date (89 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 90 day value. Given in the quote asset.")
  public Integer getMOVING90DAYOPEN() {
    return mOVING90DAYOPEN;
  }
  public void setMOVING90DAYOPEN(Integer mOVING90DAYOPEN) {
    this.mOVING90DAYOPEN = mOVING90DAYOPEN;
  }

  /**
   * The sum of all trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.")
  public Integer getMOVING90DAYQUOTEVOLUME() {
    return mOVING90DAYQUOTEVOLUME;
  }
  public void setMOVING90DAYQUOTEVOLUME(Integer mOVING90DAYQUOTEVOLUME) {
    this.mOVING90DAYQUOTEVOLUME = mOVING90DAYQUOTEVOLUME;
  }

  /**
   * The sum of all buy trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all buy trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.")
  public Integer getMOVING90DAYQUOTEVOLUMEBUY() {
    return mOVING90DAYQUOTEVOLUMEBUY;
  }
  public void setMOVING90DAYQUOTEVOLUMEBUY(Integer mOVING90DAYQUOTEVOLUMEBUY) {
    this.mOVING90DAYQUOTEVOLUMEBUY = mOVING90DAYQUOTEVOLUMEBUY;
  }

  /**
   * The sum of all sell trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all sell trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.")
  public Integer getMOVING90DAYQUOTEVOLUMESELL() {
    return mOVING90DAYQUOTEVOLUMESELL;
  }
  public void setMOVING90DAYQUOTEVOLUMESELL(Integer mOVING90DAYQUOTEVOLUMESELL) {
    this.mOVING90DAYQUOTEVOLUMESELL = mOVING90DAYQUOTEVOLUMESELL;
  }

  /**
   * The sum of all unknown trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.
   **/
  @ApiModelProperty(value = "The sum of all unknown trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.")
  public Integer getMOVING90DAYQUOTEVOLUMEUNKNOWN() {
    return mOVING90DAYQUOTEVOLUMEUNKNOWN;
  }
  public void setMOVING90DAYQUOTEVOLUMEUNKNOWN(Integer mOVING90DAYQUOTEVOLUMEUNKNOWN) {
    this.mOVING90DAYQUOTEVOLUMEUNKNOWN = mOVING90DAYQUOTEVOLUMEUNKNOWN;
  }

  /**
   * The total number of trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total).
   **/
  @ApiModelProperty(value = "The total number of trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total).")
  public Integer getMOVING90DAYTOTALTRADES() {
    return mOVING90DAYTOTALTRADES;
  }
  public void setMOVING90DAYTOTALTRADES(Integer mOVING90DAYTOTALTRADES) {
    this.mOVING90DAYTOTALTRADES = mOVING90DAYTOTALTRADES;
  }

  /**
   * The total number of buy trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total).
   **/
  @ApiModelProperty(value = "The total number of buy trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total).")
  public Integer getMOVING90DAYTOTALTRADESBUY() {
    return mOVING90DAYTOTALTRADESBUY;
  }
  public void setMOVING90DAYTOTALTRADESBUY(Integer mOVING90DAYTOTALTRADESBUY) {
    this.mOVING90DAYTOTALTRADESBUY = mOVING90DAYTOTALTRADESBUY;
  }

  /**
   * The total number of sell trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total).
   **/
  @ApiModelProperty(value = "The total number of sell trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total).")
  public Integer getMOVING90DAYTOTALTRADESSELL() {
    return mOVING90DAYTOTALTRADESSELL;
  }
  public void setMOVING90DAYTOTALTRADESSELL(Integer mOVING90DAYTOTALTRADESSELL) {
    this.mOVING90DAYTOTALTRADESSELL = mOVING90DAYTOTALTRADESSELL;
  }

  /**
   * The total number of unknown trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total).
   **/
  @ApiModelProperty(value = "The total number of unknown trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total).")
  public Integer getMOVING90DAYTOTALTRADESUNKNOWN() {
    return mOVING90DAYTOTALTRADESUNKNOWN;
  }
  public void setMOVING90DAYTOTALTRADESUNKNOWN(Integer mOVING90DAYTOTALTRADESUNKNOWN) {
    this.mOVING90DAYTOTALTRADESUNKNOWN = mOVING90DAYTOTALTRADESUNKNOWN;
  }

  /**
   * The sum of all trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset.")
  public Integer getMOVING90DAYVOLUME() {
    return mOVING90DAYVOLUME;
  }
  public void setMOVING90DAYVOLUME(Integer mOVING90DAYVOLUME) {
    this.mOVING90DAYVOLUME = mOVING90DAYVOLUME;
  }

  /**
   * The sum of all trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset.")
  public Integer getMOVING90DAYVOLUMEBUY() {
    return mOVING90DAYVOLUMEBUY;
  }
  public void setMOVING90DAYVOLUMEBUY(Integer mOVING90DAYVOLUMEBUY) {
    this.mOVING90DAYVOLUMEBUY = mOVING90DAYVOLUMEBUY;
  }

  /**
   * The sum of all sell trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all sell trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset.")
  public Integer getMOVING90DAYVOLUMESELL() {
    return mOVING90DAYVOLUMESELL;
  }
  public void setMOVING90DAYVOLUMESELL(Integer mOVING90DAYVOLUMESELL) {
    this.mOVING90DAYVOLUMESELL = mOVING90DAYVOLUMESELL;
  }

  /**
   * The sum of all unknown trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset.
   **/
  @ApiModelProperty(value = "The sum of all unknown trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset.")
  public Integer getMOVING90DAYVOLUMEUNKNOWN() {
    return mOVING90DAYVOLUMEUNKNOWN;
  }
  public void setMOVING90DAYVOLUMEUNKNOWN(Integer mOVING90DAYVOLUMEUNKNOWN) {
    this.mOVING90DAYVOLUMEUNKNOWN = mOVING90DAYVOLUMEUNKNOWN;
  }

  /**
   * The price in the to asset (quote / number symbol / coin) of the latest trade. I.e. for a BTC-USD trade, how much was paid for one BTC in USD).
   **/
  @ApiModelProperty(value = "The price in the to asset (quote / number symbol / coin) of the latest trade. I.e. for a BTC-USD trade, how much was paid for one BTC in USD).")
  public Integer getPRICE() {
    return PRICE;
  }
  public void setPRICE(Integer PRICE) {
    this.PRICE = PRICE;
  }

  /**
   * The flag indicating whether the price has increased, decreased, or not changed
   **/
  @ApiModelProperty(value = "The flag indicating whether the price has increased, decreased, or not changed")
  public String getPRICEFLAG() {
    return PRICE_FLAG;
  }
  public void setPRICEFLAG(String PRICE_FLAG) {
    this.PRICE_FLAG = PRICE_FLAG;
  }

  /**
   * The timestamp in seconds as reported by the market / exchange. If the market /exchange does not provide this information, the received timestamp will be returned.
   **/
  @ApiModelProperty(value = "The timestamp in seconds as reported by the market / exchange. If the market /exchange does not provide this information, the received timestamp will be returned.")
  public Integer getPRICELASTUPDATETS() {
    return PRICE_LAST_UPDATE_TS;
  }
  public void setPRICELASTUPDATETS(Integer PRICE_LAST_UPDATE_TS) {
    this.PRICE_LAST_UPDATE_TS = PRICE_LAST_UPDATE_TS;
  }

  /**
   * The mapped to asset (quote / counter symbol / coin), e.g. USD. Only available on instruments that have been mapped.
   **/
  @ApiModelProperty(value = "The mapped to asset (quote / counter symbol / coin), e.g. USD. Only available on instruments that have been mapped.")
  public String getQUOTE() {
    return QUOTE;
  }
  public void setQUOTE(String QUOTE) {
    this.QUOTE = QUOTE;
  }

  /**
   * The timestamp in seconds of the last time the top ask was updated, as reported by the market / exchange. If the market / exchange does not provide this information, the received timestamp will be returned.
   **/
  @ApiModelProperty(value = "The timestamp in seconds of the last time the top ask was updated, as reported by the market / exchange. If the market / exchange does not provide this information, the received timestamp will be returned.")
  public Integer getTOPASKLASTUPDATETS() {
    return TOP_ASK_LAST_UPDATE_TS;
  }
  public void setTOPASKLASTUPDATETS(Integer TOP_ASK_LAST_UPDATE_TS) {
    this.TOP_ASK_LAST_UPDATE_TS = TOP_ASK_LAST_UPDATE_TS;
  }

  /**
   * The price of the top ask in the to asset (quote / numberer symbol / coin). For a BTC-USD order book, this will be the best price someone is willing to sell some BTC in USD, as quoted for 1 full BTC.
   **/
  @ApiModelProperty(value = "The price of the top ask in the to asset (quote / numberer symbol / coin). For a BTC-USD order book, this will be the best price someone is willing to sell some BTC in USD, as quoted for 1 full BTC.")
  public Integer getTOPASKPRICE() {
    return TOP_ASK_PRICE;
  }
  public void setTOPASKPRICE(Integer TOP_ASK_PRICE) {
    this.TOP_ASK_PRICE = TOP_ASK_PRICE;
  }

  /**
   * The quantity of the top ask in the from asset (base / coin). For a BTC-USD order book, this will be the amount of BTC a person is willing to sell at the best price.
   **/
  @ApiModelProperty(value = "The quantity of the top ask in the from asset (base / coin). For a BTC-USD order book, this will be the amount of BTC a person is willing to sell at the best price.")
  public Integer getTOPASKQUANTITY() {
    return TOP_ASK_QUANTITY;
  }
  public void setTOPASKQUANTITY(Integer TOP_ASK_QUANTITY) {
    this.TOP_ASK_QUANTITY = TOP_ASK_QUANTITY;
  }

  /**
   * The timestamp in seconds of the last time the top bid was updated, as reported by the market / exchange. If the market / exchange does not provide this information, the received timestamp will be returned.
   **/
  @ApiModelProperty(value = "The timestamp in seconds of the last time the top bid was updated, as reported by the market / exchange. If the market / exchange does not provide this information, the received timestamp will be returned.")
  public Integer getTOPBIDLASTUPDATETS() {
    return TOP_BID_LAST_UPDATE_TS;
  }
  public void setTOPBIDLASTUPDATETS(Integer TOP_BID_LAST_UPDATE_TS) {
    this.TOP_BID_LAST_UPDATE_TS = TOP_BID_LAST_UPDATE_TS;
  }

  /**
   * The price of the top bid in the to asset (quote / numberer symbol / coin). For a BTC-USD order book, this will be the highest price a person is willing to pay for some BTC in USD, as quoted for 1 full BTC.
   **/
  @ApiModelProperty(value = "The price of the top bid in the to asset (quote / numberer symbol / coin). For a BTC-USD order book, this will be the highest price a person is willing to pay for some BTC in USD, as quoted for 1 full BTC.")
  public Integer getTOPBIDPRICE() {
    return TOP_BID_PRICE;
  }
  public void setTOPBIDPRICE(Integer TOP_BID_PRICE) {
    this.TOP_BID_PRICE = TOP_BID_PRICE;
  }

  /**
   * The quantity of the top bid in the from asset (base / coin). For a BTC-USD order book , this will be the amount of BTC someone is willing to buy at the best price.
   **/
  @ApiModelProperty(value = "The quantity of the top bid in the from asset (base / coin). For a BTC-USD order book , this will be the amount of BTC someone is willing to buy at the best price.")
  public Integer getTOPBIDQUANTITY() {
    return TOP_BID_QUANTITY;
  }
  public void setTOPBIDQUANTITY(Integer TOP_BID_QUANTITY) {
    this.TOP_BID_QUANTITY = TOP_BID_QUANTITY;
  }

  /**
   * The type of the message.
   **/
  @ApiModelProperty(value = "The type of the message.")
  public String getTYPE() {
    return TYPE;
  }
  public void setTYPE(String TYPE) {
    this.TYPE = TYPE;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SPOTINSTRUMENTMARKETDATA SPOT_INSTRUMENT_MARKET_DATA = (SPOTINSTRUMENTMARKETDATA) o;
    return (this.BASE == null ? SPOT_INSTRUMENT_MARKET_DATA.BASE == null : this.BASE.equals(SPOT_INSTRUMENT_MARKET_DATA.BASE)) &&
        (this.CCSEQ == null ? SPOT_INSTRUMENT_MARKET_DATA.CCSEQ == null : this.CCSEQ.equals(SPOT_INSTRUMENT_MARKET_DATA.CCSEQ)) &&
        (this.CURRENT_DAY_HIGH == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_HIGH == null : this.CURRENT_DAY_HIGH.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_HIGH)) &&
        (this.CURRENT_DAY_LOW == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_LOW == null : this.CURRENT_DAY_LOW.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_LOW)) &&
        (this.CURRENT_DAY_OPEN == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_OPEN == null : this.CURRENT_DAY_OPEN.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_OPEN)) &&
        (this.CURRENT_DAY_QUOTE_VOLUME == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_QUOTE_VOLUME == null : this.CURRENT_DAY_QUOTE_VOLUME.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_QUOTE_VOLUME)) &&
        (this.CURRENT_DAY_QUOTE_VOLUME_BUY == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_QUOTE_VOLUME_BUY == null : this.CURRENT_DAY_QUOTE_VOLUME_BUY.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_QUOTE_VOLUME_BUY)) &&
        (this.CURRENT_DAY_QUOTE_VOLUME_SELL == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_QUOTE_VOLUME_SELL == null : this.CURRENT_DAY_QUOTE_VOLUME_SELL.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_QUOTE_VOLUME_SELL)) &&
        (this.CURRENT_DAY_QUOTE_VOLUME_UNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_QUOTE_VOLUME_UNKNOWN == null : this.CURRENT_DAY_QUOTE_VOLUME_UNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_QUOTE_VOLUME_UNKNOWN)) &&
        (this.CURRENT_DAY_TOTAL_TRADES == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_TOTAL_TRADES == null : this.CURRENT_DAY_TOTAL_TRADES.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_TOTAL_TRADES)) &&
        (this.CURRENT_DAY_TOTAL_TRADES_BUY == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_TOTAL_TRADES_BUY == null : this.CURRENT_DAY_TOTAL_TRADES_BUY.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_TOTAL_TRADES_BUY)) &&
        (this.CURRENT_DAY_TOTAL_TRADES_SELL == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_TOTAL_TRADES_SELL == null : this.CURRENT_DAY_TOTAL_TRADES_SELL.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_TOTAL_TRADES_SELL)) &&
        (this.CURRENT_DAY_TOTAL_TRADES_UNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_TOTAL_TRADES_UNKNOWN == null : this.CURRENT_DAY_TOTAL_TRADES_UNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_TOTAL_TRADES_UNKNOWN)) &&
        (this.CURRENT_DAY_VOLUME == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_VOLUME == null : this.CURRENT_DAY_VOLUME.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_VOLUME)) &&
        (this.CURRENT_DAY_VOLUME_BUY == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_VOLUME_BUY == null : this.CURRENT_DAY_VOLUME_BUY.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_VOLUME_BUY)) &&
        (this.CURRENT_DAY_VOLUME_SELL == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_VOLUME_SELL == null : this.CURRENT_DAY_VOLUME_SELL.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_VOLUME_SELL)) &&
        (this.CURRENT_DAY_VOLUME_UNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_VOLUME_UNKNOWN == null : this.CURRENT_DAY_VOLUME_UNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_DAY_VOLUME_UNKNOWN)) &&
        (this.CURRENT_HOUR_HIGH == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_HIGH == null : this.CURRENT_HOUR_HIGH.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_HIGH)) &&
        (this.CURRENT_HOUR_LOW == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_LOW == null : this.CURRENT_HOUR_LOW.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_LOW)) &&
        (this.CURRENT_HOUR_OPEN == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_OPEN == null : this.CURRENT_HOUR_OPEN.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_OPEN)) &&
        (this.CURRENT_HOUR_QUOTE_VOLUME == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_QUOTE_VOLUME == null : this.CURRENT_HOUR_QUOTE_VOLUME.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_QUOTE_VOLUME)) &&
        (this.CURRENT_HOUR_QUOTE_VOLUME_BUY == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_QUOTE_VOLUME_BUY == null : this.CURRENT_HOUR_QUOTE_VOLUME_BUY.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_QUOTE_VOLUME_BUY)) &&
        (this.CURRENT_HOUR_QUOTE_VOLUME_SELL == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_QUOTE_VOLUME_SELL == null : this.CURRENT_HOUR_QUOTE_VOLUME_SELL.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_QUOTE_VOLUME_SELL)) &&
        (this.CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN == null : this.CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN)) &&
        (this.CURRENT_HOUR_TOTAL_TRADES == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_TOTAL_TRADES == null : this.CURRENT_HOUR_TOTAL_TRADES.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_TOTAL_TRADES)) &&
        (this.CURRENT_HOUR_TOTAL_TRADES_BUY == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_TOTAL_TRADES_BUY == null : this.CURRENT_HOUR_TOTAL_TRADES_BUY.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_TOTAL_TRADES_BUY)) &&
        (this.CURRENT_HOUR_TOTAL_TRADES_SELL == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_TOTAL_TRADES_SELL == null : this.CURRENT_HOUR_TOTAL_TRADES_SELL.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_TOTAL_TRADES_SELL)) &&
        (this.CURRENT_HOUR_TOTAL_TRADES_UNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_TOTAL_TRADES_UNKNOWN == null : this.CURRENT_HOUR_TOTAL_TRADES_UNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_TOTAL_TRADES_UNKNOWN)) &&
        (this.CURRENT_HOUR_VOLUME == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_VOLUME == null : this.CURRENT_HOUR_VOLUME.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_VOLUME)) &&
        (this.CURRENT_HOUR_VOLUME_BUY == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_VOLUME_BUY == null : this.CURRENT_HOUR_VOLUME_BUY.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_VOLUME_BUY)) &&
        (this.CURRENT_HOUR_VOLUME_SELL == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_VOLUME_SELL == null : this.CURRENT_HOUR_VOLUME_SELL.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_VOLUME_SELL)) &&
        (this.CURRENT_HOUR_VOLUME_UNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_VOLUME_UNKNOWN == null : this.CURRENT_HOUR_VOLUME_UNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_HOUR_VOLUME_UNKNOWN)) &&
        (this.CURRENT_MONTH_HIGH == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_HIGH == null : this.CURRENT_MONTH_HIGH.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_HIGH)) &&
        (this.CURRENT_MONTH_LOW == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_LOW == null : this.CURRENT_MONTH_LOW.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_LOW)) &&
        (this.CURRENT_MONTH_OPEN == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_OPEN == null : this.CURRENT_MONTH_OPEN.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_OPEN)) &&
        (this.CURRENT_MONTH_QUOTE_VOLUME == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_QUOTE_VOLUME == null : this.CURRENT_MONTH_QUOTE_VOLUME.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_QUOTE_VOLUME)) &&
        (this.CURRENT_MONTH_QUOTE_VOLUME_BUY == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_QUOTE_VOLUME_BUY == null : this.CURRENT_MONTH_QUOTE_VOLUME_BUY.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_QUOTE_VOLUME_BUY)) &&
        (this.CURRENT_MONTH_QUOTE_VOLUME_SELL == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_QUOTE_VOLUME_SELL == null : this.CURRENT_MONTH_QUOTE_VOLUME_SELL.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_QUOTE_VOLUME_SELL)) &&
        (this.CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN == null : this.CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN)) &&
        (this.CURRENT_MONTH_TOTAL_TRADES == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_TOTAL_TRADES == null : this.CURRENT_MONTH_TOTAL_TRADES.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_TOTAL_TRADES)) &&
        (this.CURRENT_MONTH_TOTAL_TRADES_BUY == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_TOTAL_TRADES_BUY == null : this.CURRENT_MONTH_TOTAL_TRADES_BUY.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_TOTAL_TRADES_BUY)) &&
        (this.CURRENT_MONTH_TOTAL_TRADES_SELL == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_TOTAL_TRADES_SELL == null : this.CURRENT_MONTH_TOTAL_TRADES_SELL.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_TOTAL_TRADES_SELL)) &&
        (this.CURRENT_MONTH_TOTAL_TRADES_UNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_TOTAL_TRADES_UNKNOWN == null : this.CURRENT_MONTH_TOTAL_TRADES_UNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_TOTAL_TRADES_UNKNOWN)) &&
        (this.CURRENT_MONTH_VOLUME == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_VOLUME == null : this.CURRENT_MONTH_VOLUME.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_VOLUME)) &&
        (this.CURRENT_MONTH_VOLUME_BUY == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_VOLUME_BUY == null : this.CURRENT_MONTH_VOLUME_BUY.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_VOLUME_BUY)) &&
        (this.CURRENT_MONTH_VOLUME_SELL == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_VOLUME_SELL == null : this.CURRENT_MONTH_VOLUME_SELL.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_VOLUME_SELL)) &&
        (this.CURRENT_MONTH_VOLUME_UNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_VOLUME_UNKNOWN == null : this.CURRENT_MONTH_VOLUME_UNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_MONTH_VOLUME_UNKNOWN)) &&
        (this.CURRENT_WEEK_HIGH == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_HIGH == null : this.CURRENT_WEEK_HIGH.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_HIGH)) &&
        (this.CURRENT_WEEK_LOW == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_LOW == null : this.CURRENT_WEEK_LOW.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_LOW)) &&
        (this.CURRENT_WEEK_OPEN == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_OPEN == null : this.CURRENT_WEEK_OPEN.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_OPEN)) &&
        (this.CURRENT_WEEK_QUOTE_VOLUME == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_QUOTE_VOLUME == null : this.CURRENT_WEEK_QUOTE_VOLUME.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_QUOTE_VOLUME)) &&
        (this.CURRENT_WEEK_QUOTE_VOLUME_BUY == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_QUOTE_VOLUME_BUY == null : this.CURRENT_WEEK_QUOTE_VOLUME_BUY.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_QUOTE_VOLUME_BUY)) &&
        (this.CURRENT_WEEK_QUOTE_VOLUME_SELL == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_QUOTE_VOLUME_SELL == null : this.CURRENT_WEEK_QUOTE_VOLUME_SELL.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_QUOTE_VOLUME_SELL)) &&
        (this.CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN == null : this.CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN)) &&
        (this.CURRENT_WEEK_TOTAL_TRADES == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_TOTAL_TRADES == null : this.CURRENT_WEEK_TOTAL_TRADES.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_TOTAL_TRADES)) &&
        (this.CURRENT_WEEK_TOTAL_TRADES_BUY == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_TOTAL_TRADES_BUY == null : this.CURRENT_WEEK_TOTAL_TRADES_BUY.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_TOTAL_TRADES_BUY)) &&
        (this.CURRENT_WEEK_TOTAL_TRADES_SELL == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_TOTAL_TRADES_SELL == null : this.CURRENT_WEEK_TOTAL_TRADES_SELL.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_TOTAL_TRADES_SELL)) &&
        (this.CURRENT_WEEK_TOTAL_TRADES_UNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_TOTAL_TRADES_UNKNOWN == null : this.CURRENT_WEEK_TOTAL_TRADES_UNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_TOTAL_TRADES_UNKNOWN)) &&
        (this.CURRENT_WEEK_VOLUME == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_VOLUME == null : this.CURRENT_WEEK_VOLUME.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_VOLUME)) &&
        (this.CURRENT_WEEK_VOLUME_BUY == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_VOLUME_BUY == null : this.CURRENT_WEEK_VOLUME_BUY.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_VOLUME_BUY)) &&
        (this.CURRENT_WEEK_VOLUME_SELL == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_VOLUME_SELL == null : this.CURRENT_WEEK_VOLUME_SELL.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_VOLUME_SELL)) &&
        (this.CURRENT_WEEK_VOLUME_UNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_VOLUME_UNKNOWN == null : this.CURRENT_WEEK_VOLUME_UNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_WEEK_VOLUME_UNKNOWN)) &&
        (this.CURRENT_YEAR_HIGH == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_HIGH == null : this.CURRENT_YEAR_HIGH.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_HIGH)) &&
        (this.CURRENT_YEAR_LOW == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_LOW == null : this.CURRENT_YEAR_LOW.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_LOW)) &&
        (this.CURRENT_YEAR_OPEN == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_OPEN == null : this.CURRENT_YEAR_OPEN.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_OPEN)) &&
        (this.CURRENT_YEAR_QUOTE_VOLUME == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_QUOTE_VOLUME == null : this.CURRENT_YEAR_QUOTE_VOLUME.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_QUOTE_VOLUME)) &&
        (this.CURRENT_YEAR_QUOTE_VOLUME_BUY == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_QUOTE_VOLUME_BUY == null : this.CURRENT_YEAR_QUOTE_VOLUME_BUY.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_QUOTE_VOLUME_BUY)) &&
        (this.CURRENT_YEAR_QUOTE_VOLUME_SELL == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_QUOTE_VOLUME_SELL == null : this.CURRENT_YEAR_QUOTE_VOLUME_SELL.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_QUOTE_VOLUME_SELL)) &&
        (this.CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN == null : this.CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN)) &&
        (this.CURRENT_YEAR_TOTAL_TRADES == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_TOTAL_TRADES == null : this.CURRENT_YEAR_TOTAL_TRADES.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_TOTAL_TRADES)) &&
        (this.CURRENT_YEAR_TOTAL_TRADES_BUY == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_TOTAL_TRADES_BUY == null : this.CURRENT_YEAR_TOTAL_TRADES_BUY.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_TOTAL_TRADES_BUY)) &&
        (this.CURRENT_YEAR_TOTAL_TRADES_SELL == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_TOTAL_TRADES_SELL == null : this.CURRENT_YEAR_TOTAL_TRADES_SELL.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_TOTAL_TRADES_SELL)) &&
        (this.CURRENT_YEAR_TOTAL_TRADES_UNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_TOTAL_TRADES_UNKNOWN == null : this.CURRENT_YEAR_TOTAL_TRADES_UNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_TOTAL_TRADES_UNKNOWN)) &&
        (this.CURRENT_YEAR_VOLUME == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_VOLUME == null : this.CURRENT_YEAR_VOLUME.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_VOLUME)) &&
        (this.CURRENT_YEAR_VOLUME_BUY == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_VOLUME_BUY == null : this.CURRENT_YEAR_VOLUME_BUY.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_VOLUME_BUY)) &&
        (this.CURRENT_YEAR_VOLUME_SELL == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_VOLUME_SELL == null : this.CURRENT_YEAR_VOLUME_SELL.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_VOLUME_SELL)) &&
        (this.CURRENT_YEAR_VOLUME_UNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_VOLUME_UNKNOWN == null : this.CURRENT_YEAR_VOLUME_UNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.CURRENT_YEAR_VOLUME_UNKNOWN)) &&
        (this.INSTRUMENT == null ? SPOT_INSTRUMENT_MARKET_DATA.INSTRUMENT == null : this.INSTRUMENT.equals(SPOT_INSTRUMENT_MARKET_DATA.INSTRUMENT)) &&
        (this.LAST_PROCESSED_TRADE_CCSEQ == null ? SPOT_INSTRUMENT_MARKET_DATA.LAST_PROCESSED_TRADE_CCSEQ == null : this.LAST_PROCESSED_TRADE_CCSEQ.equals(SPOT_INSTRUMENT_MARKET_DATA.LAST_PROCESSED_TRADE_CCSEQ)) &&
        (this.LAST_PROCESSED_TRADE_PRICE == null ? SPOT_INSTRUMENT_MARKET_DATA.LAST_PROCESSED_TRADE_PRICE == null : this.LAST_PROCESSED_TRADE_PRICE.equals(SPOT_INSTRUMENT_MARKET_DATA.LAST_PROCESSED_TRADE_PRICE)) &&
        (this.LAST_PROCESSED_TRADE_QUANTITY == null ? SPOT_INSTRUMENT_MARKET_DATA.LAST_PROCESSED_TRADE_QUANTITY == null : this.LAST_PROCESSED_TRADE_QUANTITY.equals(SPOT_INSTRUMENT_MARKET_DATA.LAST_PROCESSED_TRADE_QUANTITY)) &&
        (this.LAST_PROCESSED_TRADE_QUOTE_QUANTITY == null ? SPOT_INSTRUMENT_MARKET_DATA.LAST_PROCESSED_TRADE_QUOTE_QUANTITY == null : this.LAST_PROCESSED_TRADE_QUOTE_QUANTITY.equals(SPOT_INSTRUMENT_MARKET_DATA.LAST_PROCESSED_TRADE_QUOTE_QUANTITY)) &&
        (this.LAST_PROCESSED_TRADE_SIDE == null ? SPOT_INSTRUMENT_MARKET_DATA.LAST_PROCESSED_TRADE_SIDE == null : this.LAST_PROCESSED_TRADE_SIDE.equals(SPOT_INSTRUMENT_MARKET_DATA.LAST_PROCESSED_TRADE_SIDE)) &&
        (this.LAST_PROCESSED_TRADE_TS == null ? SPOT_INSTRUMENT_MARKET_DATA.LAST_PROCESSED_TRADE_TS == null : this.LAST_PROCESSED_TRADE_TS.equals(SPOT_INSTRUMENT_MARKET_DATA.LAST_PROCESSED_TRADE_TS)) &&
        (this.LAST_TRADE_CCSEQ == null ? SPOT_INSTRUMENT_MARKET_DATA.LAST_TRADE_CCSEQ == null : this.LAST_TRADE_CCSEQ.equals(SPOT_INSTRUMENT_MARKET_DATA.LAST_TRADE_CCSEQ)) &&
        (this.LAST_TRADE_ID == null ? SPOT_INSTRUMENT_MARKET_DATA.LAST_TRADE_ID == null : this.LAST_TRADE_ID.equals(SPOT_INSTRUMENT_MARKET_DATA.LAST_TRADE_ID)) &&
        (this.LAST_TRADE_QUANTITY == null ? SPOT_INSTRUMENT_MARKET_DATA.LAST_TRADE_QUANTITY == null : this.LAST_TRADE_QUANTITY.equals(SPOT_INSTRUMENT_MARKET_DATA.LAST_TRADE_QUANTITY)) &&
        (this.LAST_TRADE_QUOTE_QUANTITY == null ? SPOT_INSTRUMENT_MARKET_DATA.LAST_TRADE_QUOTE_QUANTITY == null : this.LAST_TRADE_QUOTE_QUANTITY.equals(SPOT_INSTRUMENT_MARKET_DATA.LAST_TRADE_QUOTE_QUANTITY)) &&
        (this.LAST_TRADE_SIDE == null ? SPOT_INSTRUMENT_MARKET_DATA.LAST_TRADE_SIDE == null : this.LAST_TRADE_SIDE.equals(SPOT_INSTRUMENT_MARKET_DATA.LAST_TRADE_SIDE)) &&
        (this.LIFETIME_FIRST_TRADE_TS == null ? SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_FIRST_TRADE_TS == null : this.LIFETIME_FIRST_TRADE_TS.equals(SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_FIRST_TRADE_TS)) &&
        (this.LIFETIME_HIGH == null ? SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_HIGH == null : this.LIFETIME_HIGH.equals(SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_HIGH)) &&
        (this.LIFETIME_HIGH_TS == null ? SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_HIGH_TS == null : this.LIFETIME_HIGH_TS.equals(SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_HIGH_TS)) &&
        (this.LIFETIME_LOW == null ? SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_LOW == null : this.LIFETIME_LOW.equals(SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_LOW)) &&
        (this.LIFETIME_LOW_TS == null ? SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_LOW_TS == null : this.LIFETIME_LOW_TS.equals(SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_LOW_TS)) &&
        (this.LIFETIME_OPEN == null ? SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_OPEN == null : this.LIFETIME_OPEN.equals(SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_OPEN)) &&
        (this.LIFETIME_QUOTE_VOLUME == null ? SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_QUOTE_VOLUME == null : this.LIFETIME_QUOTE_VOLUME.equals(SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_QUOTE_VOLUME)) &&
        (this.LIFETIME_QUOTE_VOLUME_BUY == null ? SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_QUOTE_VOLUME_BUY == null : this.LIFETIME_QUOTE_VOLUME_BUY.equals(SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_QUOTE_VOLUME_BUY)) &&
        (this.LIFETIME_QUOTE_VOLUME_SELL == null ? SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_QUOTE_VOLUME_SELL == null : this.LIFETIME_QUOTE_VOLUME_SELL.equals(SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_QUOTE_VOLUME_SELL)) &&
        (this.LIFETIME_QUOTE_VOLUME_UNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_QUOTE_VOLUME_UNKNOWN == null : this.LIFETIME_QUOTE_VOLUME_UNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_QUOTE_VOLUME_UNKNOWN)) &&
        (this.LIFETIME_TOTAL_TRADES == null ? SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_TOTAL_TRADES == null : this.LIFETIME_TOTAL_TRADES.equals(SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_TOTAL_TRADES)) &&
        (this.LIFETIME_TOTAL_TRADES_BUY == null ? SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_TOTAL_TRADES_BUY == null : this.LIFETIME_TOTAL_TRADES_BUY.equals(SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_TOTAL_TRADES_BUY)) &&
        (this.LIFETIME_TOTAL_TRADES_SELL == null ? SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_TOTAL_TRADES_SELL == null : this.LIFETIME_TOTAL_TRADES_SELL.equals(SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_TOTAL_TRADES_SELL)) &&
        (this.LIFETIME_TOTAL_TRADES_UNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_TOTAL_TRADES_UNKNOWN == null : this.LIFETIME_TOTAL_TRADES_UNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_TOTAL_TRADES_UNKNOWN)) &&
        (this.LIFETIME_VOLUME == null ? SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_VOLUME == null : this.LIFETIME_VOLUME.equals(SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_VOLUME)) &&
        (this.LIFETIME_VOLUME_BUY == null ? SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_VOLUME_BUY == null : this.LIFETIME_VOLUME_BUY.equals(SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_VOLUME_BUY)) &&
        (this.LIFETIME_VOLUME_SELL == null ? SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_VOLUME_SELL == null : this.LIFETIME_VOLUME_SELL.equals(SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_VOLUME_SELL)) &&
        (this.LIFETIME_VOLUME_UNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_VOLUME_UNKNOWN == null : this.LIFETIME_VOLUME_UNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.LIFETIME_VOLUME_UNKNOWN)) &&
        (this.MAPPED_INSTRUMENT == null ? SPOT_INSTRUMENT_MARKET_DATA.MAPPED_INSTRUMENT == null : this.MAPPED_INSTRUMENT.equals(SPOT_INSTRUMENT_MARKET_DATA.MAPPED_INSTRUMENT)) &&
        (this.MARKET == null ? SPOT_INSTRUMENT_MARKET_DATA.MARKET == null : this.MARKET.equals(SPOT_INSTRUMENT_MARKET_DATA.MARKET)) &&
        (this.mOVING180DAYHIGH == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYHIGH == null : this.mOVING180DAYHIGH.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYHIGH)) &&
        (this.mOVING180DAYLOW == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYLOW == null : this.mOVING180DAYLOW.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYLOW)) &&
        (this.mOVING180DAYOPEN == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYOPEN == null : this.mOVING180DAYOPEN.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYOPEN)) &&
        (this.mOVING180DAYQUOTEVOLUME == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYQUOTEVOLUME == null : this.mOVING180DAYQUOTEVOLUME.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYQUOTEVOLUME)) &&
        (this.mOVING180DAYQUOTEVOLUMEBUY == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYQUOTEVOLUMEBUY == null : this.mOVING180DAYQUOTEVOLUMEBUY.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYQUOTEVOLUMEBUY)) &&
        (this.mOVING180DAYQUOTEVOLUMESELL == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYQUOTEVOLUMESELL == null : this.mOVING180DAYQUOTEVOLUMESELL.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYQUOTEVOLUMESELL)) &&
        (this.mOVING180DAYQUOTEVOLUMEUNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYQUOTEVOLUMEUNKNOWN == null : this.mOVING180DAYQUOTEVOLUMEUNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYQUOTEVOLUMEUNKNOWN)) &&
        (this.mOVING180DAYTOTALTRADES == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYTOTALTRADES == null : this.mOVING180DAYTOTALTRADES.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYTOTALTRADES)) &&
        (this.mOVING180DAYTOTALTRADESBUY == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYTOTALTRADESBUY == null : this.mOVING180DAYTOTALTRADESBUY.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYTOTALTRADESBUY)) &&
        (this.mOVING180DAYTOTALTRADESSELL == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYTOTALTRADESSELL == null : this.mOVING180DAYTOTALTRADESSELL.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYTOTALTRADESSELL)) &&
        (this.mOVING180DAYTOTALTRADESUNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYTOTALTRADESUNKNOWN == null : this.mOVING180DAYTOTALTRADESUNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYTOTALTRADESUNKNOWN)) &&
        (this.mOVING180DAYVOLUME == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYVOLUME == null : this.mOVING180DAYVOLUME.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYVOLUME)) &&
        (this.mOVING180DAYVOLUMEBUY == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYVOLUMEBUY == null : this.mOVING180DAYVOLUMEBUY.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYVOLUMEBUY)) &&
        (this.mOVING180DAYVOLUMESELL == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYVOLUMESELL == null : this.mOVING180DAYVOLUMESELL.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYVOLUMESELL)) &&
        (this.mOVING180DAYVOLUMEUNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYVOLUMEUNKNOWN == null : this.mOVING180DAYVOLUMEUNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING180DAYVOLUMEUNKNOWN)) &&
        (this.mOVING24HOURHIGH == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURHIGH == null : this.mOVING24HOURHIGH.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURHIGH)) &&
        (this.mOVING24HOURLOW == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURLOW == null : this.mOVING24HOURLOW.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURLOW)) &&
        (this.mOVING24HOUROPEN == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOUROPEN == null : this.mOVING24HOUROPEN.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOUROPEN)) &&
        (this.mOVING24HOURQUOTEVOLUME == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURQUOTEVOLUME == null : this.mOVING24HOURQUOTEVOLUME.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURQUOTEVOLUME)) &&
        (this.mOVING24HOURQUOTEVOLUMEBUY == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURQUOTEVOLUMEBUY == null : this.mOVING24HOURQUOTEVOLUMEBUY.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURQUOTEVOLUMEBUY)) &&
        (this.mOVING24HOURQUOTEVOLUMESELL == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURQUOTEVOLUMESELL == null : this.mOVING24HOURQUOTEVOLUMESELL.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURQUOTEVOLUMESELL)) &&
        (this.mOVING24HOURQUOTEVOLUMEUNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURQUOTEVOLUMEUNKNOWN == null : this.mOVING24HOURQUOTEVOLUMEUNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURQUOTEVOLUMEUNKNOWN)) &&
        (this.mOVING24HOURTOTALTRADES == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURTOTALTRADES == null : this.mOVING24HOURTOTALTRADES.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURTOTALTRADES)) &&
        (this.mOVING24HOURTOTALTRADESBUY == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURTOTALTRADESBUY == null : this.mOVING24HOURTOTALTRADESBUY.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURTOTALTRADESBUY)) &&
        (this.mOVING24HOURTOTALTRADESSELL == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURTOTALTRADESSELL == null : this.mOVING24HOURTOTALTRADESSELL.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURTOTALTRADESSELL)) &&
        (this.mOVING24HOURTOTALTRADESUNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURTOTALTRADESUNKNOWN == null : this.mOVING24HOURTOTALTRADESUNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURTOTALTRADESUNKNOWN)) &&
        (this.mOVING24HOURVOLUME == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURVOLUME == null : this.mOVING24HOURVOLUME.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURVOLUME)) &&
        (this.mOVING24HOURVOLUMEBUY == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURVOLUMEBUY == null : this.mOVING24HOURVOLUMEBUY.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURVOLUMEBUY)) &&
        (this.mOVING24HOURVOLUMESELL == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURVOLUMESELL == null : this.mOVING24HOURVOLUMESELL.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURVOLUMESELL)) &&
        (this.mOVING24HOURVOLUMEUNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURVOLUMEUNKNOWN == null : this.mOVING24HOURVOLUMEUNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING24HOURVOLUMEUNKNOWN)) &&
        (this.mOVING30DAYHIGH == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYHIGH == null : this.mOVING30DAYHIGH.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYHIGH)) &&
        (this.mOVING30DAYLOW == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYLOW == null : this.mOVING30DAYLOW.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYLOW)) &&
        (this.mOVING30DAYOPEN == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYOPEN == null : this.mOVING30DAYOPEN.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYOPEN)) &&
        (this.mOVING30DAYQUOTEVOLUME == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYQUOTEVOLUME == null : this.mOVING30DAYQUOTEVOLUME.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYQUOTEVOLUME)) &&
        (this.mOVING30DAYQUOTEVOLUMEBUY == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYQUOTEVOLUMEBUY == null : this.mOVING30DAYQUOTEVOLUMEBUY.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYQUOTEVOLUMEBUY)) &&
        (this.mOVING30DAYQUOTEVOLUMESELL == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYQUOTEVOLUMESELL == null : this.mOVING30DAYQUOTEVOLUMESELL.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYQUOTEVOLUMESELL)) &&
        (this.mOVING30DAYQUOTEVOLUMEUNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYQUOTEVOLUMEUNKNOWN == null : this.mOVING30DAYQUOTEVOLUMEUNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYQUOTEVOLUMEUNKNOWN)) &&
        (this.mOVING30DAYTOTALTRADES == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYTOTALTRADES == null : this.mOVING30DAYTOTALTRADES.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYTOTALTRADES)) &&
        (this.mOVING30DAYTOTALTRADESBUY == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYTOTALTRADESBUY == null : this.mOVING30DAYTOTALTRADESBUY.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYTOTALTRADESBUY)) &&
        (this.mOVING30DAYTOTALTRADESSELL == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYTOTALTRADESSELL == null : this.mOVING30DAYTOTALTRADESSELL.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYTOTALTRADESSELL)) &&
        (this.mOVING30DAYTOTALTRADESUNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYTOTALTRADESUNKNOWN == null : this.mOVING30DAYTOTALTRADESUNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYTOTALTRADESUNKNOWN)) &&
        (this.mOVING30DAYVOLUME == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYVOLUME == null : this.mOVING30DAYVOLUME.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYVOLUME)) &&
        (this.mOVING30DAYVOLUMEBUY == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYVOLUMEBUY == null : this.mOVING30DAYVOLUMEBUY.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYVOLUMEBUY)) &&
        (this.mOVING30DAYVOLUMESELL == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYVOLUMESELL == null : this.mOVING30DAYVOLUMESELL.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYVOLUMESELL)) &&
        (this.mOVING30DAYVOLUMEUNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYVOLUMEUNKNOWN == null : this.mOVING30DAYVOLUMEUNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING30DAYVOLUMEUNKNOWN)) &&
        (this.mOVING365DAYHIGH == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYHIGH == null : this.mOVING365DAYHIGH.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYHIGH)) &&
        (this.mOVING365DAYLOW == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYLOW == null : this.mOVING365DAYLOW.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYLOW)) &&
        (this.mOVING365DAYOPEN == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYOPEN == null : this.mOVING365DAYOPEN.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYOPEN)) &&
        (this.mOVING365DAYQUOTEVOLUME == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYQUOTEVOLUME == null : this.mOVING365DAYQUOTEVOLUME.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYQUOTEVOLUME)) &&
        (this.mOVING365DAYQUOTEVOLUMEBUY == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYQUOTEVOLUMEBUY == null : this.mOVING365DAYQUOTEVOLUMEBUY.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYQUOTEVOLUMEBUY)) &&
        (this.mOVING365DAYQUOTEVOLUMESELL == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYQUOTEVOLUMESELL == null : this.mOVING365DAYQUOTEVOLUMESELL.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYQUOTEVOLUMESELL)) &&
        (this.mOVING365DAYQUOTEVOLUMEUNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYQUOTEVOLUMEUNKNOWN == null : this.mOVING365DAYQUOTEVOLUMEUNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYQUOTEVOLUMEUNKNOWN)) &&
        (this.mOVING365DAYTOTALTRADES == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYTOTALTRADES == null : this.mOVING365DAYTOTALTRADES.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYTOTALTRADES)) &&
        (this.mOVING365DAYTOTALTRADESBUY == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYTOTALTRADESBUY == null : this.mOVING365DAYTOTALTRADESBUY.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYTOTALTRADESBUY)) &&
        (this.mOVING365DAYTOTALTRADESSELL == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYTOTALTRADESSELL == null : this.mOVING365DAYTOTALTRADESSELL.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYTOTALTRADESSELL)) &&
        (this.mOVING365DAYTOTALTRADESUNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYTOTALTRADESUNKNOWN == null : this.mOVING365DAYTOTALTRADESUNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYTOTALTRADESUNKNOWN)) &&
        (this.mOVING365DAYVOLUME == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYVOLUME == null : this.mOVING365DAYVOLUME.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYVOLUME)) &&
        (this.mOVING365DAYVOLUMEBUY == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYVOLUMEBUY == null : this.mOVING365DAYVOLUMEBUY.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYVOLUMEBUY)) &&
        (this.mOVING365DAYVOLUMESELL == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYVOLUMESELL == null : this.mOVING365DAYVOLUMESELL.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYVOLUMESELL)) &&
        (this.mOVING365DAYVOLUMEUNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYVOLUMEUNKNOWN == null : this.mOVING365DAYVOLUMEUNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING365DAYVOLUMEUNKNOWN)) &&
        (this.mOVING7DAYHIGH == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYHIGH == null : this.mOVING7DAYHIGH.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYHIGH)) &&
        (this.mOVING7DAYLOW == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYLOW == null : this.mOVING7DAYLOW.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYLOW)) &&
        (this.mOVING7DAYOPEN == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYOPEN == null : this.mOVING7DAYOPEN.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYOPEN)) &&
        (this.mOVING7DAYQUOTEVOLUME == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYQUOTEVOLUME == null : this.mOVING7DAYQUOTEVOLUME.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYQUOTEVOLUME)) &&
        (this.mOVING7DAYQUOTEVOLUMEBUY == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYQUOTEVOLUMEBUY == null : this.mOVING7DAYQUOTEVOLUMEBUY.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYQUOTEVOLUMEBUY)) &&
        (this.mOVING7DAYQUOTEVOLUMESELL == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYQUOTEVOLUMESELL == null : this.mOVING7DAYQUOTEVOLUMESELL.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYQUOTEVOLUMESELL)) &&
        (this.mOVING7DAYQUOTEVOLUMEUNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYQUOTEVOLUMEUNKNOWN == null : this.mOVING7DAYQUOTEVOLUMEUNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYQUOTEVOLUMEUNKNOWN)) &&
        (this.mOVING7DAYTOTALTRADES == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYTOTALTRADES == null : this.mOVING7DAYTOTALTRADES.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYTOTALTRADES)) &&
        (this.mOVING7DAYTOTALTRADESBUY == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYTOTALTRADESBUY == null : this.mOVING7DAYTOTALTRADESBUY.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYTOTALTRADESBUY)) &&
        (this.mOVING7DAYTOTALTRADESSELL == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYTOTALTRADESSELL == null : this.mOVING7DAYTOTALTRADESSELL.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYTOTALTRADESSELL)) &&
        (this.mOVING7DAYTOTALTRADESUNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYTOTALTRADESUNKNOWN == null : this.mOVING7DAYTOTALTRADESUNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYTOTALTRADESUNKNOWN)) &&
        (this.mOVING7DAYVOLUME == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYVOLUME == null : this.mOVING7DAYVOLUME.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYVOLUME)) &&
        (this.mOVING7DAYVOLUMEBUY == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYVOLUMEBUY == null : this.mOVING7DAYVOLUMEBUY.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYVOLUMEBUY)) &&
        (this.mOVING7DAYVOLUMESELL == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYVOLUMESELL == null : this.mOVING7DAYVOLUMESELL.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYVOLUMESELL)) &&
        (this.mOVING7DAYVOLUMEUNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYVOLUMEUNKNOWN == null : this.mOVING7DAYVOLUMEUNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING7DAYVOLUMEUNKNOWN)) &&
        (this.mOVING90DAYHIGH == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYHIGH == null : this.mOVING90DAYHIGH.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYHIGH)) &&
        (this.mOVING90DAYLOW == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYLOW == null : this.mOVING90DAYLOW.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYLOW)) &&
        (this.mOVING90DAYOPEN == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYOPEN == null : this.mOVING90DAYOPEN.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYOPEN)) &&
        (this.mOVING90DAYQUOTEVOLUME == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYQUOTEVOLUME == null : this.mOVING90DAYQUOTEVOLUME.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYQUOTEVOLUME)) &&
        (this.mOVING90DAYQUOTEVOLUMEBUY == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYQUOTEVOLUMEBUY == null : this.mOVING90DAYQUOTEVOLUMEBUY.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYQUOTEVOLUMEBUY)) &&
        (this.mOVING90DAYQUOTEVOLUMESELL == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYQUOTEVOLUMESELL == null : this.mOVING90DAYQUOTEVOLUMESELL.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYQUOTEVOLUMESELL)) &&
        (this.mOVING90DAYQUOTEVOLUMEUNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYQUOTEVOLUMEUNKNOWN == null : this.mOVING90DAYQUOTEVOLUMEUNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYQUOTEVOLUMEUNKNOWN)) &&
        (this.mOVING90DAYTOTALTRADES == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYTOTALTRADES == null : this.mOVING90DAYTOTALTRADES.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYTOTALTRADES)) &&
        (this.mOVING90DAYTOTALTRADESBUY == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYTOTALTRADESBUY == null : this.mOVING90DAYTOTALTRADESBUY.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYTOTALTRADESBUY)) &&
        (this.mOVING90DAYTOTALTRADESSELL == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYTOTALTRADESSELL == null : this.mOVING90DAYTOTALTRADESSELL.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYTOTALTRADESSELL)) &&
        (this.mOVING90DAYTOTALTRADESUNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYTOTALTRADESUNKNOWN == null : this.mOVING90DAYTOTALTRADESUNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYTOTALTRADESUNKNOWN)) &&
        (this.mOVING90DAYVOLUME == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYVOLUME == null : this.mOVING90DAYVOLUME.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYVOLUME)) &&
        (this.mOVING90DAYVOLUMEBUY == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYVOLUMEBUY == null : this.mOVING90DAYVOLUMEBUY.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYVOLUMEBUY)) &&
        (this.mOVING90DAYVOLUMESELL == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYVOLUMESELL == null : this.mOVING90DAYVOLUMESELL.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYVOLUMESELL)) &&
        (this.mOVING90DAYVOLUMEUNKNOWN == null ? SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYVOLUMEUNKNOWN == null : this.mOVING90DAYVOLUMEUNKNOWN.equals(SPOT_INSTRUMENT_MARKET_DATA.mOVING90DAYVOLUMEUNKNOWN)) &&
        (this.PRICE == null ? SPOT_INSTRUMENT_MARKET_DATA.PRICE == null : this.PRICE.equals(SPOT_INSTRUMENT_MARKET_DATA.PRICE)) &&
        (this.PRICE_FLAG == null ? SPOT_INSTRUMENT_MARKET_DATA.PRICE_FLAG == null : this.PRICE_FLAG.equals(SPOT_INSTRUMENT_MARKET_DATA.PRICE_FLAG)) &&
        (this.PRICE_LAST_UPDATE_TS == null ? SPOT_INSTRUMENT_MARKET_DATA.PRICE_LAST_UPDATE_TS == null : this.PRICE_LAST_UPDATE_TS.equals(SPOT_INSTRUMENT_MARKET_DATA.PRICE_LAST_UPDATE_TS)) &&
        (this.QUOTE == null ? SPOT_INSTRUMENT_MARKET_DATA.QUOTE == null : this.QUOTE.equals(SPOT_INSTRUMENT_MARKET_DATA.QUOTE)) &&
        (this.TOP_ASK_LAST_UPDATE_TS == null ? SPOT_INSTRUMENT_MARKET_DATA.TOP_ASK_LAST_UPDATE_TS == null : this.TOP_ASK_LAST_UPDATE_TS.equals(SPOT_INSTRUMENT_MARKET_DATA.TOP_ASK_LAST_UPDATE_TS)) &&
        (this.TOP_ASK_PRICE == null ? SPOT_INSTRUMENT_MARKET_DATA.TOP_ASK_PRICE == null : this.TOP_ASK_PRICE.equals(SPOT_INSTRUMENT_MARKET_DATA.TOP_ASK_PRICE)) &&
        (this.TOP_ASK_QUANTITY == null ? SPOT_INSTRUMENT_MARKET_DATA.TOP_ASK_QUANTITY == null : this.TOP_ASK_QUANTITY.equals(SPOT_INSTRUMENT_MARKET_DATA.TOP_ASK_QUANTITY)) &&
        (this.TOP_BID_LAST_UPDATE_TS == null ? SPOT_INSTRUMENT_MARKET_DATA.TOP_BID_LAST_UPDATE_TS == null : this.TOP_BID_LAST_UPDATE_TS.equals(SPOT_INSTRUMENT_MARKET_DATA.TOP_BID_LAST_UPDATE_TS)) &&
        (this.TOP_BID_PRICE == null ? SPOT_INSTRUMENT_MARKET_DATA.TOP_BID_PRICE == null : this.TOP_BID_PRICE.equals(SPOT_INSTRUMENT_MARKET_DATA.TOP_BID_PRICE)) &&
        (this.TOP_BID_QUANTITY == null ? SPOT_INSTRUMENT_MARKET_DATA.TOP_BID_QUANTITY == null : this.TOP_BID_QUANTITY.equals(SPOT_INSTRUMENT_MARKET_DATA.TOP_BID_QUANTITY)) &&
        (this.TYPE == null ? SPOT_INSTRUMENT_MARKET_DATA.TYPE == null : this.TYPE.equals(SPOT_INSTRUMENT_MARKET_DATA.TYPE));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.BASE == null ? 0: this.BASE.hashCode());
    result = 31 * result + (this.CCSEQ == null ? 0: this.CCSEQ.hashCode());
    result = 31 * result + (this.CURRENT_DAY_HIGH == null ? 0: this.CURRENT_DAY_HIGH.hashCode());
    result = 31 * result + (this.CURRENT_DAY_LOW == null ? 0: this.CURRENT_DAY_LOW.hashCode());
    result = 31 * result + (this.CURRENT_DAY_OPEN == null ? 0: this.CURRENT_DAY_OPEN.hashCode());
    result = 31 * result + (this.CURRENT_DAY_QUOTE_VOLUME == null ? 0: this.CURRENT_DAY_QUOTE_VOLUME.hashCode());
    result = 31 * result + (this.CURRENT_DAY_QUOTE_VOLUME_BUY == null ? 0: this.CURRENT_DAY_QUOTE_VOLUME_BUY.hashCode());
    result = 31 * result + (this.CURRENT_DAY_QUOTE_VOLUME_SELL == null ? 0: this.CURRENT_DAY_QUOTE_VOLUME_SELL.hashCode());
    result = 31 * result + (this.CURRENT_DAY_QUOTE_VOLUME_UNKNOWN == null ? 0: this.CURRENT_DAY_QUOTE_VOLUME_UNKNOWN.hashCode());
    result = 31 * result + (this.CURRENT_DAY_TOTAL_TRADES == null ? 0: this.CURRENT_DAY_TOTAL_TRADES.hashCode());
    result = 31 * result + (this.CURRENT_DAY_TOTAL_TRADES_BUY == null ? 0: this.CURRENT_DAY_TOTAL_TRADES_BUY.hashCode());
    result = 31 * result + (this.CURRENT_DAY_TOTAL_TRADES_SELL == null ? 0: this.CURRENT_DAY_TOTAL_TRADES_SELL.hashCode());
    result = 31 * result + (this.CURRENT_DAY_TOTAL_TRADES_UNKNOWN == null ? 0: this.CURRENT_DAY_TOTAL_TRADES_UNKNOWN.hashCode());
    result = 31 * result + (this.CURRENT_DAY_VOLUME == null ? 0: this.CURRENT_DAY_VOLUME.hashCode());
    result = 31 * result + (this.CURRENT_DAY_VOLUME_BUY == null ? 0: this.CURRENT_DAY_VOLUME_BUY.hashCode());
    result = 31 * result + (this.CURRENT_DAY_VOLUME_SELL == null ? 0: this.CURRENT_DAY_VOLUME_SELL.hashCode());
    result = 31 * result + (this.CURRENT_DAY_VOLUME_UNKNOWN == null ? 0: this.CURRENT_DAY_VOLUME_UNKNOWN.hashCode());
    result = 31 * result + (this.CURRENT_HOUR_HIGH == null ? 0: this.CURRENT_HOUR_HIGH.hashCode());
    result = 31 * result + (this.CURRENT_HOUR_LOW == null ? 0: this.CURRENT_HOUR_LOW.hashCode());
    result = 31 * result + (this.CURRENT_HOUR_OPEN == null ? 0: this.CURRENT_HOUR_OPEN.hashCode());
    result = 31 * result + (this.CURRENT_HOUR_QUOTE_VOLUME == null ? 0: this.CURRENT_HOUR_QUOTE_VOLUME.hashCode());
    result = 31 * result + (this.CURRENT_HOUR_QUOTE_VOLUME_BUY == null ? 0: this.CURRENT_HOUR_QUOTE_VOLUME_BUY.hashCode());
    result = 31 * result + (this.CURRENT_HOUR_QUOTE_VOLUME_SELL == null ? 0: this.CURRENT_HOUR_QUOTE_VOLUME_SELL.hashCode());
    result = 31 * result + (this.CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN == null ? 0: this.CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN.hashCode());
    result = 31 * result + (this.CURRENT_HOUR_TOTAL_TRADES == null ? 0: this.CURRENT_HOUR_TOTAL_TRADES.hashCode());
    result = 31 * result + (this.CURRENT_HOUR_TOTAL_TRADES_BUY == null ? 0: this.CURRENT_HOUR_TOTAL_TRADES_BUY.hashCode());
    result = 31 * result + (this.CURRENT_HOUR_TOTAL_TRADES_SELL == null ? 0: this.CURRENT_HOUR_TOTAL_TRADES_SELL.hashCode());
    result = 31 * result + (this.CURRENT_HOUR_TOTAL_TRADES_UNKNOWN == null ? 0: this.CURRENT_HOUR_TOTAL_TRADES_UNKNOWN.hashCode());
    result = 31 * result + (this.CURRENT_HOUR_VOLUME == null ? 0: this.CURRENT_HOUR_VOLUME.hashCode());
    result = 31 * result + (this.CURRENT_HOUR_VOLUME_BUY == null ? 0: this.CURRENT_HOUR_VOLUME_BUY.hashCode());
    result = 31 * result + (this.CURRENT_HOUR_VOLUME_SELL == null ? 0: this.CURRENT_HOUR_VOLUME_SELL.hashCode());
    result = 31 * result + (this.CURRENT_HOUR_VOLUME_UNKNOWN == null ? 0: this.CURRENT_HOUR_VOLUME_UNKNOWN.hashCode());
    result = 31 * result + (this.CURRENT_MONTH_HIGH == null ? 0: this.CURRENT_MONTH_HIGH.hashCode());
    result = 31 * result + (this.CURRENT_MONTH_LOW == null ? 0: this.CURRENT_MONTH_LOW.hashCode());
    result = 31 * result + (this.CURRENT_MONTH_OPEN == null ? 0: this.CURRENT_MONTH_OPEN.hashCode());
    result = 31 * result + (this.CURRENT_MONTH_QUOTE_VOLUME == null ? 0: this.CURRENT_MONTH_QUOTE_VOLUME.hashCode());
    result = 31 * result + (this.CURRENT_MONTH_QUOTE_VOLUME_BUY == null ? 0: this.CURRENT_MONTH_QUOTE_VOLUME_BUY.hashCode());
    result = 31 * result + (this.CURRENT_MONTH_QUOTE_VOLUME_SELL == null ? 0: this.CURRENT_MONTH_QUOTE_VOLUME_SELL.hashCode());
    result = 31 * result + (this.CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN == null ? 0: this.CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN.hashCode());
    result = 31 * result + (this.CURRENT_MONTH_TOTAL_TRADES == null ? 0: this.CURRENT_MONTH_TOTAL_TRADES.hashCode());
    result = 31 * result + (this.CURRENT_MONTH_TOTAL_TRADES_BUY == null ? 0: this.CURRENT_MONTH_TOTAL_TRADES_BUY.hashCode());
    result = 31 * result + (this.CURRENT_MONTH_TOTAL_TRADES_SELL == null ? 0: this.CURRENT_MONTH_TOTAL_TRADES_SELL.hashCode());
    result = 31 * result + (this.CURRENT_MONTH_TOTAL_TRADES_UNKNOWN == null ? 0: this.CURRENT_MONTH_TOTAL_TRADES_UNKNOWN.hashCode());
    result = 31 * result + (this.CURRENT_MONTH_VOLUME == null ? 0: this.CURRENT_MONTH_VOLUME.hashCode());
    result = 31 * result + (this.CURRENT_MONTH_VOLUME_BUY == null ? 0: this.CURRENT_MONTH_VOLUME_BUY.hashCode());
    result = 31 * result + (this.CURRENT_MONTH_VOLUME_SELL == null ? 0: this.CURRENT_MONTH_VOLUME_SELL.hashCode());
    result = 31 * result + (this.CURRENT_MONTH_VOLUME_UNKNOWN == null ? 0: this.CURRENT_MONTH_VOLUME_UNKNOWN.hashCode());
    result = 31 * result + (this.CURRENT_WEEK_HIGH == null ? 0: this.CURRENT_WEEK_HIGH.hashCode());
    result = 31 * result + (this.CURRENT_WEEK_LOW == null ? 0: this.CURRENT_WEEK_LOW.hashCode());
    result = 31 * result + (this.CURRENT_WEEK_OPEN == null ? 0: this.CURRENT_WEEK_OPEN.hashCode());
    result = 31 * result + (this.CURRENT_WEEK_QUOTE_VOLUME == null ? 0: this.CURRENT_WEEK_QUOTE_VOLUME.hashCode());
    result = 31 * result + (this.CURRENT_WEEK_QUOTE_VOLUME_BUY == null ? 0: this.CURRENT_WEEK_QUOTE_VOLUME_BUY.hashCode());
    result = 31 * result + (this.CURRENT_WEEK_QUOTE_VOLUME_SELL == null ? 0: this.CURRENT_WEEK_QUOTE_VOLUME_SELL.hashCode());
    result = 31 * result + (this.CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN == null ? 0: this.CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN.hashCode());
    result = 31 * result + (this.CURRENT_WEEK_TOTAL_TRADES == null ? 0: this.CURRENT_WEEK_TOTAL_TRADES.hashCode());
    result = 31 * result + (this.CURRENT_WEEK_TOTAL_TRADES_BUY == null ? 0: this.CURRENT_WEEK_TOTAL_TRADES_BUY.hashCode());
    result = 31 * result + (this.CURRENT_WEEK_TOTAL_TRADES_SELL == null ? 0: this.CURRENT_WEEK_TOTAL_TRADES_SELL.hashCode());
    result = 31 * result + (this.CURRENT_WEEK_TOTAL_TRADES_UNKNOWN == null ? 0: this.CURRENT_WEEK_TOTAL_TRADES_UNKNOWN.hashCode());
    result = 31 * result + (this.CURRENT_WEEK_VOLUME == null ? 0: this.CURRENT_WEEK_VOLUME.hashCode());
    result = 31 * result + (this.CURRENT_WEEK_VOLUME_BUY == null ? 0: this.CURRENT_WEEK_VOLUME_BUY.hashCode());
    result = 31 * result + (this.CURRENT_WEEK_VOLUME_SELL == null ? 0: this.CURRENT_WEEK_VOLUME_SELL.hashCode());
    result = 31 * result + (this.CURRENT_WEEK_VOLUME_UNKNOWN == null ? 0: this.CURRENT_WEEK_VOLUME_UNKNOWN.hashCode());
    result = 31 * result + (this.CURRENT_YEAR_HIGH == null ? 0: this.CURRENT_YEAR_HIGH.hashCode());
    result = 31 * result + (this.CURRENT_YEAR_LOW == null ? 0: this.CURRENT_YEAR_LOW.hashCode());
    result = 31 * result + (this.CURRENT_YEAR_OPEN == null ? 0: this.CURRENT_YEAR_OPEN.hashCode());
    result = 31 * result + (this.CURRENT_YEAR_QUOTE_VOLUME == null ? 0: this.CURRENT_YEAR_QUOTE_VOLUME.hashCode());
    result = 31 * result + (this.CURRENT_YEAR_QUOTE_VOLUME_BUY == null ? 0: this.CURRENT_YEAR_QUOTE_VOLUME_BUY.hashCode());
    result = 31 * result + (this.CURRENT_YEAR_QUOTE_VOLUME_SELL == null ? 0: this.CURRENT_YEAR_QUOTE_VOLUME_SELL.hashCode());
    result = 31 * result + (this.CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN == null ? 0: this.CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN.hashCode());
    result = 31 * result + (this.CURRENT_YEAR_TOTAL_TRADES == null ? 0: this.CURRENT_YEAR_TOTAL_TRADES.hashCode());
    result = 31 * result + (this.CURRENT_YEAR_TOTAL_TRADES_BUY == null ? 0: this.CURRENT_YEAR_TOTAL_TRADES_BUY.hashCode());
    result = 31 * result + (this.CURRENT_YEAR_TOTAL_TRADES_SELL == null ? 0: this.CURRENT_YEAR_TOTAL_TRADES_SELL.hashCode());
    result = 31 * result + (this.CURRENT_YEAR_TOTAL_TRADES_UNKNOWN == null ? 0: this.CURRENT_YEAR_TOTAL_TRADES_UNKNOWN.hashCode());
    result = 31 * result + (this.CURRENT_YEAR_VOLUME == null ? 0: this.CURRENT_YEAR_VOLUME.hashCode());
    result = 31 * result + (this.CURRENT_YEAR_VOLUME_BUY == null ? 0: this.CURRENT_YEAR_VOLUME_BUY.hashCode());
    result = 31 * result + (this.CURRENT_YEAR_VOLUME_SELL == null ? 0: this.CURRENT_YEAR_VOLUME_SELL.hashCode());
    result = 31 * result + (this.CURRENT_YEAR_VOLUME_UNKNOWN == null ? 0: this.CURRENT_YEAR_VOLUME_UNKNOWN.hashCode());
    result = 31 * result + (this.INSTRUMENT == null ? 0: this.INSTRUMENT.hashCode());
    result = 31 * result + (this.LAST_PROCESSED_TRADE_CCSEQ == null ? 0: this.LAST_PROCESSED_TRADE_CCSEQ.hashCode());
    result = 31 * result + (this.LAST_PROCESSED_TRADE_PRICE == null ? 0: this.LAST_PROCESSED_TRADE_PRICE.hashCode());
    result = 31 * result + (this.LAST_PROCESSED_TRADE_QUANTITY == null ? 0: this.LAST_PROCESSED_TRADE_QUANTITY.hashCode());
    result = 31 * result + (this.LAST_PROCESSED_TRADE_QUOTE_QUANTITY == null ? 0: this.LAST_PROCESSED_TRADE_QUOTE_QUANTITY.hashCode());
    result = 31 * result + (this.LAST_PROCESSED_TRADE_SIDE == null ? 0: this.LAST_PROCESSED_TRADE_SIDE.hashCode());
    result = 31 * result + (this.LAST_PROCESSED_TRADE_TS == null ? 0: this.LAST_PROCESSED_TRADE_TS.hashCode());
    result = 31 * result + (this.LAST_TRADE_CCSEQ == null ? 0: this.LAST_TRADE_CCSEQ.hashCode());
    result = 31 * result + (this.LAST_TRADE_ID == null ? 0: this.LAST_TRADE_ID.hashCode());
    result = 31 * result + (this.LAST_TRADE_QUANTITY == null ? 0: this.LAST_TRADE_QUANTITY.hashCode());
    result = 31 * result + (this.LAST_TRADE_QUOTE_QUANTITY == null ? 0: this.LAST_TRADE_QUOTE_QUANTITY.hashCode());
    result = 31 * result + (this.LAST_TRADE_SIDE == null ? 0: this.LAST_TRADE_SIDE.hashCode());
    result = 31 * result + (this.LIFETIME_FIRST_TRADE_TS == null ? 0: this.LIFETIME_FIRST_TRADE_TS.hashCode());
    result = 31 * result + (this.LIFETIME_HIGH == null ? 0: this.LIFETIME_HIGH.hashCode());
    result = 31 * result + (this.LIFETIME_HIGH_TS == null ? 0: this.LIFETIME_HIGH_TS.hashCode());
    result = 31 * result + (this.LIFETIME_LOW == null ? 0: this.LIFETIME_LOW.hashCode());
    result = 31 * result + (this.LIFETIME_LOW_TS == null ? 0: this.LIFETIME_LOW_TS.hashCode());
    result = 31 * result + (this.LIFETIME_OPEN == null ? 0: this.LIFETIME_OPEN.hashCode());
    result = 31 * result + (this.LIFETIME_QUOTE_VOLUME == null ? 0: this.LIFETIME_QUOTE_VOLUME.hashCode());
    result = 31 * result + (this.LIFETIME_QUOTE_VOLUME_BUY == null ? 0: this.LIFETIME_QUOTE_VOLUME_BUY.hashCode());
    result = 31 * result + (this.LIFETIME_QUOTE_VOLUME_SELL == null ? 0: this.LIFETIME_QUOTE_VOLUME_SELL.hashCode());
    result = 31 * result + (this.LIFETIME_QUOTE_VOLUME_UNKNOWN == null ? 0: this.LIFETIME_QUOTE_VOLUME_UNKNOWN.hashCode());
    result = 31 * result + (this.LIFETIME_TOTAL_TRADES == null ? 0: this.LIFETIME_TOTAL_TRADES.hashCode());
    result = 31 * result + (this.LIFETIME_TOTAL_TRADES_BUY == null ? 0: this.LIFETIME_TOTAL_TRADES_BUY.hashCode());
    result = 31 * result + (this.LIFETIME_TOTAL_TRADES_SELL == null ? 0: this.LIFETIME_TOTAL_TRADES_SELL.hashCode());
    result = 31 * result + (this.LIFETIME_TOTAL_TRADES_UNKNOWN == null ? 0: this.LIFETIME_TOTAL_TRADES_UNKNOWN.hashCode());
    result = 31 * result + (this.LIFETIME_VOLUME == null ? 0: this.LIFETIME_VOLUME.hashCode());
    result = 31 * result + (this.LIFETIME_VOLUME_BUY == null ? 0: this.LIFETIME_VOLUME_BUY.hashCode());
    result = 31 * result + (this.LIFETIME_VOLUME_SELL == null ? 0: this.LIFETIME_VOLUME_SELL.hashCode());
    result = 31 * result + (this.LIFETIME_VOLUME_UNKNOWN == null ? 0: this.LIFETIME_VOLUME_UNKNOWN.hashCode());
    result = 31 * result + (this.MAPPED_INSTRUMENT == null ? 0: this.MAPPED_INSTRUMENT.hashCode());
    result = 31 * result + (this.MARKET == null ? 0: this.MARKET.hashCode());
    result = 31 * result + (this.mOVING180DAYHIGH == null ? 0: this.mOVING180DAYHIGH.hashCode());
    result = 31 * result + (this.mOVING180DAYLOW == null ? 0: this.mOVING180DAYLOW.hashCode());
    result = 31 * result + (this.mOVING180DAYOPEN == null ? 0: this.mOVING180DAYOPEN.hashCode());
    result = 31 * result + (this.mOVING180DAYQUOTEVOLUME == null ? 0: this.mOVING180DAYQUOTEVOLUME.hashCode());
    result = 31 * result + (this.mOVING180DAYQUOTEVOLUMEBUY == null ? 0: this.mOVING180DAYQUOTEVOLUMEBUY.hashCode());
    result = 31 * result + (this.mOVING180DAYQUOTEVOLUMESELL == null ? 0: this.mOVING180DAYQUOTEVOLUMESELL.hashCode());
    result = 31 * result + (this.mOVING180DAYQUOTEVOLUMEUNKNOWN == null ? 0: this.mOVING180DAYQUOTEVOLUMEUNKNOWN.hashCode());
    result = 31 * result + (this.mOVING180DAYTOTALTRADES == null ? 0: this.mOVING180DAYTOTALTRADES.hashCode());
    result = 31 * result + (this.mOVING180DAYTOTALTRADESBUY == null ? 0: this.mOVING180DAYTOTALTRADESBUY.hashCode());
    result = 31 * result + (this.mOVING180DAYTOTALTRADESSELL == null ? 0: this.mOVING180DAYTOTALTRADESSELL.hashCode());
    result = 31 * result + (this.mOVING180DAYTOTALTRADESUNKNOWN == null ? 0: this.mOVING180DAYTOTALTRADESUNKNOWN.hashCode());
    result = 31 * result + (this.mOVING180DAYVOLUME == null ? 0: this.mOVING180DAYVOLUME.hashCode());
    result = 31 * result + (this.mOVING180DAYVOLUMEBUY == null ? 0: this.mOVING180DAYVOLUMEBUY.hashCode());
    result = 31 * result + (this.mOVING180DAYVOLUMESELL == null ? 0: this.mOVING180DAYVOLUMESELL.hashCode());
    result = 31 * result + (this.mOVING180DAYVOLUMEUNKNOWN == null ? 0: this.mOVING180DAYVOLUMEUNKNOWN.hashCode());
    result = 31 * result + (this.mOVING24HOURHIGH == null ? 0: this.mOVING24HOURHIGH.hashCode());
    result = 31 * result + (this.mOVING24HOURLOW == null ? 0: this.mOVING24HOURLOW.hashCode());
    result = 31 * result + (this.mOVING24HOUROPEN == null ? 0: this.mOVING24HOUROPEN.hashCode());
    result = 31 * result + (this.mOVING24HOURQUOTEVOLUME == null ? 0: this.mOVING24HOURQUOTEVOLUME.hashCode());
    result = 31 * result + (this.mOVING24HOURQUOTEVOLUMEBUY == null ? 0: this.mOVING24HOURQUOTEVOLUMEBUY.hashCode());
    result = 31 * result + (this.mOVING24HOURQUOTEVOLUMESELL == null ? 0: this.mOVING24HOURQUOTEVOLUMESELL.hashCode());
    result = 31 * result + (this.mOVING24HOURQUOTEVOLUMEUNKNOWN == null ? 0: this.mOVING24HOURQUOTEVOLUMEUNKNOWN.hashCode());
    result = 31 * result + (this.mOVING24HOURTOTALTRADES == null ? 0: this.mOVING24HOURTOTALTRADES.hashCode());
    result = 31 * result + (this.mOVING24HOURTOTALTRADESBUY == null ? 0: this.mOVING24HOURTOTALTRADESBUY.hashCode());
    result = 31 * result + (this.mOVING24HOURTOTALTRADESSELL == null ? 0: this.mOVING24HOURTOTALTRADESSELL.hashCode());
    result = 31 * result + (this.mOVING24HOURTOTALTRADESUNKNOWN == null ? 0: this.mOVING24HOURTOTALTRADESUNKNOWN.hashCode());
    result = 31 * result + (this.mOVING24HOURVOLUME == null ? 0: this.mOVING24HOURVOLUME.hashCode());
    result = 31 * result + (this.mOVING24HOURVOLUMEBUY == null ? 0: this.mOVING24HOURVOLUMEBUY.hashCode());
    result = 31 * result + (this.mOVING24HOURVOLUMESELL == null ? 0: this.mOVING24HOURVOLUMESELL.hashCode());
    result = 31 * result + (this.mOVING24HOURVOLUMEUNKNOWN == null ? 0: this.mOVING24HOURVOLUMEUNKNOWN.hashCode());
    result = 31 * result + (this.mOVING30DAYHIGH == null ? 0: this.mOVING30DAYHIGH.hashCode());
    result = 31 * result + (this.mOVING30DAYLOW == null ? 0: this.mOVING30DAYLOW.hashCode());
    result = 31 * result + (this.mOVING30DAYOPEN == null ? 0: this.mOVING30DAYOPEN.hashCode());
    result = 31 * result + (this.mOVING30DAYQUOTEVOLUME == null ? 0: this.mOVING30DAYQUOTEVOLUME.hashCode());
    result = 31 * result + (this.mOVING30DAYQUOTEVOLUMEBUY == null ? 0: this.mOVING30DAYQUOTEVOLUMEBUY.hashCode());
    result = 31 * result + (this.mOVING30DAYQUOTEVOLUMESELL == null ? 0: this.mOVING30DAYQUOTEVOLUMESELL.hashCode());
    result = 31 * result + (this.mOVING30DAYQUOTEVOLUMEUNKNOWN == null ? 0: this.mOVING30DAYQUOTEVOLUMEUNKNOWN.hashCode());
    result = 31 * result + (this.mOVING30DAYTOTALTRADES == null ? 0: this.mOVING30DAYTOTALTRADES.hashCode());
    result = 31 * result + (this.mOVING30DAYTOTALTRADESBUY == null ? 0: this.mOVING30DAYTOTALTRADESBUY.hashCode());
    result = 31 * result + (this.mOVING30DAYTOTALTRADESSELL == null ? 0: this.mOVING30DAYTOTALTRADESSELL.hashCode());
    result = 31 * result + (this.mOVING30DAYTOTALTRADESUNKNOWN == null ? 0: this.mOVING30DAYTOTALTRADESUNKNOWN.hashCode());
    result = 31 * result + (this.mOVING30DAYVOLUME == null ? 0: this.mOVING30DAYVOLUME.hashCode());
    result = 31 * result + (this.mOVING30DAYVOLUMEBUY == null ? 0: this.mOVING30DAYVOLUMEBUY.hashCode());
    result = 31 * result + (this.mOVING30DAYVOLUMESELL == null ? 0: this.mOVING30DAYVOLUMESELL.hashCode());
    result = 31 * result + (this.mOVING30DAYVOLUMEUNKNOWN == null ? 0: this.mOVING30DAYVOLUMEUNKNOWN.hashCode());
    result = 31 * result + (this.mOVING365DAYHIGH == null ? 0: this.mOVING365DAYHIGH.hashCode());
    result = 31 * result + (this.mOVING365DAYLOW == null ? 0: this.mOVING365DAYLOW.hashCode());
    result = 31 * result + (this.mOVING365DAYOPEN == null ? 0: this.mOVING365DAYOPEN.hashCode());
    result = 31 * result + (this.mOVING365DAYQUOTEVOLUME == null ? 0: this.mOVING365DAYQUOTEVOLUME.hashCode());
    result = 31 * result + (this.mOVING365DAYQUOTEVOLUMEBUY == null ? 0: this.mOVING365DAYQUOTEVOLUMEBUY.hashCode());
    result = 31 * result + (this.mOVING365DAYQUOTEVOLUMESELL == null ? 0: this.mOVING365DAYQUOTEVOLUMESELL.hashCode());
    result = 31 * result + (this.mOVING365DAYQUOTEVOLUMEUNKNOWN == null ? 0: this.mOVING365DAYQUOTEVOLUMEUNKNOWN.hashCode());
    result = 31 * result + (this.mOVING365DAYTOTALTRADES == null ? 0: this.mOVING365DAYTOTALTRADES.hashCode());
    result = 31 * result + (this.mOVING365DAYTOTALTRADESBUY == null ? 0: this.mOVING365DAYTOTALTRADESBUY.hashCode());
    result = 31 * result + (this.mOVING365DAYTOTALTRADESSELL == null ? 0: this.mOVING365DAYTOTALTRADESSELL.hashCode());
    result = 31 * result + (this.mOVING365DAYTOTALTRADESUNKNOWN == null ? 0: this.mOVING365DAYTOTALTRADESUNKNOWN.hashCode());
    result = 31 * result + (this.mOVING365DAYVOLUME == null ? 0: this.mOVING365DAYVOLUME.hashCode());
    result = 31 * result + (this.mOVING365DAYVOLUMEBUY == null ? 0: this.mOVING365DAYVOLUMEBUY.hashCode());
    result = 31 * result + (this.mOVING365DAYVOLUMESELL == null ? 0: this.mOVING365DAYVOLUMESELL.hashCode());
    result = 31 * result + (this.mOVING365DAYVOLUMEUNKNOWN == null ? 0: this.mOVING365DAYVOLUMEUNKNOWN.hashCode());
    result = 31 * result + (this.mOVING7DAYHIGH == null ? 0: this.mOVING7DAYHIGH.hashCode());
    result = 31 * result + (this.mOVING7DAYLOW == null ? 0: this.mOVING7DAYLOW.hashCode());
    result = 31 * result + (this.mOVING7DAYOPEN == null ? 0: this.mOVING7DAYOPEN.hashCode());
    result = 31 * result + (this.mOVING7DAYQUOTEVOLUME == null ? 0: this.mOVING7DAYQUOTEVOLUME.hashCode());
    result = 31 * result + (this.mOVING7DAYQUOTEVOLUMEBUY == null ? 0: this.mOVING7DAYQUOTEVOLUMEBUY.hashCode());
    result = 31 * result + (this.mOVING7DAYQUOTEVOLUMESELL == null ? 0: this.mOVING7DAYQUOTEVOLUMESELL.hashCode());
    result = 31 * result + (this.mOVING7DAYQUOTEVOLUMEUNKNOWN == null ? 0: this.mOVING7DAYQUOTEVOLUMEUNKNOWN.hashCode());
    result = 31 * result + (this.mOVING7DAYTOTALTRADES == null ? 0: this.mOVING7DAYTOTALTRADES.hashCode());
    result = 31 * result + (this.mOVING7DAYTOTALTRADESBUY == null ? 0: this.mOVING7DAYTOTALTRADESBUY.hashCode());
    result = 31 * result + (this.mOVING7DAYTOTALTRADESSELL == null ? 0: this.mOVING7DAYTOTALTRADESSELL.hashCode());
    result = 31 * result + (this.mOVING7DAYTOTALTRADESUNKNOWN == null ? 0: this.mOVING7DAYTOTALTRADESUNKNOWN.hashCode());
    result = 31 * result + (this.mOVING7DAYVOLUME == null ? 0: this.mOVING7DAYVOLUME.hashCode());
    result = 31 * result + (this.mOVING7DAYVOLUMEBUY == null ? 0: this.mOVING7DAYVOLUMEBUY.hashCode());
    result = 31 * result + (this.mOVING7DAYVOLUMESELL == null ? 0: this.mOVING7DAYVOLUMESELL.hashCode());
    result = 31 * result + (this.mOVING7DAYVOLUMEUNKNOWN == null ? 0: this.mOVING7DAYVOLUMEUNKNOWN.hashCode());
    result = 31 * result + (this.mOVING90DAYHIGH == null ? 0: this.mOVING90DAYHIGH.hashCode());
    result = 31 * result + (this.mOVING90DAYLOW == null ? 0: this.mOVING90DAYLOW.hashCode());
    result = 31 * result + (this.mOVING90DAYOPEN == null ? 0: this.mOVING90DAYOPEN.hashCode());
    result = 31 * result + (this.mOVING90DAYQUOTEVOLUME == null ? 0: this.mOVING90DAYQUOTEVOLUME.hashCode());
    result = 31 * result + (this.mOVING90DAYQUOTEVOLUMEBUY == null ? 0: this.mOVING90DAYQUOTEVOLUMEBUY.hashCode());
    result = 31 * result + (this.mOVING90DAYQUOTEVOLUMESELL == null ? 0: this.mOVING90DAYQUOTEVOLUMESELL.hashCode());
    result = 31 * result + (this.mOVING90DAYQUOTEVOLUMEUNKNOWN == null ? 0: this.mOVING90DAYQUOTEVOLUMEUNKNOWN.hashCode());
    result = 31 * result + (this.mOVING90DAYTOTALTRADES == null ? 0: this.mOVING90DAYTOTALTRADES.hashCode());
    result = 31 * result + (this.mOVING90DAYTOTALTRADESBUY == null ? 0: this.mOVING90DAYTOTALTRADESBUY.hashCode());
    result = 31 * result + (this.mOVING90DAYTOTALTRADESSELL == null ? 0: this.mOVING90DAYTOTALTRADESSELL.hashCode());
    result = 31 * result + (this.mOVING90DAYTOTALTRADESUNKNOWN == null ? 0: this.mOVING90DAYTOTALTRADESUNKNOWN.hashCode());
    result = 31 * result + (this.mOVING90DAYVOLUME == null ? 0: this.mOVING90DAYVOLUME.hashCode());
    result = 31 * result + (this.mOVING90DAYVOLUMEBUY == null ? 0: this.mOVING90DAYVOLUMEBUY.hashCode());
    result = 31 * result + (this.mOVING90DAYVOLUMESELL == null ? 0: this.mOVING90DAYVOLUMESELL.hashCode());
    result = 31 * result + (this.mOVING90DAYVOLUMEUNKNOWN == null ? 0: this.mOVING90DAYVOLUMEUNKNOWN.hashCode());
    result = 31 * result + (this.PRICE == null ? 0: this.PRICE.hashCode());
    result = 31 * result + (this.PRICE_FLAG == null ? 0: this.PRICE_FLAG.hashCode());
    result = 31 * result + (this.PRICE_LAST_UPDATE_TS == null ? 0: this.PRICE_LAST_UPDATE_TS.hashCode());
    result = 31 * result + (this.QUOTE == null ? 0: this.QUOTE.hashCode());
    result = 31 * result + (this.TOP_ASK_LAST_UPDATE_TS == null ? 0: this.TOP_ASK_LAST_UPDATE_TS.hashCode());
    result = 31 * result + (this.TOP_ASK_PRICE == null ? 0: this.TOP_ASK_PRICE.hashCode());
    result = 31 * result + (this.TOP_ASK_QUANTITY == null ? 0: this.TOP_ASK_QUANTITY.hashCode());
    result = 31 * result + (this.TOP_BID_LAST_UPDATE_TS == null ? 0: this.TOP_BID_LAST_UPDATE_TS.hashCode());
    result = 31 * result + (this.TOP_BID_PRICE == null ? 0: this.TOP_BID_PRICE.hashCode());
    result = 31 * result + (this.TOP_BID_QUANTITY == null ? 0: this.TOP_BID_QUANTITY.hashCode());
    result = 31 * result + (this.TYPE == null ? 0: this.TYPE.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class SPOTINSTRUMENTMARKETDATA {\n");
    
    sb.append("  BASE: ").append(BASE).append("\n");
    sb.append("  CCSEQ: ").append(CCSEQ).append("\n");
    sb.append("  CURRENT_DAY_HIGH: ").append(CURRENT_DAY_HIGH).append("\n");
    sb.append("  CURRENT_DAY_LOW: ").append(CURRENT_DAY_LOW).append("\n");
    sb.append("  CURRENT_DAY_OPEN: ").append(CURRENT_DAY_OPEN).append("\n");
    sb.append("  CURRENT_DAY_QUOTE_VOLUME: ").append(CURRENT_DAY_QUOTE_VOLUME).append("\n");
    sb.append("  CURRENT_DAY_QUOTE_VOLUME_BUY: ").append(CURRENT_DAY_QUOTE_VOLUME_BUY).append("\n");
    sb.append("  CURRENT_DAY_QUOTE_VOLUME_SELL: ").append(CURRENT_DAY_QUOTE_VOLUME_SELL).append("\n");
    sb.append("  CURRENT_DAY_QUOTE_VOLUME_UNKNOWN: ").append(CURRENT_DAY_QUOTE_VOLUME_UNKNOWN).append("\n");
    sb.append("  CURRENT_DAY_TOTAL_TRADES: ").append(CURRENT_DAY_TOTAL_TRADES).append("\n");
    sb.append("  CURRENT_DAY_TOTAL_TRADES_BUY: ").append(CURRENT_DAY_TOTAL_TRADES_BUY).append("\n");
    sb.append("  CURRENT_DAY_TOTAL_TRADES_SELL: ").append(CURRENT_DAY_TOTAL_TRADES_SELL).append("\n");
    sb.append("  CURRENT_DAY_TOTAL_TRADES_UNKNOWN: ").append(CURRENT_DAY_TOTAL_TRADES_UNKNOWN).append("\n");
    sb.append("  CURRENT_DAY_VOLUME: ").append(CURRENT_DAY_VOLUME).append("\n");
    sb.append("  CURRENT_DAY_VOLUME_BUY: ").append(CURRENT_DAY_VOLUME_BUY).append("\n");
    sb.append("  CURRENT_DAY_VOLUME_SELL: ").append(CURRENT_DAY_VOLUME_SELL).append("\n");
    sb.append("  CURRENT_DAY_VOLUME_UNKNOWN: ").append(CURRENT_DAY_VOLUME_UNKNOWN).append("\n");
    sb.append("  CURRENT_HOUR_HIGH: ").append(CURRENT_HOUR_HIGH).append("\n");
    sb.append("  CURRENT_HOUR_LOW: ").append(CURRENT_HOUR_LOW).append("\n");
    sb.append("  CURRENT_HOUR_OPEN: ").append(CURRENT_HOUR_OPEN).append("\n");
    sb.append("  CURRENT_HOUR_QUOTE_VOLUME: ").append(CURRENT_HOUR_QUOTE_VOLUME).append("\n");
    sb.append("  CURRENT_HOUR_QUOTE_VOLUME_BUY: ").append(CURRENT_HOUR_QUOTE_VOLUME_BUY).append("\n");
    sb.append("  CURRENT_HOUR_QUOTE_VOLUME_SELL: ").append(CURRENT_HOUR_QUOTE_VOLUME_SELL).append("\n");
    sb.append("  CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN: ").append(CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN).append("\n");
    sb.append("  CURRENT_HOUR_TOTAL_TRADES: ").append(CURRENT_HOUR_TOTAL_TRADES).append("\n");
    sb.append("  CURRENT_HOUR_TOTAL_TRADES_BUY: ").append(CURRENT_HOUR_TOTAL_TRADES_BUY).append("\n");
    sb.append("  CURRENT_HOUR_TOTAL_TRADES_SELL: ").append(CURRENT_HOUR_TOTAL_TRADES_SELL).append("\n");
    sb.append("  CURRENT_HOUR_TOTAL_TRADES_UNKNOWN: ").append(CURRENT_HOUR_TOTAL_TRADES_UNKNOWN).append("\n");
    sb.append("  CURRENT_HOUR_VOLUME: ").append(CURRENT_HOUR_VOLUME).append("\n");
    sb.append("  CURRENT_HOUR_VOLUME_BUY: ").append(CURRENT_HOUR_VOLUME_BUY).append("\n");
    sb.append("  CURRENT_HOUR_VOLUME_SELL: ").append(CURRENT_HOUR_VOLUME_SELL).append("\n");
    sb.append("  CURRENT_HOUR_VOLUME_UNKNOWN: ").append(CURRENT_HOUR_VOLUME_UNKNOWN).append("\n");
    sb.append("  CURRENT_MONTH_HIGH: ").append(CURRENT_MONTH_HIGH).append("\n");
    sb.append("  CURRENT_MONTH_LOW: ").append(CURRENT_MONTH_LOW).append("\n");
    sb.append("  CURRENT_MONTH_OPEN: ").append(CURRENT_MONTH_OPEN).append("\n");
    sb.append("  CURRENT_MONTH_QUOTE_VOLUME: ").append(CURRENT_MONTH_QUOTE_VOLUME).append("\n");
    sb.append("  CURRENT_MONTH_QUOTE_VOLUME_BUY: ").append(CURRENT_MONTH_QUOTE_VOLUME_BUY).append("\n");
    sb.append("  CURRENT_MONTH_QUOTE_VOLUME_SELL: ").append(CURRENT_MONTH_QUOTE_VOLUME_SELL).append("\n");
    sb.append("  CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN: ").append(CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN).append("\n");
    sb.append("  CURRENT_MONTH_TOTAL_TRADES: ").append(CURRENT_MONTH_TOTAL_TRADES).append("\n");
    sb.append("  CURRENT_MONTH_TOTAL_TRADES_BUY: ").append(CURRENT_MONTH_TOTAL_TRADES_BUY).append("\n");
    sb.append("  CURRENT_MONTH_TOTAL_TRADES_SELL: ").append(CURRENT_MONTH_TOTAL_TRADES_SELL).append("\n");
    sb.append("  CURRENT_MONTH_TOTAL_TRADES_UNKNOWN: ").append(CURRENT_MONTH_TOTAL_TRADES_UNKNOWN).append("\n");
    sb.append("  CURRENT_MONTH_VOLUME: ").append(CURRENT_MONTH_VOLUME).append("\n");
    sb.append("  CURRENT_MONTH_VOLUME_BUY: ").append(CURRENT_MONTH_VOLUME_BUY).append("\n");
    sb.append("  CURRENT_MONTH_VOLUME_SELL: ").append(CURRENT_MONTH_VOLUME_SELL).append("\n");
    sb.append("  CURRENT_MONTH_VOLUME_UNKNOWN: ").append(CURRENT_MONTH_VOLUME_UNKNOWN).append("\n");
    sb.append("  CURRENT_WEEK_HIGH: ").append(CURRENT_WEEK_HIGH).append("\n");
    sb.append("  CURRENT_WEEK_LOW: ").append(CURRENT_WEEK_LOW).append("\n");
    sb.append("  CURRENT_WEEK_OPEN: ").append(CURRENT_WEEK_OPEN).append("\n");
    sb.append("  CURRENT_WEEK_QUOTE_VOLUME: ").append(CURRENT_WEEK_QUOTE_VOLUME).append("\n");
    sb.append("  CURRENT_WEEK_QUOTE_VOLUME_BUY: ").append(CURRENT_WEEK_QUOTE_VOLUME_BUY).append("\n");
    sb.append("  CURRENT_WEEK_QUOTE_VOLUME_SELL: ").append(CURRENT_WEEK_QUOTE_VOLUME_SELL).append("\n");
    sb.append("  CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN: ").append(CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN).append("\n");
    sb.append("  CURRENT_WEEK_TOTAL_TRADES: ").append(CURRENT_WEEK_TOTAL_TRADES).append("\n");
    sb.append("  CURRENT_WEEK_TOTAL_TRADES_BUY: ").append(CURRENT_WEEK_TOTAL_TRADES_BUY).append("\n");
    sb.append("  CURRENT_WEEK_TOTAL_TRADES_SELL: ").append(CURRENT_WEEK_TOTAL_TRADES_SELL).append("\n");
    sb.append("  CURRENT_WEEK_TOTAL_TRADES_UNKNOWN: ").append(CURRENT_WEEK_TOTAL_TRADES_UNKNOWN).append("\n");
    sb.append("  CURRENT_WEEK_VOLUME: ").append(CURRENT_WEEK_VOLUME).append("\n");
    sb.append("  CURRENT_WEEK_VOLUME_BUY: ").append(CURRENT_WEEK_VOLUME_BUY).append("\n");
    sb.append("  CURRENT_WEEK_VOLUME_SELL: ").append(CURRENT_WEEK_VOLUME_SELL).append("\n");
    sb.append("  CURRENT_WEEK_VOLUME_UNKNOWN: ").append(CURRENT_WEEK_VOLUME_UNKNOWN).append("\n");
    sb.append("  CURRENT_YEAR_HIGH: ").append(CURRENT_YEAR_HIGH).append("\n");
    sb.append("  CURRENT_YEAR_LOW: ").append(CURRENT_YEAR_LOW).append("\n");
    sb.append("  CURRENT_YEAR_OPEN: ").append(CURRENT_YEAR_OPEN).append("\n");
    sb.append("  CURRENT_YEAR_QUOTE_VOLUME: ").append(CURRENT_YEAR_QUOTE_VOLUME).append("\n");
    sb.append("  CURRENT_YEAR_QUOTE_VOLUME_BUY: ").append(CURRENT_YEAR_QUOTE_VOLUME_BUY).append("\n");
    sb.append("  CURRENT_YEAR_QUOTE_VOLUME_SELL: ").append(CURRENT_YEAR_QUOTE_VOLUME_SELL).append("\n");
    sb.append("  CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN: ").append(CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN).append("\n");
    sb.append("  CURRENT_YEAR_TOTAL_TRADES: ").append(CURRENT_YEAR_TOTAL_TRADES).append("\n");
    sb.append("  CURRENT_YEAR_TOTAL_TRADES_BUY: ").append(CURRENT_YEAR_TOTAL_TRADES_BUY).append("\n");
    sb.append("  CURRENT_YEAR_TOTAL_TRADES_SELL: ").append(CURRENT_YEAR_TOTAL_TRADES_SELL).append("\n");
    sb.append("  CURRENT_YEAR_TOTAL_TRADES_UNKNOWN: ").append(CURRENT_YEAR_TOTAL_TRADES_UNKNOWN).append("\n");
    sb.append("  CURRENT_YEAR_VOLUME: ").append(CURRENT_YEAR_VOLUME).append("\n");
    sb.append("  CURRENT_YEAR_VOLUME_BUY: ").append(CURRENT_YEAR_VOLUME_BUY).append("\n");
    sb.append("  CURRENT_YEAR_VOLUME_SELL: ").append(CURRENT_YEAR_VOLUME_SELL).append("\n");
    sb.append("  CURRENT_YEAR_VOLUME_UNKNOWN: ").append(CURRENT_YEAR_VOLUME_UNKNOWN).append("\n");
    sb.append("  INSTRUMENT: ").append(INSTRUMENT).append("\n");
    sb.append("  LAST_PROCESSED_TRADE_CCSEQ: ").append(LAST_PROCESSED_TRADE_CCSEQ).append("\n");
    sb.append("  LAST_PROCESSED_TRADE_PRICE: ").append(LAST_PROCESSED_TRADE_PRICE).append("\n");
    sb.append("  LAST_PROCESSED_TRADE_QUANTITY: ").append(LAST_PROCESSED_TRADE_QUANTITY).append("\n");
    sb.append("  LAST_PROCESSED_TRADE_QUOTE_QUANTITY: ").append(LAST_PROCESSED_TRADE_QUOTE_QUANTITY).append("\n");
    sb.append("  LAST_PROCESSED_TRADE_SIDE: ").append(LAST_PROCESSED_TRADE_SIDE).append("\n");
    sb.append("  LAST_PROCESSED_TRADE_TS: ").append(LAST_PROCESSED_TRADE_TS).append("\n");
    sb.append("  LAST_TRADE_CCSEQ: ").append(LAST_TRADE_CCSEQ).append("\n");
    sb.append("  LAST_TRADE_ID: ").append(LAST_TRADE_ID).append("\n");
    sb.append("  LAST_TRADE_QUANTITY: ").append(LAST_TRADE_QUANTITY).append("\n");
    sb.append("  LAST_TRADE_QUOTE_QUANTITY: ").append(LAST_TRADE_QUOTE_QUANTITY).append("\n");
    sb.append("  LAST_TRADE_SIDE: ").append(LAST_TRADE_SIDE).append("\n");
    sb.append("  LIFETIME_FIRST_TRADE_TS: ").append(LIFETIME_FIRST_TRADE_TS).append("\n");
    sb.append("  LIFETIME_HIGH: ").append(LIFETIME_HIGH).append("\n");
    sb.append("  LIFETIME_HIGH_TS: ").append(LIFETIME_HIGH_TS).append("\n");
    sb.append("  LIFETIME_LOW: ").append(LIFETIME_LOW).append("\n");
    sb.append("  LIFETIME_LOW_TS: ").append(LIFETIME_LOW_TS).append("\n");
    sb.append("  LIFETIME_OPEN: ").append(LIFETIME_OPEN).append("\n");
    sb.append("  LIFETIME_QUOTE_VOLUME: ").append(LIFETIME_QUOTE_VOLUME).append("\n");
    sb.append("  LIFETIME_QUOTE_VOLUME_BUY: ").append(LIFETIME_QUOTE_VOLUME_BUY).append("\n");
    sb.append("  LIFETIME_QUOTE_VOLUME_SELL: ").append(LIFETIME_QUOTE_VOLUME_SELL).append("\n");
    sb.append("  LIFETIME_QUOTE_VOLUME_UNKNOWN: ").append(LIFETIME_QUOTE_VOLUME_UNKNOWN).append("\n");
    sb.append("  LIFETIME_TOTAL_TRADES: ").append(LIFETIME_TOTAL_TRADES).append("\n");
    sb.append("  LIFETIME_TOTAL_TRADES_BUY: ").append(LIFETIME_TOTAL_TRADES_BUY).append("\n");
    sb.append("  LIFETIME_TOTAL_TRADES_SELL: ").append(LIFETIME_TOTAL_TRADES_SELL).append("\n");
    sb.append("  LIFETIME_TOTAL_TRADES_UNKNOWN: ").append(LIFETIME_TOTAL_TRADES_UNKNOWN).append("\n");
    sb.append("  LIFETIME_VOLUME: ").append(LIFETIME_VOLUME).append("\n");
    sb.append("  LIFETIME_VOLUME_BUY: ").append(LIFETIME_VOLUME_BUY).append("\n");
    sb.append("  LIFETIME_VOLUME_SELL: ").append(LIFETIME_VOLUME_SELL).append("\n");
    sb.append("  LIFETIME_VOLUME_UNKNOWN: ").append(LIFETIME_VOLUME_UNKNOWN).append("\n");
    sb.append("  MAPPED_INSTRUMENT: ").append(MAPPED_INSTRUMENT).append("\n");
    sb.append("  MARKET: ").append(MARKET).append("\n");
    sb.append("  mOVING180DAYHIGH: ").append(mOVING180DAYHIGH).append("\n");
    sb.append("  mOVING180DAYLOW: ").append(mOVING180DAYLOW).append("\n");
    sb.append("  mOVING180DAYOPEN: ").append(mOVING180DAYOPEN).append("\n");
    sb.append("  mOVING180DAYQUOTEVOLUME: ").append(mOVING180DAYQUOTEVOLUME).append("\n");
    sb.append("  mOVING180DAYQUOTEVOLUMEBUY: ").append(mOVING180DAYQUOTEVOLUMEBUY).append("\n");
    sb.append("  mOVING180DAYQUOTEVOLUMESELL: ").append(mOVING180DAYQUOTEVOLUMESELL).append("\n");
    sb.append("  mOVING180DAYQUOTEVOLUMEUNKNOWN: ").append(mOVING180DAYQUOTEVOLUMEUNKNOWN).append("\n");
    sb.append("  mOVING180DAYTOTALTRADES: ").append(mOVING180DAYTOTALTRADES).append("\n");
    sb.append("  mOVING180DAYTOTALTRADESBUY: ").append(mOVING180DAYTOTALTRADESBUY).append("\n");
    sb.append("  mOVING180DAYTOTALTRADESSELL: ").append(mOVING180DAYTOTALTRADESSELL).append("\n");
    sb.append("  mOVING180DAYTOTALTRADESUNKNOWN: ").append(mOVING180DAYTOTALTRADESUNKNOWN).append("\n");
    sb.append("  mOVING180DAYVOLUME: ").append(mOVING180DAYVOLUME).append("\n");
    sb.append("  mOVING180DAYVOLUMEBUY: ").append(mOVING180DAYVOLUMEBUY).append("\n");
    sb.append("  mOVING180DAYVOLUMESELL: ").append(mOVING180DAYVOLUMESELL).append("\n");
    sb.append("  mOVING180DAYVOLUMEUNKNOWN: ").append(mOVING180DAYVOLUMEUNKNOWN).append("\n");
    sb.append("  mOVING24HOURHIGH: ").append(mOVING24HOURHIGH).append("\n");
    sb.append("  mOVING24HOURLOW: ").append(mOVING24HOURLOW).append("\n");
    sb.append("  mOVING24HOUROPEN: ").append(mOVING24HOUROPEN).append("\n");
    sb.append("  mOVING24HOURQUOTEVOLUME: ").append(mOVING24HOURQUOTEVOLUME).append("\n");
    sb.append("  mOVING24HOURQUOTEVOLUMEBUY: ").append(mOVING24HOURQUOTEVOLUMEBUY).append("\n");
    sb.append("  mOVING24HOURQUOTEVOLUMESELL: ").append(mOVING24HOURQUOTEVOLUMESELL).append("\n");
    sb.append("  mOVING24HOURQUOTEVOLUMEUNKNOWN: ").append(mOVING24HOURQUOTEVOLUMEUNKNOWN).append("\n");
    sb.append("  mOVING24HOURTOTALTRADES: ").append(mOVING24HOURTOTALTRADES).append("\n");
    sb.append("  mOVING24HOURTOTALTRADESBUY: ").append(mOVING24HOURTOTALTRADESBUY).append("\n");
    sb.append("  mOVING24HOURTOTALTRADESSELL: ").append(mOVING24HOURTOTALTRADESSELL).append("\n");
    sb.append("  mOVING24HOURTOTALTRADESUNKNOWN: ").append(mOVING24HOURTOTALTRADESUNKNOWN).append("\n");
    sb.append("  mOVING24HOURVOLUME: ").append(mOVING24HOURVOLUME).append("\n");
    sb.append("  mOVING24HOURVOLUMEBUY: ").append(mOVING24HOURVOLUMEBUY).append("\n");
    sb.append("  mOVING24HOURVOLUMESELL: ").append(mOVING24HOURVOLUMESELL).append("\n");
    sb.append("  mOVING24HOURVOLUMEUNKNOWN: ").append(mOVING24HOURVOLUMEUNKNOWN).append("\n");
    sb.append("  mOVING30DAYHIGH: ").append(mOVING30DAYHIGH).append("\n");
    sb.append("  mOVING30DAYLOW: ").append(mOVING30DAYLOW).append("\n");
    sb.append("  mOVING30DAYOPEN: ").append(mOVING30DAYOPEN).append("\n");
    sb.append("  mOVING30DAYQUOTEVOLUME: ").append(mOVING30DAYQUOTEVOLUME).append("\n");
    sb.append("  mOVING30DAYQUOTEVOLUMEBUY: ").append(mOVING30DAYQUOTEVOLUMEBUY).append("\n");
    sb.append("  mOVING30DAYQUOTEVOLUMESELL: ").append(mOVING30DAYQUOTEVOLUMESELL).append("\n");
    sb.append("  mOVING30DAYQUOTEVOLUMEUNKNOWN: ").append(mOVING30DAYQUOTEVOLUMEUNKNOWN).append("\n");
    sb.append("  mOVING30DAYTOTALTRADES: ").append(mOVING30DAYTOTALTRADES).append("\n");
    sb.append("  mOVING30DAYTOTALTRADESBUY: ").append(mOVING30DAYTOTALTRADESBUY).append("\n");
    sb.append("  mOVING30DAYTOTALTRADESSELL: ").append(mOVING30DAYTOTALTRADESSELL).append("\n");
    sb.append("  mOVING30DAYTOTALTRADESUNKNOWN: ").append(mOVING30DAYTOTALTRADESUNKNOWN).append("\n");
    sb.append("  mOVING30DAYVOLUME: ").append(mOVING30DAYVOLUME).append("\n");
    sb.append("  mOVING30DAYVOLUMEBUY: ").append(mOVING30DAYVOLUMEBUY).append("\n");
    sb.append("  mOVING30DAYVOLUMESELL: ").append(mOVING30DAYVOLUMESELL).append("\n");
    sb.append("  mOVING30DAYVOLUMEUNKNOWN: ").append(mOVING30DAYVOLUMEUNKNOWN).append("\n");
    sb.append("  mOVING365DAYHIGH: ").append(mOVING365DAYHIGH).append("\n");
    sb.append("  mOVING365DAYLOW: ").append(mOVING365DAYLOW).append("\n");
    sb.append("  mOVING365DAYOPEN: ").append(mOVING365DAYOPEN).append("\n");
    sb.append("  mOVING365DAYQUOTEVOLUME: ").append(mOVING365DAYQUOTEVOLUME).append("\n");
    sb.append("  mOVING365DAYQUOTEVOLUMEBUY: ").append(mOVING365DAYQUOTEVOLUMEBUY).append("\n");
    sb.append("  mOVING365DAYQUOTEVOLUMESELL: ").append(mOVING365DAYQUOTEVOLUMESELL).append("\n");
    sb.append("  mOVING365DAYQUOTEVOLUMEUNKNOWN: ").append(mOVING365DAYQUOTEVOLUMEUNKNOWN).append("\n");
    sb.append("  mOVING365DAYTOTALTRADES: ").append(mOVING365DAYTOTALTRADES).append("\n");
    sb.append("  mOVING365DAYTOTALTRADESBUY: ").append(mOVING365DAYTOTALTRADESBUY).append("\n");
    sb.append("  mOVING365DAYTOTALTRADESSELL: ").append(mOVING365DAYTOTALTRADESSELL).append("\n");
    sb.append("  mOVING365DAYTOTALTRADESUNKNOWN: ").append(mOVING365DAYTOTALTRADESUNKNOWN).append("\n");
    sb.append("  mOVING365DAYVOLUME: ").append(mOVING365DAYVOLUME).append("\n");
    sb.append("  mOVING365DAYVOLUMEBUY: ").append(mOVING365DAYVOLUMEBUY).append("\n");
    sb.append("  mOVING365DAYVOLUMESELL: ").append(mOVING365DAYVOLUMESELL).append("\n");
    sb.append("  mOVING365DAYVOLUMEUNKNOWN: ").append(mOVING365DAYVOLUMEUNKNOWN).append("\n");
    sb.append("  mOVING7DAYHIGH: ").append(mOVING7DAYHIGH).append("\n");
    sb.append("  mOVING7DAYLOW: ").append(mOVING7DAYLOW).append("\n");
    sb.append("  mOVING7DAYOPEN: ").append(mOVING7DAYOPEN).append("\n");
    sb.append("  mOVING7DAYQUOTEVOLUME: ").append(mOVING7DAYQUOTEVOLUME).append("\n");
    sb.append("  mOVING7DAYQUOTEVOLUMEBUY: ").append(mOVING7DAYQUOTEVOLUMEBUY).append("\n");
    sb.append("  mOVING7DAYQUOTEVOLUMESELL: ").append(mOVING7DAYQUOTEVOLUMESELL).append("\n");
    sb.append("  mOVING7DAYQUOTEVOLUMEUNKNOWN: ").append(mOVING7DAYQUOTEVOLUMEUNKNOWN).append("\n");
    sb.append("  mOVING7DAYTOTALTRADES: ").append(mOVING7DAYTOTALTRADES).append("\n");
    sb.append("  mOVING7DAYTOTALTRADESBUY: ").append(mOVING7DAYTOTALTRADESBUY).append("\n");
    sb.append("  mOVING7DAYTOTALTRADESSELL: ").append(mOVING7DAYTOTALTRADESSELL).append("\n");
    sb.append("  mOVING7DAYTOTALTRADESUNKNOWN: ").append(mOVING7DAYTOTALTRADESUNKNOWN).append("\n");
    sb.append("  mOVING7DAYVOLUME: ").append(mOVING7DAYVOLUME).append("\n");
    sb.append("  mOVING7DAYVOLUMEBUY: ").append(mOVING7DAYVOLUMEBUY).append("\n");
    sb.append("  mOVING7DAYVOLUMESELL: ").append(mOVING7DAYVOLUMESELL).append("\n");
    sb.append("  mOVING7DAYVOLUMEUNKNOWN: ").append(mOVING7DAYVOLUMEUNKNOWN).append("\n");
    sb.append("  mOVING90DAYHIGH: ").append(mOVING90DAYHIGH).append("\n");
    sb.append("  mOVING90DAYLOW: ").append(mOVING90DAYLOW).append("\n");
    sb.append("  mOVING90DAYOPEN: ").append(mOVING90DAYOPEN).append("\n");
    sb.append("  mOVING90DAYQUOTEVOLUME: ").append(mOVING90DAYQUOTEVOLUME).append("\n");
    sb.append("  mOVING90DAYQUOTEVOLUMEBUY: ").append(mOVING90DAYQUOTEVOLUMEBUY).append("\n");
    sb.append("  mOVING90DAYQUOTEVOLUMESELL: ").append(mOVING90DAYQUOTEVOLUMESELL).append("\n");
    sb.append("  mOVING90DAYQUOTEVOLUMEUNKNOWN: ").append(mOVING90DAYQUOTEVOLUMEUNKNOWN).append("\n");
    sb.append("  mOVING90DAYTOTALTRADES: ").append(mOVING90DAYTOTALTRADES).append("\n");
    sb.append("  mOVING90DAYTOTALTRADESBUY: ").append(mOVING90DAYTOTALTRADESBUY).append("\n");
    sb.append("  mOVING90DAYTOTALTRADESSELL: ").append(mOVING90DAYTOTALTRADESSELL).append("\n");
    sb.append("  mOVING90DAYTOTALTRADESUNKNOWN: ").append(mOVING90DAYTOTALTRADESUNKNOWN).append("\n");
    sb.append("  mOVING90DAYVOLUME: ").append(mOVING90DAYVOLUME).append("\n");
    sb.append("  mOVING90DAYVOLUMEBUY: ").append(mOVING90DAYVOLUMEBUY).append("\n");
    sb.append("  mOVING90DAYVOLUMESELL: ").append(mOVING90DAYVOLUMESELL).append("\n");
    sb.append("  mOVING90DAYVOLUMEUNKNOWN: ").append(mOVING90DAYVOLUMEUNKNOWN).append("\n");
    sb.append("  PRICE: ").append(PRICE).append("\n");
    sb.append("  PRICE_FLAG: ").append(PRICE_FLAG).append("\n");
    sb.append("  PRICE_LAST_UPDATE_TS: ").append(PRICE_LAST_UPDATE_TS).append("\n");
    sb.append("  QUOTE: ").append(QUOTE).append("\n");
    sb.append("  TOP_ASK_LAST_UPDATE_TS: ").append(TOP_ASK_LAST_UPDATE_TS).append("\n");
    sb.append("  TOP_ASK_PRICE: ").append(TOP_ASK_PRICE).append("\n");
    sb.append("  TOP_ASK_QUANTITY: ").append(TOP_ASK_QUANTITY).append("\n");
    sb.append("  TOP_BID_LAST_UPDATE_TS: ").append(TOP_BID_LAST_UPDATE_TS).append("\n");
    sb.append("  TOP_BID_PRICE: ").append(TOP_BID_PRICE).append("\n");
    sb.append("  TOP_BID_QUANTITY: ").append(TOP_BID_QUANTITY).append("\n");
    sb.append("  TYPE: ").append(TYPE).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
