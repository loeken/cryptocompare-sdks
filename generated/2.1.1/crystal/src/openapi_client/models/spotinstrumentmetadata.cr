# #CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry
#
##CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.
#
#The version of the OpenAPI document: 2.1.1
#Contact: data@cryptocompare.com
#Generated by: https://openapi-generator.tech
#OpenAPI Generator version: 6.3.0-SNAPSHOT
#

require "big"
require "json"
require "time"

module OpenAPIClient
  class SPOTINSTRUMENTMETADATA
    include JSON::Serializable

    # Optional properties
    # This is the first time instrument was seen on instrumentListSourceType BLOB.
    @[JSON::Field(key: "FIRST_SEEN_ON_BLOB_TS", type: Int32?, nillable: true, emit_null: false)]
    property first_seen_on_blob_ts : Int32?

    # This is the first time instrument was seen on instrumentListSourceType FIX.
    @[JSON::Field(key: "FIRST_SEEN_ON_FIX_TS", type: Int32?, nillable: true, emit_null: false)]
    property first_seen_on_fix_ts : Int32?

    # This is the first time instrument was seen on instrumentListSourceType HARDCODED.
    @[JSON::Field(key: "FIRST_SEEN_ON_HARDCODED_TS", type: Int32?, nillable: true, emit_null: false)]
    property first_seen_on_hardcoded_ts : Int32?

    # This is the first time instrument was seen on instrumentListSourceType INDEX_COMPOSITION.
    @[JSON::Field(key: "FIRST_SEEN_ON_INDEX_COMPOSITION_TS", type: Int32?, nillable: true, emit_null: false)]
    property first_seen_on_index_composition_ts : Int32?

    # This is the first time instrument was seen on instrumentListSourceType NSQ.
    @[JSON::Field(key: "FIRST_SEEN_ON_NSQ_TS", type: Int32?, nillable: true, emit_null: false)]
    property first_seen_on_nsq_ts : Int32?

    # This is the first time instrument was seen on instrumentListSourceType POLLING.
    @[JSON::Field(key: "FIRST_SEEN_ON_POLLING_TS", type: Int32?, nillable: true, emit_null: false)]
    property first_seen_on_polling_ts : Int32?

    # This is the first time instrument was seen on instrumentListSourceType STREAMING.
    @[JSON::Field(key: "FIRST_SEEN_ON_STREAMING_TS", type: Int32?, nillable: true, emit_null: false)]
    property first_seen_on_streaming_ts : Int32?

    # This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
    @[JSON::Field(key: "FIRST_TRADE_SPOT_FROM_BACKFILL", type: Object?, nillable: true, emit_null: false)]
    property first_trade_spot_from_backfill : Object?

    # This is the first TRADE_SPOT that we have seen on the specific source type in external format.
    @[JSON::Field(key: "FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL", type: Object?, nillable: true, emit_null: false)]
    property first_trade_spot_from_backfill_external : Object?

    # This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
    @[JSON::Field(key: "FIRST_TRADE_SPOT_FROM_BLOB", type: Object?, nillable: true, emit_null: false)]
    property first_trade_spot_from_blob : Object?

    # This is the first TRADE_SPOT that we have seen on the specific source type in external format.
    @[JSON::Field(key: "FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL", type: Object?, nillable: true, emit_null: false)]
    property first_trade_spot_from_blob_external : Object?

    # This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
    @[JSON::Field(key: "FIRST_TRADE_SPOT_FROM_CALCULATED", type: Object?, nillable: true, emit_null: false)]
    property first_trade_spot_from_calculated : Object?

    # This is the first TRADE_SPOT that we have seen on the specific source type in external format.
    @[JSON::Field(key: "FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL", type: Object?, nillable: true, emit_null: false)]
    property first_trade_spot_from_calculated_external : Object?

    # This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
    @[JSON::Field(key: "FIRST_TRADE_SPOT_FROM_FIX", type: Object?, nillable: true, emit_null: false)]
    property first_trade_spot_from_fix : Object?

    # This is the first TRADE_SPOT that we have seen on the specific source type in external format.
    @[JSON::Field(key: "FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL", type: Object?, nillable: true, emit_null: false)]
    property first_trade_spot_from_fix_external : Object?

    # This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
    @[JSON::Field(key: "FIRST_TRADE_SPOT_FROM_GO", type: Object?, nillable: true, emit_null: false)]
    property first_trade_spot_from_go : Object?

    # This is the first TRADE_SPOT that we have seen on the specific source type in external format.
    @[JSON::Field(key: "FIRST_TRADE_SPOT_FROM_GO_EXTERNAL", type: Object?, nillable: true, emit_null: false)]
    property first_trade_spot_from_go_external : Object?

    # This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
    @[JSON::Field(key: "FIRST_TRADE_SPOT_FROM_POLLING", type: Object?, nillable: true, emit_null: false)]
    property first_trade_spot_from_polling : Object?

    # This is the first TRADE_SPOT that we have seen on the specific source type in external format.
    @[JSON::Field(key: "FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL", type: Object?, nillable: true, emit_null: false)]
    property first_trade_spot_from_polling_external : Object?

    # This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
    @[JSON::Field(key: "FIRST_TRADE_SPOT_FROM_STREAMING", type: Object?, nillable: true, emit_null: false)]
    property first_trade_spot_from_streaming : Object?

    # This is the first TRADE_SPOT that we have seen on the specific source type in external format.
    @[JSON::Field(key: "FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL", type: Object?, nillable: true, emit_null: false)]
    property first_trade_spot_from_streaming_external : Object?

    # The migration destination vm hostname.
    @[JSON::Field(key: "HOST_MIGRATION_DESTINATION", type: String?, nillable: true, emit_null: false)]
    property host_migration_destination : String?

    # The migration source vm hostname.
    @[JSON::Field(key: "HOST_MIGRATION_SOURCE", type: String?, nillable: true, emit_null: false)]
    property host_migration_source : String?

    # The migration status of the symbol, we only poll / stream / connect empty or SETTLED
    @[JSON::Field(key: "HOST_MIGRATION_STATUS", type: String?, nillable: true, emit_null: false)]
    property host_migration_status : String?

    # The instrument ID as it is on the exchange with small modifications - we do not allow the following characters inside isntrument ids: ,/&?
    @[JSON::Field(key: "INSTRUMENT", type: String?, nillable: true, emit_null: false)]
    property instrument : String?

    # The full data we get from the polling endpoint for this specific instrument. This is a JSON stringified object with different properties per exchange.
    @[JSON::Field(key: "INSTRUMENT_EXTERNAL_DATA", type: String?, nillable: true, emit_null: false)]
    property instrument_external_data : String?

    # The current mapping information for this instrument
    @[JSON::Field(key: "INSTRUMENT_MAPPING", type: Object?, nillable: true, emit_null: false)]
    property instrument_mapping : Object?

    # Historical mapping information for this instrument
    @[JSON::Field(key: "INSTRUMENT_MAPPING_HISTORY", type: Array(String)?, nillable: true, emit_null: false)]
    property instrument_mapping_history : Array(String)?

    # Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
    @[JSON::Field(key: "INSTRUMENT_SOURCE_BACKFILL", type: String?, nillable: true, emit_null: false)]
    property instrument_source_backfill : String?

    # Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
    @[JSON::Field(key: "INSTRUMENT_SOURCE_BLOB", type: String?, nillable: true, emit_null: false)]
    property instrument_source_blob : String?

    # Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
    @[JSON::Field(key: "INSTRUMENT_SOURCE_CALCULATED", type: String?, nillable: true, emit_null: false)]
    property instrument_source_calculated : String?

    # Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
    @[JSON::Field(key: "INSTRUMENT_SOURCE_FIX", type: String?, nillable: true, emit_null: false)]
    property instrument_source_fix : String?

    # Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
    @[JSON::Field(key: "INSTRUMENT_SOURCE_GO", type: String?, nillable: true, emit_null: false)]
    property instrument_source_go : String?

    # Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
    @[JSON::Field(key: "INSTRUMENT_SOURCE_POLLING", type: String?, nillable: true, emit_null: false)]
    property instrument_source_polling : String?

    # Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
    @[JSON::Field(key: "INSTRUMENT_SOURCE_STREAMING", type: String?, nillable: true, emit_null: false)]
    property instrument_source_streaming : String?

    # The status of the symbol, we only poll / stream / connect to the ACTIVE ones, for the RETIRED / IGNORED / EXPIRED  one we no longer query for data.
    @[JSON::Field(key: "INSTRUMENT_STATUS", type: String?, default: "ACTIVE", nillable: true, emit_null: false)]
    property instrument_status : String?

    # The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST", type: Object?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_backfill_last_proxied_rest_request : Object?

    # The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS", type: Int32?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_backfill_rest_uri_last_request_ts : Int32?

    # The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS", type: Int32?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_backfill_rest_uri_last_response_ts : Int32?

    # The next time we expect to make a request for TRADE_SPOT on this instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS", type: Int32?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_backfill_rest_uri_next_request_ts : Int32?

    # The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST", type: Object?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_blob_last_proxied_rest_request : Object?

    # The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS", type: Int32?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_blob_rest_uri_last_request_ts : Int32?

    # The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS", type: Int32?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_blob_rest_uri_last_response_ts : Int32?

    # The next time we expect to make a request for TRADE_SPOT on this instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS", type: Int32?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_blob_rest_uri_next_request_ts : Int32?

    # The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST", type: Object?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_calculated_last_proxied_rest_request : Object?

    # The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS", type: Int32?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_calculated_rest_uri_last_request_ts : Int32?

    # The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS", type: Int32?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_calculated_rest_uri_last_response_ts : Int32?

    # The next time we expect to make a request for TRADE_SPOT on this instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS", type: Int32?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_calculated_rest_uri_next_request_ts : Int32?

    # The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST", type: Object?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_fix_last_proxied_rest_request : Object?

    # The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS", type: Int32?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_fix_rest_uri_last_request_ts : Int32?

    # The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS", type: Int32?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_fix_rest_uri_last_response_ts : Int32?

    # The next time we expect to make a request for TRADE_SPOT on this instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS", type: Int32?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_fix_rest_uri_next_request_ts : Int32?

    # The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST", type: Object?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_go_last_proxied_rest_request : Object?

    # The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS", type: Int32?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_go_rest_uri_last_request_ts : Int32?

    # The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS", type: Int32?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_go_rest_uri_last_response_ts : Int32?

    # The next time we expect to make a request for TRADE_SPOT on this instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS", type: Int32?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_go_rest_uri_next_request_ts : Int32?

    # The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST", type: Object?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_polling_last_proxied_rest_request : Object?

    # The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS", type: Int32?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_polling_rest_uri_last_request_ts : Int32?

    # The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS", type: Int32?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_polling_rest_uri_last_response_ts : Int32?

    # The next time we expect to make a request for TRADE_SPOT on this instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS", type: Int32?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_polling_rest_uri_next_request_ts : Int32?

    # The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST", type: Object?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_streaming_last_proxied_rest_request : Object?

    # The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS", type: Int32?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_streaming_rest_uri_last_request_ts : Int32?

    # The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS", type: Int32?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_streaming_rest_uri_last_response_ts : Int32?

    # The next time we expect to make a request for TRADE_SPOT on this instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS", type: Int32?, nillable: true, emit_null: false)]
    property instrument_trade_spot_from_streaming_rest_uri_next_request_ts : Int32?

    # This flags the exchange instrument as in ready to consume TRADE_SPOT via a streaming integration.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION", type: Bool?, default: false, nillable: true, emit_null: false)]
    property instrument_trade_spot_is_ready_for_streaming_integration : Bool?

    # This is used to build up the request in some cases, this is where we put the id we use when querying for TRADE_SPOT.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_REST_URI", type: String?, nillable: true, emit_null: false)]
    property instrument_trade_spot_rest_uri : String?

    # The URL we send to the proxy swarm to get TRADE_SPOT for the instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_REST_URL", type: String?, nillable: true, emit_null: false)]
    property instrument_trade_spot_rest_url : String?

    # This is used to build up the subscription in some cases, this is where we put the id we use when subscribing for TRADE_SPOT on this instrument.
    @[JSON::Field(key: "INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION", type: String?, nillable: true, emit_null: false)]
    property instrument_trade_spot_streaming_subscription : String?

    # The timestamp last encountered where the batch of trades from TRADES_SPOT all occured at the same time. This is an issue when making the next request that requires polling by timestamp as a start/from parameter
    @[JSON::Field(key: "LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS", type: Int32?, nillable: true, emit_null: false)]
    property last_concurrent_batch_of_trades_spot_ms : Int32?

    # This is the last time instrument was seen on instrumentListSourceType BLOB.
    @[JSON::Field(key: "LAST_SEEN_ON_BLOB_TS", type: Int32?, nillable: true, emit_null: false)]
    property last_seen_on_blob_ts : Int32?

    # This is the last time instrument was seen on instrumentListSourceType FIX.
    @[JSON::Field(key: "LAST_SEEN_ON_FIX_TS", type: Int32?, nillable: true, emit_null: false)]
    property last_seen_on_fix_ts : Int32?

    # This is the last time instrument was seen on instrumentListSourceType HARDCODED.
    @[JSON::Field(key: "LAST_SEEN_ON_HARDCODED_TS", type: Int32?, nillable: true, emit_null: false)]
    property last_seen_on_hardcoded_ts : Int32?

    # This is the last time instrument was seen on instrumentListSourceType INDEX_COMPOSITION.
    @[JSON::Field(key: "LAST_SEEN_ON_INDEX_COMPOSITION_TS", type: Int32?, nillable: true, emit_null: false)]
    property last_seen_on_index_composition_ts : Int32?

    # This is the last time instrument was seen on instrumentListSourceType NSQ.
    @[JSON::Field(key: "LAST_SEEN_ON_NSQ_TS", type: Int32?, nillable: true, emit_null: false)]
    property last_seen_on_nsq_ts : Int32?

    # This is the last time instrument was seen on instrumentListSourceType POLLING.
    @[JSON::Field(key: "LAST_SEEN_ON_POLLING_TS", type: Int32?, nillable: true, emit_null: false)]
    property last_seen_on_polling_ts : Int32?

    # This is the last time instrument was seen on instrumentListSourceType STREAMING.
    @[JSON::Field(key: "LAST_SEEN_ON_STREAMING_TS", type: Int32?, nillable: true, emit_null: false)]
    property last_seen_on_streaming_ts : Int32?

    # This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
    @[JSON::Field(key: "LAST_TRADE_SPOT_FROM_BACKFILL", type: Object?, nillable: true, emit_null: false)]
    property last_trade_spot_from_backfill : Object?

    # This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
    @[JSON::Field(key: "LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL", type: Object?, nillable: true, emit_null: false)]
    property last_trade_spot_from_backfill_external : Object?

    # This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
    @[JSON::Field(key: "LAST_TRADE_SPOT_FROM_BLOB", type: Object?, nillable: true, emit_null: false)]
    property last_trade_spot_from_blob : Object?

    # This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
    @[JSON::Field(key: "LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL", type: Object?, nillable: true, emit_null: false)]
    property last_trade_spot_from_blob_external : Object?

    # This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
    @[JSON::Field(key: "LAST_TRADE_SPOT_FROM_CALCULATED", type: Object?, nillable: true, emit_null: false)]
    property last_trade_spot_from_calculated : Object?

    # This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
    @[JSON::Field(key: "LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL", type: Object?, nillable: true, emit_null: false)]
    property last_trade_spot_from_calculated_external : Object?

    # This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
    @[JSON::Field(key: "LAST_TRADE_SPOT_FROM_FIX", type: Object?, nillable: true, emit_null: false)]
    property last_trade_spot_from_fix : Object?

    # This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
    @[JSON::Field(key: "LAST_TRADE_SPOT_FROM_FIX_EXTERNAL", type: Object?, nillable: true, emit_null: false)]
    property last_trade_spot_from_fix_external : Object?

    # This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
    @[JSON::Field(key: "LAST_TRADE_SPOT_FROM_GO", type: Object?, nillable: true, emit_null: false)]
    property last_trade_spot_from_go : Object?

    # This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
    @[JSON::Field(key: "LAST_TRADE_SPOT_FROM_GO_EXTERNAL", type: Object?, nillable: true, emit_null: false)]
    property last_trade_spot_from_go_external : Object?

    # This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
    @[JSON::Field(key: "LAST_TRADE_SPOT_FROM_POLLING", type: Object?, nillable: true, emit_null: false)]
    property last_trade_spot_from_polling : Object?

    # This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
    @[JSON::Field(key: "LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL", type: Object?, nillable: true, emit_null: false)]
    property last_trade_spot_from_polling_external : Object?

    # This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
    @[JSON::Field(key: "LAST_TRADE_SPOT_FROM_STREAMING", type: Object?, nillable: true, emit_null: false)]
    property last_trade_spot_from_streaming : Object?

    # This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
    @[JSON::Field(key: "LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL", type: Object?, nillable: true, emit_null: false)]
    property last_trade_spot_from_streaming_external : Object?

    # The version of metadata, used for version conversions/migrates.
    @[JSON::Field(key: "METADATA_VERSION", type: Int32?, default: 4, nillable: true, emit_null: false)]
    property metadata_version : Int32?

    # This states the status of blob migration for this intrument on this exchange.
    @[JSON::Field(key: "PROCESSING_TRADES_FROM_BLOB_STATUS", type: String?, nillable: true, emit_null: false)]
    property processing_trades_from_blob_status : String?

    # This is both the CCSEQ and the total TRADES_SPOT we have processed on this instrument
    @[JSON::Field(key: "TOTAL_TRADES_SPOT", type: Int32?, nillable: true, emit_null: false)]
    property total_trades_spot : Int32?

    # This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
    @[JSON::Field(key: "UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA", type: Object?, nillable: true, emit_null: false)]
    property unstructured_trade_spot_from_backfill_internal_data : Object?

    # This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
    @[JSON::Field(key: "UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA", type: Object?, nillable: true, emit_null: false)]
    property unstructured_trade_spot_from_blob_internal_data : Object?

    # This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
    @[JSON::Field(key: "UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA", type: Object?, nillable: true, emit_null: false)]
    property unstructured_trade_spot_from_calculated_internal_data : Object?

    # This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
    @[JSON::Field(key: "UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA", type: Object?, nillable: true, emit_null: false)]
    property unstructured_trade_spot_from_fix_internal_data : Object?

    # This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
    @[JSON::Field(key: "UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA", type: Object?, nillable: true, emit_null: false)]
    property unstructured_trade_spot_from_go_internal_data : Object?

    # This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
    @[JSON::Field(key: "UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA", type: Object?, nillable: true, emit_null: false)]
    property unstructured_trade_spot_from_polling_internal_data : Object?

    # This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
    @[JSON::Field(key: "UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA", type: Object?, nillable: true, emit_null: false)]
    property unstructured_trade_spot_from_streaming_internal_data : Object?

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(@first_seen_on_blob_ts : Int32?, @first_seen_on_fix_ts : Int32?, @first_seen_on_hardcoded_ts : Int32?, @first_seen_on_index_composition_ts : Int32?, @first_seen_on_nsq_ts : Int32?, @first_seen_on_polling_ts : Int32?, @first_seen_on_streaming_ts : Int32?, @first_trade_spot_from_backfill : Object?, @first_trade_spot_from_backfill_external : Object?, @first_trade_spot_from_blob : Object?, @first_trade_spot_from_blob_external : Object?, @first_trade_spot_from_calculated : Object?, @first_trade_spot_from_calculated_external : Object?, @first_trade_spot_from_fix : Object?, @first_trade_spot_from_fix_external : Object?, @first_trade_spot_from_go : Object?, @first_trade_spot_from_go_external : Object?, @first_trade_spot_from_polling : Object?, @first_trade_spot_from_polling_external : Object?, @first_trade_spot_from_streaming : Object?, @first_trade_spot_from_streaming_external : Object?, @host_migration_destination : String?, @host_migration_source : String?, @host_migration_status : String?, @instrument : String?, @instrument_external_data : String?, @instrument_mapping : Object?, @instrument_mapping_history : Array(String)?, @instrument_source_backfill : String?, @instrument_source_blob : String?, @instrument_source_calculated : String?, @instrument_source_fix : String?, @instrument_source_go : String?, @instrument_source_polling : String?, @instrument_source_streaming : String?, @instrument_status : String?, @instrument_trade_spot_from_backfill_last_proxied_rest_request : Object?, @instrument_trade_spot_from_backfill_rest_uri_last_request_ts : Int32?, @instrument_trade_spot_from_backfill_rest_uri_last_response_ts : Int32?, @instrument_trade_spot_from_backfill_rest_uri_next_request_ts : Int32?, @instrument_trade_spot_from_blob_last_proxied_rest_request : Object?, @instrument_trade_spot_from_blob_rest_uri_last_request_ts : Int32?, @instrument_trade_spot_from_blob_rest_uri_last_response_ts : Int32?, @instrument_trade_spot_from_blob_rest_uri_next_request_ts : Int32?, @instrument_trade_spot_from_calculated_last_proxied_rest_request : Object?, @instrument_trade_spot_from_calculated_rest_uri_last_request_ts : Int32?, @instrument_trade_spot_from_calculated_rest_uri_last_response_ts : Int32?, @instrument_trade_spot_from_calculated_rest_uri_next_request_ts : Int32?, @instrument_trade_spot_from_fix_last_proxied_rest_request : Object?, @instrument_trade_spot_from_fix_rest_uri_last_request_ts : Int32?, @instrument_trade_spot_from_fix_rest_uri_last_response_ts : Int32?, @instrument_trade_spot_from_fix_rest_uri_next_request_ts : Int32?, @instrument_trade_spot_from_go_last_proxied_rest_request : Object?, @instrument_trade_spot_from_go_rest_uri_last_request_ts : Int32?, @instrument_trade_spot_from_go_rest_uri_last_response_ts : Int32?, @instrument_trade_spot_from_go_rest_uri_next_request_ts : Int32?, @instrument_trade_spot_from_polling_last_proxied_rest_request : Object?, @instrument_trade_spot_from_polling_rest_uri_last_request_ts : Int32?, @instrument_trade_spot_from_polling_rest_uri_last_response_ts : Int32?, @instrument_trade_spot_from_polling_rest_uri_next_request_ts : Int32?, @instrument_trade_spot_from_streaming_last_proxied_rest_request : Object?, @instrument_trade_spot_from_streaming_rest_uri_last_request_ts : Int32?, @instrument_trade_spot_from_streaming_rest_uri_last_response_ts : Int32?, @instrument_trade_spot_from_streaming_rest_uri_next_request_ts : Int32?, @instrument_trade_spot_is_ready_for_streaming_integration : Bool?, @instrument_trade_spot_rest_uri : String?, @instrument_trade_spot_rest_url : String?, @instrument_trade_spot_streaming_subscription : String?, @last_concurrent_batch_of_trades_spot_ms : Int32?, @last_seen_on_blob_ts : Int32?, @last_seen_on_fix_ts : Int32?, @last_seen_on_hardcoded_ts : Int32?, @last_seen_on_index_composition_ts : Int32?, @last_seen_on_nsq_ts : Int32?, @last_seen_on_polling_ts : Int32?, @last_seen_on_streaming_ts : Int32?, @last_trade_spot_from_backfill : Object?, @last_trade_spot_from_backfill_external : Object?, @last_trade_spot_from_blob : Object?, @last_trade_spot_from_blob_external : Object?, @last_trade_spot_from_calculated : Object?, @last_trade_spot_from_calculated_external : Object?, @last_trade_spot_from_fix : Object?, @last_trade_spot_from_fix_external : Object?, @last_trade_spot_from_go : Object?, @last_trade_spot_from_go_external : Object?, @last_trade_spot_from_polling : Object?, @last_trade_spot_from_polling_external : Object?, @last_trade_spot_from_streaming : Object?, @last_trade_spot_from_streaming_external : Object?, @metadata_version : Int32?, @processing_trades_from_blob_status : String?, @total_trades_spot : Int32?, @unstructured_trade_spot_from_backfill_internal_data : Object?, @unstructured_trade_spot_from_blob_internal_data : Object?, @unstructured_trade_spot_from_calculated_internal_data : Object?, @unstructured_trade_spot_from_fix_internal_data : Object?, @unstructured_trade_spot_from_go_internal_data : Object?, @unstructured_trade_spot_from_polling_internal_data : Object?, @unstructured_trade_spot_from_streaming_internal_data : Object?)
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array(String).new
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      true
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.same?(o)
      self.class == o.class &&
          first_seen_on_blob_ts == o.first_seen_on_blob_ts &&
          first_seen_on_fix_ts == o.first_seen_on_fix_ts &&
          first_seen_on_hardcoded_ts == o.first_seen_on_hardcoded_ts &&
          first_seen_on_index_composition_ts == o.first_seen_on_index_composition_ts &&
          first_seen_on_nsq_ts == o.first_seen_on_nsq_ts &&
          first_seen_on_polling_ts == o.first_seen_on_polling_ts &&
          first_seen_on_streaming_ts == o.first_seen_on_streaming_ts &&
          first_trade_spot_from_backfill == o.first_trade_spot_from_backfill &&
          first_trade_spot_from_backfill_external == o.first_trade_spot_from_backfill_external &&
          first_trade_spot_from_blob == o.first_trade_spot_from_blob &&
          first_trade_spot_from_blob_external == o.first_trade_spot_from_blob_external &&
          first_trade_spot_from_calculated == o.first_trade_spot_from_calculated &&
          first_trade_spot_from_calculated_external == o.first_trade_spot_from_calculated_external &&
          first_trade_spot_from_fix == o.first_trade_spot_from_fix &&
          first_trade_spot_from_fix_external == o.first_trade_spot_from_fix_external &&
          first_trade_spot_from_go == o.first_trade_spot_from_go &&
          first_trade_spot_from_go_external == o.first_trade_spot_from_go_external &&
          first_trade_spot_from_polling == o.first_trade_spot_from_polling &&
          first_trade_spot_from_polling_external == o.first_trade_spot_from_polling_external &&
          first_trade_spot_from_streaming == o.first_trade_spot_from_streaming &&
          first_trade_spot_from_streaming_external == o.first_trade_spot_from_streaming_external &&
          host_migration_destination == o.host_migration_destination &&
          host_migration_source == o.host_migration_source &&
          host_migration_status == o.host_migration_status &&
          instrument == o.instrument &&
          instrument_external_data == o.instrument_external_data &&
          instrument_mapping == o.instrument_mapping &&
          instrument_mapping_history == o.instrument_mapping_history &&
          instrument_source_backfill == o.instrument_source_backfill &&
          instrument_source_blob == o.instrument_source_blob &&
          instrument_source_calculated == o.instrument_source_calculated &&
          instrument_source_fix == o.instrument_source_fix &&
          instrument_source_go == o.instrument_source_go &&
          instrument_source_polling == o.instrument_source_polling &&
          instrument_source_streaming == o.instrument_source_streaming &&
          instrument_status == o.instrument_status &&
          instrument_trade_spot_from_backfill_last_proxied_rest_request == o.instrument_trade_spot_from_backfill_last_proxied_rest_request &&
          instrument_trade_spot_from_backfill_rest_uri_last_request_ts == o.instrument_trade_spot_from_backfill_rest_uri_last_request_ts &&
          instrument_trade_spot_from_backfill_rest_uri_last_response_ts == o.instrument_trade_spot_from_backfill_rest_uri_last_response_ts &&
          instrument_trade_spot_from_backfill_rest_uri_next_request_ts == o.instrument_trade_spot_from_backfill_rest_uri_next_request_ts &&
          instrument_trade_spot_from_blob_last_proxied_rest_request == o.instrument_trade_spot_from_blob_last_proxied_rest_request &&
          instrument_trade_spot_from_blob_rest_uri_last_request_ts == o.instrument_trade_spot_from_blob_rest_uri_last_request_ts &&
          instrument_trade_spot_from_blob_rest_uri_last_response_ts == o.instrument_trade_spot_from_blob_rest_uri_last_response_ts &&
          instrument_trade_spot_from_blob_rest_uri_next_request_ts == o.instrument_trade_spot_from_blob_rest_uri_next_request_ts &&
          instrument_trade_spot_from_calculated_last_proxied_rest_request == o.instrument_trade_spot_from_calculated_last_proxied_rest_request &&
          instrument_trade_spot_from_calculated_rest_uri_last_request_ts == o.instrument_trade_spot_from_calculated_rest_uri_last_request_ts &&
          instrument_trade_spot_from_calculated_rest_uri_last_response_ts == o.instrument_trade_spot_from_calculated_rest_uri_last_response_ts &&
          instrument_trade_spot_from_calculated_rest_uri_next_request_ts == o.instrument_trade_spot_from_calculated_rest_uri_next_request_ts &&
          instrument_trade_spot_from_fix_last_proxied_rest_request == o.instrument_trade_spot_from_fix_last_proxied_rest_request &&
          instrument_trade_spot_from_fix_rest_uri_last_request_ts == o.instrument_trade_spot_from_fix_rest_uri_last_request_ts &&
          instrument_trade_spot_from_fix_rest_uri_last_response_ts == o.instrument_trade_spot_from_fix_rest_uri_last_response_ts &&
          instrument_trade_spot_from_fix_rest_uri_next_request_ts == o.instrument_trade_spot_from_fix_rest_uri_next_request_ts &&
          instrument_trade_spot_from_go_last_proxied_rest_request == o.instrument_trade_spot_from_go_last_proxied_rest_request &&
          instrument_trade_spot_from_go_rest_uri_last_request_ts == o.instrument_trade_spot_from_go_rest_uri_last_request_ts &&
          instrument_trade_spot_from_go_rest_uri_last_response_ts == o.instrument_trade_spot_from_go_rest_uri_last_response_ts &&
          instrument_trade_spot_from_go_rest_uri_next_request_ts == o.instrument_trade_spot_from_go_rest_uri_next_request_ts &&
          instrument_trade_spot_from_polling_last_proxied_rest_request == o.instrument_trade_spot_from_polling_last_proxied_rest_request &&
          instrument_trade_spot_from_polling_rest_uri_last_request_ts == o.instrument_trade_spot_from_polling_rest_uri_last_request_ts &&
          instrument_trade_spot_from_polling_rest_uri_last_response_ts == o.instrument_trade_spot_from_polling_rest_uri_last_response_ts &&
          instrument_trade_spot_from_polling_rest_uri_next_request_ts == o.instrument_trade_spot_from_polling_rest_uri_next_request_ts &&
          instrument_trade_spot_from_streaming_last_proxied_rest_request == o.instrument_trade_spot_from_streaming_last_proxied_rest_request &&
          instrument_trade_spot_from_streaming_rest_uri_last_request_ts == o.instrument_trade_spot_from_streaming_rest_uri_last_request_ts &&
          instrument_trade_spot_from_streaming_rest_uri_last_response_ts == o.instrument_trade_spot_from_streaming_rest_uri_last_response_ts &&
          instrument_trade_spot_from_streaming_rest_uri_next_request_ts == o.instrument_trade_spot_from_streaming_rest_uri_next_request_ts &&
          instrument_trade_spot_is_ready_for_streaming_integration == o.instrument_trade_spot_is_ready_for_streaming_integration &&
          instrument_trade_spot_rest_uri == o.instrument_trade_spot_rest_uri &&
          instrument_trade_spot_rest_url == o.instrument_trade_spot_rest_url &&
          instrument_trade_spot_streaming_subscription == o.instrument_trade_spot_streaming_subscription &&
          last_concurrent_batch_of_trades_spot_ms == o.last_concurrent_batch_of_trades_spot_ms &&
          last_seen_on_blob_ts == o.last_seen_on_blob_ts &&
          last_seen_on_fix_ts == o.last_seen_on_fix_ts &&
          last_seen_on_hardcoded_ts == o.last_seen_on_hardcoded_ts &&
          last_seen_on_index_composition_ts == o.last_seen_on_index_composition_ts &&
          last_seen_on_nsq_ts == o.last_seen_on_nsq_ts &&
          last_seen_on_polling_ts == o.last_seen_on_polling_ts &&
          last_seen_on_streaming_ts == o.last_seen_on_streaming_ts &&
          last_trade_spot_from_backfill == o.last_trade_spot_from_backfill &&
          last_trade_spot_from_backfill_external == o.last_trade_spot_from_backfill_external &&
          last_trade_spot_from_blob == o.last_trade_spot_from_blob &&
          last_trade_spot_from_blob_external == o.last_trade_spot_from_blob_external &&
          last_trade_spot_from_calculated == o.last_trade_spot_from_calculated &&
          last_trade_spot_from_calculated_external == o.last_trade_spot_from_calculated_external &&
          last_trade_spot_from_fix == o.last_trade_spot_from_fix &&
          last_trade_spot_from_fix_external == o.last_trade_spot_from_fix_external &&
          last_trade_spot_from_go == o.last_trade_spot_from_go &&
          last_trade_spot_from_go_external == o.last_trade_spot_from_go_external &&
          last_trade_spot_from_polling == o.last_trade_spot_from_polling &&
          last_trade_spot_from_polling_external == o.last_trade_spot_from_polling_external &&
          last_trade_spot_from_streaming == o.last_trade_spot_from_streaming &&
          last_trade_spot_from_streaming_external == o.last_trade_spot_from_streaming_external &&
          metadata_version == o.metadata_version &&
          processing_trades_from_blob_status == o.processing_trades_from_blob_status &&
          total_trades_spot == o.total_trades_spot &&
          unstructured_trade_spot_from_backfill_internal_data == o.unstructured_trade_spot_from_backfill_internal_data &&
          unstructured_trade_spot_from_blob_internal_data == o.unstructured_trade_spot_from_blob_internal_data &&
          unstructured_trade_spot_from_calculated_internal_data == o.unstructured_trade_spot_from_calculated_internal_data &&
          unstructured_trade_spot_from_fix_internal_data == o.unstructured_trade_spot_from_fix_internal_data &&
          unstructured_trade_spot_from_go_internal_data == o.unstructured_trade_spot_from_go_internal_data &&
          unstructured_trade_spot_from_polling_internal_data == o.unstructured_trade_spot_from_polling_internal_data &&
          unstructured_trade_spot_from_streaming_internal_data == o.unstructured_trade_spot_from_streaming_internal_data
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    def hash
      [first_seen_on_blob_ts, first_seen_on_fix_ts, first_seen_on_hardcoded_ts, first_seen_on_index_composition_ts, first_seen_on_nsq_ts, first_seen_on_polling_ts, first_seen_on_streaming_ts, first_trade_spot_from_backfill, first_trade_spot_from_backfill_external, first_trade_spot_from_blob, first_trade_spot_from_blob_external, first_trade_spot_from_calculated, first_trade_spot_from_calculated_external, first_trade_spot_from_fix, first_trade_spot_from_fix_external, first_trade_spot_from_go, first_trade_spot_from_go_external, first_trade_spot_from_polling, first_trade_spot_from_polling_external, first_trade_spot_from_streaming, first_trade_spot_from_streaming_external, host_migration_destination, host_migration_source, host_migration_status, instrument, instrument_external_data, instrument_mapping, instrument_mapping_history, instrument_source_backfill, instrument_source_blob, instrument_source_calculated, instrument_source_fix, instrument_source_go, instrument_source_polling, instrument_source_streaming, instrument_status, instrument_trade_spot_from_backfill_last_proxied_rest_request, instrument_trade_spot_from_backfill_rest_uri_last_request_ts, instrument_trade_spot_from_backfill_rest_uri_last_response_ts, instrument_trade_spot_from_backfill_rest_uri_next_request_ts, instrument_trade_spot_from_blob_last_proxied_rest_request, instrument_trade_spot_from_blob_rest_uri_last_request_ts, instrument_trade_spot_from_blob_rest_uri_last_response_ts, instrument_trade_spot_from_blob_rest_uri_next_request_ts, instrument_trade_spot_from_calculated_last_proxied_rest_request, instrument_trade_spot_from_calculated_rest_uri_last_request_ts, instrument_trade_spot_from_calculated_rest_uri_last_response_ts, instrument_trade_spot_from_calculated_rest_uri_next_request_ts, instrument_trade_spot_from_fix_last_proxied_rest_request, instrument_trade_spot_from_fix_rest_uri_last_request_ts, instrument_trade_spot_from_fix_rest_uri_last_response_ts, instrument_trade_spot_from_fix_rest_uri_next_request_ts, instrument_trade_spot_from_go_last_proxied_rest_request, instrument_trade_spot_from_go_rest_uri_last_request_ts, instrument_trade_spot_from_go_rest_uri_last_response_ts, instrument_trade_spot_from_go_rest_uri_next_request_ts, instrument_trade_spot_from_polling_last_proxied_rest_request, instrument_trade_spot_from_polling_rest_uri_last_request_ts, instrument_trade_spot_from_polling_rest_uri_last_response_ts, instrument_trade_spot_from_polling_rest_uri_next_request_ts, instrument_trade_spot_from_streaming_last_proxied_rest_request, instrument_trade_spot_from_streaming_rest_uri_last_request_ts, instrument_trade_spot_from_streaming_rest_uri_last_response_ts, instrument_trade_spot_from_streaming_rest_uri_next_request_ts, instrument_trade_spot_is_ready_for_streaming_integration, instrument_trade_spot_rest_uri, instrument_trade_spot_rest_url, instrument_trade_spot_streaming_subscription, last_concurrent_batch_of_trades_spot_ms, last_seen_on_blob_ts, last_seen_on_fix_ts, last_seen_on_hardcoded_ts, last_seen_on_index_composition_ts, last_seen_on_nsq_ts, last_seen_on_polling_ts, last_seen_on_streaming_ts, last_trade_spot_from_backfill, last_trade_spot_from_backfill_external, last_trade_spot_from_blob, last_trade_spot_from_blob_external, last_trade_spot_from_calculated, last_trade_spot_from_calculated_external, last_trade_spot_from_fix, last_trade_spot_from_fix_external, last_trade_spot_from_go, last_trade_spot_from_go_external, last_trade_spot_from_polling, last_trade_spot_from_polling_external, last_trade_spot_from_streaming, last_trade_spot_from_streaming_external, metadata_version, processing_trades_from_blob_status, total_trades_spot, unstructured_trade_spot_from_backfill_internal_data, unstructured_trade_spot_from_blob_internal_data, unstructured_trade_spot_from_calculated_internal_data, unstructured_trade_spot_from_fix_internal_data, unstructured_trade_spot_from_go_internal_data, unstructured_trade_spot_from_polling_internal_data, unstructured_trade_spot_from_streaming_internal_data].hash
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def self.build_from_hash(attributes)
      new.build_from_hash(attributes)
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)
      self.class.openapi_types.each_pair do |key, type|
        if !attributes[self.class.attribute_map[key]]? && self.class.openapi_nullable.includes?(key)
          self.send("#{key}=", nil)
        elsif type =~ /\AArray<(.*)>/i
          # check to ensure the input is an array given that the attribute
          # is documented as an array but the input is not
          if attributes[self.class.attribute_map[key]].is_a?(Array)
            self.send("#{key}=", attributes[self.class.attribute_map[key]].map { |v| _deserialize($1, v) })
          end
        elsif !attributes[self.class.attribute_map[key]].nil?
          self.send("#{key}=", _deserialize(type, attributes[self.class.attribute_map[key]]))
        end
      end

      self
    end

    # Deserializes the data based on type
    # @param string type Data type
    # @param string value Value to be deserialized
    # @return [Object] Deserialized data
    def _deserialize(type, value)
      case type.to_sym
      when :Time
        Time.parse(value)
      when :Date
        Date.parse(value)
      when :String
        value.to_s
      when :Integer
        value.to_i
      when :Float
        value.to_f
      when :Boolean
        if value.to_s =~ /\A(true|t|yes|y|1)\z/i
          true
        else
          false
        end
      when :Object
        # generic object (usually a Hash), return directly
        value
      when /\AArray<(?<inner_type>.+)>\z/
        inner_type = Regexp.last_match[:inner_type]
        value.map { |v| _deserialize(inner_type, v) }
      when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
        k_type = Regexp.last_match[:k_type]
        v_type = Regexp.last_match[:v_type]
        ({} of Symbol => String).tap do |hash|
          value.each do |k, v|
            hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
          end
        end
      else # model
        # models (e.g. Pet) or oneOf
        klass = OpenAPIClient.const_get(type)
        klass.respond_to?(:openapi_one_of) ? klass.build(value) : klass.build_from_hash(value)
      end
    end

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # to_body is an alias to to_hash (backward compatibility)
    # @return [Hash] Returns the object in the form of hash
    def to_body
      to_hash
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {} of Symbol => String
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        if value.nil?
          is_nullable = self.class.openapi_nullable.includes?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end

        hash[param] = _to_hash(value)
      end
      hash
    end

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        ({} of Symbol => String).tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end

  end

end
