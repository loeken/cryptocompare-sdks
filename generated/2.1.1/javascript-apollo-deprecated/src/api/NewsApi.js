/**
 * CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry
 * CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: data@cryptocompare.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */



import ApiClient from "../ApiClient";
import Error from '../model/Error';
import GENERICRESPONSE from '../model/GENERICRESPONSE';

/**
* News service.
* @module api/NewsApi
* @version 2.1.1
*/
export default class NewsApi extends ApiClient {

    /**
    * Constructs a new NewsApi. 
    * @alias module:api/NewsApi
    * @class
    */
    constructor(baseURL = 'https://data-api.cryptocompare.com') {
      super(baseURL);
    }


    /**
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.sourceIds Get articles from specific sources; either by their ids or keys
     * @param {module:model/String} opts.lang The article Preferred language - English (EN), Portuguese (PT), Espanol (ES) (default to 'EN')
     * @param {Array.<module:model/String>} opts.categories News article categories to return
     * @param {Array.<module:model/String>} opts.excludeCategories News article categories to exclude from results
     * @param {Number} opts.toTs Articles published on or before this timestamp (default to -1)
     * @param requestInit Dynamic configuration. @see {@link https://github.com/apollographql/apollo-server/pull/1277}
     * @return {Promise<module:model/GENERICRESPONSE>}
     */
    async newsV1ArticleList(opts, requestInit) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'source_ids': this.buildCollectionParam(opts['sourceIds'], 'csv'),
        'lang': opts['lang'],
        'categories': this.buildCollectionParam(opts['categories'], 'csv'),
        'exclude_categories': this.buildCollectionParam(opts['excludeCategories'], 'csv'),
        'to_ts': opts['toTs']
      };
      let headerParams = {
        'User-Agent': 'OpenAPI-Generator/2.1.1/Javascript',
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GENERICRESPONSE;

      return this.callApi(
        '/news/v1/article/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, requestInit
      );
    }

    /**
     * @param requestInit Dynamic configuration. @see {@link https://github.com/apollographql/apollo-server/pull/1277}
     * @return {Promise<module:model/GENERICRESPONSE>}
     */
    async newsV1CategoryList(requestInit) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'User-Agent': 'OpenAPI-Generator/2.1.1/Javascript',
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GENERICRESPONSE;

      return this.callApi(
        '/news/v1/category/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, requestInit
      );
    }

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.lang The article source Preferred language - English (EN), Portuguese (PT), Espanol (ES) (default to 'EN')
     * @param {module:model/String} opts.type RSS, API, TWITTER (default to 'RSS')
     * @param {module:model/String} opts.status The status for the  article source entry. Allowed values: ACTIVE, INACTIVE (default to 'ACTIVE')
     * @param requestInit Dynamic configuration. @see {@link https://github.com/apollographql/apollo-server/pull/1277}
     * @return {Promise<module:model/GENERICRESPONSE>}
     */
    async newsV1SourceList(opts, requestInit) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'lang': opts['lang'],
        'type': opts['type'],
        'status': opts['status']
      };
      let headerParams = {
        'User-Agent': 'OpenAPI-Generator/2.1.1/Javascript',
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GENERICRESPONSE;

      return this.callApi(
        '/news/v1/source/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, requestInit
      );
    }


}
