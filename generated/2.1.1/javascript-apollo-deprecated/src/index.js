/**
 * CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry
 * CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: data@cryptocompare.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Error from './model/Error';
import ErrorErr from './model/ErrorErr';
import ErrorErrOtherInfo from './model/ErrorErrOtherInfo';
import GENERICRESPONSE from './model/GENERICRESPONSE';
import GENERICRESPONSEData from './model/GENERICRESPONSEData';
import SPOTINSTRUMENTHISTODATA from './model/SPOTINSTRUMENTHISTODATA';
import SPOTINSTRUMENTHISTODATARESPONSE from './model/SPOTINSTRUMENTHISTODATARESPONSE';
import SPOTINSTRUMENTMARKETDATA from './model/SPOTINSTRUMENTMARKETDATA';
import SPOTINSTRUMENTMARKETDATARESPONSE from './model/SPOTINSTRUMENTMARKETDATARESPONSE';
import SPOTINSTRUMENTMARKETDATARESPONSEErr from './model/SPOTINSTRUMENTMARKETDATARESPONSEErr';
import SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo from './model/SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo';
import SPOTINSTRUMENTMETADATA from './model/SPOTINSTRUMENTMETADATA';
import SPOTINSTRUMENTMETADATARESPONSE from './model/SPOTINSTRUMENTMETADATARESPONSE';
import SPOTINSTRUMENTTRADE from './model/SPOTINSTRUMENTTRADE';
import SPOTINSTRUMENTTRADERESPONSE from './model/SPOTINSTRUMENTTRADERESPONSE';
import AssetApi from './api/AssetApi';
import FuturesApi from './api/FuturesApi';
import NewsApi from './api/NewsApi';
import OverviewApi from './api/OverviewApi';
import ReferenceRatesApi from './api/ReferenceRatesApi';
import SpotApi from './api/SpotApi';


/**
* CryptoCompare is the world&#39;s leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CryptoCompareMarketIndexReferenceDataNewsAndOverviewMetrcisApiForTheCryptocurrencyIndustry = require('index'); // See note below*.
* var xxxSvc = new CryptoCompareMarketIndexReferenceDataNewsAndOverviewMetrcisApiForTheCryptocurrencyIndustry.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CryptoCompareMarketIndexReferenceDataNewsAndOverviewMetrcisApiForTheCryptocurrencyIndustry.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CryptoCompareMarketIndexReferenceDataNewsAndOverviewMetrcisApiForTheCryptocurrencyIndustry.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CryptoCompareMarketIndexReferenceDataNewsAndOverviewMetrcisApiForTheCryptocurrencyIndustry.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2.1.1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The ErrorErr model constructor.
     * @property {module:model/ErrorErr}
     */
    ErrorErr,

    /**
     * The ErrorErrOtherInfo model constructor.
     * @property {module:model/ErrorErrOtherInfo}
     */
    ErrorErrOtherInfo,

    /**
     * The GENERICRESPONSE model constructor.
     * @property {module:model/GENERICRESPONSE}
     */
    GENERICRESPONSE,

    /**
     * The GENERICRESPONSEData model constructor.
     * @property {module:model/GENERICRESPONSEData}
     */
    GENERICRESPONSEData,

    /**
     * The SPOTINSTRUMENTHISTODATA model constructor.
     * @property {module:model/SPOTINSTRUMENTHISTODATA}
     */
    SPOTINSTRUMENTHISTODATA,

    /**
     * The SPOTINSTRUMENTHISTODATARESPONSE model constructor.
     * @property {module:model/SPOTINSTRUMENTHISTODATARESPONSE}
     */
    SPOTINSTRUMENTHISTODATARESPONSE,

    /**
     * The SPOTINSTRUMENTMARKETDATA model constructor.
     * @property {module:model/SPOTINSTRUMENTMARKETDATA}
     */
    SPOTINSTRUMENTMARKETDATA,

    /**
     * The SPOTINSTRUMENTMARKETDATARESPONSE model constructor.
     * @property {module:model/SPOTINSTRUMENTMARKETDATARESPONSE}
     */
    SPOTINSTRUMENTMARKETDATARESPONSE,

    /**
     * The SPOTINSTRUMENTMARKETDATARESPONSEErr model constructor.
     * @property {module:model/SPOTINSTRUMENTMARKETDATARESPONSEErr}
     */
    SPOTINSTRUMENTMARKETDATARESPONSEErr,

    /**
     * The SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo model constructor.
     * @property {module:model/SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo}
     */
    SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo,

    /**
     * The SPOTINSTRUMENTMETADATA model constructor.
     * @property {module:model/SPOTINSTRUMENTMETADATA}
     */
    SPOTINSTRUMENTMETADATA,

    /**
     * The SPOTINSTRUMENTMETADATARESPONSE model constructor.
     * @property {module:model/SPOTINSTRUMENTMETADATARESPONSE}
     */
    SPOTINSTRUMENTMETADATARESPONSE,

    /**
     * The SPOTINSTRUMENTTRADE model constructor.
     * @property {module:model/SPOTINSTRUMENTTRADE}
     */
    SPOTINSTRUMENTTRADE,

    /**
     * The SPOTINSTRUMENTTRADERESPONSE model constructor.
     * @property {module:model/SPOTINSTRUMENTTRADERESPONSE}
     */
    SPOTINSTRUMENTTRADERESPONSE,

    /**
    * The AssetApi service constructor.
    * @property {module:api/AssetApi}
    */
    AssetApi,

    /**
    * The FuturesApi service constructor.
    * @property {module:api/FuturesApi}
    */
    FuturesApi,

    /**
    * The NewsApi service constructor.
    * @property {module:api/NewsApi}
    */
    NewsApi,

    /**
    * The OverviewApi service constructor.
    * @property {module:api/OverviewApi}
    */
    OverviewApi,

    /**
    * The ReferenceRatesApi service constructor.
    * @property {module:api/ReferenceRatesApi}
    */
    ReferenceRatesApi,

    /**
    * The SpotApi service constructor.
    * @property {module:api/SpotApi}
    */
    SpotApi
};
