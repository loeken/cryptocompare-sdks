/**
 * CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry
 * CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: data@cryptocompare.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;

import org.junit.jupiter.api.Test;


/**
 * Model tests for SPOTINSTRUMENTTRADE
 */
public class SPOTINSTRUMENTTRADETest {
    private final SPOTINSTRUMENTTRADE model = new SPOTINSTRUMENTTRADE();

    /**
     * Model tests for SPOTINSTRUMENTTRADE
     */
    @Test
    public void testSPOTINSTRUMENTTRADE() {
        // TODO: test SPOTINSTRUMENTTRADE
    }

    /**
     * Test the property 'BASE'
     */
    @Test
    public void BASETest() {
        // TODO: test BASE
    }

    /**
     * Test the property 'CCSEQ'
     */
    @Test
    public void CCSEQTest() {
        // TODO: test CCSEQ
    }

    /**
     * Test the property 'ID'
     */
    @Test
    public void IDTest() {
        // TODO: test ID
    }

    /**
     * Test the property 'INSTRUMENT'
     */
    @Test
    public void INSTRUMENTTest() {
        // TODO: test INSTRUMENT
    }

    /**
     * Test the property 'MAPPED_INSTRUMENT'
     */
    @Test
    public void MAPPED_INSTRUMENTTest() {
        // TODO: test MAPPED_INSTRUMENT
    }

    /**
     * Test the property 'MARKET'
     */
    @Test
    public void MARKETTest() {
        // TODO: test MARKET
    }

    /**
     * Test the property 'PRICE'
     */
    @Test
    public void PRICETest() {
        // TODO: test PRICE
    }

    /**
     * Test the property 'QUANTITY'
     */
    @Test
    public void QUANTITYTest() {
        // TODO: test QUANTITY
    }

    /**
     * Test the property 'QUOTE'
     */
    @Test
    public void QUOTETest() {
        // TODO: test QUOTE
    }

    /**
     * Test the property 'QUOTE_QUANTITY'
     */
    @Test
    public void QUOTE_QUANTITYTest() {
        // TODO: test QUOTE_QUANTITY
    }

    /**
     * Test the property 'RECEIVED_TIMESTAMP'
     */
    @Test
    public void RECEIVED_TIMESTAMPTest() {
        // TODO: test RECEIVED_TIMESTAMP
    }

    /**
     * Test the property 'RECEIVED_TIMESTAMP_NS'
     */
    @Test
    public void RECEIVED_TIMESTAMP_NSTest() {
        // TODO: test RECEIVED_TIMESTAMP_NS
    }

    /**
     * Test the property 'SIDE'
     */
    @Test
    public void SIDETest() {
        // TODO: test SIDE
    }

    /**
     * Test the property 'SOURCE'
     */
    @Test
    public void SOURCETest() {
        // TODO: test SOURCE
    }

    /**
     * Test the property 'TIMESTAMP'
     */
    @Test
    public void TIMESTAMPTest() {
        // TODO: test TIMESTAMP
    }

    /**
     * Test the property 'TIMESTAMP_NS'
     */
    @Test
    public void TIMESTAMP_NSTest() {
        // TODO: test TIMESTAMP_NS
    }

    /**
     * Test the property 'TYPE'
     */
    @Test
    public void TYPETest() {
        // TODO: test TYPE
    }

}
