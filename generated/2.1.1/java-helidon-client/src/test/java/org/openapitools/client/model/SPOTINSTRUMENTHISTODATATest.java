/**
 * CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry
 * CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: data@cryptocompare.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;

import org.junit.jupiter.api.Test;


/**
 * Model tests for SPOTINSTRUMENTHISTODATA
 */
public class SPOTINSTRUMENTHISTODATATest {
    private final SPOTINSTRUMENTHISTODATA model = new SPOTINSTRUMENTHISTODATA();

    /**
     * Model tests for SPOTINSTRUMENTHISTODATA
     */
    @Test
    public void testSPOTINSTRUMENTHISTODATA() {
        // TODO: test SPOTINSTRUMENTHISTODATA
    }

    /**
     * Test the property 'BASE'
     */
    @Test
    public void BASETest() {
        // TODO: test BASE
    }

    /**
     * Test the property 'CLOSE'
     */
    @Test
    public void CLOSETest() {
        // TODO: test CLOSE
    }

    /**
     * Test the property 'FIRST_TRADE_PRICE'
     */
    @Test
    public void FIRST_TRADE_PRICETest() {
        // TODO: test FIRST_TRADE_PRICE
    }

    /**
     * Test the property 'FIRST_TRADE_TIMESTAMP'
     */
    @Test
    public void FIRST_TRADE_TIMESTAMPTest() {
        // TODO: test FIRST_TRADE_TIMESTAMP
    }

    /**
     * Test the property 'HIGH'
     */
    @Test
    public void HIGHTest() {
        // TODO: test HIGH
    }

    /**
     * Test the property 'HIGH_TRADE_PRICE'
     */
    @Test
    public void HIGH_TRADE_PRICETest() {
        // TODO: test HIGH_TRADE_PRICE
    }

    /**
     * Test the property 'HIGH_TRADE_TIMESTAMP'
     */
    @Test
    public void HIGH_TRADE_TIMESTAMPTest() {
        // TODO: test HIGH_TRADE_TIMESTAMP
    }

    /**
     * Test the property 'INSTRUMENT'
     */
    @Test
    public void INSTRUMENTTest() {
        // TODO: test INSTRUMENT
    }

    /**
     * Test the property 'LAST_TRADE_PRICE'
     */
    @Test
    public void LAST_TRADE_PRICETest() {
        // TODO: test LAST_TRADE_PRICE
    }

    /**
     * Test the property 'LAST_TRADE_TIMESTAMP'
     */
    @Test
    public void LAST_TRADE_TIMESTAMPTest() {
        // TODO: test LAST_TRADE_TIMESTAMP
    }

    /**
     * Test the property 'LOW'
     */
    @Test
    public void LOWTest() {
        // TODO: test LOW
    }

    /**
     * Test the property 'LOW_TRADE_PRICE'
     */
    @Test
    public void LOW_TRADE_PRICETest() {
        // TODO: test LOW_TRADE_PRICE
    }

    /**
     * Test the property 'LOW_TRADE_TIMESTAMP'
     */
    @Test
    public void LOW_TRADE_TIMESTAMPTest() {
        // TODO: test LOW_TRADE_TIMESTAMP
    }

    /**
     * Test the property 'MAPPED_INSTRUMENT'
     */
    @Test
    public void MAPPED_INSTRUMENTTest() {
        // TODO: test MAPPED_INSTRUMENT
    }

    /**
     * Test the property 'MARKET'
     */
    @Test
    public void MARKETTest() {
        // TODO: test MARKET
    }

    /**
     * Test the property 'OPEN'
     */
    @Test
    public void OPENTest() {
        // TODO: test OPEN
    }

    /**
     * Test the property 'QUOTE'
     */
    @Test
    public void QUOTETest() {
        // TODO: test QUOTE
    }

    /**
     * Test the property 'QUOTE_VOLUME'
     */
    @Test
    public void QUOTE_VOLUMETest() {
        // TODO: test QUOTE_VOLUME
    }

    /**
     * Test the property 'QUOTE_VOLUME_BUY'
     */
    @Test
    public void QUOTE_VOLUME_BUYTest() {
        // TODO: test QUOTE_VOLUME_BUY
    }

    /**
     * Test the property 'QUOTE_VOLUME_SELL'
     */
    @Test
    public void QUOTE_VOLUME_SELLTest() {
        // TODO: test QUOTE_VOLUME_SELL
    }

    /**
     * Test the property 'QUOTE_VOLUME_UNKNOWN'
     */
    @Test
    public void QUOTE_VOLUME_UNKNOWNTest() {
        // TODO: test QUOTE_VOLUME_UNKNOWN
    }

    /**
     * Test the property 'TIMESTAMP'
     */
    @Test
    public void TIMESTAMPTest() {
        // TODO: test TIMESTAMP
    }

    /**
     * Test the property 'TOTAL_TRADES'
     */
    @Test
    public void TOTAL_TRADESTest() {
        // TODO: test TOTAL_TRADES
    }

    /**
     * Test the property 'TOTAL_TRADES_BUY'
     */
    @Test
    public void TOTAL_TRADES_BUYTest() {
        // TODO: test TOTAL_TRADES_BUY
    }

    /**
     * Test the property 'TOTAL_TRADES_SELL'
     */
    @Test
    public void TOTAL_TRADES_SELLTest() {
        // TODO: test TOTAL_TRADES_SELL
    }

    /**
     * Test the property 'TOTAL_TRADES_UNKNOWN'
     */
    @Test
    public void TOTAL_TRADES_UNKNOWNTest() {
        // TODO: test TOTAL_TRADES_UNKNOWN
    }

    /**
     * Test the property 'TYPE'
     */
    @Test
    public void TYPETest() {
        // TODO: test TYPE
    }

    /**
     * Test the property 'UNIT'
     */
    @Test
    public void UNITTest() {
        // TODO: test UNIT
    }

    /**
     * Test the property 'VOLUME'
     */
    @Test
    public void VOLUMETest() {
        // TODO: test VOLUME
    }

    /**
     * Test the property 'VOLUME_BUY'
     */
    @Test
    public void VOLUME_BUYTest() {
        // TODO: test VOLUME_BUY
    }

    /**
     * Test the property 'VOLUME_SELL'
     */
    @Test
    public void VOLUME_SELLTest() {
        // TODO: test VOLUME_SELL
    }

    /**
     * Test the property 'VOLUME_UNKNOWN'
     */
    @Test
    public void VOLUME_UNKNOWNTest() {
        // TODO: test VOLUME_UNKNOWN
    }

}
