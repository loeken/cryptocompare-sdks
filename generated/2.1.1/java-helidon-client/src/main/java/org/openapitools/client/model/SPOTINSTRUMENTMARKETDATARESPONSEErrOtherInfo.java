/**
 * CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry
 * CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: data@cryptocompare.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;




public class SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo  {
  
 /**
   * The parameter that is resposible for the error
  **/
  private String param;

 /**
   * The values resposible for the error
  **/
  private List<String> values = null;

 /**
   * The parameter that is resposible for the error
   * @return param
  **/
  public String getParam() {
    return param;
  }

  /**
    * Set param
  **/
  public void setParam(String param) {
    this.param = param;
  }

  public SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo param(String param) {
    this.param = param;
    return this;
  }

 /**
   * The values resposible for the error
   * @return values
  **/
  public List<String> getValues() {
    return values;
  }

  /**
    * Set values
  **/
  public void setValues(List<String> values) {
    this.values = values;
  }

  public SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo values(List<String> values) {
    this.values = values;
    return this;
  }

  public SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo addValuesItem(String valuesItem) {
    this.values.add(valuesItem);
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo {\n");
    
    sb.append("    param: ").append(toIndentedString(param)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

