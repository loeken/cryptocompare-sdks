/**
 * CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry
 * CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: data@cryptocompare.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo;




public class SPOTINSTRUMENTMARKETDATARESPONSEErr  {
  
 /**
   * A message describing the error
  **/
  private String message;

  private SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo otherInfo;

 /**
   * A public facing error type. If you want to treat a specific error use the type.
  **/
  private Integer type;

 /**
   * A message describing the error
   * @return message
  **/
  public String getMessage() {
    return message;
  }

  /**
    * Set message
  **/
  public void setMessage(String message) {
    this.message = message;
  }

  public SPOTINSTRUMENTMARKETDATARESPONSEErr message(String message) {
    this.message = message;
    return this;
  }

 /**
   * Get otherInfo
   * @return otherInfo
  **/
  public SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo getOtherInfo() {
    return otherInfo;
  }

  /**
    * Set otherInfo
  **/
  public void setOtherInfo(SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo otherInfo) {
    this.otherInfo = otherInfo;
  }

  public SPOTINSTRUMENTMARKETDATARESPONSEErr otherInfo(SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo otherInfo) {
    this.otherInfo = otherInfo;
    return this;
  }

 /**
   * A public facing error type. If you want to treat a specific error use the type.
   * @return type
  **/
  public Integer getType() {
    return type;
  }

  /**
    * Set type
  **/
  public void setType(Integer type) {
    this.type = type;
  }

  public SPOTINSTRUMENTMARKETDATARESPONSEErr type(Integer type) {
    this.type = type;
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SPOTINSTRUMENTMARKETDATARESPONSEErr {\n");
    
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    otherInfo: ").append(toIndentedString(otherInfo)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

