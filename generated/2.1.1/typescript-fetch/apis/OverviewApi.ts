/* tslint:disable */
/* eslint-disable */
/**
 * CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry
 * CryptoCompare is the world\'s leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: data@cryptocompare.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GENERICRESPONSE,
} from '../models';
import {
    GENERICRESPONSEFromJSON,
    GENERICRESPONSEToJSON,
} from '../models';

export interface OverviewV1HistoricalMarketcapAllAssetsDaysRequest {
    groups?: Array<string>;
    limit?: number;
    toTs?: number;
    aggregate?: number;
    fill?: boolean;
    responseFormat?: OverviewV1HistoricalMarketcapAllAssetsDaysResponseFormatEnum;
}

export interface OverviewV1HistoricalMarketcapAllAssetsHoursRequest {
    groups?: Array<string>;
    limit?: number;
    toTs?: number;
    aggregate?: number;
    fill?: boolean;
    responseFormat?: OverviewV1HistoricalMarketcapAllAssetsHoursResponseFormatEnum;
}

export interface OverviewV1HistoricalMarketcapFtwAssetsDaysRequest {
    groups?: Array<string>;
    limit?: number;
    toTs?: number;
    aggregate?: number;
    fill?: boolean;
    responseFormat?: OverviewV1HistoricalMarketcapFtwAssetsDaysResponseFormatEnum;
}

export interface OverviewV1HistoricalMarketcapFtwAssetsHoursRequest {
    groups?: Array<string>;
    limit?: number;
    toTs?: number;
    aggregate?: number;
    fill?: boolean;
    responseFormat?: OverviewV1HistoricalMarketcapFtwAssetsHoursResponseFormatEnum;
}

export interface OverviewV1LatestMarketcapAllTickRequest {
    groups?: Array<string>;
}

export interface OverviewV1LatestMarketcapFtwTickRequest {
    groups?: Array<string>;
}

/**
 * 
 */
export class OverviewApi extends runtime.BaseAPI {

    /**
     */
    async overviewV1HistoricalMarketcapAllAssetsDaysRaw(requestParameters: OverviewV1HistoricalMarketcapAllAssetsDaysRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GENERICRESPONSE>> {
        const queryParameters: any = {};

        if (requestParameters.groups) {
            queryParameters['groups'] = requestParameters.groups.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.toTs !== undefined) {
            queryParameters['to_ts'] = requestParameters.toTs;
        }

        if (requestParameters.aggregate !== undefined) {
            queryParameters['aggregate'] = requestParameters.aggregate;
        }

        if (requestParameters.fill !== undefined) {
            queryParameters['fill'] = requestParameters.fill;
        }

        if (requestParameters.responseFormat !== undefined) {
            queryParameters['response_format'] = requestParameters.responseFormat;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/overview/v1/historical/marketcap/all/assets/days`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GENERICRESPONSEFromJSON(jsonValue));
    }

    /**
     */
    async overviewV1HistoricalMarketcapAllAssetsDays(requestParameters: OverviewV1HistoricalMarketcapAllAssetsDaysRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GENERICRESPONSE> {
        const response = await this.overviewV1HistoricalMarketcapAllAssetsDaysRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async overviewV1HistoricalMarketcapAllAssetsHoursRaw(requestParameters: OverviewV1HistoricalMarketcapAllAssetsHoursRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GENERICRESPONSE>> {
        const queryParameters: any = {};

        if (requestParameters.groups) {
            queryParameters['groups'] = requestParameters.groups.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.toTs !== undefined) {
            queryParameters['to_ts'] = requestParameters.toTs;
        }

        if (requestParameters.aggregate !== undefined) {
            queryParameters['aggregate'] = requestParameters.aggregate;
        }

        if (requestParameters.fill !== undefined) {
            queryParameters['fill'] = requestParameters.fill;
        }

        if (requestParameters.responseFormat !== undefined) {
            queryParameters['response_format'] = requestParameters.responseFormat;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/overview/v1/historical/marketcap/all/assets/hours`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GENERICRESPONSEFromJSON(jsonValue));
    }

    /**
     */
    async overviewV1HistoricalMarketcapAllAssetsHours(requestParameters: OverviewV1HistoricalMarketcapAllAssetsHoursRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GENERICRESPONSE> {
        const response = await this.overviewV1HistoricalMarketcapAllAssetsHoursRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async overviewV1HistoricalMarketcapFtwAssetsDaysRaw(requestParameters: OverviewV1HistoricalMarketcapFtwAssetsDaysRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GENERICRESPONSE>> {
        const queryParameters: any = {};

        if (requestParameters.groups) {
            queryParameters['groups'] = requestParameters.groups.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.toTs !== undefined) {
            queryParameters['to_ts'] = requestParameters.toTs;
        }

        if (requestParameters.aggregate !== undefined) {
            queryParameters['aggregate'] = requestParameters.aggregate;
        }

        if (requestParameters.fill !== undefined) {
            queryParameters['fill'] = requestParameters.fill;
        }

        if (requestParameters.responseFormat !== undefined) {
            queryParameters['response_format'] = requestParameters.responseFormat;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/overview/v1/historical/marketcap/ftw/assets/days`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GENERICRESPONSEFromJSON(jsonValue));
    }

    /**
     */
    async overviewV1HistoricalMarketcapFtwAssetsDays(requestParameters: OverviewV1HistoricalMarketcapFtwAssetsDaysRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GENERICRESPONSE> {
        const response = await this.overviewV1HistoricalMarketcapFtwAssetsDaysRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async overviewV1HistoricalMarketcapFtwAssetsHoursRaw(requestParameters: OverviewV1HistoricalMarketcapFtwAssetsHoursRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GENERICRESPONSE>> {
        const queryParameters: any = {};

        if (requestParameters.groups) {
            queryParameters['groups'] = requestParameters.groups.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.toTs !== undefined) {
            queryParameters['to_ts'] = requestParameters.toTs;
        }

        if (requestParameters.aggregate !== undefined) {
            queryParameters['aggregate'] = requestParameters.aggregate;
        }

        if (requestParameters.fill !== undefined) {
            queryParameters['fill'] = requestParameters.fill;
        }

        if (requestParameters.responseFormat !== undefined) {
            queryParameters['response_format'] = requestParameters.responseFormat;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/overview/v1/historical/marketcap/ftw/assets/hours`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GENERICRESPONSEFromJSON(jsonValue));
    }

    /**
     */
    async overviewV1HistoricalMarketcapFtwAssetsHours(requestParameters: OverviewV1HistoricalMarketcapFtwAssetsHoursRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GENERICRESPONSE> {
        const response = await this.overviewV1HistoricalMarketcapFtwAssetsHoursRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async overviewV1LatestMarketcapAllTickRaw(requestParameters: OverviewV1LatestMarketcapAllTickRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GENERICRESPONSE>> {
        const queryParameters: any = {};

        if (requestParameters.groups) {
            queryParameters['groups'] = requestParameters.groups.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/overview/v1/latest/marketcap/all/tick`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GENERICRESPONSEFromJSON(jsonValue));
    }

    /**
     */
    async overviewV1LatestMarketcapAllTick(requestParameters: OverviewV1LatestMarketcapAllTickRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GENERICRESPONSE> {
        const response = await this.overviewV1LatestMarketcapAllTickRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async overviewV1LatestMarketcapFtwTickRaw(requestParameters: OverviewV1LatestMarketcapFtwTickRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GENERICRESPONSE>> {
        const queryParameters: any = {};

        if (requestParameters.groups) {
            queryParameters['groups'] = requestParameters.groups.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/overview/v1/latest/marketcap/ftw/tick`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GENERICRESPONSEFromJSON(jsonValue));
    }

    /**
     */
    async overviewV1LatestMarketcapFtwTick(requestParameters: OverviewV1LatestMarketcapFtwTickRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GENERICRESPONSE> {
        const response = await this.overviewV1LatestMarketcapFtwTickRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const OverviewV1HistoricalMarketcapAllAssetsDaysResponseFormatEnum = {
    Json: 'JSON',
    Csv: 'CSV'
} as const;
export type OverviewV1HistoricalMarketcapAllAssetsDaysResponseFormatEnum = typeof OverviewV1HistoricalMarketcapAllAssetsDaysResponseFormatEnum[keyof typeof OverviewV1HistoricalMarketcapAllAssetsDaysResponseFormatEnum];
/**
 * @export
 */
export const OverviewV1HistoricalMarketcapAllAssetsHoursResponseFormatEnum = {
    Json: 'JSON',
    Csv: 'CSV'
} as const;
export type OverviewV1HistoricalMarketcapAllAssetsHoursResponseFormatEnum = typeof OverviewV1HistoricalMarketcapAllAssetsHoursResponseFormatEnum[keyof typeof OverviewV1HistoricalMarketcapAllAssetsHoursResponseFormatEnum];
/**
 * @export
 */
export const OverviewV1HistoricalMarketcapFtwAssetsDaysResponseFormatEnum = {
    Json: 'JSON',
    Csv: 'CSV'
} as const;
export type OverviewV1HistoricalMarketcapFtwAssetsDaysResponseFormatEnum = typeof OverviewV1HistoricalMarketcapFtwAssetsDaysResponseFormatEnum[keyof typeof OverviewV1HistoricalMarketcapFtwAssetsDaysResponseFormatEnum];
/**
 * @export
 */
export const OverviewV1HistoricalMarketcapFtwAssetsHoursResponseFormatEnum = {
    Json: 'JSON',
    Csv: 'CSV'
} as const;
export type OverviewV1HistoricalMarketcapFtwAssetsHoursResponseFormatEnum = typeof OverviewV1HistoricalMarketcapFtwAssetsHoursResponseFormatEnum[keyof typeof OverviewV1HistoricalMarketcapFtwAssetsHoursResponseFormatEnum];
