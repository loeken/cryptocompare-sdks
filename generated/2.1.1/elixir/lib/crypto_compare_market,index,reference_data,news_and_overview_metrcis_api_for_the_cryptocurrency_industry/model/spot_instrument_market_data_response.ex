# NOTE: This file is auto generated by OpenAPI Generator 6.3.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.SpotInstrumentMarketDataResponse do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :Data,
    :Err
  ]

  @type t :: %__MODULE__{
    :Data => %{optional(String.t) => CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.SpotInstrumentMarketData.t} | nil,
    :Err => CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.SpotInstrumentMarketDataResponseErr.t | nil
  }
end

defimpl Poison.Decoder, for: CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.SpotInstrumentMarketDataResponse do
  import CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:Data, :map, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.SpotInstrumentMarketData, options)
    |> deserialize(:Err, :struct, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.SpotInstrumentMarketDataResponseErr, options)
  end
end

