# NOTE: This file is auto generated by OpenAPI Generator 6.3.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Api.Asset do
  @moduledoc """
  API calls for all endpoints tagged `Asset`.
  """

  alias CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Connection
  import CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.RequestBuilder

  @doc """

  ### Parameters

  - `connection` (CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Connection): Connection to server
  - `address` (String.t): 
  - `chain_symbol` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:groups` (String.t): 

  ### Returns

  - `{:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec asset_v1_data_by_address(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse.t} | {:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error.t} | {:error, Tesla.Env.t}
  def asset_v1_data_by_address(connection, address, chain_symbol, opts \\ []) do
    optional_params = %{
      :groups => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/asset/v1/data/by/address")
      |> add_param(:query, :address, address)
      |> add_param(:query, :chain_symbol, chain_symbol)
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse{}},
      {400, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {401, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {403, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {404, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {405, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {429, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {500, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {502, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {503, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}}
    ])
  end

  @doc """

  ### Parameters

  - `connection` (CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Connection): Connection to server
  - `asset_id` (integer()): The asset id you are interested in
  - `opts` (keyword): Optional parameters
    - `:groups` (String.t): 

  ### Returns

  - `{:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec asset_v1_data_by_id(Tesla.Env.client, integer(), keyword()) :: {:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse.t} | {:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error.t} | {:error, Tesla.Env.t}
  def asset_v1_data_by_id(connection, asset_id, opts \\ []) do
    optional_params = %{
      :groups => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/asset/v1/data/by/id")
      |> add_param(:query, :asset_id, asset_id)
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse{}},
      {400, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {401, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {403, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {404, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {405, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {429, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {500, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {502, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {503, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}}
    ])
  end

  @doc """

  ### Parameters

  - `connection` (CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Connection): Connection to server
  - `asset_symbol` (String.t): The asset symbol you are interested in
  - `opts` (keyword): Optional parameters
    - `:groups` (String.t): 

  ### Returns

  - `{:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec asset_v1_data_by_symbol(Tesla.Env.client, String.t, keyword()) :: {:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse.t} | {:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error.t} | {:error, Tesla.Env.t}
  def asset_v1_data_by_symbol(connection, asset_symbol, opts \\ []) do
    optional_params = %{
      :groups => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/asset/v1/data/by/symbol")
      |> add_param(:query, :asset_symbol, asset_symbol)
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse{}},
      {400, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {401, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {403, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {404, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {405, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {429, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {500, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {502, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {503, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}}
    ])
  end

  @doc """

  ### Parameters

  - `connection` (CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:page` (integer()): The page number for the request to get {page_size} coins at the time.
    - `:page_size` (integer()): The number of items returned per page
    - `:asset_type` (String.t): The asset class/type
    - `:sort_by` (String.t): Sort by field ( CREATED_ON,UPDATED_ON,SYMBOL )
    - `:sort_direction` (String.t): Sort direction ( DESC,ASC )
    - `:groups` (String.t): 

  ### Returns

  - `{:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec asset_v1_top_list(Tesla.Env.client, keyword()) :: {:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse.t} | {:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error.t} | {:error, Tesla.Env.t}
  def asset_v1_top_list(connection, opts \\ []) do
    optional_params = %{
      :page => :query,
      :page_size => :query,
      :asset_type => :query,
      :sort_by => :query,
      :sort_direction => :query,
      :groups => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/asset/v1/top/list")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse{}},
      {400, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {401, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {403, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {404, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {405, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {429, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {500, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {502, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {503, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}}
    ])
  end
end
