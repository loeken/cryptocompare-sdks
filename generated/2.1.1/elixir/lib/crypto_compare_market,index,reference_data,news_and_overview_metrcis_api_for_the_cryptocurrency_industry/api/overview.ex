# NOTE: This file is auto generated by OpenAPI Generator 6.3.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Api.Overview do
  @moduledoc """
  API calls for all endpoints tagged `Overview`.
  """

  alias CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Connection
  import CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.RequestBuilder

  @doc """

  ### Parameters

  - `connection` (CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:groups` ([String.t]): When requesting all market cap historical data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,OHLC,VOLUME
    - `:limit` (integer()): The number of data points to return
    - `:to_ts` (integer()): Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}
    - `:aggregate` (integer()): The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries
    - `:fill` (boolean()): Boolean value, if set to false or 0 we will not return data points for periods with no trading activity.
    - `:response_format` (String.t): The format of the data response in uppercase. It can be one of the following: JSON,CSV

  ### Returns

  - `{:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec overview_v1_historical_marketcap_all_assets_days(Tesla.Env.client, keyword()) :: {:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse.t} | {:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error.t} | {:error, Tesla.Env.t}
  def overview_v1_historical_marketcap_all_assets_days(connection, opts \\ []) do
    optional_params = %{
      :groups => :query,
      :limit => :query,
      :to_ts => :query,
      :aggregate => :query,
      :fill => :query,
      :response_format => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/overview/v1/historical/marketcap/all/assets/days")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse{}},
      {400, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {401, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {403, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {404, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {405, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {429, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {500, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {502, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {503, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}}
    ])
  end

  @doc """

  ### Parameters

  - `connection` (CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:groups` ([String.t]): When requesting all market cap historical data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,OHLC,VOLUME
    - `:limit` (integer()): The number of data points to return
    - `:to_ts` (integer()): Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}
    - `:aggregate` (integer()): The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries
    - `:fill` (boolean()): Boolean value, if set to false or 0 we will not return data points for periods with no trading activity.
    - `:response_format` (String.t): The format of the data response in uppercase. It can be one of the following: JSON,CSV

  ### Returns

  - `{:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec overview_v1_historical_marketcap_all_assets_hours(Tesla.Env.client, keyword()) :: {:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse.t} | {:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error.t} | {:error, Tesla.Env.t}
  def overview_v1_historical_marketcap_all_assets_hours(connection, opts \\ []) do
    optional_params = %{
      :groups => :query,
      :limit => :query,
      :to_ts => :query,
      :aggregate => :query,
      :fill => :query,
      :response_format => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/overview/v1/historical/marketcap/all/assets/hours")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse{}},
      {400, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {401, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {403, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {404, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {405, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {429, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {500, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {502, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {503, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}}
    ])
  end

  @doc """

  ### Parameters

  - `connection` (CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:groups` ([String.t]): When requesting ftw universe market cap historical data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,OHLC,VOLUME
    - `:limit` (integer()): The number of data points to return
    - `:to_ts` (integer()): Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}
    - `:aggregate` (integer()): The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries
    - `:fill` (boolean()): Boolean value, if set to false or 0 we will not return data points for periods with no trading activity.
    - `:response_format` (String.t): The format of the data response in uppercase. It can be one of the following: JSON,CSV

  ### Returns

  - `{:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec overview_v1_historical_marketcap_ftw_assets_days(Tesla.Env.client, keyword()) :: {:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse.t} | {:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error.t} | {:error, Tesla.Env.t}
  def overview_v1_historical_marketcap_ftw_assets_days(connection, opts \\ []) do
    optional_params = %{
      :groups => :query,
      :limit => :query,
      :to_ts => :query,
      :aggregate => :query,
      :fill => :query,
      :response_format => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/overview/v1/historical/marketcap/ftw/assets/days")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse{}},
      {400, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {401, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {403, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {404, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {405, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {429, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {500, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {502, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {503, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}}
    ])
  end

  @doc """

  ### Parameters

  - `connection` (CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:groups` ([String.t]): When requesting ftw universe market cap historical data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,OHLC,VOLUME
    - `:limit` (integer()): The number of data points to return
    - `:to_ts` (integer()): Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}
    - `:aggregate` (integer()): The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries
    - `:fill` (boolean()): Boolean value, if set to false or 0 we will not return data points for periods with no trading activity.
    - `:response_format` (String.t): The format of the data response in uppercase. It can be one of the following: JSON,CSV

  ### Returns

  - `{:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec overview_v1_historical_marketcap_ftw_assets_hours(Tesla.Env.client, keyword()) :: {:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse.t} | {:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error.t} | {:error, Tesla.Env.t}
  def overview_v1_historical_marketcap_ftw_assets_hours(connection, opts \\ []) do
    optional_params = %{
      :groups => :query,
      :limit => :query,
      :to_ts => :query,
      :aggregate => :query,
      :fill => :query,
      :response_format => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/overview/v1/historical/marketcap/ftw/assets/hours")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse{}},
      {400, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {401, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {403, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {404, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {405, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {429, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {500, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {502, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {503, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}}
    ])
  end

  @doc """

  ### Parameters

  - `connection` (CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:groups` ([String.t]): When requesting all market cap tick data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,VALUE,LAST_UPDATE,CURRENT_HOUR,CURRENT_DAY,MOVING_24_HOUR

  ### Returns

  - `{:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec overview_v1_latest_marketcap_all_tick(Tesla.Env.client, keyword()) :: {:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse.t} | {:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error.t} | {:error, Tesla.Env.t}
  def overview_v1_latest_marketcap_all_tick(connection, opts \\ []) do
    optional_params = %{
      :groups => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/overview/v1/latest/marketcap/all/tick")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse{}},
      {400, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {401, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {403, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {404, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {405, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {429, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {500, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {502, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {503, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}}
    ])
  end

  @doc """

  ### Parameters

  - `connection` (CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:groups` ([String.t]): When requesting ftw universe market cap tick data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,VALUE,LAST_UPDATE,CURRENT_HOUR,CURRENT_DAY,MOVING_24_HOUR

  ### Returns

  - `{:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec overview_v1_latest_marketcap_ftw_tick(Tesla.Env.client, keyword()) :: {:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse.t} | {:ok, CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error.t} | {:error, Tesla.Env.t}
  def overview_v1_latest_marketcap_ftw_tick(connection, opts \\ []) do
    optional_params = %{
      :groups => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/overview/v1/latest/marketcap/ftw/tick")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.GenericResponse{}},
      {400, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {401, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {403, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {404, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {405, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {429, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {500, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {502, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}},
      {503, %CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model.Error{}}
    ])
  end
end
