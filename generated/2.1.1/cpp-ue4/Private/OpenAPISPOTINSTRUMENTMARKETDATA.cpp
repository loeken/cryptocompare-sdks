/**
 * CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry
 * CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.
 *
 * OpenAPI spec version: 2.1.1
 * Contact: data@cryptocompare.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPISPOTINSTRUMENTMARKETDATA.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPISPOTINSTRUMENTMARKETDATA::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (Base.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("BASE")); WriteJsonValue(Writer, Base.GetValue());
	}
	if (Ccseq.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CCSEQ")); WriteJsonValue(Writer, Ccseq.GetValue());
	}
	if (CurrentDayHigh.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_DAY_HIGH")); WriteJsonValue(Writer, CurrentDayHigh.GetValue());
	}
	if (CurrentDayLow.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_DAY_LOW")); WriteJsonValue(Writer, CurrentDayLow.GetValue());
	}
	if (CurrentDayOpen.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_DAY_OPEN")); WriteJsonValue(Writer, CurrentDayOpen.GetValue());
	}
	if (CurrentDayQuoteVolume.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_DAY_QUOTE_VOLUME")); WriteJsonValue(Writer, CurrentDayQuoteVolume.GetValue());
	}
	if (CurrentDayQuoteVolumeBuy.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_DAY_QUOTE_VOLUME_BUY")); WriteJsonValue(Writer, CurrentDayQuoteVolumeBuy.GetValue());
	}
	if (CurrentDayQuoteVolumeSell.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_DAY_QUOTE_VOLUME_SELL")); WriteJsonValue(Writer, CurrentDayQuoteVolumeSell.GetValue());
	}
	if (CurrentDayQuoteVolumeUnknown.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_DAY_QUOTE_VOLUME_UNKNOWN")); WriteJsonValue(Writer, CurrentDayQuoteVolumeUnknown.GetValue());
	}
	if (CurrentDayTotalTrades.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_DAY_TOTAL_TRADES")); WriteJsonValue(Writer, CurrentDayTotalTrades.GetValue());
	}
	if (CurrentDayTotalTradesBuy.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_DAY_TOTAL_TRADES_BUY")); WriteJsonValue(Writer, CurrentDayTotalTradesBuy.GetValue());
	}
	if (CurrentDayTotalTradesSell.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_DAY_TOTAL_TRADES_SELL")); WriteJsonValue(Writer, CurrentDayTotalTradesSell.GetValue());
	}
	if (CurrentDayTotalTradesUnknown.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_DAY_TOTAL_TRADES_UNKNOWN")); WriteJsonValue(Writer, CurrentDayTotalTradesUnknown.GetValue());
	}
	if (CurrentDayVolume.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_DAY_VOLUME")); WriteJsonValue(Writer, CurrentDayVolume.GetValue());
	}
	if (CurrentDayVolumeBuy.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_DAY_VOLUME_BUY")); WriteJsonValue(Writer, CurrentDayVolumeBuy.GetValue());
	}
	if (CurrentDayVolumeSell.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_DAY_VOLUME_SELL")); WriteJsonValue(Writer, CurrentDayVolumeSell.GetValue());
	}
	if (CurrentDayVolumeUnknown.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_DAY_VOLUME_UNKNOWN")); WriteJsonValue(Writer, CurrentDayVolumeUnknown.GetValue());
	}
	if (CurrentHourHigh.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_HOUR_HIGH")); WriteJsonValue(Writer, CurrentHourHigh.GetValue());
	}
	if (CurrentHourLow.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_HOUR_LOW")); WriteJsonValue(Writer, CurrentHourLow.GetValue());
	}
	if (CurrentHourOpen.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_HOUR_OPEN")); WriteJsonValue(Writer, CurrentHourOpen.GetValue());
	}
	if (CurrentHourQuoteVolume.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_HOUR_QUOTE_VOLUME")); WriteJsonValue(Writer, CurrentHourQuoteVolume.GetValue());
	}
	if (CurrentHourQuoteVolumeBuy.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_HOUR_QUOTE_VOLUME_BUY")); WriteJsonValue(Writer, CurrentHourQuoteVolumeBuy.GetValue());
	}
	if (CurrentHourQuoteVolumeSell.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_HOUR_QUOTE_VOLUME_SELL")); WriteJsonValue(Writer, CurrentHourQuoteVolumeSell.GetValue());
	}
	if (CurrentHourQuoteVolumeUnknown.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN")); WriteJsonValue(Writer, CurrentHourQuoteVolumeUnknown.GetValue());
	}
	if (CurrentHourTotalTrades.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_HOUR_TOTAL_TRADES")); WriteJsonValue(Writer, CurrentHourTotalTrades.GetValue());
	}
	if (CurrentHourTotalTradesBuy.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_HOUR_TOTAL_TRADES_BUY")); WriteJsonValue(Writer, CurrentHourTotalTradesBuy.GetValue());
	}
	if (CurrentHourTotalTradesSell.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_HOUR_TOTAL_TRADES_SELL")); WriteJsonValue(Writer, CurrentHourTotalTradesSell.GetValue());
	}
	if (CurrentHourTotalTradesUnknown.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_HOUR_TOTAL_TRADES_UNKNOWN")); WriteJsonValue(Writer, CurrentHourTotalTradesUnknown.GetValue());
	}
	if (CurrentHourVolume.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_HOUR_VOLUME")); WriteJsonValue(Writer, CurrentHourVolume.GetValue());
	}
	if (CurrentHourVolumeBuy.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_HOUR_VOLUME_BUY")); WriteJsonValue(Writer, CurrentHourVolumeBuy.GetValue());
	}
	if (CurrentHourVolumeSell.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_HOUR_VOLUME_SELL")); WriteJsonValue(Writer, CurrentHourVolumeSell.GetValue());
	}
	if (CurrentHourVolumeUnknown.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_HOUR_VOLUME_UNKNOWN")); WriteJsonValue(Writer, CurrentHourVolumeUnknown.GetValue());
	}
	if (CurrentMonthHigh.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_MONTH_HIGH")); WriteJsonValue(Writer, CurrentMonthHigh.GetValue());
	}
	if (CurrentMonthLow.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_MONTH_LOW")); WriteJsonValue(Writer, CurrentMonthLow.GetValue());
	}
	if (CurrentMonthOpen.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_MONTH_OPEN")); WriteJsonValue(Writer, CurrentMonthOpen.GetValue());
	}
	if (CurrentMonthQuoteVolume.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_MONTH_QUOTE_VOLUME")); WriteJsonValue(Writer, CurrentMonthQuoteVolume.GetValue());
	}
	if (CurrentMonthQuoteVolumeBuy.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_MONTH_QUOTE_VOLUME_BUY")); WriteJsonValue(Writer, CurrentMonthQuoteVolumeBuy.GetValue());
	}
	if (CurrentMonthQuoteVolumeSell.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_MONTH_QUOTE_VOLUME_SELL")); WriteJsonValue(Writer, CurrentMonthQuoteVolumeSell.GetValue());
	}
	if (CurrentMonthQuoteVolumeUnknown.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN")); WriteJsonValue(Writer, CurrentMonthQuoteVolumeUnknown.GetValue());
	}
	if (CurrentMonthTotalTrades.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_MONTH_TOTAL_TRADES")); WriteJsonValue(Writer, CurrentMonthTotalTrades.GetValue());
	}
	if (CurrentMonthTotalTradesBuy.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_MONTH_TOTAL_TRADES_BUY")); WriteJsonValue(Writer, CurrentMonthTotalTradesBuy.GetValue());
	}
	if (CurrentMonthTotalTradesSell.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_MONTH_TOTAL_TRADES_SELL")); WriteJsonValue(Writer, CurrentMonthTotalTradesSell.GetValue());
	}
	if (CurrentMonthTotalTradesUnknown.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_MONTH_TOTAL_TRADES_UNKNOWN")); WriteJsonValue(Writer, CurrentMonthTotalTradesUnknown.GetValue());
	}
	if (CurrentMonthVolume.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_MONTH_VOLUME")); WriteJsonValue(Writer, CurrentMonthVolume.GetValue());
	}
	if (CurrentMonthVolumeBuy.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_MONTH_VOLUME_BUY")); WriteJsonValue(Writer, CurrentMonthVolumeBuy.GetValue());
	}
	if (CurrentMonthVolumeSell.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_MONTH_VOLUME_SELL")); WriteJsonValue(Writer, CurrentMonthVolumeSell.GetValue());
	}
	if (CurrentMonthVolumeUnknown.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_MONTH_VOLUME_UNKNOWN")); WriteJsonValue(Writer, CurrentMonthVolumeUnknown.GetValue());
	}
	if (CurrentWeekHigh.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_WEEK_HIGH")); WriteJsonValue(Writer, CurrentWeekHigh.GetValue());
	}
	if (CurrentWeekLow.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_WEEK_LOW")); WriteJsonValue(Writer, CurrentWeekLow.GetValue());
	}
	if (CurrentWeekOpen.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_WEEK_OPEN")); WriteJsonValue(Writer, CurrentWeekOpen.GetValue());
	}
	if (CurrentWeekQuoteVolume.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_WEEK_QUOTE_VOLUME")); WriteJsonValue(Writer, CurrentWeekQuoteVolume.GetValue());
	}
	if (CurrentWeekQuoteVolumeBuy.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_WEEK_QUOTE_VOLUME_BUY")); WriteJsonValue(Writer, CurrentWeekQuoteVolumeBuy.GetValue());
	}
	if (CurrentWeekQuoteVolumeSell.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_WEEK_QUOTE_VOLUME_SELL")); WriteJsonValue(Writer, CurrentWeekQuoteVolumeSell.GetValue());
	}
	if (CurrentWeekQuoteVolumeUnknown.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN")); WriteJsonValue(Writer, CurrentWeekQuoteVolumeUnknown.GetValue());
	}
	if (CurrentWeekTotalTrades.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_WEEK_TOTAL_TRADES")); WriteJsonValue(Writer, CurrentWeekTotalTrades.GetValue());
	}
	if (CurrentWeekTotalTradesBuy.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_WEEK_TOTAL_TRADES_BUY")); WriteJsonValue(Writer, CurrentWeekTotalTradesBuy.GetValue());
	}
	if (CurrentWeekTotalTradesSell.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_WEEK_TOTAL_TRADES_SELL")); WriteJsonValue(Writer, CurrentWeekTotalTradesSell.GetValue());
	}
	if (CurrentWeekTotalTradesUnknown.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_WEEK_TOTAL_TRADES_UNKNOWN")); WriteJsonValue(Writer, CurrentWeekTotalTradesUnknown.GetValue());
	}
	if (CurrentWeekVolume.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_WEEK_VOLUME")); WriteJsonValue(Writer, CurrentWeekVolume.GetValue());
	}
	if (CurrentWeekVolumeBuy.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_WEEK_VOLUME_BUY")); WriteJsonValue(Writer, CurrentWeekVolumeBuy.GetValue());
	}
	if (CurrentWeekVolumeSell.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_WEEK_VOLUME_SELL")); WriteJsonValue(Writer, CurrentWeekVolumeSell.GetValue());
	}
	if (CurrentWeekVolumeUnknown.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_WEEK_VOLUME_UNKNOWN")); WriteJsonValue(Writer, CurrentWeekVolumeUnknown.GetValue());
	}
	if (CurrentYearHigh.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_YEAR_HIGH")); WriteJsonValue(Writer, CurrentYearHigh.GetValue());
	}
	if (CurrentYearLow.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_YEAR_LOW")); WriteJsonValue(Writer, CurrentYearLow.GetValue());
	}
	if (CurrentYearOpen.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_YEAR_OPEN")); WriteJsonValue(Writer, CurrentYearOpen.GetValue());
	}
	if (CurrentYearQuoteVolume.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_YEAR_QUOTE_VOLUME")); WriteJsonValue(Writer, CurrentYearQuoteVolume.GetValue());
	}
	if (CurrentYearQuoteVolumeBuy.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_YEAR_QUOTE_VOLUME_BUY")); WriteJsonValue(Writer, CurrentYearQuoteVolumeBuy.GetValue());
	}
	if (CurrentYearQuoteVolumeSell.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_YEAR_QUOTE_VOLUME_SELL")); WriteJsonValue(Writer, CurrentYearQuoteVolumeSell.GetValue());
	}
	if (CurrentYearQuoteVolumeUnknown.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN")); WriteJsonValue(Writer, CurrentYearQuoteVolumeUnknown.GetValue());
	}
	if (CurrentYearTotalTrades.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_YEAR_TOTAL_TRADES")); WriteJsonValue(Writer, CurrentYearTotalTrades.GetValue());
	}
	if (CurrentYearTotalTradesBuy.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_YEAR_TOTAL_TRADES_BUY")); WriteJsonValue(Writer, CurrentYearTotalTradesBuy.GetValue());
	}
	if (CurrentYearTotalTradesSell.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_YEAR_TOTAL_TRADES_SELL")); WriteJsonValue(Writer, CurrentYearTotalTradesSell.GetValue());
	}
	if (CurrentYearTotalTradesUnknown.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_YEAR_TOTAL_TRADES_UNKNOWN")); WriteJsonValue(Writer, CurrentYearTotalTradesUnknown.GetValue());
	}
	if (CurrentYearVolume.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_YEAR_VOLUME")); WriteJsonValue(Writer, CurrentYearVolume.GetValue());
	}
	if (CurrentYearVolumeBuy.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_YEAR_VOLUME_BUY")); WriteJsonValue(Writer, CurrentYearVolumeBuy.GetValue());
	}
	if (CurrentYearVolumeSell.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_YEAR_VOLUME_SELL")); WriteJsonValue(Writer, CurrentYearVolumeSell.GetValue());
	}
	if (CurrentYearVolumeUnknown.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("CURRENT_YEAR_VOLUME_UNKNOWN")); WriteJsonValue(Writer, CurrentYearVolumeUnknown.GetValue());
	}
	if (Instrument.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("INSTRUMENT")); WriteJsonValue(Writer, Instrument.GetValue());
	}
	if (LastProcessedTradeCcseq.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LAST_PROCESSED_TRADE_CCSEQ")); WriteJsonValue(Writer, LastProcessedTradeCcseq.GetValue());
	}
	if (LastProcessedTradePrice.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LAST_PROCESSED_TRADE_PRICE")); WriteJsonValue(Writer, LastProcessedTradePrice.GetValue());
	}
	if (LastProcessedTradeQuantity.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LAST_PROCESSED_TRADE_QUANTITY")); WriteJsonValue(Writer, LastProcessedTradeQuantity.GetValue());
	}
	if (LastProcessedTradeQuoteQuantity.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LAST_PROCESSED_TRADE_QUOTE_QUANTITY")); WriteJsonValue(Writer, LastProcessedTradeQuoteQuantity.GetValue());
	}
	if (LastProcessedTradeSide.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LAST_PROCESSED_TRADE_SIDE")); WriteJsonValue(Writer, LastProcessedTradeSide.GetValue());
	}
	if (LastProcessedTradeTs.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LAST_PROCESSED_TRADE_TS")); WriteJsonValue(Writer, LastProcessedTradeTs.GetValue());
	}
	if (LastTradeCcseq.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LAST_TRADE_CCSEQ")); WriteJsonValue(Writer, LastTradeCcseq.GetValue());
	}
	if (LastTradeId.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LAST_TRADE_ID")); WriteJsonValue(Writer, LastTradeId.GetValue());
	}
	if (LastTradeQuantity.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LAST_TRADE_QUANTITY")); WriteJsonValue(Writer, LastTradeQuantity.GetValue());
	}
	if (LastTradeQuoteQuantity.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LAST_TRADE_QUOTE_QUANTITY")); WriteJsonValue(Writer, LastTradeQuoteQuantity.GetValue());
	}
	if (LastTradeSide.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LAST_TRADE_SIDE")); WriteJsonValue(Writer, LastTradeSide.GetValue());
	}
	if (LifetimeFirstTradeTs.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LIFETIME_FIRST_TRADE_TS")); WriteJsonValue(Writer, LifetimeFirstTradeTs.GetValue());
	}
	if (LifetimeHigh.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LIFETIME_HIGH")); WriteJsonValue(Writer, LifetimeHigh.GetValue());
	}
	if (LifetimeHighTs.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LIFETIME_HIGH_TS")); WriteJsonValue(Writer, LifetimeHighTs.GetValue());
	}
	if (LifetimeLow.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LIFETIME_LOW")); WriteJsonValue(Writer, LifetimeLow.GetValue());
	}
	if (LifetimeLowTs.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LIFETIME_LOW_TS")); WriteJsonValue(Writer, LifetimeLowTs.GetValue());
	}
	if (LifetimeOpen.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LIFETIME_OPEN")); WriteJsonValue(Writer, LifetimeOpen.GetValue());
	}
	if (LifetimeQuoteVolume.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LIFETIME_QUOTE_VOLUME")); WriteJsonValue(Writer, LifetimeQuoteVolume.GetValue());
	}
	if (LifetimeQuoteVolumeBuy.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LIFETIME_QUOTE_VOLUME_BUY")); WriteJsonValue(Writer, LifetimeQuoteVolumeBuy.GetValue());
	}
	if (LifetimeQuoteVolumeSell.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LIFETIME_QUOTE_VOLUME_SELL")); WriteJsonValue(Writer, LifetimeQuoteVolumeSell.GetValue());
	}
	if (LifetimeQuoteVolumeUnknown.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LIFETIME_QUOTE_VOLUME_UNKNOWN")); WriteJsonValue(Writer, LifetimeQuoteVolumeUnknown.GetValue());
	}
	if (LifetimeTotalTrades.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LIFETIME_TOTAL_TRADES")); WriteJsonValue(Writer, LifetimeTotalTrades.GetValue());
	}
	if (LifetimeTotalTradesBuy.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LIFETIME_TOTAL_TRADES_BUY")); WriteJsonValue(Writer, LifetimeTotalTradesBuy.GetValue());
	}
	if (LifetimeTotalTradesSell.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LIFETIME_TOTAL_TRADES_SELL")); WriteJsonValue(Writer, LifetimeTotalTradesSell.GetValue());
	}
	if (LifetimeTotalTradesUnknown.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LIFETIME_TOTAL_TRADES_UNKNOWN")); WriteJsonValue(Writer, LifetimeTotalTradesUnknown.GetValue());
	}
	if (LifetimeVolume.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LIFETIME_VOLUME")); WriteJsonValue(Writer, LifetimeVolume.GetValue());
	}
	if (LifetimeVolumeBuy.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LIFETIME_VOLUME_BUY")); WriteJsonValue(Writer, LifetimeVolumeBuy.GetValue());
	}
	if (LifetimeVolumeSell.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LIFETIME_VOLUME_SELL")); WriteJsonValue(Writer, LifetimeVolumeSell.GetValue());
	}
	if (LifetimeVolumeUnknown.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("LIFETIME_VOLUME_UNKNOWN")); WriteJsonValue(Writer, LifetimeVolumeUnknown.GetValue());
	}
	if (MappedInstrument.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MAPPED_INSTRUMENT")); WriteJsonValue(Writer, MappedInstrument.GetValue());
	}
	if (Market.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MARKET")); WriteJsonValue(Writer, Market.GetValue());
	}
	if (MOVING180DAYHIGH.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_180_DAY_HIGH")); WriteJsonValue(Writer, MOVING180DAYHIGH.GetValue());
	}
	if (MOVING180DAYLOW.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_180_DAY_LOW")); WriteJsonValue(Writer, MOVING180DAYLOW.GetValue());
	}
	if (MOVING180DAYOPEN.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_180_DAY_OPEN")); WriteJsonValue(Writer, MOVING180DAYOPEN.GetValue());
	}
	if (MOVING180DAYQUOTEVOLUME.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_180_DAY_QUOTE_VOLUME")); WriteJsonValue(Writer, MOVING180DAYQUOTEVOLUME.GetValue());
	}
	if (MOVING180DAYQUOTEVOLUMEBUY.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_180_DAY_QUOTE_VOLUME_BUY")); WriteJsonValue(Writer, MOVING180DAYQUOTEVOLUMEBUY.GetValue());
	}
	if (MOVING180DAYQUOTEVOLUMESELL.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_180_DAY_QUOTE_VOLUME_SELL")); WriteJsonValue(Writer, MOVING180DAYQUOTEVOLUMESELL.GetValue());
	}
	if (MOVING180DAYQUOTEVOLUMEUNKNOWN.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_180_DAY_QUOTE_VOLUME_UNKNOWN")); WriteJsonValue(Writer, MOVING180DAYQUOTEVOLUMEUNKNOWN.GetValue());
	}
	if (MOVING180DAYTOTALTRADES.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_180_DAY_TOTAL_TRADES")); WriteJsonValue(Writer, MOVING180DAYTOTALTRADES.GetValue());
	}
	if (MOVING180DAYTOTALTRADESBUY.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_180_DAY_TOTAL_TRADES_BUY")); WriteJsonValue(Writer, MOVING180DAYTOTALTRADESBUY.GetValue());
	}
	if (MOVING180DAYTOTALTRADESSELL.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_180_DAY_TOTAL_TRADES_SELL")); WriteJsonValue(Writer, MOVING180DAYTOTALTRADESSELL.GetValue());
	}
	if (MOVING180DAYTOTALTRADESUNKNOWN.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_180_DAY_TOTAL_TRADES_UNKNOWN")); WriteJsonValue(Writer, MOVING180DAYTOTALTRADESUNKNOWN.GetValue());
	}
	if (MOVING180DAYVOLUME.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_180_DAY_VOLUME")); WriteJsonValue(Writer, MOVING180DAYVOLUME.GetValue());
	}
	if (MOVING180DAYVOLUMEBUY.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_180_DAY_VOLUME_BUY")); WriteJsonValue(Writer, MOVING180DAYVOLUMEBUY.GetValue());
	}
	if (MOVING180DAYVOLUMESELL.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_180_DAY_VOLUME_SELL")); WriteJsonValue(Writer, MOVING180DAYVOLUMESELL.GetValue());
	}
	if (MOVING180DAYVOLUMEUNKNOWN.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_180_DAY_VOLUME_UNKNOWN")); WriteJsonValue(Writer, MOVING180DAYVOLUMEUNKNOWN.GetValue());
	}
	if (MOVING24HOURHIGH.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_24_HOUR_HIGH")); WriteJsonValue(Writer, MOVING24HOURHIGH.GetValue());
	}
	if (MOVING24HOURLOW.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_24_HOUR_LOW")); WriteJsonValue(Writer, MOVING24HOURLOW.GetValue());
	}
	if (MOVING24HOUROPEN.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_24_HOUR_OPEN")); WriteJsonValue(Writer, MOVING24HOUROPEN.GetValue());
	}
	if (MOVING24HOURQUOTEVOLUME.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_24_HOUR_QUOTE_VOLUME")); WriteJsonValue(Writer, MOVING24HOURQUOTEVOLUME.GetValue());
	}
	if (MOVING24HOURQUOTEVOLUMEBUY.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_24_HOUR_QUOTE_VOLUME_BUY")); WriteJsonValue(Writer, MOVING24HOURQUOTEVOLUMEBUY.GetValue());
	}
	if (MOVING24HOURQUOTEVOLUMESELL.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_24_HOUR_QUOTE_VOLUME_SELL")); WriteJsonValue(Writer, MOVING24HOURQUOTEVOLUMESELL.GetValue());
	}
	if (MOVING24HOURQUOTEVOLUMEUNKNOWN.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_24_HOUR_QUOTE_VOLUME_UNKNOWN")); WriteJsonValue(Writer, MOVING24HOURQUOTEVOLUMEUNKNOWN.GetValue());
	}
	if (MOVING24HOURTOTALTRADES.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_24_HOUR_TOTAL_TRADES")); WriteJsonValue(Writer, MOVING24HOURTOTALTRADES.GetValue());
	}
	if (MOVING24HOURTOTALTRADESBUY.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_24_HOUR_TOTAL_TRADES_BUY")); WriteJsonValue(Writer, MOVING24HOURTOTALTRADESBUY.GetValue());
	}
	if (MOVING24HOURTOTALTRADESSELL.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_24_HOUR_TOTAL_TRADES_SELL")); WriteJsonValue(Writer, MOVING24HOURTOTALTRADESSELL.GetValue());
	}
	if (MOVING24HOURTOTALTRADESUNKNOWN.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_24_HOUR_TOTAL_TRADES_UNKNOWN")); WriteJsonValue(Writer, MOVING24HOURTOTALTRADESUNKNOWN.GetValue());
	}
	if (MOVING24HOURVOLUME.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_24_HOUR_VOLUME")); WriteJsonValue(Writer, MOVING24HOURVOLUME.GetValue());
	}
	if (MOVING24HOURVOLUMEBUY.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_24_HOUR_VOLUME_BUY")); WriteJsonValue(Writer, MOVING24HOURVOLUMEBUY.GetValue());
	}
	if (MOVING24HOURVOLUMESELL.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_24_HOUR_VOLUME_SELL")); WriteJsonValue(Writer, MOVING24HOURVOLUMESELL.GetValue());
	}
	if (MOVING24HOURVOLUMEUNKNOWN.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_24_HOUR_VOLUME_UNKNOWN")); WriteJsonValue(Writer, MOVING24HOURVOLUMEUNKNOWN.GetValue());
	}
	if (MOVING30DAYHIGH.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_30_DAY_HIGH")); WriteJsonValue(Writer, MOVING30DAYHIGH.GetValue());
	}
	if (MOVING30DAYLOW.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_30_DAY_LOW")); WriteJsonValue(Writer, MOVING30DAYLOW.GetValue());
	}
	if (MOVING30DAYOPEN.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_30_DAY_OPEN")); WriteJsonValue(Writer, MOVING30DAYOPEN.GetValue());
	}
	if (MOVING30DAYQUOTEVOLUME.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_30_DAY_QUOTE_VOLUME")); WriteJsonValue(Writer, MOVING30DAYQUOTEVOLUME.GetValue());
	}
	if (MOVING30DAYQUOTEVOLUMEBUY.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_30_DAY_QUOTE_VOLUME_BUY")); WriteJsonValue(Writer, MOVING30DAYQUOTEVOLUMEBUY.GetValue());
	}
	if (MOVING30DAYQUOTEVOLUMESELL.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_30_DAY_QUOTE_VOLUME_SELL")); WriteJsonValue(Writer, MOVING30DAYQUOTEVOLUMESELL.GetValue());
	}
	if (MOVING30DAYQUOTEVOLUMEUNKNOWN.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_30_DAY_QUOTE_VOLUME_UNKNOWN")); WriteJsonValue(Writer, MOVING30DAYQUOTEVOLUMEUNKNOWN.GetValue());
	}
	if (MOVING30DAYTOTALTRADES.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_30_DAY_TOTAL_TRADES")); WriteJsonValue(Writer, MOVING30DAYTOTALTRADES.GetValue());
	}
	if (MOVING30DAYTOTALTRADESBUY.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_30_DAY_TOTAL_TRADES_BUY")); WriteJsonValue(Writer, MOVING30DAYTOTALTRADESBUY.GetValue());
	}
	if (MOVING30DAYTOTALTRADESSELL.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_30_DAY_TOTAL_TRADES_SELL")); WriteJsonValue(Writer, MOVING30DAYTOTALTRADESSELL.GetValue());
	}
	if (MOVING30DAYTOTALTRADESUNKNOWN.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_30_DAY_TOTAL_TRADES_UNKNOWN")); WriteJsonValue(Writer, MOVING30DAYTOTALTRADESUNKNOWN.GetValue());
	}
	if (MOVING30DAYVOLUME.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_30_DAY_VOLUME")); WriteJsonValue(Writer, MOVING30DAYVOLUME.GetValue());
	}
	if (MOVING30DAYVOLUMEBUY.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_30_DAY_VOLUME_BUY")); WriteJsonValue(Writer, MOVING30DAYVOLUMEBUY.GetValue());
	}
	if (MOVING30DAYVOLUMESELL.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_30_DAY_VOLUME_SELL")); WriteJsonValue(Writer, MOVING30DAYVOLUMESELL.GetValue());
	}
	if (MOVING30DAYVOLUMEUNKNOWN.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_30_DAY_VOLUME_UNKNOWN")); WriteJsonValue(Writer, MOVING30DAYVOLUMEUNKNOWN.GetValue());
	}
	if (MOVING365DAYHIGH.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_365_DAY_HIGH")); WriteJsonValue(Writer, MOVING365DAYHIGH.GetValue());
	}
	if (MOVING365DAYLOW.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_365_DAY_LOW")); WriteJsonValue(Writer, MOVING365DAYLOW.GetValue());
	}
	if (MOVING365DAYOPEN.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_365_DAY_OPEN")); WriteJsonValue(Writer, MOVING365DAYOPEN.GetValue());
	}
	if (MOVING365DAYQUOTEVOLUME.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_365_DAY_QUOTE_VOLUME")); WriteJsonValue(Writer, MOVING365DAYQUOTEVOLUME.GetValue());
	}
	if (MOVING365DAYQUOTEVOLUMEBUY.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_365_DAY_QUOTE_VOLUME_BUY")); WriteJsonValue(Writer, MOVING365DAYQUOTEVOLUMEBUY.GetValue());
	}
	if (MOVING365DAYQUOTEVOLUMESELL.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_365_DAY_QUOTE_VOLUME_SELL")); WriteJsonValue(Writer, MOVING365DAYQUOTEVOLUMESELL.GetValue());
	}
	if (MOVING365DAYQUOTEVOLUMEUNKNOWN.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_365_DAY_QUOTE_VOLUME_UNKNOWN")); WriteJsonValue(Writer, MOVING365DAYQUOTEVOLUMEUNKNOWN.GetValue());
	}
	if (MOVING365DAYTOTALTRADES.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_365_DAY_TOTAL_TRADES")); WriteJsonValue(Writer, MOVING365DAYTOTALTRADES.GetValue());
	}
	if (MOVING365DAYTOTALTRADESBUY.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_365_DAY_TOTAL_TRADES_BUY")); WriteJsonValue(Writer, MOVING365DAYTOTALTRADESBUY.GetValue());
	}
	if (MOVING365DAYTOTALTRADESSELL.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_365_DAY_TOTAL_TRADES_SELL")); WriteJsonValue(Writer, MOVING365DAYTOTALTRADESSELL.GetValue());
	}
	if (MOVING365DAYTOTALTRADESUNKNOWN.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_365_DAY_TOTAL_TRADES_UNKNOWN")); WriteJsonValue(Writer, MOVING365DAYTOTALTRADESUNKNOWN.GetValue());
	}
	if (MOVING365DAYVOLUME.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_365_DAY_VOLUME")); WriteJsonValue(Writer, MOVING365DAYVOLUME.GetValue());
	}
	if (MOVING365DAYVOLUMEBUY.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_365_DAY_VOLUME_BUY")); WriteJsonValue(Writer, MOVING365DAYVOLUMEBUY.GetValue());
	}
	if (MOVING365DAYVOLUMESELL.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_365_DAY_VOLUME_SELL")); WriteJsonValue(Writer, MOVING365DAYVOLUMESELL.GetValue());
	}
	if (MOVING365DAYVOLUMEUNKNOWN.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_365_DAY_VOLUME_UNKNOWN")); WriteJsonValue(Writer, MOVING365DAYVOLUMEUNKNOWN.GetValue());
	}
	if (MOVING7DAYHIGH.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_7_DAY_HIGH")); WriteJsonValue(Writer, MOVING7DAYHIGH.GetValue());
	}
	if (MOVING7DAYLOW.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_7_DAY_LOW")); WriteJsonValue(Writer, MOVING7DAYLOW.GetValue());
	}
	if (MOVING7DAYOPEN.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_7_DAY_OPEN")); WriteJsonValue(Writer, MOVING7DAYOPEN.GetValue());
	}
	if (MOVING7DAYQUOTEVOLUME.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_7_DAY_QUOTE_VOLUME")); WriteJsonValue(Writer, MOVING7DAYQUOTEVOLUME.GetValue());
	}
	if (MOVING7DAYQUOTEVOLUMEBUY.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_7_DAY_QUOTE_VOLUME_BUY")); WriteJsonValue(Writer, MOVING7DAYQUOTEVOLUMEBUY.GetValue());
	}
	if (MOVING7DAYQUOTEVOLUMESELL.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_7_DAY_QUOTE_VOLUME_SELL")); WriteJsonValue(Writer, MOVING7DAYQUOTEVOLUMESELL.GetValue());
	}
	if (MOVING7DAYQUOTEVOLUMEUNKNOWN.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_7_DAY_QUOTE_VOLUME_UNKNOWN")); WriteJsonValue(Writer, MOVING7DAYQUOTEVOLUMEUNKNOWN.GetValue());
	}
	if (MOVING7DAYTOTALTRADES.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_7_DAY_TOTAL_TRADES")); WriteJsonValue(Writer, MOVING7DAYTOTALTRADES.GetValue());
	}
	if (MOVING7DAYTOTALTRADESBUY.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_7_DAY_TOTAL_TRADES_BUY")); WriteJsonValue(Writer, MOVING7DAYTOTALTRADESBUY.GetValue());
	}
	if (MOVING7DAYTOTALTRADESSELL.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_7_DAY_TOTAL_TRADES_SELL")); WriteJsonValue(Writer, MOVING7DAYTOTALTRADESSELL.GetValue());
	}
	if (MOVING7DAYTOTALTRADESUNKNOWN.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_7_DAY_TOTAL_TRADES_UNKNOWN")); WriteJsonValue(Writer, MOVING7DAYTOTALTRADESUNKNOWN.GetValue());
	}
	if (MOVING7DAYVOLUME.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_7_DAY_VOLUME")); WriteJsonValue(Writer, MOVING7DAYVOLUME.GetValue());
	}
	if (MOVING7DAYVOLUMEBUY.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_7_DAY_VOLUME_BUY")); WriteJsonValue(Writer, MOVING7DAYVOLUMEBUY.GetValue());
	}
	if (MOVING7DAYVOLUMESELL.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_7_DAY_VOLUME_SELL")); WriteJsonValue(Writer, MOVING7DAYVOLUMESELL.GetValue());
	}
	if (MOVING7DAYVOLUMEUNKNOWN.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_7_DAY_VOLUME_UNKNOWN")); WriteJsonValue(Writer, MOVING7DAYVOLUMEUNKNOWN.GetValue());
	}
	if (MOVING90DAYHIGH.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_90_DAY_HIGH")); WriteJsonValue(Writer, MOVING90DAYHIGH.GetValue());
	}
	if (MOVING90DAYLOW.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_90_DAY_LOW")); WriteJsonValue(Writer, MOVING90DAYLOW.GetValue());
	}
	if (MOVING90DAYOPEN.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_90_DAY_OPEN")); WriteJsonValue(Writer, MOVING90DAYOPEN.GetValue());
	}
	if (MOVING90DAYQUOTEVOLUME.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_90_DAY_QUOTE_VOLUME")); WriteJsonValue(Writer, MOVING90DAYQUOTEVOLUME.GetValue());
	}
	if (MOVING90DAYQUOTEVOLUMEBUY.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_90_DAY_QUOTE_VOLUME_BUY")); WriteJsonValue(Writer, MOVING90DAYQUOTEVOLUMEBUY.GetValue());
	}
	if (MOVING90DAYQUOTEVOLUMESELL.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_90_DAY_QUOTE_VOLUME_SELL")); WriteJsonValue(Writer, MOVING90DAYQUOTEVOLUMESELL.GetValue());
	}
	if (MOVING90DAYQUOTEVOLUMEUNKNOWN.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_90_DAY_QUOTE_VOLUME_UNKNOWN")); WriteJsonValue(Writer, MOVING90DAYQUOTEVOLUMEUNKNOWN.GetValue());
	}
	if (MOVING90DAYTOTALTRADES.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_90_DAY_TOTAL_TRADES")); WriteJsonValue(Writer, MOVING90DAYTOTALTRADES.GetValue());
	}
	if (MOVING90DAYTOTALTRADESBUY.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_90_DAY_TOTAL_TRADES_BUY")); WriteJsonValue(Writer, MOVING90DAYTOTALTRADESBUY.GetValue());
	}
	if (MOVING90DAYTOTALTRADESSELL.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_90_DAY_TOTAL_TRADES_SELL")); WriteJsonValue(Writer, MOVING90DAYTOTALTRADESSELL.GetValue());
	}
	if (MOVING90DAYTOTALTRADESUNKNOWN.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_90_DAY_TOTAL_TRADES_UNKNOWN")); WriteJsonValue(Writer, MOVING90DAYTOTALTRADESUNKNOWN.GetValue());
	}
	if (MOVING90DAYVOLUME.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_90_DAY_VOLUME")); WriteJsonValue(Writer, MOVING90DAYVOLUME.GetValue());
	}
	if (MOVING90DAYVOLUMEBUY.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_90_DAY_VOLUME_BUY")); WriteJsonValue(Writer, MOVING90DAYVOLUMEBUY.GetValue());
	}
	if (MOVING90DAYVOLUMESELL.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_90_DAY_VOLUME_SELL")); WriteJsonValue(Writer, MOVING90DAYVOLUMESELL.GetValue());
	}
	if (MOVING90DAYVOLUMEUNKNOWN.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("MOVING_90_DAY_VOLUME_UNKNOWN")); WriteJsonValue(Writer, MOVING90DAYVOLUMEUNKNOWN.GetValue());
	}
	if (Price.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("PRICE")); WriteJsonValue(Writer, Price.GetValue());
	}
	if (PriceFlag.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("PRICE_FLAG")); WriteJsonValue(Writer, PriceFlag.GetValue());
	}
	if (PriceLastUpdateTs.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("PRICE_LAST_UPDATE_TS")); WriteJsonValue(Writer, PriceLastUpdateTs.GetValue());
	}
	if (Quote.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("QUOTE")); WriteJsonValue(Writer, Quote.GetValue());
	}
	if (TopAskLastUpdateTs.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("TOP_ASK_LAST_UPDATE_TS")); WriteJsonValue(Writer, TopAskLastUpdateTs.GetValue());
	}
	if (TopAskPrice.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("TOP_ASK_PRICE")); WriteJsonValue(Writer, TopAskPrice.GetValue());
	}
	if (TopAskQuantity.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("TOP_ASK_QUANTITY")); WriteJsonValue(Writer, TopAskQuantity.GetValue());
	}
	if (TopBidLastUpdateTs.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("TOP_BID_LAST_UPDATE_TS")); WriteJsonValue(Writer, TopBidLastUpdateTs.GetValue());
	}
	if (TopBidPrice.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("TOP_BID_PRICE")); WriteJsonValue(Writer, TopBidPrice.GetValue());
	}
	if (TopBidQuantity.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("TOP_BID_QUANTITY")); WriteJsonValue(Writer, TopBidQuantity.GetValue());
	}
	if (Type.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("TYPE")); WriteJsonValue(Writer, Type.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPISPOTINSTRUMENTMARKETDATA::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("BASE"), Base);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CCSEQ"), Ccseq);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_DAY_HIGH"), CurrentDayHigh);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_DAY_LOW"), CurrentDayLow);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_DAY_OPEN"), CurrentDayOpen);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_DAY_QUOTE_VOLUME"), CurrentDayQuoteVolume);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_DAY_QUOTE_VOLUME_BUY"), CurrentDayQuoteVolumeBuy);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_DAY_QUOTE_VOLUME_SELL"), CurrentDayQuoteVolumeSell);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_DAY_QUOTE_VOLUME_UNKNOWN"), CurrentDayQuoteVolumeUnknown);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_DAY_TOTAL_TRADES"), CurrentDayTotalTrades);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_DAY_TOTAL_TRADES_BUY"), CurrentDayTotalTradesBuy);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_DAY_TOTAL_TRADES_SELL"), CurrentDayTotalTradesSell);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_DAY_TOTAL_TRADES_UNKNOWN"), CurrentDayTotalTradesUnknown);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_DAY_VOLUME"), CurrentDayVolume);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_DAY_VOLUME_BUY"), CurrentDayVolumeBuy);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_DAY_VOLUME_SELL"), CurrentDayVolumeSell);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_DAY_VOLUME_UNKNOWN"), CurrentDayVolumeUnknown);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_HOUR_HIGH"), CurrentHourHigh);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_HOUR_LOW"), CurrentHourLow);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_HOUR_OPEN"), CurrentHourOpen);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_HOUR_QUOTE_VOLUME"), CurrentHourQuoteVolume);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_HOUR_QUOTE_VOLUME_BUY"), CurrentHourQuoteVolumeBuy);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_HOUR_QUOTE_VOLUME_SELL"), CurrentHourQuoteVolumeSell);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN"), CurrentHourQuoteVolumeUnknown);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_HOUR_TOTAL_TRADES"), CurrentHourTotalTrades);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_HOUR_TOTAL_TRADES_BUY"), CurrentHourTotalTradesBuy);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_HOUR_TOTAL_TRADES_SELL"), CurrentHourTotalTradesSell);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_HOUR_TOTAL_TRADES_UNKNOWN"), CurrentHourTotalTradesUnknown);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_HOUR_VOLUME"), CurrentHourVolume);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_HOUR_VOLUME_BUY"), CurrentHourVolumeBuy);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_HOUR_VOLUME_SELL"), CurrentHourVolumeSell);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_HOUR_VOLUME_UNKNOWN"), CurrentHourVolumeUnknown);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_MONTH_HIGH"), CurrentMonthHigh);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_MONTH_LOW"), CurrentMonthLow);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_MONTH_OPEN"), CurrentMonthOpen);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_MONTH_QUOTE_VOLUME"), CurrentMonthQuoteVolume);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_MONTH_QUOTE_VOLUME_BUY"), CurrentMonthQuoteVolumeBuy);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_MONTH_QUOTE_VOLUME_SELL"), CurrentMonthQuoteVolumeSell);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN"), CurrentMonthQuoteVolumeUnknown);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_MONTH_TOTAL_TRADES"), CurrentMonthTotalTrades);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_MONTH_TOTAL_TRADES_BUY"), CurrentMonthTotalTradesBuy);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_MONTH_TOTAL_TRADES_SELL"), CurrentMonthTotalTradesSell);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_MONTH_TOTAL_TRADES_UNKNOWN"), CurrentMonthTotalTradesUnknown);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_MONTH_VOLUME"), CurrentMonthVolume);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_MONTH_VOLUME_BUY"), CurrentMonthVolumeBuy);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_MONTH_VOLUME_SELL"), CurrentMonthVolumeSell);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_MONTH_VOLUME_UNKNOWN"), CurrentMonthVolumeUnknown);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_WEEK_HIGH"), CurrentWeekHigh);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_WEEK_LOW"), CurrentWeekLow);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_WEEK_OPEN"), CurrentWeekOpen);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_WEEK_QUOTE_VOLUME"), CurrentWeekQuoteVolume);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_WEEK_QUOTE_VOLUME_BUY"), CurrentWeekQuoteVolumeBuy);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_WEEK_QUOTE_VOLUME_SELL"), CurrentWeekQuoteVolumeSell);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN"), CurrentWeekQuoteVolumeUnknown);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_WEEK_TOTAL_TRADES"), CurrentWeekTotalTrades);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_WEEK_TOTAL_TRADES_BUY"), CurrentWeekTotalTradesBuy);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_WEEK_TOTAL_TRADES_SELL"), CurrentWeekTotalTradesSell);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_WEEK_TOTAL_TRADES_UNKNOWN"), CurrentWeekTotalTradesUnknown);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_WEEK_VOLUME"), CurrentWeekVolume);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_WEEK_VOLUME_BUY"), CurrentWeekVolumeBuy);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_WEEK_VOLUME_SELL"), CurrentWeekVolumeSell);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_WEEK_VOLUME_UNKNOWN"), CurrentWeekVolumeUnknown);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_YEAR_HIGH"), CurrentYearHigh);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_YEAR_LOW"), CurrentYearLow);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_YEAR_OPEN"), CurrentYearOpen);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_YEAR_QUOTE_VOLUME"), CurrentYearQuoteVolume);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_YEAR_QUOTE_VOLUME_BUY"), CurrentYearQuoteVolumeBuy);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_YEAR_QUOTE_VOLUME_SELL"), CurrentYearQuoteVolumeSell);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN"), CurrentYearQuoteVolumeUnknown);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_YEAR_TOTAL_TRADES"), CurrentYearTotalTrades);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_YEAR_TOTAL_TRADES_BUY"), CurrentYearTotalTradesBuy);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_YEAR_TOTAL_TRADES_SELL"), CurrentYearTotalTradesSell);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_YEAR_TOTAL_TRADES_UNKNOWN"), CurrentYearTotalTradesUnknown);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_YEAR_VOLUME"), CurrentYearVolume);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_YEAR_VOLUME_BUY"), CurrentYearVolumeBuy);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_YEAR_VOLUME_SELL"), CurrentYearVolumeSell);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("CURRENT_YEAR_VOLUME_UNKNOWN"), CurrentYearVolumeUnknown);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("INSTRUMENT"), Instrument);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LAST_PROCESSED_TRADE_CCSEQ"), LastProcessedTradeCcseq);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LAST_PROCESSED_TRADE_PRICE"), LastProcessedTradePrice);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LAST_PROCESSED_TRADE_QUANTITY"), LastProcessedTradeQuantity);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LAST_PROCESSED_TRADE_QUOTE_QUANTITY"), LastProcessedTradeQuoteQuantity);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LAST_PROCESSED_TRADE_SIDE"), LastProcessedTradeSide);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LAST_PROCESSED_TRADE_TS"), LastProcessedTradeTs);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LAST_TRADE_CCSEQ"), LastTradeCcseq);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LAST_TRADE_ID"), LastTradeId);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LAST_TRADE_QUANTITY"), LastTradeQuantity);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LAST_TRADE_QUOTE_QUANTITY"), LastTradeQuoteQuantity);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LAST_TRADE_SIDE"), LastTradeSide);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LIFETIME_FIRST_TRADE_TS"), LifetimeFirstTradeTs);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LIFETIME_HIGH"), LifetimeHigh);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LIFETIME_HIGH_TS"), LifetimeHighTs);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LIFETIME_LOW"), LifetimeLow);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LIFETIME_LOW_TS"), LifetimeLowTs);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LIFETIME_OPEN"), LifetimeOpen);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LIFETIME_QUOTE_VOLUME"), LifetimeQuoteVolume);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LIFETIME_QUOTE_VOLUME_BUY"), LifetimeQuoteVolumeBuy);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LIFETIME_QUOTE_VOLUME_SELL"), LifetimeQuoteVolumeSell);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LIFETIME_QUOTE_VOLUME_UNKNOWN"), LifetimeQuoteVolumeUnknown);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LIFETIME_TOTAL_TRADES"), LifetimeTotalTrades);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LIFETIME_TOTAL_TRADES_BUY"), LifetimeTotalTradesBuy);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LIFETIME_TOTAL_TRADES_SELL"), LifetimeTotalTradesSell);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LIFETIME_TOTAL_TRADES_UNKNOWN"), LifetimeTotalTradesUnknown);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LIFETIME_VOLUME"), LifetimeVolume);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LIFETIME_VOLUME_BUY"), LifetimeVolumeBuy);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LIFETIME_VOLUME_SELL"), LifetimeVolumeSell);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("LIFETIME_VOLUME_UNKNOWN"), LifetimeVolumeUnknown);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MAPPED_INSTRUMENT"), MappedInstrument);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MARKET"), Market);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_180_DAY_HIGH"), MOVING180DAYHIGH);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_180_DAY_LOW"), MOVING180DAYLOW);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_180_DAY_OPEN"), MOVING180DAYOPEN);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_180_DAY_QUOTE_VOLUME"), MOVING180DAYQUOTEVOLUME);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_180_DAY_QUOTE_VOLUME_BUY"), MOVING180DAYQUOTEVOLUMEBUY);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_180_DAY_QUOTE_VOLUME_SELL"), MOVING180DAYQUOTEVOLUMESELL);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_180_DAY_QUOTE_VOLUME_UNKNOWN"), MOVING180DAYQUOTEVOLUMEUNKNOWN);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_180_DAY_TOTAL_TRADES"), MOVING180DAYTOTALTRADES);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_180_DAY_TOTAL_TRADES_BUY"), MOVING180DAYTOTALTRADESBUY);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_180_DAY_TOTAL_TRADES_SELL"), MOVING180DAYTOTALTRADESSELL);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_180_DAY_TOTAL_TRADES_UNKNOWN"), MOVING180DAYTOTALTRADESUNKNOWN);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_180_DAY_VOLUME"), MOVING180DAYVOLUME);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_180_DAY_VOLUME_BUY"), MOVING180DAYVOLUMEBUY);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_180_DAY_VOLUME_SELL"), MOVING180DAYVOLUMESELL);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_180_DAY_VOLUME_UNKNOWN"), MOVING180DAYVOLUMEUNKNOWN);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_24_HOUR_HIGH"), MOVING24HOURHIGH);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_24_HOUR_LOW"), MOVING24HOURLOW);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_24_HOUR_OPEN"), MOVING24HOUROPEN);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_24_HOUR_QUOTE_VOLUME"), MOVING24HOURQUOTEVOLUME);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_24_HOUR_QUOTE_VOLUME_BUY"), MOVING24HOURQUOTEVOLUMEBUY);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_24_HOUR_QUOTE_VOLUME_SELL"), MOVING24HOURQUOTEVOLUMESELL);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_24_HOUR_QUOTE_VOLUME_UNKNOWN"), MOVING24HOURQUOTEVOLUMEUNKNOWN);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_24_HOUR_TOTAL_TRADES"), MOVING24HOURTOTALTRADES);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_24_HOUR_TOTAL_TRADES_BUY"), MOVING24HOURTOTALTRADESBUY);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_24_HOUR_TOTAL_TRADES_SELL"), MOVING24HOURTOTALTRADESSELL);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_24_HOUR_TOTAL_TRADES_UNKNOWN"), MOVING24HOURTOTALTRADESUNKNOWN);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_24_HOUR_VOLUME"), MOVING24HOURVOLUME);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_24_HOUR_VOLUME_BUY"), MOVING24HOURVOLUMEBUY);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_24_HOUR_VOLUME_SELL"), MOVING24HOURVOLUMESELL);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_24_HOUR_VOLUME_UNKNOWN"), MOVING24HOURVOLUMEUNKNOWN);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_30_DAY_HIGH"), MOVING30DAYHIGH);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_30_DAY_LOW"), MOVING30DAYLOW);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_30_DAY_OPEN"), MOVING30DAYOPEN);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_30_DAY_QUOTE_VOLUME"), MOVING30DAYQUOTEVOLUME);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_30_DAY_QUOTE_VOLUME_BUY"), MOVING30DAYQUOTEVOLUMEBUY);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_30_DAY_QUOTE_VOLUME_SELL"), MOVING30DAYQUOTEVOLUMESELL);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_30_DAY_QUOTE_VOLUME_UNKNOWN"), MOVING30DAYQUOTEVOLUMEUNKNOWN);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_30_DAY_TOTAL_TRADES"), MOVING30DAYTOTALTRADES);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_30_DAY_TOTAL_TRADES_BUY"), MOVING30DAYTOTALTRADESBUY);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_30_DAY_TOTAL_TRADES_SELL"), MOVING30DAYTOTALTRADESSELL);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_30_DAY_TOTAL_TRADES_UNKNOWN"), MOVING30DAYTOTALTRADESUNKNOWN);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_30_DAY_VOLUME"), MOVING30DAYVOLUME);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_30_DAY_VOLUME_BUY"), MOVING30DAYVOLUMEBUY);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_30_DAY_VOLUME_SELL"), MOVING30DAYVOLUMESELL);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_30_DAY_VOLUME_UNKNOWN"), MOVING30DAYVOLUMEUNKNOWN);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_365_DAY_HIGH"), MOVING365DAYHIGH);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_365_DAY_LOW"), MOVING365DAYLOW);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_365_DAY_OPEN"), MOVING365DAYOPEN);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_365_DAY_QUOTE_VOLUME"), MOVING365DAYQUOTEVOLUME);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_365_DAY_QUOTE_VOLUME_BUY"), MOVING365DAYQUOTEVOLUMEBUY);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_365_DAY_QUOTE_VOLUME_SELL"), MOVING365DAYQUOTEVOLUMESELL);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_365_DAY_QUOTE_VOLUME_UNKNOWN"), MOVING365DAYQUOTEVOLUMEUNKNOWN);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_365_DAY_TOTAL_TRADES"), MOVING365DAYTOTALTRADES);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_365_DAY_TOTAL_TRADES_BUY"), MOVING365DAYTOTALTRADESBUY);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_365_DAY_TOTAL_TRADES_SELL"), MOVING365DAYTOTALTRADESSELL);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_365_DAY_TOTAL_TRADES_UNKNOWN"), MOVING365DAYTOTALTRADESUNKNOWN);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_365_DAY_VOLUME"), MOVING365DAYVOLUME);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_365_DAY_VOLUME_BUY"), MOVING365DAYVOLUMEBUY);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_365_DAY_VOLUME_SELL"), MOVING365DAYVOLUMESELL);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_365_DAY_VOLUME_UNKNOWN"), MOVING365DAYVOLUMEUNKNOWN);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_7_DAY_HIGH"), MOVING7DAYHIGH);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_7_DAY_LOW"), MOVING7DAYLOW);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_7_DAY_OPEN"), MOVING7DAYOPEN);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_7_DAY_QUOTE_VOLUME"), MOVING7DAYQUOTEVOLUME);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_7_DAY_QUOTE_VOLUME_BUY"), MOVING7DAYQUOTEVOLUMEBUY);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_7_DAY_QUOTE_VOLUME_SELL"), MOVING7DAYQUOTEVOLUMESELL);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_7_DAY_QUOTE_VOLUME_UNKNOWN"), MOVING7DAYQUOTEVOLUMEUNKNOWN);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_7_DAY_TOTAL_TRADES"), MOVING7DAYTOTALTRADES);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_7_DAY_TOTAL_TRADES_BUY"), MOVING7DAYTOTALTRADESBUY);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_7_DAY_TOTAL_TRADES_SELL"), MOVING7DAYTOTALTRADESSELL);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_7_DAY_TOTAL_TRADES_UNKNOWN"), MOVING7DAYTOTALTRADESUNKNOWN);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_7_DAY_VOLUME"), MOVING7DAYVOLUME);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_7_DAY_VOLUME_BUY"), MOVING7DAYVOLUMEBUY);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_7_DAY_VOLUME_SELL"), MOVING7DAYVOLUMESELL);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_7_DAY_VOLUME_UNKNOWN"), MOVING7DAYVOLUMEUNKNOWN);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_90_DAY_HIGH"), MOVING90DAYHIGH);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_90_DAY_LOW"), MOVING90DAYLOW);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_90_DAY_OPEN"), MOVING90DAYOPEN);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_90_DAY_QUOTE_VOLUME"), MOVING90DAYQUOTEVOLUME);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_90_DAY_QUOTE_VOLUME_BUY"), MOVING90DAYQUOTEVOLUMEBUY);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_90_DAY_QUOTE_VOLUME_SELL"), MOVING90DAYQUOTEVOLUMESELL);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_90_DAY_QUOTE_VOLUME_UNKNOWN"), MOVING90DAYQUOTEVOLUMEUNKNOWN);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_90_DAY_TOTAL_TRADES"), MOVING90DAYTOTALTRADES);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_90_DAY_TOTAL_TRADES_BUY"), MOVING90DAYTOTALTRADESBUY);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_90_DAY_TOTAL_TRADES_SELL"), MOVING90DAYTOTALTRADESSELL);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_90_DAY_TOTAL_TRADES_UNKNOWN"), MOVING90DAYTOTALTRADESUNKNOWN);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_90_DAY_VOLUME"), MOVING90DAYVOLUME);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_90_DAY_VOLUME_BUY"), MOVING90DAYVOLUMEBUY);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_90_DAY_VOLUME_SELL"), MOVING90DAYVOLUMESELL);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("MOVING_90_DAY_VOLUME_UNKNOWN"), MOVING90DAYVOLUMEUNKNOWN);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("PRICE"), Price);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("PRICE_FLAG"), PriceFlag);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("PRICE_LAST_UPDATE_TS"), PriceLastUpdateTs);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("QUOTE"), Quote);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("TOP_ASK_LAST_UPDATE_TS"), TopAskLastUpdateTs);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("TOP_ASK_PRICE"), TopAskPrice);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("TOP_ASK_QUANTITY"), TopAskQuantity);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("TOP_BID_LAST_UPDATE_TS"), TopBidLastUpdateTs);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("TOP_BID_PRICE"), TopBidPrice);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("TOP_BID_QUANTITY"), TopBidQuantity);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("TYPE"), Type);

	return ParseSuccess;
}

}
