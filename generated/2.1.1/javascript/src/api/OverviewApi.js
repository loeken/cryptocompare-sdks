/**
 * CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry
 * CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: data@cryptocompare.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import GENERICRESPONSE from '../model/GENERICRESPONSE';

/**
* Overview service.
* @module api/OverviewApi
* @version 2.1.1
*/
export default class OverviewApi {

    /**
    * Constructs a new OverviewApi. 
    * @alias module:api/OverviewApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the overviewV1HistoricalMarketcapAllAssetsDays operation.
     * @callback module:api/OverviewApi~overviewV1HistoricalMarketcapAllAssetsDaysCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GENERICRESPONSE} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.groups When requesting all market cap historical data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,OHLC,VOLUME
     * @param {Number} opts.limit The number of data points to return (default to 30)
     * @param {Number} opts.toTs Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}
     * @param {Number} opts.aggregate The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries (default to 1)
     * @param {Boolean} opts.fill Boolean value, if set to false or 0 we will not return data points for periods with no trading activity. (default to true)
     * @param {module:model/String} opts.responseFormat The format of the data response in uppercase. It can be one of the following: JSON,CSV (default to 'JSON')
     * @param {module:api/OverviewApi~overviewV1HistoricalMarketcapAllAssetsDaysCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GENERICRESPONSE}
     */
    overviewV1HistoricalMarketcapAllAssetsDays(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'groups': this.apiClient.buildCollectionParam(opts['groups'], 'csv'),
        'limit': opts['limit'],
        'to_ts': opts['toTs'],
        'aggregate': opts['aggregate'],
        'fill': opts['fill'],
        'response_format': opts['responseFormat']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GENERICRESPONSE;
      return this.apiClient.callApi(
        '/overview/v1/historical/marketcap/all/assets/days', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the overviewV1HistoricalMarketcapAllAssetsHours operation.
     * @callback module:api/OverviewApi~overviewV1HistoricalMarketcapAllAssetsHoursCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GENERICRESPONSE} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.groups When requesting all market cap historical data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,OHLC,VOLUME
     * @param {Number} opts.limit The number of data points to return (default to 30)
     * @param {Number} opts.toTs Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}
     * @param {Number} opts.aggregate The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries (default to 1)
     * @param {Boolean} opts.fill Boolean value, if set to false or 0 we will not return data points for periods with no trading activity. (default to true)
     * @param {module:model/String} opts.responseFormat The format of the data response in uppercase. It can be one of the following: JSON,CSV (default to 'JSON')
     * @param {module:api/OverviewApi~overviewV1HistoricalMarketcapAllAssetsHoursCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GENERICRESPONSE}
     */
    overviewV1HistoricalMarketcapAllAssetsHours(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'groups': this.apiClient.buildCollectionParam(opts['groups'], 'csv'),
        'limit': opts['limit'],
        'to_ts': opts['toTs'],
        'aggregate': opts['aggregate'],
        'fill': opts['fill'],
        'response_format': opts['responseFormat']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GENERICRESPONSE;
      return this.apiClient.callApi(
        '/overview/v1/historical/marketcap/all/assets/hours', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the overviewV1HistoricalMarketcapFtwAssetsDays operation.
     * @callback module:api/OverviewApi~overviewV1HistoricalMarketcapFtwAssetsDaysCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GENERICRESPONSE} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.groups When requesting ftw universe market cap historical data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,OHLC,VOLUME
     * @param {Number} opts.limit The number of data points to return (default to 30)
     * @param {Number} opts.toTs Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}
     * @param {Number} opts.aggregate The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries (default to 1)
     * @param {Boolean} opts.fill Boolean value, if set to false or 0 we will not return data points for periods with no trading activity. (default to true)
     * @param {module:model/String} opts.responseFormat The format of the data response in uppercase. It can be one of the following: JSON,CSV (default to 'JSON')
     * @param {module:api/OverviewApi~overviewV1HistoricalMarketcapFtwAssetsDaysCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GENERICRESPONSE}
     */
    overviewV1HistoricalMarketcapFtwAssetsDays(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'groups': this.apiClient.buildCollectionParam(opts['groups'], 'csv'),
        'limit': opts['limit'],
        'to_ts': opts['toTs'],
        'aggregate': opts['aggregate'],
        'fill': opts['fill'],
        'response_format': opts['responseFormat']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GENERICRESPONSE;
      return this.apiClient.callApi(
        '/overview/v1/historical/marketcap/ftw/assets/days', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the overviewV1HistoricalMarketcapFtwAssetsHours operation.
     * @callback module:api/OverviewApi~overviewV1HistoricalMarketcapFtwAssetsHoursCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GENERICRESPONSE} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.groups When requesting ftw universe market cap historical data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,OHLC,VOLUME
     * @param {Number} opts.limit The number of data points to return (default to 30)
     * @param {Number} opts.toTs Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}
     * @param {Number} opts.aggregate The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries (default to 1)
     * @param {Boolean} opts.fill Boolean value, if set to false or 0 we will not return data points for periods with no trading activity. (default to true)
     * @param {module:model/String} opts.responseFormat The format of the data response in uppercase. It can be one of the following: JSON,CSV (default to 'JSON')
     * @param {module:api/OverviewApi~overviewV1HistoricalMarketcapFtwAssetsHoursCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GENERICRESPONSE}
     */
    overviewV1HistoricalMarketcapFtwAssetsHours(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'groups': this.apiClient.buildCollectionParam(opts['groups'], 'csv'),
        'limit': opts['limit'],
        'to_ts': opts['toTs'],
        'aggregate': opts['aggregate'],
        'fill': opts['fill'],
        'response_format': opts['responseFormat']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GENERICRESPONSE;
      return this.apiClient.callApi(
        '/overview/v1/historical/marketcap/ftw/assets/hours', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the overviewV1LatestMarketcapAllTick operation.
     * @callback module:api/OverviewApi~overviewV1LatestMarketcapAllTickCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GENERICRESPONSE} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.groups When requesting all market cap tick data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,VALUE,LAST_UPDATE,CURRENT_HOUR,CURRENT_DAY,MOVING_24_HOUR
     * @param {module:api/OverviewApi~overviewV1LatestMarketcapAllTickCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GENERICRESPONSE}
     */
    overviewV1LatestMarketcapAllTick(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'groups': this.apiClient.buildCollectionParam(opts['groups'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GENERICRESPONSE;
      return this.apiClient.callApi(
        '/overview/v1/latest/marketcap/all/tick', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the overviewV1LatestMarketcapFtwTick operation.
     * @callback module:api/OverviewApi~overviewV1LatestMarketcapFtwTickCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GENERICRESPONSE} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.groups When requesting ftw universe market cap tick data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,VALUE,LAST_UPDATE,CURRENT_HOUR,CURRENT_DAY,MOVING_24_HOUR
     * @param {module:api/OverviewApi~overviewV1LatestMarketcapFtwTickCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GENERICRESPONSE}
     */
    overviewV1LatestMarketcapFtwTick(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'groups': this.apiClient.buildCollectionParam(opts['groups'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GENERICRESPONSE;
      return this.apiClient.callApi(
        '/overview/v1/latest/marketcap/ftw/tick', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
