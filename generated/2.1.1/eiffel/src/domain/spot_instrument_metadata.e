note
 description:"[
		CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry
 		CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.
  		The version of the OpenAPI document: 2.1.1
 	    Contact: data@cryptocompare.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class SPOT_INSTRUMENT_METADATA




feature --Access

 	FIRST_SEEN_ON_BLOB_TS: INTEGER_32
    	 -- This is the first time instrument was seen on instrumentListSourceType BLOB.
 	FIRST_SEEN_ON_FIX_TS: INTEGER_32
    	 -- This is the first time instrument was seen on instrumentListSourceType FIX.
 	FIRST_SEEN_ON_HARDCODED_TS: INTEGER_32
    	 -- This is the first time instrument was seen on instrumentListSourceType HARDCODED.
 	FIRST_SEEN_ON_INDEX_COMPOSITION_TS: INTEGER_32
    	 -- This is the first time instrument was seen on instrumentListSourceType INDEX_COMPOSITION.
 	FIRST_SEEN_ON_NSQ_TS: INTEGER_32
    	 -- This is the first time instrument was seen on instrumentListSourceType NSQ.
 	FIRST_SEEN_ON_POLLING_TS: INTEGER_32
    	 -- This is the first time instrument was seen on instrumentListSourceType POLLING.
 	FIRST_SEEN_ON_STREAMING_TS: INTEGER_32
    	 -- This is the first time instrument was seen on instrumentListSourceType STREAMING.
    FIRST_TRADE_SPOT_FROM_BACKFILL: detachable ANY
      -- This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
    FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL: detachable ANY
      -- This is the first TRADE_SPOT that we have seen on the specific source type in external format.
    FIRST_TRADE_SPOT_FROM_BLOB: detachable ANY
      -- This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
    FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL: detachable ANY
      -- This is the first TRADE_SPOT that we have seen on the specific source type in external format.
    FIRST_TRADE_SPOT_FROM_CALCULATED: detachable ANY
      -- This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
    FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL: detachable ANY
      -- This is the first TRADE_SPOT that we have seen on the specific source type in external format.
    FIRST_TRADE_SPOT_FROM_FIX: detachable ANY
      -- This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
    FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL: detachable ANY
      -- This is the first TRADE_SPOT that we have seen on the specific source type in external format.
    FIRST_TRADE_SPOT_FROM_GO: detachable ANY
      -- This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
    FIRST_TRADE_SPOT_FROM_GO_EXTERNAL: detachable ANY
      -- This is the first TRADE_SPOT that we have seen on the specific source type in external format.
    FIRST_TRADE_SPOT_FROM_POLLING: detachable ANY
      -- This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
    FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL: detachable ANY
      -- This is the first TRADE_SPOT that we have seen on the specific source type in external format.
    FIRST_TRADE_SPOT_FROM_STREAMING: detachable ANY
      -- This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
    FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL: detachable ANY
      -- This is the first TRADE_SPOT that we have seen on the specific source type in external format.
    HOST_MIGRATION_DESTINATION: detachable STRING_32
      -- The migration destination vm hostname.
    HOST_MIGRATION_SOURCE: detachable STRING_32
      -- The migration source vm hostname.
    HOST_MIGRATION_STATUS: detachable STRING_32
      -- The migration status of the symbol, we only poll / stream / connect empty or SETTLED
    INSTRUMENT: detachable STRING_32
      -- The instrument ID as it is on the exchange with small modifications - we do not allow the following characters inside isntrument ids: ,/&?
    INSTRUMENT_EXTERNAL_DATA: detachable STRING_32
      -- The full data we get from the polling endpoint for this specific instrument. This is a JSON stringified object with different properties per exchange.
    INSTRUMENT_MAPPING: detachable ANY
      -- The current mapping information for this instrument
    INSTRUMENT_MAPPING_HISTORY: detachable LIST [STRING_32]
      -- Historical mapping information for this instrument
    INSTRUMENT_SOURCE_BACKFILL: detachable STRING_32
      -- Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
    INSTRUMENT_SOURCE_BLOB: detachable STRING_32
      -- Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
    INSTRUMENT_SOURCE_CALCULATED: detachable STRING_32
      -- Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
    INSTRUMENT_SOURCE_FIX: detachable STRING_32
      -- Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
    INSTRUMENT_SOURCE_GO: detachable STRING_32
      -- Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
    INSTRUMENT_SOURCE_POLLING: detachable STRING_32
      -- Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
    INSTRUMENT_SOURCE_STREAMING: detachable STRING_32
      -- Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
    INSTRUMENT_STATUS: detachable STRING_32
      -- The status of the symbol, we only poll / stream / connect to the ACTIVE ones, for the RETIRED / IGNORED / EXPIRED  one we no longer query for data.
    INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST: detachable ANY
      -- The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
 	INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS: INTEGER_32
    	 -- The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
 	INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS: INTEGER_32
    	 -- The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
 	INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS: INTEGER_32
    	 -- The next time we expect to make a request for TRADE_SPOT on this instrument.
    INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST: detachable ANY
      -- The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
 	INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS: INTEGER_32
    	 -- The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
 	INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS: INTEGER_32
    	 -- The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
 	INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS: INTEGER_32
    	 -- The next time we expect to make a request for TRADE_SPOT on this instrument.
    INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST: detachable ANY
      -- The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
 	INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS: INTEGER_32
    	 -- The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
 	INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS: INTEGER_32
    	 -- The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
 	INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS: INTEGER_32
    	 -- The next time we expect to make a request for TRADE_SPOT on this instrument.
    INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST: detachable ANY
      -- The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
 	INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS: INTEGER_32
    	 -- The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
 	INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS: INTEGER_32
    	 -- The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
 	INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS: INTEGER_32
    	 -- The next time we expect to make a request for TRADE_SPOT on this instrument.
    INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST: detachable ANY
      -- The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
 	INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS: INTEGER_32
    	 -- The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
 	INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS: INTEGER_32
    	 -- The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
 	INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS: INTEGER_32
    	 -- The next time we expect to make a request for TRADE_SPOT on this instrument.
    INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST: detachable ANY
      -- The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
 	INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS: INTEGER_32
    	 -- The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
 	INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS: INTEGER_32
    	 -- The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
 	INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS: INTEGER_32
    	 -- The next time we expect to make a request for TRADE_SPOT on this instrument.
    INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST: detachable ANY
      -- The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
 	INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS: INTEGER_32
    	 -- The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
 	INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS: INTEGER_32
    	 -- The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
 	INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS: INTEGER_32
    	 -- The next time we expect to make a request for TRADE_SPOT on this instrument.
 	INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION: BOOLEAN
    	 -- This flags the exchange instrument as in ready to consume TRADE_SPOT via a streaming integration.
    INSTRUMENT_TRADE_SPOT_REST_URI: detachable STRING_32
      -- This is used to build up the request in some cases, this is where we put the id we use when querying for TRADE_SPOT.
    INSTRUMENT_TRADE_SPOT_REST_URL: detachable STRING_32
      -- The URL we send to the proxy swarm to get TRADE_SPOT for the instrument.
    INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION: detachable STRING_32
      -- This is used to build up the subscription in some cases, this is where we put the id we use when subscribing for TRADE_SPOT on this instrument.
 	LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS: INTEGER_32
    	 -- The timestamp last encountered where the batch of trades from TRADES_SPOT all occured at the same time. This is an issue when making the next request that requires polling by timestamp as a start/from parameter
 	LAST_SEEN_ON_BLOB_TS: INTEGER_32
    	 -- This is the last time instrument was seen on instrumentListSourceType BLOB.
 	LAST_SEEN_ON_FIX_TS: INTEGER_32
    	 -- This is the last time instrument was seen on instrumentListSourceType FIX.
 	LAST_SEEN_ON_HARDCODED_TS: INTEGER_32
    	 -- This is the last time instrument was seen on instrumentListSourceType HARDCODED.
 	LAST_SEEN_ON_INDEX_COMPOSITION_TS: INTEGER_32
    	 -- This is the last time instrument was seen on instrumentListSourceType INDEX_COMPOSITION.
 	LAST_SEEN_ON_NSQ_TS: INTEGER_32
    	 -- This is the last time instrument was seen on instrumentListSourceType NSQ.
 	LAST_SEEN_ON_POLLING_TS: INTEGER_32
    	 -- This is the last time instrument was seen on instrumentListSourceType POLLING.
 	LAST_SEEN_ON_STREAMING_TS: INTEGER_32
    	 -- This is the last time instrument was seen on instrumentListSourceType STREAMING.
    LAST_TRADE_SPOT_FROM_BACKFILL: detachable ANY
      -- This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
    LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL: detachable ANY
      -- This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
    LAST_TRADE_SPOT_FROM_BLOB: detachable ANY
      -- This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
    LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL: detachable ANY
      -- This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
    LAST_TRADE_SPOT_FROM_CALCULATED: detachable ANY
      -- This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
    LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL: detachable ANY
      -- This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
    LAST_TRADE_SPOT_FROM_FIX: detachable ANY
      -- This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
    LAST_TRADE_SPOT_FROM_FIX_EXTERNAL: detachable ANY
      -- This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
    LAST_TRADE_SPOT_FROM_GO: detachable ANY
      -- This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
    LAST_TRADE_SPOT_FROM_GO_EXTERNAL: detachable ANY
      -- This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
    LAST_TRADE_SPOT_FROM_POLLING: detachable ANY
      -- This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
    LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL: detachable ANY
      -- This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
    LAST_TRADE_SPOT_FROM_STREAMING: detachable ANY
      -- This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
    LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL: detachable ANY
      -- This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
 	METADATA_VERSION: INTEGER_32
    	 -- The version of metadata, used for version conversions/migrates.
    PROCESSING_TRADES_FROM_BLOB_STATUS: detachable STRING_32
      -- This states the status of blob migration for this intrument on this exchange.
 	TOTAL_TRADES_SPOT: INTEGER_32
    	 -- This is both the CCSEQ and the total TRADES_SPOT we have processed on this instrument
    UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA: detachable ANY
      -- This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
    UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA: detachable ANY
      -- This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
    UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA: detachable ANY
      -- This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
    UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA: detachable ANY
      -- This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
    UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA: detachable ANY
      -- This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
    UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA: detachable ANY
      -- This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
    UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA: detachable ANY
      -- This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.

feature -- Change Element

    set_FIRST_SEEN_ON_BLOB_TS (a_name: like FIRST_SEEN_ON_BLOB_TS)
        -- Set 'FIRST_SEEN_ON_BLOB_TS' with 'a_name'.
      do
        FIRST_SEEN_ON_BLOB_TS := a_name
      ensure
        FIRST_SEEN_ON_BLOB_TS_set: FIRST_SEEN_ON_BLOB_TS = a_name
      end

    set_FIRST_SEEN_ON_FIX_TS (a_name: like FIRST_SEEN_ON_FIX_TS)
        -- Set 'FIRST_SEEN_ON_FIX_TS' with 'a_name'.
      do
        FIRST_SEEN_ON_FIX_TS := a_name
      ensure
        FIRST_SEEN_ON_FIX_TS_set: FIRST_SEEN_ON_FIX_TS = a_name
      end

    set_FIRST_SEEN_ON_HARDCODED_TS (a_name: like FIRST_SEEN_ON_HARDCODED_TS)
        -- Set 'FIRST_SEEN_ON_HARDCODED_TS' with 'a_name'.
      do
        FIRST_SEEN_ON_HARDCODED_TS := a_name
      ensure
        FIRST_SEEN_ON_HARDCODED_TS_set: FIRST_SEEN_ON_HARDCODED_TS = a_name
      end

    set_FIRST_SEEN_ON_INDEX_COMPOSITION_TS (a_name: like FIRST_SEEN_ON_INDEX_COMPOSITION_TS)
        -- Set 'FIRST_SEEN_ON_INDEX_COMPOSITION_TS' with 'a_name'.
      do
        FIRST_SEEN_ON_INDEX_COMPOSITION_TS := a_name
      ensure
        FIRST_SEEN_ON_INDEX_COMPOSITION_TS_set: FIRST_SEEN_ON_INDEX_COMPOSITION_TS = a_name
      end

    set_FIRST_SEEN_ON_NSQ_TS (a_name: like FIRST_SEEN_ON_NSQ_TS)
        -- Set 'FIRST_SEEN_ON_NSQ_TS' with 'a_name'.
      do
        FIRST_SEEN_ON_NSQ_TS := a_name
      ensure
        FIRST_SEEN_ON_NSQ_TS_set: FIRST_SEEN_ON_NSQ_TS = a_name
      end

    set_FIRST_SEEN_ON_POLLING_TS (a_name: like FIRST_SEEN_ON_POLLING_TS)
        -- Set 'FIRST_SEEN_ON_POLLING_TS' with 'a_name'.
      do
        FIRST_SEEN_ON_POLLING_TS := a_name
      ensure
        FIRST_SEEN_ON_POLLING_TS_set: FIRST_SEEN_ON_POLLING_TS = a_name
      end

    set_FIRST_SEEN_ON_STREAMING_TS (a_name: like FIRST_SEEN_ON_STREAMING_TS)
        -- Set 'FIRST_SEEN_ON_STREAMING_TS' with 'a_name'.
      do
        FIRST_SEEN_ON_STREAMING_TS := a_name
      ensure
        FIRST_SEEN_ON_STREAMING_TS_set: FIRST_SEEN_ON_STREAMING_TS = a_name
      end

    set_FIRST_TRADE_SPOT_FROM_BACKFILL (a_name: like FIRST_TRADE_SPOT_FROM_BACKFILL)
        -- Set 'FIRST_TRADE_SPOT_FROM_BACKFILL' with 'a_name'.
      do
        FIRST_TRADE_SPOT_FROM_BACKFILL := a_name
      ensure
        FIRST_TRADE_SPOT_FROM_BACKFILL_set: FIRST_TRADE_SPOT_FROM_BACKFILL = a_name
      end

    set_FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL (a_name: like FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL)
        -- Set 'FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL' with 'a_name'.
      do
        FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL := a_name
      ensure
        FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL_set: FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL = a_name
      end

    set_FIRST_TRADE_SPOT_FROM_BLOB (a_name: like FIRST_TRADE_SPOT_FROM_BLOB)
        -- Set 'FIRST_TRADE_SPOT_FROM_BLOB' with 'a_name'.
      do
        FIRST_TRADE_SPOT_FROM_BLOB := a_name
      ensure
        FIRST_TRADE_SPOT_FROM_BLOB_set: FIRST_TRADE_SPOT_FROM_BLOB = a_name
      end

    set_FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL (a_name: like FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL)
        -- Set 'FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL' with 'a_name'.
      do
        FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL := a_name
      ensure
        FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL_set: FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL = a_name
      end

    set_FIRST_TRADE_SPOT_FROM_CALCULATED (a_name: like FIRST_TRADE_SPOT_FROM_CALCULATED)
        -- Set 'FIRST_TRADE_SPOT_FROM_CALCULATED' with 'a_name'.
      do
        FIRST_TRADE_SPOT_FROM_CALCULATED := a_name
      ensure
        FIRST_TRADE_SPOT_FROM_CALCULATED_set: FIRST_TRADE_SPOT_FROM_CALCULATED = a_name
      end

    set_FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL (a_name: like FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL)
        -- Set 'FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL' with 'a_name'.
      do
        FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL := a_name
      ensure
        FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL_set: FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL = a_name
      end

    set_FIRST_TRADE_SPOT_FROM_FIX (a_name: like FIRST_TRADE_SPOT_FROM_FIX)
        -- Set 'FIRST_TRADE_SPOT_FROM_FIX' with 'a_name'.
      do
        FIRST_TRADE_SPOT_FROM_FIX := a_name
      ensure
        FIRST_TRADE_SPOT_FROM_FIX_set: FIRST_TRADE_SPOT_FROM_FIX = a_name
      end

    set_FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL (a_name: like FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL)
        -- Set 'FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL' with 'a_name'.
      do
        FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL := a_name
      ensure
        FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL_set: FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL = a_name
      end

    set_FIRST_TRADE_SPOT_FROM_GO (a_name: like FIRST_TRADE_SPOT_FROM_GO)
        -- Set 'FIRST_TRADE_SPOT_FROM_GO' with 'a_name'.
      do
        FIRST_TRADE_SPOT_FROM_GO := a_name
      ensure
        FIRST_TRADE_SPOT_FROM_GO_set: FIRST_TRADE_SPOT_FROM_GO = a_name
      end

    set_FIRST_TRADE_SPOT_FROM_GO_EXTERNAL (a_name: like FIRST_TRADE_SPOT_FROM_GO_EXTERNAL)
        -- Set 'FIRST_TRADE_SPOT_FROM_GO_EXTERNAL' with 'a_name'.
      do
        FIRST_TRADE_SPOT_FROM_GO_EXTERNAL := a_name
      ensure
        FIRST_TRADE_SPOT_FROM_GO_EXTERNAL_set: FIRST_TRADE_SPOT_FROM_GO_EXTERNAL = a_name
      end

    set_FIRST_TRADE_SPOT_FROM_POLLING (a_name: like FIRST_TRADE_SPOT_FROM_POLLING)
        -- Set 'FIRST_TRADE_SPOT_FROM_POLLING' with 'a_name'.
      do
        FIRST_TRADE_SPOT_FROM_POLLING := a_name
      ensure
        FIRST_TRADE_SPOT_FROM_POLLING_set: FIRST_TRADE_SPOT_FROM_POLLING = a_name
      end

    set_FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL (a_name: like FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL)
        -- Set 'FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL' with 'a_name'.
      do
        FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL := a_name
      ensure
        FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL_set: FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL = a_name
      end

    set_FIRST_TRADE_SPOT_FROM_STREAMING (a_name: like FIRST_TRADE_SPOT_FROM_STREAMING)
        -- Set 'FIRST_TRADE_SPOT_FROM_STREAMING' with 'a_name'.
      do
        FIRST_TRADE_SPOT_FROM_STREAMING := a_name
      ensure
        FIRST_TRADE_SPOT_FROM_STREAMING_set: FIRST_TRADE_SPOT_FROM_STREAMING = a_name
      end

    set_FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL (a_name: like FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL)
        -- Set 'FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL' with 'a_name'.
      do
        FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL := a_name
      ensure
        FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL_set: FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL = a_name
      end

    set_HOST_MIGRATION_DESTINATION (a_name: like HOST_MIGRATION_DESTINATION)
        -- Set 'HOST_MIGRATION_DESTINATION' with 'a_name'.
      do
        HOST_MIGRATION_DESTINATION := a_name
      ensure
        HOST_MIGRATION_DESTINATION_set: HOST_MIGRATION_DESTINATION = a_name
      end

    set_HOST_MIGRATION_SOURCE (a_name: like HOST_MIGRATION_SOURCE)
        -- Set 'HOST_MIGRATION_SOURCE' with 'a_name'.
      do
        HOST_MIGRATION_SOURCE := a_name
      ensure
        HOST_MIGRATION_SOURCE_set: HOST_MIGRATION_SOURCE = a_name
      end

    set_HOST_MIGRATION_STATUS (a_name: like HOST_MIGRATION_STATUS)
        -- Set 'HOST_MIGRATION_STATUS' with 'a_name'.
      do
        HOST_MIGRATION_STATUS := a_name
      ensure
        HOST_MIGRATION_STATUS_set: HOST_MIGRATION_STATUS = a_name
      end

    set_INSTRUMENT (a_name: like INSTRUMENT)
        -- Set 'INSTRUMENT' with 'a_name'.
      do
        INSTRUMENT := a_name
      ensure
        INSTRUMENT_set: INSTRUMENT = a_name
      end

    set_INSTRUMENT_EXTERNAL_DATA (a_name: like INSTRUMENT_EXTERNAL_DATA)
        -- Set 'INSTRUMENT_EXTERNAL_DATA' with 'a_name'.
      do
        INSTRUMENT_EXTERNAL_DATA := a_name
      ensure
        INSTRUMENT_EXTERNAL_DATA_set: INSTRUMENT_EXTERNAL_DATA = a_name
      end

    set_INSTRUMENT_MAPPING (a_name: like INSTRUMENT_MAPPING)
        -- Set 'INSTRUMENT_MAPPING' with 'a_name'.
      do
        INSTRUMENT_MAPPING := a_name
      ensure
        INSTRUMENT_MAPPING_set: INSTRUMENT_MAPPING = a_name
      end

    set_INSTRUMENT_MAPPING_HISTORY (a_name: like INSTRUMENT_MAPPING_HISTORY)
        -- Set 'INSTRUMENT_MAPPING_HISTORY' with 'a_name'.
      do
        INSTRUMENT_MAPPING_HISTORY := a_name
      ensure
        INSTRUMENT_MAPPING_HISTORY_set: INSTRUMENT_MAPPING_HISTORY = a_name
      end

    set_INSTRUMENT_SOURCE_BACKFILL (a_name: like INSTRUMENT_SOURCE_BACKFILL)
        -- Set 'INSTRUMENT_SOURCE_BACKFILL' with 'a_name'.
      do
        INSTRUMENT_SOURCE_BACKFILL := a_name
      ensure
        INSTRUMENT_SOURCE_BACKFILL_set: INSTRUMENT_SOURCE_BACKFILL = a_name
      end

    set_INSTRUMENT_SOURCE_BLOB (a_name: like INSTRUMENT_SOURCE_BLOB)
        -- Set 'INSTRUMENT_SOURCE_BLOB' with 'a_name'.
      do
        INSTRUMENT_SOURCE_BLOB := a_name
      ensure
        INSTRUMENT_SOURCE_BLOB_set: INSTRUMENT_SOURCE_BLOB = a_name
      end

    set_INSTRUMENT_SOURCE_CALCULATED (a_name: like INSTRUMENT_SOURCE_CALCULATED)
        -- Set 'INSTRUMENT_SOURCE_CALCULATED' with 'a_name'.
      do
        INSTRUMENT_SOURCE_CALCULATED := a_name
      ensure
        INSTRUMENT_SOURCE_CALCULATED_set: INSTRUMENT_SOURCE_CALCULATED = a_name
      end

    set_INSTRUMENT_SOURCE_FIX (a_name: like INSTRUMENT_SOURCE_FIX)
        -- Set 'INSTRUMENT_SOURCE_FIX' with 'a_name'.
      do
        INSTRUMENT_SOURCE_FIX := a_name
      ensure
        INSTRUMENT_SOURCE_FIX_set: INSTRUMENT_SOURCE_FIX = a_name
      end

    set_INSTRUMENT_SOURCE_GO (a_name: like INSTRUMENT_SOURCE_GO)
        -- Set 'INSTRUMENT_SOURCE_GO' with 'a_name'.
      do
        INSTRUMENT_SOURCE_GO := a_name
      ensure
        INSTRUMENT_SOURCE_GO_set: INSTRUMENT_SOURCE_GO = a_name
      end

    set_INSTRUMENT_SOURCE_POLLING (a_name: like INSTRUMENT_SOURCE_POLLING)
        -- Set 'INSTRUMENT_SOURCE_POLLING' with 'a_name'.
      do
        INSTRUMENT_SOURCE_POLLING := a_name
      ensure
        INSTRUMENT_SOURCE_POLLING_set: INSTRUMENT_SOURCE_POLLING = a_name
      end

    set_INSTRUMENT_SOURCE_STREAMING (a_name: like INSTRUMENT_SOURCE_STREAMING)
        -- Set 'INSTRUMENT_SOURCE_STREAMING' with 'a_name'.
      do
        INSTRUMENT_SOURCE_STREAMING := a_name
      ensure
        INSTRUMENT_SOURCE_STREAMING_set: INSTRUMENT_SOURCE_STREAMING = a_name
      end

    set_INSTRUMENT_STATUS (a_name: like INSTRUMENT_STATUS)
        -- Set 'INSTRUMENT_STATUS' with 'a_name'.
      do
        INSTRUMENT_STATUS := a_name
      ensure
        INSTRUMENT_STATUS_set: INSTRUMENT_STATUS = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST (a_name: like INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST_set: INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS (a_name: like INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS_set: INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS (a_name: like INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS_set: INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS (a_name: like INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS_set: INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST (a_name: like INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST_set: INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS (a_name: like INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS_set: INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS (a_name: like INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS_set: INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS (a_name: like INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS_set: INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST (a_name: like INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST_set: INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS (a_name: like INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS_set: INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS (a_name: like INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS_set: INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS (a_name: like INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS_set: INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST (a_name: like INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST_set: INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS (a_name: like INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS_set: INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS (a_name: like INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS_set: INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS (a_name: like INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS_set: INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST (a_name: like INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST_set: INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS (a_name: like INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS_set: INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS (a_name: like INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS_set: INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS (a_name: like INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS_set: INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST (a_name: like INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST_set: INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS (a_name: like INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS_set: INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS (a_name: like INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS_set: INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS (a_name: like INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS_set: INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST (a_name: like INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST_set: INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS (a_name: like INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS_set: INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS (a_name: like INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS_set: INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS (a_name: like INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS)
        -- Set 'INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS_set: INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION (a_name: like INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION)
        -- Set 'INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION_set: INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_REST_URI (a_name: like INSTRUMENT_TRADE_SPOT_REST_URI)
        -- Set 'INSTRUMENT_TRADE_SPOT_REST_URI' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_REST_URI := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_REST_URI_set: INSTRUMENT_TRADE_SPOT_REST_URI = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_REST_URL (a_name: like INSTRUMENT_TRADE_SPOT_REST_URL)
        -- Set 'INSTRUMENT_TRADE_SPOT_REST_URL' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_REST_URL := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_REST_URL_set: INSTRUMENT_TRADE_SPOT_REST_URL = a_name
      end

    set_INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION (a_name: like INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION)
        -- Set 'INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION' with 'a_name'.
      do
        INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION := a_name
      ensure
        INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION_set: INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION = a_name
      end

    set_LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS (a_name: like LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS)
        -- Set 'LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS' with 'a_name'.
      do
        LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS := a_name
      ensure
        LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS_set: LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS = a_name
      end

    set_LAST_SEEN_ON_BLOB_TS (a_name: like LAST_SEEN_ON_BLOB_TS)
        -- Set 'LAST_SEEN_ON_BLOB_TS' with 'a_name'.
      do
        LAST_SEEN_ON_BLOB_TS := a_name
      ensure
        LAST_SEEN_ON_BLOB_TS_set: LAST_SEEN_ON_BLOB_TS = a_name
      end

    set_LAST_SEEN_ON_FIX_TS (a_name: like LAST_SEEN_ON_FIX_TS)
        -- Set 'LAST_SEEN_ON_FIX_TS' with 'a_name'.
      do
        LAST_SEEN_ON_FIX_TS := a_name
      ensure
        LAST_SEEN_ON_FIX_TS_set: LAST_SEEN_ON_FIX_TS = a_name
      end

    set_LAST_SEEN_ON_HARDCODED_TS (a_name: like LAST_SEEN_ON_HARDCODED_TS)
        -- Set 'LAST_SEEN_ON_HARDCODED_TS' with 'a_name'.
      do
        LAST_SEEN_ON_HARDCODED_TS := a_name
      ensure
        LAST_SEEN_ON_HARDCODED_TS_set: LAST_SEEN_ON_HARDCODED_TS = a_name
      end

    set_LAST_SEEN_ON_INDEX_COMPOSITION_TS (a_name: like LAST_SEEN_ON_INDEX_COMPOSITION_TS)
        -- Set 'LAST_SEEN_ON_INDEX_COMPOSITION_TS' with 'a_name'.
      do
        LAST_SEEN_ON_INDEX_COMPOSITION_TS := a_name
      ensure
        LAST_SEEN_ON_INDEX_COMPOSITION_TS_set: LAST_SEEN_ON_INDEX_COMPOSITION_TS = a_name
      end

    set_LAST_SEEN_ON_NSQ_TS (a_name: like LAST_SEEN_ON_NSQ_TS)
        -- Set 'LAST_SEEN_ON_NSQ_TS' with 'a_name'.
      do
        LAST_SEEN_ON_NSQ_TS := a_name
      ensure
        LAST_SEEN_ON_NSQ_TS_set: LAST_SEEN_ON_NSQ_TS = a_name
      end

    set_LAST_SEEN_ON_POLLING_TS (a_name: like LAST_SEEN_ON_POLLING_TS)
        -- Set 'LAST_SEEN_ON_POLLING_TS' with 'a_name'.
      do
        LAST_SEEN_ON_POLLING_TS := a_name
      ensure
        LAST_SEEN_ON_POLLING_TS_set: LAST_SEEN_ON_POLLING_TS = a_name
      end

    set_LAST_SEEN_ON_STREAMING_TS (a_name: like LAST_SEEN_ON_STREAMING_TS)
        -- Set 'LAST_SEEN_ON_STREAMING_TS' with 'a_name'.
      do
        LAST_SEEN_ON_STREAMING_TS := a_name
      ensure
        LAST_SEEN_ON_STREAMING_TS_set: LAST_SEEN_ON_STREAMING_TS = a_name
      end

    set_LAST_TRADE_SPOT_FROM_BACKFILL (a_name: like LAST_TRADE_SPOT_FROM_BACKFILL)
        -- Set 'LAST_TRADE_SPOT_FROM_BACKFILL' with 'a_name'.
      do
        LAST_TRADE_SPOT_FROM_BACKFILL := a_name
      ensure
        LAST_TRADE_SPOT_FROM_BACKFILL_set: LAST_TRADE_SPOT_FROM_BACKFILL = a_name
      end

    set_LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL (a_name: like LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL)
        -- Set 'LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL' with 'a_name'.
      do
        LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL := a_name
      ensure
        LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL_set: LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL = a_name
      end

    set_LAST_TRADE_SPOT_FROM_BLOB (a_name: like LAST_TRADE_SPOT_FROM_BLOB)
        -- Set 'LAST_TRADE_SPOT_FROM_BLOB' with 'a_name'.
      do
        LAST_TRADE_SPOT_FROM_BLOB := a_name
      ensure
        LAST_TRADE_SPOT_FROM_BLOB_set: LAST_TRADE_SPOT_FROM_BLOB = a_name
      end

    set_LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL (a_name: like LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL)
        -- Set 'LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL' with 'a_name'.
      do
        LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL := a_name
      ensure
        LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL_set: LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL = a_name
      end

    set_LAST_TRADE_SPOT_FROM_CALCULATED (a_name: like LAST_TRADE_SPOT_FROM_CALCULATED)
        -- Set 'LAST_TRADE_SPOT_FROM_CALCULATED' with 'a_name'.
      do
        LAST_TRADE_SPOT_FROM_CALCULATED := a_name
      ensure
        LAST_TRADE_SPOT_FROM_CALCULATED_set: LAST_TRADE_SPOT_FROM_CALCULATED = a_name
      end

    set_LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL (a_name: like LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL)
        -- Set 'LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL' with 'a_name'.
      do
        LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL := a_name
      ensure
        LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL_set: LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL = a_name
      end

    set_LAST_TRADE_SPOT_FROM_FIX (a_name: like LAST_TRADE_SPOT_FROM_FIX)
        -- Set 'LAST_TRADE_SPOT_FROM_FIX' with 'a_name'.
      do
        LAST_TRADE_SPOT_FROM_FIX := a_name
      ensure
        LAST_TRADE_SPOT_FROM_FIX_set: LAST_TRADE_SPOT_FROM_FIX = a_name
      end

    set_LAST_TRADE_SPOT_FROM_FIX_EXTERNAL (a_name: like LAST_TRADE_SPOT_FROM_FIX_EXTERNAL)
        -- Set 'LAST_TRADE_SPOT_FROM_FIX_EXTERNAL' with 'a_name'.
      do
        LAST_TRADE_SPOT_FROM_FIX_EXTERNAL := a_name
      ensure
        LAST_TRADE_SPOT_FROM_FIX_EXTERNAL_set: LAST_TRADE_SPOT_FROM_FIX_EXTERNAL = a_name
      end

    set_LAST_TRADE_SPOT_FROM_GO (a_name: like LAST_TRADE_SPOT_FROM_GO)
        -- Set 'LAST_TRADE_SPOT_FROM_GO' with 'a_name'.
      do
        LAST_TRADE_SPOT_FROM_GO := a_name
      ensure
        LAST_TRADE_SPOT_FROM_GO_set: LAST_TRADE_SPOT_FROM_GO = a_name
      end

    set_LAST_TRADE_SPOT_FROM_GO_EXTERNAL (a_name: like LAST_TRADE_SPOT_FROM_GO_EXTERNAL)
        -- Set 'LAST_TRADE_SPOT_FROM_GO_EXTERNAL' with 'a_name'.
      do
        LAST_TRADE_SPOT_FROM_GO_EXTERNAL := a_name
      ensure
        LAST_TRADE_SPOT_FROM_GO_EXTERNAL_set: LAST_TRADE_SPOT_FROM_GO_EXTERNAL = a_name
      end

    set_LAST_TRADE_SPOT_FROM_POLLING (a_name: like LAST_TRADE_SPOT_FROM_POLLING)
        -- Set 'LAST_TRADE_SPOT_FROM_POLLING' with 'a_name'.
      do
        LAST_TRADE_SPOT_FROM_POLLING := a_name
      ensure
        LAST_TRADE_SPOT_FROM_POLLING_set: LAST_TRADE_SPOT_FROM_POLLING = a_name
      end

    set_LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL (a_name: like LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL)
        -- Set 'LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL' with 'a_name'.
      do
        LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL := a_name
      ensure
        LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL_set: LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL = a_name
      end

    set_LAST_TRADE_SPOT_FROM_STREAMING (a_name: like LAST_TRADE_SPOT_FROM_STREAMING)
        -- Set 'LAST_TRADE_SPOT_FROM_STREAMING' with 'a_name'.
      do
        LAST_TRADE_SPOT_FROM_STREAMING := a_name
      ensure
        LAST_TRADE_SPOT_FROM_STREAMING_set: LAST_TRADE_SPOT_FROM_STREAMING = a_name
      end

    set_LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL (a_name: like LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL)
        -- Set 'LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL' with 'a_name'.
      do
        LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL := a_name
      ensure
        LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL_set: LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL = a_name
      end

    set_METADATA_VERSION (a_name: like METADATA_VERSION)
        -- Set 'METADATA_VERSION' with 'a_name'.
      do
        METADATA_VERSION := a_name
      ensure
        METADATA_VERSION_set: METADATA_VERSION = a_name
      end

    set_PROCESSING_TRADES_FROM_BLOB_STATUS (a_name: like PROCESSING_TRADES_FROM_BLOB_STATUS)
        -- Set 'PROCESSING_TRADES_FROM_BLOB_STATUS' with 'a_name'.
      do
        PROCESSING_TRADES_FROM_BLOB_STATUS := a_name
      ensure
        PROCESSING_TRADES_FROM_BLOB_STATUS_set: PROCESSING_TRADES_FROM_BLOB_STATUS = a_name
      end

    set_TOTAL_TRADES_SPOT (a_name: like TOTAL_TRADES_SPOT)
        -- Set 'TOTAL_TRADES_SPOT' with 'a_name'.
      do
        TOTAL_TRADES_SPOT := a_name
      ensure
        TOTAL_TRADES_SPOT_set: TOTAL_TRADES_SPOT = a_name
      end

    set_UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA (a_name: like UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA)
        -- Set 'UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA' with 'a_name'.
      do
        UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA := a_name
      ensure
        UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA_set: UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA = a_name
      end

    set_UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA (a_name: like UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA)
        -- Set 'UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA' with 'a_name'.
      do
        UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA := a_name
      ensure
        UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA_set: UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA = a_name
      end

    set_UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA (a_name: like UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA)
        -- Set 'UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA' with 'a_name'.
      do
        UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA := a_name
      ensure
        UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA_set: UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA = a_name
      end

    set_UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA (a_name: like UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA)
        -- Set 'UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA' with 'a_name'.
      do
        UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA := a_name
      ensure
        UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA_set: UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA = a_name
      end

    set_UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA (a_name: like UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA)
        -- Set 'UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA' with 'a_name'.
      do
        UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA := a_name
      ensure
        UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA_set: UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA = a_name
      end

    set_UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA (a_name: like UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA)
        -- Set 'UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA' with 'a_name'.
      do
        UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA := a_name
      ensure
        UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA_set: UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA = a_name
      end

    set_UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA (a_name: like UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA)
        -- Set 'UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA' with 'a_name'.
      do
        UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA := a_name
      ensure
        UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA_set: UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA = a_name
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass SPOT_INSTRUMENT_METADATA%N")
        if attached FIRST_SEEN_ON_BLOB_TS as l_FIRST_SEEN_ON_BLOB_TS then
          Result.append ("%NFIRST_SEEN_ON_BLOB_TS:")
          Result.append (l_FIRST_SEEN_ON_BLOB_TS.out)
          Result.append ("%N")
        end
        if attached FIRST_SEEN_ON_FIX_TS as l_FIRST_SEEN_ON_FIX_TS then
          Result.append ("%NFIRST_SEEN_ON_FIX_TS:")
          Result.append (l_FIRST_SEEN_ON_FIX_TS.out)
          Result.append ("%N")
        end
        if attached FIRST_SEEN_ON_HARDCODED_TS as l_FIRST_SEEN_ON_HARDCODED_TS then
          Result.append ("%NFIRST_SEEN_ON_HARDCODED_TS:")
          Result.append (l_FIRST_SEEN_ON_HARDCODED_TS.out)
          Result.append ("%N")
        end
        if attached FIRST_SEEN_ON_INDEX_COMPOSITION_TS as l_FIRST_SEEN_ON_INDEX_COMPOSITION_TS then
          Result.append ("%NFIRST_SEEN_ON_INDEX_COMPOSITION_TS:")
          Result.append (l_FIRST_SEEN_ON_INDEX_COMPOSITION_TS.out)
          Result.append ("%N")
        end
        if attached FIRST_SEEN_ON_NSQ_TS as l_FIRST_SEEN_ON_NSQ_TS then
          Result.append ("%NFIRST_SEEN_ON_NSQ_TS:")
          Result.append (l_FIRST_SEEN_ON_NSQ_TS.out)
          Result.append ("%N")
        end
        if attached FIRST_SEEN_ON_POLLING_TS as l_FIRST_SEEN_ON_POLLING_TS then
          Result.append ("%NFIRST_SEEN_ON_POLLING_TS:")
          Result.append (l_FIRST_SEEN_ON_POLLING_TS.out)
          Result.append ("%N")
        end
        if attached FIRST_SEEN_ON_STREAMING_TS as l_FIRST_SEEN_ON_STREAMING_TS then
          Result.append ("%NFIRST_SEEN_ON_STREAMING_TS:")
          Result.append (l_FIRST_SEEN_ON_STREAMING_TS.out)
          Result.append ("%N")
        end
        if attached FIRST_TRADE_SPOT_FROM_BACKFILL as l_FIRST_TRADE_SPOT_FROM_BACKFILL then
          Result.append ("%NFIRST_TRADE_SPOT_FROM_BACKFILL:")
          Result.append (l_FIRST_TRADE_SPOT_FROM_BACKFILL.out)
          Result.append ("%N")
        end
        if attached FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL as l_FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL then
          Result.append ("%NFIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL:")
          Result.append (l_FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL.out)
          Result.append ("%N")
        end
        if attached FIRST_TRADE_SPOT_FROM_BLOB as l_FIRST_TRADE_SPOT_FROM_BLOB then
          Result.append ("%NFIRST_TRADE_SPOT_FROM_BLOB:")
          Result.append (l_FIRST_TRADE_SPOT_FROM_BLOB.out)
          Result.append ("%N")
        end
        if attached FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL as l_FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL then
          Result.append ("%NFIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL:")
          Result.append (l_FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL.out)
          Result.append ("%N")
        end
        if attached FIRST_TRADE_SPOT_FROM_CALCULATED as l_FIRST_TRADE_SPOT_FROM_CALCULATED then
          Result.append ("%NFIRST_TRADE_SPOT_FROM_CALCULATED:")
          Result.append (l_FIRST_TRADE_SPOT_FROM_CALCULATED.out)
          Result.append ("%N")
        end
        if attached FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL as l_FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL then
          Result.append ("%NFIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL:")
          Result.append (l_FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL.out)
          Result.append ("%N")
        end
        if attached FIRST_TRADE_SPOT_FROM_FIX as l_FIRST_TRADE_SPOT_FROM_FIX then
          Result.append ("%NFIRST_TRADE_SPOT_FROM_FIX:")
          Result.append (l_FIRST_TRADE_SPOT_FROM_FIX.out)
          Result.append ("%N")
        end
        if attached FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL as l_FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL then
          Result.append ("%NFIRST_TRADE_SPOT_FROM_FIX_EXTERNAL:")
          Result.append (l_FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL.out)
          Result.append ("%N")
        end
        if attached FIRST_TRADE_SPOT_FROM_GO as l_FIRST_TRADE_SPOT_FROM_GO then
          Result.append ("%NFIRST_TRADE_SPOT_FROM_GO:")
          Result.append (l_FIRST_TRADE_SPOT_FROM_GO.out)
          Result.append ("%N")
        end
        if attached FIRST_TRADE_SPOT_FROM_GO_EXTERNAL as l_FIRST_TRADE_SPOT_FROM_GO_EXTERNAL then
          Result.append ("%NFIRST_TRADE_SPOT_FROM_GO_EXTERNAL:")
          Result.append (l_FIRST_TRADE_SPOT_FROM_GO_EXTERNAL.out)
          Result.append ("%N")
        end
        if attached FIRST_TRADE_SPOT_FROM_POLLING as l_FIRST_TRADE_SPOT_FROM_POLLING then
          Result.append ("%NFIRST_TRADE_SPOT_FROM_POLLING:")
          Result.append (l_FIRST_TRADE_SPOT_FROM_POLLING.out)
          Result.append ("%N")
        end
        if attached FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL as l_FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL then
          Result.append ("%NFIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL:")
          Result.append (l_FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL.out)
          Result.append ("%N")
        end
        if attached FIRST_TRADE_SPOT_FROM_STREAMING as l_FIRST_TRADE_SPOT_FROM_STREAMING then
          Result.append ("%NFIRST_TRADE_SPOT_FROM_STREAMING:")
          Result.append (l_FIRST_TRADE_SPOT_FROM_STREAMING.out)
          Result.append ("%N")
        end
        if attached FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL as l_FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL then
          Result.append ("%NFIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL:")
          Result.append (l_FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL.out)
          Result.append ("%N")
        end
        if attached HOST_MIGRATION_DESTINATION as l_HOST_MIGRATION_DESTINATION then
          Result.append ("%NHOST_MIGRATION_DESTINATION:")
          Result.append (l_HOST_MIGRATION_DESTINATION.out)
          Result.append ("%N")
        end
        if attached HOST_MIGRATION_SOURCE as l_HOST_MIGRATION_SOURCE then
          Result.append ("%NHOST_MIGRATION_SOURCE:")
          Result.append (l_HOST_MIGRATION_SOURCE.out)
          Result.append ("%N")
        end
        if attached HOST_MIGRATION_STATUS as l_HOST_MIGRATION_STATUS then
          Result.append ("%NHOST_MIGRATION_STATUS:")
          Result.append (l_HOST_MIGRATION_STATUS.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT as l_INSTRUMENT then
          Result.append ("%NINSTRUMENT:")
          Result.append (l_INSTRUMENT.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_EXTERNAL_DATA as l_INSTRUMENT_EXTERNAL_DATA then
          Result.append ("%NINSTRUMENT_EXTERNAL_DATA:")
          Result.append (l_INSTRUMENT_EXTERNAL_DATA.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_MAPPING as l_INSTRUMENT_MAPPING then
          Result.append ("%NINSTRUMENT_MAPPING:")
          Result.append (l_INSTRUMENT_MAPPING.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_MAPPING_HISTORY as l_INSTRUMENT_MAPPING_HISTORY then
          across l_INSTRUMENT_MAPPING_HISTORY as ic loop
            Result.append ("%N INSTRUMENT_MAPPING_HISTORY:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end
        if attached INSTRUMENT_SOURCE_BACKFILL as l_INSTRUMENT_SOURCE_BACKFILL then
          Result.append ("%NINSTRUMENT_SOURCE_BACKFILL:")
          Result.append (l_INSTRUMENT_SOURCE_BACKFILL.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_SOURCE_BLOB as l_INSTRUMENT_SOURCE_BLOB then
          Result.append ("%NINSTRUMENT_SOURCE_BLOB:")
          Result.append (l_INSTRUMENT_SOURCE_BLOB.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_SOURCE_CALCULATED as l_INSTRUMENT_SOURCE_CALCULATED then
          Result.append ("%NINSTRUMENT_SOURCE_CALCULATED:")
          Result.append (l_INSTRUMENT_SOURCE_CALCULATED.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_SOURCE_FIX as l_INSTRUMENT_SOURCE_FIX then
          Result.append ("%NINSTRUMENT_SOURCE_FIX:")
          Result.append (l_INSTRUMENT_SOURCE_FIX.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_SOURCE_GO as l_INSTRUMENT_SOURCE_GO then
          Result.append ("%NINSTRUMENT_SOURCE_GO:")
          Result.append (l_INSTRUMENT_SOURCE_GO.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_SOURCE_POLLING as l_INSTRUMENT_SOURCE_POLLING then
          Result.append ("%NINSTRUMENT_SOURCE_POLLING:")
          Result.append (l_INSTRUMENT_SOURCE_POLLING.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_SOURCE_STREAMING as l_INSTRUMENT_SOURCE_STREAMING then
          Result.append ("%NINSTRUMENT_SOURCE_STREAMING:")
          Result.append (l_INSTRUMENT_SOURCE_STREAMING.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_STATUS as l_INSTRUMENT_STATUS then
          Result.append ("%NINSTRUMENT_STATUS:")
          Result.append (l_INSTRUMENT_STATUS.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST as l_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS as l_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS as l_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS as l_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST as l_INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS as l_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS as l_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS as l_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST as l_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS as l_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS as l_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS as l_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST as l_INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS as l_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS as l_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS as l_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST as l_INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS as l_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS as l_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS as l_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST as l_INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS as l_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS as l_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS as l_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST as l_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS as l_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS as l_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS as l_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION as l_INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_REST_URI as l_INSTRUMENT_TRADE_SPOT_REST_URI then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_REST_URI:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_REST_URI.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_REST_URL as l_INSTRUMENT_TRADE_SPOT_REST_URL then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_REST_URL:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_REST_URL.out)
          Result.append ("%N")
        end
        if attached INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION as l_INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION then
          Result.append ("%NINSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION:")
          Result.append (l_INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION.out)
          Result.append ("%N")
        end
        if attached LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS as l_LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS then
          Result.append ("%NLAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS:")
          Result.append (l_LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS.out)
          Result.append ("%N")
        end
        if attached LAST_SEEN_ON_BLOB_TS as l_LAST_SEEN_ON_BLOB_TS then
          Result.append ("%NLAST_SEEN_ON_BLOB_TS:")
          Result.append (l_LAST_SEEN_ON_BLOB_TS.out)
          Result.append ("%N")
        end
        if attached LAST_SEEN_ON_FIX_TS as l_LAST_SEEN_ON_FIX_TS then
          Result.append ("%NLAST_SEEN_ON_FIX_TS:")
          Result.append (l_LAST_SEEN_ON_FIX_TS.out)
          Result.append ("%N")
        end
        if attached LAST_SEEN_ON_HARDCODED_TS as l_LAST_SEEN_ON_HARDCODED_TS then
          Result.append ("%NLAST_SEEN_ON_HARDCODED_TS:")
          Result.append (l_LAST_SEEN_ON_HARDCODED_TS.out)
          Result.append ("%N")
        end
        if attached LAST_SEEN_ON_INDEX_COMPOSITION_TS as l_LAST_SEEN_ON_INDEX_COMPOSITION_TS then
          Result.append ("%NLAST_SEEN_ON_INDEX_COMPOSITION_TS:")
          Result.append (l_LAST_SEEN_ON_INDEX_COMPOSITION_TS.out)
          Result.append ("%N")
        end
        if attached LAST_SEEN_ON_NSQ_TS as l_LAST_SEEN_ON_NSQ_TS then
          Result.append ("%NLAST_SEEN_ON_NSQ_TS:")
          Result.append (l_LAST_SEEN_ON_NSQ_TS.out)
          Result.append ("%N")
        end
        if attached LAST_SEEN_ON_POLLING_TS as l_LAST_SEEN_ON_POLLING_TS then
          Result.append ("%NLAST_SEEN_ON_POLLING_TS:")
          Result.append (l_LAST_SEEN_ON_POLLING_TS.out)
          Result.append ("%N")
        end
        if attached LAST_SEEN_ON_STREAMING_TS as l_LAST_SEEN_ON_STREAMING_TS then
          Result.append ("%NLAST_SEEN_ON_STREAMING_TS:")
          Result.append (l_LAST_SEEN_ON_STREAMING_TS.out)
          Result.append ("%N")
        end
        if attached LAST_TRADE_SPOT_FROM_BACKFILL as l_LAST_TRADE_SPOT_FROM_BACKFILL then
          Result.append ("%NLAST_TRADE_SPOT_FROM_BACKFILL:")
          Result.append (l_LAST_TRADE_SPOT_FROM_BACKFILL.out)
          Result.append ("%N")
        end
        if attached LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL as l_LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL then
          Result.append ("%NLAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL:")
          Result.append (l_LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL.out)
          Result.append ("%N")
        end
        if attached LAST_TRADE_SPOT_FROM_BLOB as l_LAST_TRADE_SPOT_FROM_BLOB then
          Result.append ("%NLAST_TRADE_SPOT_FROM_BLOB:")
          Result.append (l_LAST_TRADE_SPOT_FROM_BLOB.out)
          Result.append ("%N")
        end
        if attached LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL as l_LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL then
          Result.append ("%NLAST_TRADE_SPOT_FROM_BLOB_EXTERNAL:")
          Result.append (l_LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL.out)
          Result.append ("%N")
        end
        if attached LAST_TRADE_SPOT_FROM_CALCULATED as l_LAST_TRADE_SPOT_FROM_CALCULATED then
          Result.append ("%NLAST_TRADE_SPOT_FROM_CALCULATED:")
          Result.append (l_LAST_TRADE_SPOT_FROM_CALCULATED.out)
          Result.append ("%N")
        end
        if attached LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL as l_LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL then
          Result.append ("%NLAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL:")
          Result.append (l_LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL.out)
          Result.append ("%N")
        end
        if attached LAST_TRADE_SPOT_FROM_FIX as l_LAST_TRADE_SPOT_FROM_FIX then
          Result.append ("%NLAST_TRADE_SPOT_FROM_FIX:")
          Result.append (l_LAST_TRADE_SPOT_FROM_FIX.out)
          Result.append ("%N")
        end
        if attached LAST_TRADE_SPOT_FROM_FIX_EXTERNAL as l_LAST_TRADE_SPOT_FROM_FIX_EXTERNAL then
          Result.append ("%NLAST_TRADE_SPOT_FROM_FIX_EXTERNAL:")
          Result.append (l_LAST_TRADE_SPOT_FROM_FIX_EXTERNAL.out)
          Result.append ("%N")
        end
        if attached LAST_TRADE_SPOT_FROM_GO as l_LAST_TRADE_SPOT_FROM_GO then
          Result.append ("%NLAST_TRADE_SPOT_FROM_GO:")
          Result.append (l_LAST_TRADE_SPOT_FROM_GO.out)
          Result.append ("%N")
        end
        if attached LAST_TRADE_SPOT_FROM_GO_EXTERNAL as l_LAST_TRADE_SPOT_FROM_GO_EXTERNAL then
          Result.append ("%NLAST_TRADE_SPOT_FROM_GO_EXTERNAL:")
          Result.append (l_LAST_TRADE_SPOT_FROM_GO_EXTERNAL.out)
          Result.append ("%N")
        end
        if attached LAST_TRADE_SPOT_FROM_POLLING as l_LAST_TRADE_SPOT_FROM_POLLING then
          Result.append ("%NLAST_TRADE_SPOT_FROM_POLLING:")
          Result.append (l_LAST_TRADE_SPOT_FROM_POLLING.out)
          Result.append ("%N")
        end
        if attached LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL as l_LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL then
          Result.append ("%NLAST_TRADE_SPOT_FROM_POLLING_EXTERNAL:")
          Result.append (l_LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL.out)
          Result.append ("%N")
        end
        if attached LAST_TRADE_SPOT_FROM_STREAMING as l_LAST_TRADE_SPOT_FROM_STREAMING then
          Result.append ("%NLAST_TRADE_SPOT_FROM_STREAMING:")
          Result.append (l_LAST_TRADE_SPOT_FROM_STREAMING.out)
          Result.append ("%N")
        end
        if attached LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL as l_LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL then
          Result.append ("%NLAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL:")
          Result.append (l_LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL.out)
          Result.append ("%N")
        end
        if attached METADATA_VERSION as l_METADATA_VERSION then
          Result.append ("%NMETADATA_VERSION:")
          Result.append (l_METADATA_VERSION.out)
          Result.append ("%N")
        end
        if attached PROCESSING_TRADES_FROM_BLOB_STATUS as l_PROCESSING_TRADES_FROM_BLOB_STATUS then
          Result.append ("%NPROCESSING_TRADES_FROM_BLOB_STATUS:")
          Result.append (l_PROCESSING_TRADES_FROM_BLOB_STATUS.out)
          Result.append ("%N")
        end
        if attached TOTAL_TRADES_SPOT as l_TOTAL_TRADES_SPOT then
          Result.append ("%NTOTAL_TRADES_SPOT:")
          Result.append (l_TOTAL_TRADES_SPOT.out)
          Result.append ("%N")
        end
        if attached UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA as l_UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA then
          Result.append ("%NUNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA:")
          Result.append (l_UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA.out)
          Result.append ("%N")
        end
        if attached UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA as l_UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA then
          Result.append ("%NUNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA:")
          Result.append (l_UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA.out)
          Result.append ("%N")
        end
        if attached UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA as l_UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA then
          Result.append ("%NUNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA:")
          Result.append (l_UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA.out)
          Result.append ("%N")
        end
        if attached UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA as l_UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA then
          Result.append ("%NUNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA:")
          Result.append (l_UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA.out)
          Result.append ("%N")
        end
        if attached UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA as l_UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA then
          Result.append ("%NUNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA:")
          Result.append (l_UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA.out)
          Result.append ("%N")
        end
        if attached UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA as l_UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA then
          Result.append ("%NUNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA:")
          Result.append (l_UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA.out)
          Result.append ("%N")
        end
        if attached UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA as l_UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA then
          Result.append ("%NUNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA:")
          Result.append (l_UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA.out)
          Result.append ("%N")
        end
      end
end

