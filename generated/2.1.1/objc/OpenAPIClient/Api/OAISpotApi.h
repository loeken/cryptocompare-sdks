#import <Foundation/Foundation.h>
#import "OAIError.h"
#import "OAIGENERICRESPONSE.h"
#import "OAISPOTINSTRUMENTHISTODATARESPONSE.h"
#import "OAISPOTINSTRUMENTMARKETDATARESPONSE.h"
#import "OAISPOTINSTRUMENTMETADATARESPONSE.h"
#import "OAISPOTINSTRUMENTTRADERESPONSE.h"
#import "OAIApi.h"

/**
* CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry
* CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.
*
* The version of the OpenAPI document: 2.1.1
* Contact: data@cryptocompare.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface OAISpotApi: NSObject <OAIApi>

extern NSString* kOAISpotApiErrorDomain;
extern NSInteger kOAISpotApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(OAIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// 
/// 
///
/// @param market The exchange to obtain data from
/// @param instrument The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list          but you can use the mapping_priority param to check the unmapped list first.
/// @param groups When requesting historical entries you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,MAPPING,OHLC,OHLC_TRADE,TRADE,VOLUME (optional)
/// @param limit The number of data points to return (optional) (default to @30)
/// @param toTs Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit&#x3D;2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &amp;limit&#x3D;2000&amp;to_ts&#x3D;{the earliest unix timestamp received} (optional)
/// @param aggregate The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries (optional) (default to @1)
/// @param fill Boolean value, if set to false or 0 we will not return data points for periods with no trading activity. (optional) (default to @(YES))
/// @param mappingPriority The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST (optional) (default to @"CHECK_MAPPED_FIRST")
/// @param responseFormat The format of the data response in uppercase. It can be one of the following: JSON,CSV (optional) (default to @"JSON")
/// 
///  code:200 message:"Success response from the API.",
///  code:400 message:"The 400 error occurs when some of the data sent is malformed.",
///  code:401 message:"The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
///  code:403 message:"The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
///  code:404 message:"The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
///  code:405 message:"The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
///  code:429 message:"The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
///  code:500 message:"The 500 error occurs our API is up but does not know how to / can't handle the request.",
///  code:502 message:"The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
///  code:503 message:"The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer."
///
/// @return OAISPOTINSTRUMENTHISTODATARESPONSE*
-(NSURLSessionTask*) spotV1HistoricalDaysWithMarket: (NSString*) market
    instrument: (NSString*) instrument
    groups: (NSArray<NSString*>*) groups
    limit: (NSNumber*) limit
    toTs: (NSNumber*) toTs
    aggregate: (NSNumber*) aggregate
    fill: (NSNumber*) fill
    mappingPriority: (NSString*) mappingPriority
    responseFormat: (NSString*) responseFormat
    completionHandler: (void (^)(OAISPOTINSTRUMENTHISTODATARESPONSE* output, NSError* error)) handler;


/// 
/// 
///
/// @param market The exchange to obtain data from
/// @param instrument The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list          but you can use the mapping_priority param to check the unmapped list first.
/// @param groups When requesting historical entries you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,MAPPING,OHLC,OHLC_TRADE,TRADE,VOLUME (optional)
/// @param limit The number of data points to return (optional) (default to @30)
/// @param toTs Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit&#x3D;2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &amp;limit&#x3D;2000&amp;to_ts&#x3D;{the earliest unix timestamp received} (optional)
/// @param aggregate The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries (optional) (default to @1)
/// @param fill Boolean value, if set to false or 0 we will not return data points for periods with no trading activity. (optional) (default to @(YES))
/// @param mappingPriority The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST (optional) (default to @"CHECK_MAPPED_FIRST")
/// @param responseFormat The format of the data response in uppercase. It can be one of the following: JSON,CSV (optional) (default to @"JSON")
/// 
///  code:200 message:"Success response from the API.",
///  code:400 message:"The 400 error occurs when some of the data sent is malformed.",
///  code:401 message:"The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
///  code:403 message:"The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
///  code:404 message:"The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
///  code:405 message:"The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
///  code:429 message:"The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
///  code:500 message:"The 500 error occurs our API is up but does not know how to / can't handle the request.",
///  code:502 message:"The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
///  code:503 message:"The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer."
///
/// @return OAISPOTINSTRUMENTHISTODATARESPONSE*
-(NSURLSessionTask*) spotV1HistoricalHoursWithMarket: (NSString*) market
    instrument: (NSString*) instrument
    groups: (NSArray<NSString*>*) groups
    limit: (NSNumber*) limit
    toTs: (NSNumber*) toTs
    aggregate: (NSNumber*) aggregate
    fill: (NSNumber*) fill
    mappingPriority: (NSString*) mappingPriority
    responseFormat: (NSString*) responseFormat
    completionHandler: (void (^)(OAISPOTINSTRUMENTHISTODATARESPONSE* output, NSError* error)) handler;


/// 
/// 
///
/// @param market The exchange to obtain data from
/// @param instrument The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list          but you can use the mapping_priority param to check the unmapped list first.
/// @param groups When requesting historical entries you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,MAPPING,OHLC,OHLC_TRADE,TRADE,VOLUME (optional)
/// @param limit The number of data points to return (optional) (default to @30)
/// @param toTs Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit&#x3D;2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &amp;limit&#x3D;2000&amp;to_ts&#x3D;{the earliest unix timestamp received} (optional)
/// @param aggregate The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries (optional) (default to @1)
/// @param fill Boolean value, if set to false or 0 we will not return data points for periods with no trading activity. (optional) (default to @(YES))
/// @param mappingPriority The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST (optional) (default to @"CHECK_MAPPED_FIRST")
/// @param responseFormat The format of the data response in uppercase. It can be one of the following: JSON,CSV (optional) (default to @"JSON")
/// 
///  code:200 message:"Success response from the API.",
///  code:400 message:"The 400 error occurs when some of the data sent is malformed.",
///  code:401 message:"The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
///  code:403 message:"The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
///  code:404 message:"The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
///  code:405 message:"The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
///  code:429 message:"The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
///  code:500 message:"The 500 error occurs our API is up but does not know how to / can't handle the request.",
///  code:502 message:"The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
///  code:503 message:"The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer."
///
/// @return OAISPOTINSTRUMENTHISTODATARESPONSE*
-(NSURLSessionTask*) spotV1HistoricalMinutesWithMarket: (NSString*) market
    instrument: (NSString*) instrument
    groups: (NSArray<NSString*>*) groups
    limit: (NSNumber*) limit
    toTs: (NSNumber*) toTs
    aggregate: (NSNumber*) aggregate
    fill: (NSNumber*) fill
    mappingPriority: (NSString*) mappingPriority
    responseFormat: (NSString*) responseFormat
    completionHandler: (void (^)(OAISPOTINSTRUMENTHISTODATARESPONSE* output, NSError* error)) handler;


/// 
/// 
///
/// @param market The exchange to obtain data from
/// @param instrument The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list          but you can use the mapping_priority param to check the unmapped list first.
/// @param minuteTs Unix timestamp in seconds for the minute of the orderbook snapshot you are interested in. You can pass any timestamp within a minute but we will round it down the the full minute timestmap and return the orderbook l2 snapshot at that minute.
/// @param depth The number of top bids and asks to return. (optional) (default to @50)
/// @param mappingPriority The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST (optional) (default to @"CHECK_MAPPED_FIRST")
/// @param responseFormat The format of the data response in uppercase. It can be one of the following: JSON,CSV (optional) (default to @"JSON")
/// 
///  code:200 message:"Success response from the API.",
///  code:400 message:"The 400 error occurs when some of the data sent is malformed.",
///  code:401 message:"The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
///  code:403 message:"The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
///  code:404 message:"The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
///  code:405 message:"The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
///  code:429 message:"The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
///  code:500 message:"The 500 error occurs our API is up but does not know how to / can't handle the request.",
///  code:502 message:"The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
///  code:503 message:"The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer."
///
/// @return OAIGENERICRESPONSE*
-(NSURLSessionTask*) spotV1HistoricalOrderbookL2SnapshotMinuteWithMarket: (NSString*) market
    instrument: (NSString*) instrument
    minuteTs: (NSNumber*) minuteTs
    depth: (NSNumber*) depth
    mappingPriority: (NSString*) mappingPriority
    responseFormat: (NSString*) responseFormat
    completionHandler: (void (^)(OAIGENERICRESPONSE* output, NSError* error)) handler;


/// 
/// 
///
/// @param market The exchange to obtain data from
/// @param instrument The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list          but you can use the mapping_priority param to check the unmapped list first.
/// @param afterTs Unix timestamp in seconds of the earliest trade in the response. (optional)
/// @param lastCcseq The CCSEQ of the last message seen in the previous request. Useful for pagination within messages that happened in the same second. It will look though the messages in the same second and discard all messages until it reaches the CCSEQ from the last_ccseq parameter. If the CCSEQ is not part of that second, it will discard all messages in the second and only return messages starting from the next second onwards. When starting an integration with our API, on the first request, you should either not send a value for this paramater (defaults to 0 and does not discard any messages) or send 0. After you get a response use the TIMESTAMP and CCSEQ from the last message in the response. Pass the TIMESTAMP in the after_ts parameter and the CCSEQ in the last_ccseq parameter on your next request. (optional) (default to @0)
/// @param limit The maximum number of trades to return (optional) (default to @100)
/// @param mappingPriority The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST (optional) (default to @"CHECK_MAPPED_FIRST")
/// @param responseFormat The format of the data response in uppercase. It can be one of the following: JSON,CSV (optional) (default to @"JSON")
/// @param return404OnEmptyResponse If set to false (default) then when there are no items to return, you will get a response status code of 200 and an empty JSON array or a CSV file with just the header. If set to true then when there are no items you will get a 404 status code for both JSON and CSV response_formats. (optional) (default to @(NO))
/// 
///  code:200 message:"Success response from the API.",
///  code:400 message:"The 400 error occurs when some of the data sent is malformed.",
///  code:401 message:"The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
///  code:403 message:"The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
///  code:404 message:"The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
///  code:405 message:"The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
///  code:429 message:"The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
///  code:500 message:"The 500 error occurs our API is up but does not know how to / can't handle the request.",
///  code:502 message:"The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
///  code:503 message:"The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer."
///
/// @return OAISPOTINSTRUMENTTRADERESPONSE*
-(NSURLSessionTask*) spotV1HistoricalTradesWithMarket: (NSString*) market
    instrument: (NSString*) instrument
    afterTs: (NSNumber*) afterTs
    lastCcseq: (NSNumber*) lastCcseq
    limit: (NSNumber*) limit
    mappingPriority: (NSString*) mappingPriority
    responseFormat: (NSString*) responseFormat
    return404OnEmptyResponse: (NSNumber*) return404OnEmptyResponse
    completionHandler: (void (^)(OAISPOTINSTRUMENTTRADERESPONSE* output, NSError* error)) handler;


/// 
/// 
///
/// @param market The exchange to obtain data from
/// @param instrument The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list          but you can use the mapping_priority param to check the unmapped list first.
/// @param hourTs Unix timestamp in seconds for the hour containing the trades you are interested in. You can pass any timestamp within an hour but we will round it down the the full hour timestmap and return all trades in that hour. (optional)
/// @param mappingPriority The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST (optional) (default to @"CHECK_MAPPED_FIRST")
/// @param responseFormat The format of the data response in uppercase. It can be one of the following: JSON,CSV (optional) (default to @"JSON")
/// @param return404OnEmptyResponse If set to false (default) then when there are no items to return, you will get a response status code of 200 and an empty JSON array or a CSV file with just the header. If set to true then when there are no items you will get a 404 status code for both JSON and CSV response_formats. (optional) (default to @(NO))
/// 
///  code:200 message:"Success response from the API.",
///  code:400 message:"The 400 error occurs when some of the data sent is malformed.",
///  code:401 message:"The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
///  code:403 message:"The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
///  code:404 message:"The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
///  code:405 message:"The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
///  code:429 message:"The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
///  code:500 message:"The 500 error occurs our API is up but does not know how to / can't handle the request.",
///  code:502 message:"The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
///  code:503 message:"The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer."
///
/// @return OAISPOTINSTRUMENTTRADERESPONSE*
-(NSURLSessionTask*) spotV1HistoricalTradesHourWithMarket: (NSString*) market
    instrument: (NSString*) instrument
    hourTs: (NSNumber*) hourTs
    mappingPriority: (NSString*) mappingPriority
    responseFormat: (NSString*) responseFormat
    return404OnEmptyResponse: (NSNumber*) return404OnEmptyResponse
    completionHandler: (void (^)(OAISPOTINSTRUMENTTRADERESPONSE* output, NSError* error)) handler;


/// 
/// 
///
/// @param market The exchange to obtain data from
/// @param instruments A comma separated array of mapped and/or unmapped instruments to retrieve for a specific market (you can use either the instrument XXBTZUSD or mapped instrument (base - quote) BTC-USD on kraken as an example). We first check each instrument against the mapped list and then against the unmapped list but you can use the mapping_priority param to check the unmapped list first.
/// @param groups When requesting metadata entries you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: STATUS,INTERNAL,GENERAL,MIGRATION,SOURCE (optional)
/// @param mappingPriority The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST (optional) (default to @"CHECK_MAPPED_FIRST")
/// 
///  code:200 message:"Success response from the API.",
///  code:400 message:"The 400 error occurs when some of the data sent is malformed.",
///  code:401 message:"The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
///  code:403 message:"The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
///  code:404 message:"The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
///  code:405 message:"The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
///  code:429 message:"The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
///  code:500 message:"The 500 error occurs our API is up but does not know how to / can't handle the request.",
///  code:502 message:"The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
///  code:503 message:"The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer."
///
/// @return OAISPOTINSTRUMENTMETADATARESPONSE*
-(NSURLSessionTask*) spotV1LatestInstrumentMetadataWithMarket: (NSString*) market
    instruments: (NSArray<NSString*>*) instruments
    groups: (NSArray<NSString*>*) groups
    mappingPriority: (NSString*) mappingPriority
    completionHandler: (void (^)(OAISPOTINSTRUMENTMETADATARESPONSE* output, NSError* error)) handler;


/// 
/// 
///
/// @param market The exchange to obtain data from
/// @param instruments A comma separated array of mapped and/or unmapped instruments to retrieve for a specific market (you can use either the instrument XXBTZUSD or mapped instrument (base - quote) BTC-USD on kraken as an example). We first check each instrument against the mapped list and then against the unmapped list but you can use the mapping_priority param to check the unmapped list first.
/// @param groups When requesting tick data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,MAPPING,VALUE,LAST_UPDATE,LAST_PROCESSED,TOP_OF_BOOK,CURRENT_HOUR,CURRENT_DAY,CURRENT_WEEK,CURRENT_MONTH,CURRENT_YEAR,MOVING_24_HOUR,MOVING_7_DAY,MOVING_30_DAY,MOVING_90_DAY,MOVING_180_DAY,MOVING_365_DAY,LIFETIME (optional)
/// @param mappingPriority The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST (optional) (default to @"CHECK_MAPPED_FIRST")
/// 
///  code:200 message:"Success response from the API.",
///  code:400 message:"The 400 error occurs when some of the data sent is malformed.",
///  code:401 message:"The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
///  code:403 message:"The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
///  code:404 message:"The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
///  code:405 message:"The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
///  code:429 message:"The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
///  code:500 message:"The 500 error occurs our API is up but does not know how to / can't handle the request.",
///  code:502 message:"The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
///  code:503 message:"The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer."
///
/// @return OAISPOTINSTRUMENTMARKETDATARESPONSE*
-(NSURLSessionTask*) spotV1LatestTickWithMarket: (NSString*) market
    instruments: (NSArray<NSString*>*) instruments
    groups: (NSArray<NSString*>*) groups
    mappingPriority: (NSString*) mappingPriority
    completionHandler: (void (^)(OAISPOTINSTRUMENTMARKETDATARESPONSE* output, NSError* error)) handler;


/// 
/// 
///
/// @param market The exchange to obtain data from (optional) (default to @"")
/// 
///  code:200 message:"Success response from the API.",
///  code:400 message:"The 400 error occurs when some of the data sent is malformed.",
///  code:401 message:"The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
///  code:403 message:"The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
///  code:404 message:"The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
///  code:405 message:"The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
///  code:429 message:"The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
///  code:500 message:"The 500 error occurs our API is up but does not know how to / can't handle the request.",
///  code:502 message:"The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
///  code:503 message:"The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer."
///
/// @return OAIGENERICRESPONSE*
-(NSURLSessionTask*) spotV1MarketsWithMarket: (NSString*) market
    completionHandler: (void (^)(OAIGENERICRESPONSE* output, NSError* error)) handler;


/// 
/// 
///
/// @param market The exchange to obtain data from (optional) (default to @"")
/// @param instrument The mapped instrument to retrieve on a specific market. (optional) (default to @"")
/// @param instrumentStatus The status of the instrument, can be one of the following: ACTIVE, IGNORED, RETIRED, EXPIRED (optional)
/// 
///  code:200 message:"Success response from the API.",
///  code:400 message:"The 400 error occurs when some of the data sent is malformed.",
///  code:401 message:"The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
///  code:403 message:"The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
///  code:404 message:"The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
///  code:405 message:"The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
///  code:429 message:"The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
///  code:500 message:"The 500 error occurs our API is up but does not know how to / can't handle the request.",
///  code:502 message:"The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
///  code:503 message:"The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer."
///
/// @return OAIGENERICRESPONSE*
-(NSURLSessionTask*) spotV1MarketsInstrumentsWithMarket: (NSString*) market
    instrument: (NSString*) instrument
    instrumentStatus: (NSArray<NSString*>*) instrumentStatus
    completionHandler: (void (^)(OAIGENERICRESPONSE* output, NSError* error)) handler;


/// 
/// 
///
/// @param market The exchange to obtain data from (optional) (default to @"")
/// @param instrument The unmapped instrument to retrieve on a specific market. (optional) (default to @"")
/// @param instrumentStatus The status of the instrument, can be one of the following: ACTIVE, IGNORED, RETIRED, EXPIRED (optional)
/// 
///  code:200 message:"Success response from the API.",
///  code:400 message:"The 400 error occurs when some of the data sent is malformed.",
///  code:401 message:"The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
///  code:403 message:"The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
///  code:404 message:"The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
///  code:405 message:"The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
///  code:429 message:"The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
///  code:500 message:"The 500 error occurs our API is up but does not know how to / can't handle the request.",
///  code:502 message:"The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
///  code:503 message:"The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer."
///
/// @return OAIGENERICRESPONSE*
-(NSURLSessionTask*) spotV1MarketsInstrumentsUnmappedWithMarket: (NSString*) market
    instrument: (NSString*) instrument
    instrumentStatus: (NSArray<NSString*>*) instrumentStatus
    completionHandler: (void (^)(OAIGENERICRESPONSE* output, NSError* error)) handler;



@end
