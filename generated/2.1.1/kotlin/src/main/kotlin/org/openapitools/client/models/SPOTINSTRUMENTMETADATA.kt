/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json

/**
 * 
 *
 * @param FIRST_SEEN_ON_BLOB_TS This is the first time instrument was seen on instrumentListSourceType BLOB.
 * @param FIRST_SEEN_ON_FIX_TS This is the first time instrument was seen on instrumentListSourceType FIX.
 * @param FIRST_SEEN_ON_HARDCODED_TS This is the first time instrument was seen on instrumentListSourceType HARDCODED.
 * @param FIRST_SEEN_ON_INDEX_COMPOSITION_TS This is the first time instrument was seen on instrumentListSourceType INDEX_COMPOSITION.
 * @param FIRST_SEEN_ON_NSQ_TS This is the first time instrument was seen on instrumentListSourceType NSQ.
 * @param FIRST_SEEN_ON_POLLING_TS This is the first time instrument was seen on instrumentListSourceType POLLING.
 * @param FIRST_SEEN_ON_STREAMING_TS This is the first time instrument was seen on instrumentListSourceType STREAMING.
 * @param FIRST_TRADE_SPOT_FROM_BACKFILL This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
 * @param FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL This is the first TRADE_SPOT that we have seen on the specific source type in external format.
 * @param FIRST_TRADE_SPOT_FROM_BLOB This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
 * @param FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL This is the first TRADE_SPOT that we have seen on the specific source type in external format.
 * @param FIRST_TRADE_SPOT_FROM_CALCULATED This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
 * @param FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL This is the first TRADE_SPOT that we have seen on the specific source type in external format.
 * @param FIRST_TRADE_SPOT_FROM_FIX This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
 * @param FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL This is the first TRADE_SPOT that we have seen on the specific source type in external format.
 * @param FIRST_TRADE_SPOT_FROM_GO This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
 * @param FIRST_TRADE_SPOT_FROM_GO_EXTERNAL This is the first TRADE_SPOT that we have seen on the specific source type in external format.
 * @param FIRST_TRADE_SPOT_FROM_POLLING This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
 * @param FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL This is the first TRADE_SPOT that we have seen on the specific source type in external format.
 * @param FIRST_TRADE_SPOT_FROM_STREAMING This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
 * @param FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL This is the first TRADE_SPOT that we have seen on the specific source type in external format.
 * @param HOST_MIGRATION_DESTINATION The migration destination vm hostname.
 * @param HOST_MIGRATION_SOURCE The migration source vm hostname.
 * @param HOST_MIGRATION_STATUS The migration status of the symbol, we only poll / stream / connect empty or SETTLED
 * @param INSTRUMENT The instrument ID as it is on the exchange with small modifications - we do not allow the following characters inside isntrument ids: ,/&?
 * @param INSTRUMENT_EXTERNAL_DATA The full data we get from the polling endpoint for this specific instrument. This is a JSON stringified object with different properties per exchange.
 * @param INSTRUMENT_MAPPING The current mapping information for this instrument
 * @param INSTRUMENT_MAPPING_HISTORY Historical mapping information for this instrument
 * @param INSTRUMENT_SOURCE_BACKFILL Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
 * @param INSTRUMENT_SOURCE_BLOB Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
 * @param INSTRUMENT_SOURCE_CALCULATED Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
 * @param INSTRUMENT_SOURCE_FIX Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
 * @param INSTRUMENT_SOURCE_GO Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
 * @param INSTRUMENT_SOURCE_POLLING Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
 * @param INSTRUMENT_SOURCE_STREAMING Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
 * @param INSTRUMENT_STATUS The status of the symbol, we only poll / stream / connect to the ACTIVE ones, for the RETIRED / IGNORED / EXPIRED  one we no longer query for data.
 * @param INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS The next time we expect to make a request for TRADE_SPOT on this instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS The next time we expect to make a request for TRADE_SPOT on this instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS The next time we expect to make a request for TRADE_SPOT on this instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS The next time we expect to make a request for TRADE_SPOT on this instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS The next time we expect to make a request for TRADE_SPOT on this instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS The next time we expect to make a request for TRADE_SPOT on this instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
 * @param INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS The next time we expect to make a request for TRADE_SPOT on this instrument.
 * @param INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION This flags the exchange instrument as in ready to consume TRADE_SPOT via a streaming integration.
 * @param INSTRUMENT_TRADE_SPOT_REST_URI This is used to build up the request in some cases, this is where we put the id we use when querying for TRADE_SPOT.
 * @param INSTRUMENT_TRADE_SPOT_REST_URL The URL we send to the proxy swarm to get TRADE_SPOT for the instrument.
 * @param INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION This is used to build up the subscription in some cases, this is where we put the id we use when subscribing for TRADE_SPOT on this instrument.
 * @param LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS The timestamp last encountered where the batch of trades from TRADES_SPOT all occured at the same time. This is an issue when making the next request that requires polling by timestamp as a start/from parameter
 * @param LAST_SEEN_ON_BLOB_TS This is the last time instrument was seen on instrumentListSourceType BLOB.
 * @param LAST_SEEN_ON_FIX_TS This is the last time instrument was seen on instrumentListSourceType FIX.
 * @param LAST_SEEN_ON_HARDCODED_TS This is the last time instrument was seen on instrumentListSourceType HARDCODED.
 * @param LAST_SEEN_ON_INDEX_COMPOSITION_TS This is the last time instrument was seen on instrumentListSourceType INDEX_COMPOSITION.
 * @param LAST_SEEN_ON_NSQ_TS This is the last time instrument was seen on instrumentListSourceType NSQ.
 * @param LAST_SEEN_ON_POLLING_TS This is the last time instrument was seen on instrumentListSourceType POLLING.
 * @param LAST_SEEN_ON_STREAMING_TS This is the last time instrument was seen on instrumentListSourceType STREAMING.
 * @param LAST_TRADE_SPOT_FROM_BACKFILL This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
 * @param LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
 * @param LAST_TRADE_SPOT_FROM_BLOB This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
 * @param LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
 * @param LAST_TRADE_SPOT_FROM_CALCULATED This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
 * @param LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
 * @param LAST_TRADE_SPOT_FROM_FIX This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
 * @param LAST_TRADE_SPOT_FROM_FIX_EXTERNAL This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
 * @param LAST_TRADE_SPOT_FROM_GO This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
 * @param LAST_TRADE_SPOT_FROM_GO_EXTERNAL This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
 * @param LAST_TRADE_SPOT_FROM_POLLING This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
 * @param LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
 * @param LAST_TRADE_SPOT_FROM_STREAMING This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
 * @param LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
 * @param METADATA_VERSION The version of metadata, used for version conversions/migrates.
 * @param PROCESSING_TRADES_FROM_BLOB_STATUS This states the status of blob migration for this intrument on this exchange.
 * @param TOTAL_TRADES_SPOT This is both the CCSEQ and the total TRADES_SPOT we have processed on this instrument
 * @param UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
 * @param UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
 * @param UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
 * @param UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
 * @param UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
 * @param UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
 * @param UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
 */


data class SPOTINSTRUMENTMETADATA (

    /* This is the first time instrument was seen on instrumentListSourceType BLOB. */
    @Json(name = "FIRST_SEEN_ON_BLOB_TS")
    val FIRST_SEEN_ON_BLOB_TS: kotlin.Int? = null,

    /* This is the first time instrument was seen on instrumentListSourceType FIX. */
    @Json(name = "FIRST_SEEN_ON_FIX_TS")
    val FIRST_SEEN_ON_FIX_TS: kotlin.Int? = null,

    /* This is the first time instrument was seen on instrumentListSourceType HARDCODED. */
    @Json(name = "FIRST_SEEN_ON_HARDCODED_TS")
    val FIRST_SEEN_ON_HARDCODED_TS: kotlin.Int? = null,

    /* This is the first time instrument was seen on instrumentListSourceType INDEX_COMPOSITION. */
    @Json(name = "FIRST_SEEN_ON_INDEX_COMPOSITION_TS")
    val FIRST_SEEN_ON_INDEX_COMPOSITION_TS: kotlin.Int? = null,

    /* This is the first time instrument was seen on instrumentListSourceType NSQ. */
    @Json(name = "FIRST_SEEN_ON_NSQ_TS")
    val FIRST_SEEN_ON_NSQ_TS: kotlin.Int? = null,

    /* This is the first time instrument was seen on instrumentListSourceType POLLING. */
    @Json(name = "FIRST_SEEN_ON_POLLING_TS")
    val FIRST_SEEN_ON_POLLING_TS: kotlin.Int? = null,

    /* This is the first time instrument was seen on instrumentListSourceType STREAMING. */
    @Json(name = "FIRST_SEEN_ON_STREAMING_TS")
    val FIRST_SEEN_ON_STREAMING_TS: kotlin.Int? = null,

    /* This is the first TRADE_SPOT that we have seen on the specific source type in internal format. */
    @Json(name = "FIRST_TRADE_SPOT_FROM_BACKFILL")
    val FIRST_TRADE_SPOT_FROM_BACKFILL: kotlin.Any? = null,

    /* This is the first TRADE_SPOT that we have seen on the specific source type in external format. */
    @Json(name = "FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL")
    val FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL: kotlin.Any? = null,

    /* This is the first TRADE_SPOT that we have seen on the specific source type in internal format. */
    @Json(name = "FIRST_TRADE_SPOT_FROM_BLOB")
    val FIRST_TRADE_SPOT_FROM_BLOB: kotlin.Any? = null,

    /* This is the first TRADE_SPOT that we have seen on the specific source type in external format. */
    @Json(name = "FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL")
    val FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL: kotlin.Any? = null,

    /* This is the first TRADE_SPOT that we have seen on the specific source type in internal format. */
    @Json(name = "FIRST_TRADE_SPOT_FROM_CALCULATED")
    val FIRST_TRADE_SPOT_FROM_CALCULATED: kotlin.Any? = null,

    /* This is the first TRADE_SPOT that we have seen on the specific source type in external format. */
    @Json(name = "FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL")
    val FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL: kotlin.Any? = null,

    /* This is the first TRADE_SPOT that we have seen on the specific source type in internal format. */
    @Json(name = "FIRST_TRADE_SPOT_FROM_FIX")
    val FIRST_TRADE_SPOT_FROM_FIX: kotlin.Any? = null,

    /* This is the first TRADE_SPOT that we have seen on the specific source type in external format. */
    @Json(name = "FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL")
    val FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL: kotlin.Any? = null,

    /* This is the first TRADE_SPOT that we have seen on the specific source type in internal format. */
    @Json(name = "FIRST_TRADE_SPOT_FROM_GO")
    val FIRST_TRADE_SPOT_FROM_GO: kotlin.Any? = null,

    /* This is the first TRADE_SPOT that we have seen on the specific source type in external format. */
    @Json(name = "FIRST_TRADE_SPOT_FROM_GO_EXTERNAL")
    val FIRST_TRADE_SPOT_FROM_GO_EXTERNAL: kotlin.Any? = null,

    /* This is the first TRADE_SPOT that we have seen on the specific source type in internal format. */
    @Json(name = "FIRST_TRADE_SPOT_FROM_POLLING")
    val FIRST_TRADE_SPOT_FROM_POLLING: kotlin.Any? = null,

    /* This is the first TRADE_SPOT that we have seen on the specific source type in external format. */
    @Json(name = "FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL")
    val FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL: kotlin.Any? = null,

    /* This is the first TRADE_SPOT that we have seen on the specific source type in internal format. */
    @Json(name = "FIRST_TRADE_SPOT_FROM_STREAMING")
    val FIRST_TRADE_SPOT_FROM_STREAMING: kotlin.Any? = null,

    /* This is the first TRADE_SPOT that we have seen on the specific source type in external format. */
    @Json(name = "FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL")
    val FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL: kotlin.Any? = null,

    /* The migration destination vm hostname. */
    @Json(name = "HOST_MIGRATION_DESTINATION")
    val HOST_MIGRATION_DESTINATION: kotlin.String? = null,

    /* The migration source vm hostname. */
    @Json(name = "HOST_MIGRATION_SOURCE")
    val HOST_MIGRATION_SOURCE: kotlin.String? = null,

    /* The migration status of the symbol, we only poll / stream / connect empty or SETTLED */
    @Json(name = "HOST_MIGRATION_STATUS")
    val HOST_MIGRATION_STATUS: kotlin.String? = null,

    /* The instrument ID as it is on the exchange with small modifications - we do not allow the following characters inside isntrument ids: ,/&? */
    @Json(name = "INSTRUMENT")
    val INSTRUMENT: kotlin.String? = null,

    /* The full data we get from the polling endpoint for this specific instrument. This is a JSON stringified object with different properties per exchange. */
    @Json(name = "INSTRUMENT_EXTERNAL_DATA")
    val INSTRUMENT_EXTERNAL_DATA: kotlin.String? = null,

    /* The current mapping information for this instrument */
    @Json(name = "INSTRUMENT_MAPPING")
    val INSTRUMENT_MAPPING: kotlin.Any? = null,

    /* Historical mapping information for this instrument */
    @Json(name = "INSTRUMENT_MAPPING_HISTORY")
    val INSTRUMENT_MAPPING_HISTORY: kotlin.collections.List<kotlin.String>? = arrayListOf(),

    /* Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from. */
    @Json(name = "INSTRUMENT_SOURCE_BACKFILL")
    val INSTRUMENT_SOURCE_BACKFILL: kotlin.String? = null,

    /* Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from. */
    @Json(name = "INSTRUMENT_SOURCE_BLOB")
    val INSTRUMENT_SOURCE_BLOB: kotlin.String? = null,

    /* Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from. */
    @Json(name = "INSTRUMENT_SOURCE_CALCULATED")
    val INSTRUMENT_SOURCE_CALCULATED: kotlin.String? = null,

    /* Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from. */
    @Json(name = "INSTRUMENT_SOURCE_FIX")
    val INSTRUMENT_SOURCE_FIX: kotlin.String? = null,

    /* Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from. */
    @Json(name = "INSTRUMENT_SOURCE_GO")
    val INSTRUMENT_SOURCE_GO: kotlin.String? = null,

    /* Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from. */
    @Json(name = "INSTRUMENT_SOURCE_POLLING")
    val INSTRUMENT_SOURCE_POLLING: kotlin.String? = null,

    /* Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from. */
    @Json(name = "INSTRUMENT_SOURCE_STREAMING")
    val INSTRUMENT_SOURCE_STREAMING: kotlin.String? = null,

    /* The status of the symbol, we only poll / stream / connect to the ACTIVE ones, for the RETIRED / IGNORED / EXPIRED  one we no longer query for data. */
    @Json(name = "INSTRUMENT_STATUS")
    val INSTRUMENT_STATUS: kotlin.String? = "ACTIVE",

    /* The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST")
    val INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST: kotlin.Any? = null,

    /* The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS")
    val INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS: kotlin.Int? = null,

    /* The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS")
    val INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS: kotlin.Int? = null,

    /* The next time we expect to make a request for TRADE_SPOT on this instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS")
    val INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS: kotlin.Int? = null,

    /* The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST")
    val INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST: kotlin.Any? = null,

    /* The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS")
    val INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS: kotlin.Int? = null,

    /* The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS")
    val INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS: kotlin.Int? = null,

    /* The next time we expect to make a request for TRADE_SPOT on this instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS")
    val INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS: kotlin.Int? = null,

    /* The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST")
    val INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST: kotlin.Any? = null,

    /* The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS")
    val INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS: kotlin.Int? = null,

    /* The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS")
    val INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS: kotlin.Int? = null,

    /* The next time we expect to make a request for TRADE_SPOT on this instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS")
    val INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS: kotlin.Int? = null,

    /* The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST")
    val INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST: kotlin.Any? = null,

    /* The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS")
    val INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS: kotlin.Int? = null,

    /* The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS")
    val INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS: kotlin.Int? = null,

    /* The next time we expect to make a request for TRADE_SPOT on this instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS")
    val INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS: kotlin.Int? = null,

    /* The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST")
    val INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST: kotlin.Any? = null,

    /* The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS")
    val INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS: kotlin.Int? = null,

    /* The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS")
    val INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS: kotlin.Int? = null,

    /* The next time we expect to make a request for TRADE_SPOT on this instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS")
    val INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS: kotlin.Int? = null,

    /* The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST")
    val INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST: kotlin.Any? = null,

    /* The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS")
    val INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS: kotlin.Int? = null,

    /* The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS")
    val INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS: kotlin.Int? = null,

    /* The next time we expect to make a request for TRADE_SPOT on this instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS")
    val INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS: kotlin.Int? = null,

    /* The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST")
    val INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST: kotlin.Any? = null,

    /* The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS")
    val INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS: kotlin.Int? = null,

    /* The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS")
    val INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS: kotlin.Int? = null,

    /* The next time we expect to make a request for TRADE_SPOT on this instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS")
    val INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS: kotlin.Int? = null,

    /* This flags the exchange instrument as in ready to consume TRADE_SPOT via a streaming integration. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION")
    val INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION: kotlin.Boolean? = false,

    /* This is used to build up the request in some cases, this is where we put the id we use when querying for TRADE_SPOT. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_REST_URI")
    val INSTRUMENT_TRADE_SPOT_REST_URI: kotlin.String? = null,

    /* The URL we send to the proxy swarm to get TRADE_SPOT for the instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_REST_URL")
    val INSTRUMENT_TRADE_SPOT_REST_URL: kotlin.String? = null,

    /* This is used to build up the subscription in some cases, this is where we put the id we use when subscribing for TRADE_SPOT on this instrument. */
    @Json(name = "INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION")
    val INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION: kotlin.String? = null,

    /* The timestamp last encountered where the batch of trades from TRADES_SPOT all occured at the same time. This is an issue when making the next request that requires polling by timestamp as a start/from parameter */
    @Json(name = "LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS")
    val LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS: kotlin.Int? = null,

    /* This is the last time instrument was seen on instrumentListSourceType BLOB. */
    @Json(name = "LAST_SEEN_ON_BLOB_TS")
    val LAST_SEEN_ON_BLOB_TS: kotlin.Int? = null,

    /* This is the last time instrument was seen on instrumentListSourceType FIX. */
    @Json(name = "LAST_SEEN_ON_FIX_TS")
    val LAST_SEEN_ON_FIX_TS: kotlin.Int? = null,

    /* This is the last time instrument was seen on instrumentListSourceType HARDCODED. */
    @Json(name = "LAST_SEEN_ON_HARDCODED_TS")
    val LAST_SEEN_ON_HARDCODED_TS: kotlin.Int? = null,

    /* This is the last time instrument was seen on instrumentListSourceType INDEX_COMPOSITION. */
    @Json(name = "LAST_SEEN_ON_INDEX_COMPOSITION_TS")
    val LAST_SEEN_ON_INDEX_COMPOSITION_TS: kotlin.Int? = null,

    /* This is the last time instrument was seen on instrumentListSourceType NSQ. */
    @Json(name = "LAST_SEEN_ON_NSQ_TS")
    val LAST_SEEN_ON_NSQ_TS: kotlin.Int? = null,

    /* This is the last time instrument was seen on instrumentListSourceType POLLING. */
    @Json(name = "LAST_SEEN_ON_POLLING_TS")
    val LAST_SEEN_ON_POLLING_TS: kotlin.Int? = null,

    /* This is the last time instrument was seen on instrumentListSourceType STREAMING. */
    @Json(name = "LAST_SEEN_ON_STREAMING_TS")
    val LAST_SEEN_ON_STREAMING_TS: kotlin.Int? = null,

    /* This is the last TRADE_SPOT that we have seen on the specific source type in internal format. */
    @Json(name = "LAST_TRADE_SPOT_FROM_BACKFILL")
    val LAST_TRADE_SPOT_FROM_BACKFILL: kotlin.Any? = null,

    /* This is the last TRADE_SPOT that we have seen on the specific trade source in external format. */
    @Json(name = "LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL")
    val LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL: kotlin.Any? = null,

    /* This is the last TRADE_SPOT that we have seen on the specific source type in internal format. */
    @Json(name = "LAST_TRADE_SPOT_FROM_BLOB")
    val LAST_TRADE_SPOT_FROM_BLOB: kotlin.Any? = null,

    /* This is the last TRADE_SPOT that we have seen on the specific trade source in external format. */
    @Json(name = "LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL")
    val LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL: kotlin.Any? = null,

    /* This is the last TRADE_SPOT that we have seen on the specific source type in internal format. */
    @Json(name = "LAST_TRADE_SPOT_FROM_CALCULATED")
    val LAST_TRADE_SPOT_FROM_CALCULATED: kotlin.Any? = null,

    /* This is the last TRADE_SPOT that we have seen on the specific trade source in external format. */
    @Json(name = "LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL")
    val LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL: kotlin.Any? = null,

    /* This is the last TRADE_SPOT that we have seen on the specific source type in internal format. */
    @Json(name = "LAST_TRADE_SPOT_FROM_FIX")
    val LAST_TRADE_SPOT_FROM_FIX: kotlin.Any? = null,

    /* This is the last TRADE_SPOT that we have seen on the specific trade source in external format. */
    @Json(name = "LAST_TRADE_SPOT_FROM_FIX_EXTERNAL")
    val LAST_TRADE_SPOT_FROM_FIX_EXTERNAL: kotlin.Any? = null,

    /* This is the last TRADE_SPOT that we have seen on the specific source type in internal format. */
    @Json(name = "LAST_TRADE_SPOT_FROM_GO")
    val LAST_TRADE_SPOT_FROM_GO: kotlin.Any? = null,

    /* This is the last TRADE_SPOT that we have seen on the specific trade source in external format. */
    @Json(name = "LAST_TRADE_SPOT_FROM_GO_EXTERNAL")
    val LAST_TRADE_SPOT_FROM_GO_EXTERNAL: kotlin.Any? = null,

    /* This is the last TRADE_SPOT that we have seen on the specific source type in internal format. */
    @Json(name = "LAST_TRADE_SPOT_FROM_POLLING")
    val LAST_TRADE_SPOT_FROM_POLLING: kotlin.Any? = null,

    /* This is the last TRADE_SPOT that we have seen on the specific trade source in external format. */
    @Json(name = "LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL")
    val LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL: kotlin.Any? = null,

    /* This is the last TRADE_SPOT that we have seen on the specific source type in internal format. */
    @Json(name = "LAST_TRADE_SPOT_FROM_STREAMING")
    val LAST_TRADE_SPOT_FROM_STREAMING: kotlin.Any? = null,

    /* This is the last TRADE_SPOT that we have seen on the specific trade source in external format. */
    @Json(name = "LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL")
    val LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL: kotlin.Any? = null,

    /* The version of metadata, used for version conversions/migrates. */
    @Json(name = "METADATA_VERSION")
    val METADATA_VERSION: kotlin.Int? = 4,

    /* This states the status of blob migration for this intrument on this exchange. */
    @Json(name = "PROCESSING_TRADES_FROM_BLOB_STATUS")
    val PROCESSING_TRADES_FROM_BLOB_STATUS: kotlin.String? = null,

    /* This is both the CCSEQ and the total TRADES_SPOT we have processed on this instrument */
    @Json(name = "TOTAL_TRADES_SPOT")
    val TOTAL_TRADES_SPOT: kotlin.Int? = null,

    /* This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service. */
    @Json(name = "UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA")
    val UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA: kotlin.Any? = null,

    /* This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service. */
    @Json(name = "UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA")
    val UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA: kotlin.Any? = null,

    /* This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service. */
    @Json(name = "UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA")
    val UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA: kotlin.Any? = null,

    /* This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service. */
    @Json(name = "UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA")
    val UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA: kotlin.Any? = null,

    /* This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service. */
    @Json(name = "UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA")
    val UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA: kotlin.Any? = null,

    /* This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service. */
    @Json(name = "UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA")
    val UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA: kotlin.Any? = null,

    /* This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service. */
    @Json(name = "UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA")
    val UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA: kotlin.Any? = null

)

