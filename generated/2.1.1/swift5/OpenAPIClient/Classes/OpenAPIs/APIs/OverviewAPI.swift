//
// OverviewAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class OverviewAPI {

    /**
     * enum for parameter responseFormat
     */
    public enum ResponseFormat_overviewV1HistoricalMarketcapAllAssetsDays: String, CaseIterable {
        case json = "JSON"
        case csv = "CSV"
    }

    /**

     - parameter groups: (query) When requesting all market cap historical data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,OHLC,VOLUME (optional)
     - parameter limit: (query) The number of data points to return (optional, default to 30)
     - parameter toTs: (query) Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit&#x3D;2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &amp;limit&#x3D;2000&amp;to_ts&#x3D;{the earliest unix timestamp received} (optional)
     - parameter aggregate: (query) The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries (optional, default to 1)
     - parameter fill: (query) Boolean value, if set to false or 0 we will not return data points for periods with no trading activity. (optional, default to true)
     - parameter responseFormat: (query) The format of the data response in uppercase. It can be one of the following: JSON,CSV (optional, default to .json)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func overviewV1HistoricalMarketcapAllAssetsDays(groups: [String]? = nil, limit: Int? = nil, toTs: Int? = nil, aggregate: Int? = nil, fill: Bool? = nil, responseFormat: ResponseFormat_overviewV1HistoricalMarketcapAllAssetsDays? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GENERICRESPONSE?, _ error: Error?) -> Void)) -> RequestTask {
        return overviewV1HistoricalMarketcapAllAssetsDaysWithRequestBuilder(groups: groups, limit: limit, toTs: toTs, aggregate: aggregate, fill: fill, responseFormat: responseFormat).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /overview/v1/historical/marketcap/all/assets/days
     - parameter groups: (query) When requesting all market cap historical data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,OHLC,VOLUME (optional)
     - parameter limit: (query) The number of data points to return (optional, default to 30)
     - parameter toTs: (query) Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit&#x3D;2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &amp;limit&#x3D;2000&amp;to_ts&#x3D;{the earliest unix timestamp received} (optional)
     - parameter aggregate: (query) The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries (optional, default to 1)
     - parameter fill: (query) Boolean value, if set to false or 0 we will not return data points for periods with no trading activity. (optional, default to true)
     - parameter responseFormat: (query) The format of the data response in uppercase. It can be one of the following: JSON,CSV (optional, default to .json)
     - returns: RequestBuilder<GENERICRESPONSE> 
     */
    open class func overviewV1HistoricalMarketcapAllAssetsDaysWithRequestBuilder(groups: [String]? = nil, limit: Int? = nil, toTs: Int? = nil, aggregate: Int? = nil, fill: Bool? = nil, responseFormat: ResponseFormat_overviewV1HistoricalMarketcapAllAssetsDays? = nil) -> RequestBuilder<GENERICRESPONSE> {
        let localVariablePath = "/overview/v1/historical/marketcap/all/assets/days"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "groups": (wrappedValue: groups?.encodeToJSON(), isExplode: false),
            "limit": (wrappedValue: limit?.encodeToJSON(), isExplode: false),
            "to_ts": (wrappedValue: toTs?.encodeToJSON(), isExplode: false),
            "aggregate": (wrappedValue: aggregate?.encodeToJSON(), isExplode: false),
            "fill": (wrappedValue: fill?.encodeToJSON(), isExplode: false),
            "response_format": (wrappedValue: responseFormat?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GENERICRESPONSE>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     * enum for parameter responseFormat
     */
    public enum ResponseFormat_overviewV1HistoricalMarketcapAllAssetsHours: String, CaseIterable {
        case json = "JSON"
        case csv = "CSV"
    }

    /**

     - parameter groups: (query) When requesting all market cap historical data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,OHLC,VOLUME (optional)
     - parameter limit: (query) The number of data points to return (optional, default to 30)
     - parameter toTs: (query) Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit&#x3D;2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &amp;limit&#x3D;2000&amp;to_ts&#x3D;{the earliest unix timestamp received} (optional)
     - parameter aggregate: (query) The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries (optional, default to 1)
     - parameter fill: (query) Boolean value, if set to false or 0 we will not return data points for periods with no trading activity. (optional, default to true)
     - parameter responseFormat: (query) The format of the data response in uppercase. It can be one of the following: JSON,CSV (optional, default to .json)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func overviewV1HistoricalMarketcapAllAssetsHours(groups: [String]? = nil, limit: Int? = nil, toTs: Int? = nil, aggregate: Int? = nil, fill: Bool? = nil, responseFormat: ResponseFormat_overviewV1HistoricalMarketcapAllAssetsHours? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GENERICRESPONSE?, _ error: Error?) -> Void)) -> RequestTask {
        return overviewV1HistoricalMarketcapAllAssetsHoursWithRequestBuilder(groups: groups, limit: limit, toTs: toTs, aggregate: aggregate, fill: fill, responseFormat: responseFormat).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /overview/v1/historical/marketcap/all/assets/hours
     - parameter groups: (query) When requesting all market cap historical data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,OHLC,VOLUME (optional)
     - parameter limit: (query) The number of data points to return (optional, default to 30)
     - parameter toTs: (query) Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit&#x3D;2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &amp;limit&#x3D;2000&amp;to_ts&#x3D;{the earliest unix timestamp received} (optional)
     - parameter aggregate: (query) The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries (optional, default to 1)
     - parameter fill: (query) Boolean value, if set to false or 0 we will not return data points for periods with no trading activity. (optional, default to true)
     - parameter responseFormat: (query) The format of the data response in uppercase. It can be one of the following: JSON,CSV (optional, default to .json)
     - returns: RequestBuilder<GENERICRESPONSE> 
     */
    open class func overviewV1HistoricalMarketcapAllAssetsHoursWithRequestBuilder(groups: [String]? = nil, limit: Int? = nil, toTs: Int? = nil, aggregate: Int? = nil, fill: Bool? = nil, responseFormat: ResponseFormat_overviewV1HistoricalMarketcapAllAssetsHours? = nil) -> RequestBuilder<GENERICRESPONSE> {
        let localVariablePath = "/overview/v1/historical/marketcap/all/assets/hours"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "groups": (wrappedValue: groups?.encodeToJSON(), isExplode: false),
            "limit": (wrappedValue: limit?.encodeToJSON(), isExplode: false),
            "to_ts": (wrappedValue: toTs?.encodeToJSON(), isExplode: false),
            "aggregate": (wrappedValue: aggregate?.encodeToJSON(), isExplode: false),
            "fill": (wrappedValue: fill?.encodeToJSON(), isExplode: false),
            "response_format": (wrappedValue: responseFormat?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GENERICRESPONSE>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     * enum for parameter responseFormat
     */
    public enum ResponseFormat_overviewV1HistoricalMarketcapFtwAssetsDays: String, CaseIterable {
        case json = "JSON"
        case csv = "CSV"
    }

    /**

     - parameter groups: (query) When requesting ftw universe market cap historical data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,OHLC,VOLUME (optional)
     - parameter limit: (query) The number of data points to return (optional, default to 30)
     - parameter toTs: (query) Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit&#x3D;2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &amp;limit&#x3D;2000&amp;to_ts&#x3D;{the earliest unix timestamp received} (optional)
     - parameter aggregate: (query) The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries (optional, default to 1)
     - parameter fill: (query) Boolean value, if set to false or 0 we will not return data points for periods with no trading activity. (optional, default to true)
     - parameter responseFormat: (query) The format of the data response in uppercase. It can be one of the following: JSON,CSV (optional, default to .json)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func overviewV1HistoricalMarketcapFtwAssetsDays(groups: [String]? = nil, limit: Int? = nil, toTs: Int? = nil, aggregate: Int? = nil, fill: Bool? = nil, responseFormat: ResponseFormat_overviewV1HistoricalMarketcapFtwAssetsDays? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GENERICRESPONSE?, _ error: Error?) -> Void)) -> RequestTask {
        return overviewV1HistoricalMarketcapFtwAssetsDaysWithRequestBuilder(groups: groups, limit: limit, toTs: toTs, aggregate: aggregate, fill: fill, responseFormat: responseFormat).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /overview/v1/historical/marketcap/ftw/assets/days
     - parameter groups: (query) When requesting ftw universe market cap historical data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,OHLC,VOLUME (optional)
     - parameter limit: (query) The number of data points to return (optional, default to 30)
     - parameter toTs: (query) Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit&#x3D;2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &amp;limit&#x3D;2000&amp;to_ts&#x3D;{the earliest unix timestamp received} (optional)
     - parameter aggregate: (query) The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries (optional, default to 1)
     - parameter fill: (query) Boolean value, if set to false or 0 we will not return data points for periods with no trading activity. (optional, default to true)
     - parameter responseFormat: (query) The format of the data response in uppercase. It can be one of the following: JSON,CSV (optional, default to .json)
     - returns: RequestBuilder<GENERICRESPONSE> 
     */
    open class func overviewV1HistoricalMarketcapFtwAssetsDaysWithRequestBuilder(groups: [String]? = nil, limit: Int? = nil, toTs: Int? = nil, aggregate: Int? = nil, fill: Bool? = nil, responseFormat: ResponseFormat_overviewV1HistoricalMarketcapFtwAssetsDays? = nil) -> RequestBuilder<GENERICRESPONSE> {
        let localVariablePath = "/overview/v1/historical/marketcap/ftw/assets/days"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "groups": (wrappedValue: groups?.encodeToJSON(), isExplode: false),
            "limit": (wrappedValue: limit?.encodeToJSON(), isExplode: false),
            "to_ts": (wrappedValue: toTs?.encodeToJSON(), isExplode: false),
            "aggregate": (wrappedValue: aggregate?.encodeToJSON(), isExplode: false),
            "fill": (wrappedValue: fill?.encodeToJSON(), isExplode: false),
            "response_format": (wrappedValue: responseFormat?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GENERICRESPONSE>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     * enum for parameter responseFormat
     */
    public enum ResponseFormat_overviewV1HistoricalMarketcapFtwAssetsHours: String, CaseIterable {
        case json = "JSON"
        case csv = "CSV"
    }

    /**

     - parameter groups: (query) When requesting ftw universe market cap historical data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,OHLC,VOLUME (optional)
     - parameter limit: (query) The number of data points to return (optional, default to 30)
     - parameter toTs: (query) Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit&#x3D;2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &amp;limit&#x3D;2000&amp;to_ts&#x3D;{the earliest unix timestamp received} (optional)
     - parameter aggregate: (query) The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries (optional, default to 1)
     - parameter fill: (query) Boolean value, if set to false or 0 we will not return data points for periods with no trading activity. (optional, default to true)
     - parameter responseFormat: (query) The format of the data response in uppercase. It can be one of the following: JSON,CSV (optional, default to .json)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func overviewV1HistoricalMarketcapFtwAssetsHours(groups: [String]? = nil, limit: Int? = nil, toTs: Int? = nil, aggregate: Int? = nil, fill: Bool? = nil, responseFormat: ResponseFormat_overviewV1HistoricalMarketcapFtwAssetsHours? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GENERICRESPONSE?, _ error: Error?) -> Void)) -> RequestTask {
        return overviewV1HistoricalMarketcapFtwAssetsHoursWithRequestBuilder(groups: groups, limit: limit, toTs: toTs, aggregate: aggregate, fill: fill, responseFormat: responseFormat).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /overview/v1/historical/marketcap/ftw/assets/hours
     - parameter groups: (query) When requesting ftw universe market cap historical data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,OHLC,VOLUME (optional)
     - parameter limit: (query) The number of data points to return (optional, default to 30)
     - parameter toTs: (query) Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit&#x3D;2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &amp;limit&#x3D;2000&amp;to_ts&#x3D;{the earliest unix timestamp received} (optional)
     - parameter aggregate: (query) The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries (optional, default to 1)
     - parameter fill: (query) Boolean value, if set to false or 0 we will not return data points for periods with no trading activity. (optional, default to true)
     - parameter responseFormat: (query) The format of the data response in uppercase. It can be one of the following: JSON,CSV (optional, default to .json)
     - returns: RequestBuilder<GENERICRESPONSE> 
     */
    open class func overviewV1HistoricalMarketcapFtwAssetsHoursWithRequestBuilder(groups: [String]? = nil, limit: Int? = nil, toTs: Int? = nil, aggregate: Int? = nil, fill: Bool? = nil, responseFormat: ResponseFormat_overviewV1HistoricalMarketcapFtwAssetsHours? = nil) -> RequestBuilder<GENERICRESPONSE> {
        let localVariablePath = "/overview/v1/historical/marketcap/ftw/assets/hours"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "groups": (wrappedValue: groups?.encodeToJSON(), isExplode: false),
            "limit": (wrappedValue: limit?.encodeToJSON(), isExplode: false),
            "to_ts": (wrappedValue: toTs?.encodeToJSON(), isExplode: false),
            "aggregate": (wrappedValue: aggregate?.encodeToJSON(), isExplode: false),
            "fill": (wrappedValue: fill?.encodeToJSON(), isExplode: false),
            "response_format": (wrappedValue: responseFormat?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GENERICRESPONSE>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - parameter groups: (query) When requesting all market cap tick data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,VALUE,LAST_UPDATE,CURRENT_HOUR,CURRENT_DAY,MOVING_24_HOUR (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func overviewV1LatestMarketcapAllTick(groups: [String]? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GENERICRESPONSE?, _ error: Error?) -> Void)) -> RequestTask {
        return overviewV1LatestMarketcapAllTickWithRequestBuilder(groups: groups).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /overview/v1/latest/marketcap/all/tick
     - parameter groups: (query) When requesting all market cap tick data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,VALUE,LAST_UPDATE,CURRENT_HOUR,CURRENT_DAY,MOVING_24_HOUR (optional)
     - returns: RequestBuilder<GENERICRESPONSE> 
     */
    open class func overviewV1LatestMarketcapAllTickWithRequestBuilder(groups: [String]? = nil) -> RequestBuilder<GENERICRESPONSE> {
        let localVariablePath = "/overview/v1/latest/marketcap/all/tick"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "groups": (wrappedValue: groups?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GENERICRESPONSE>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - parameter groups: (query) When requesting ftw universe market cap tick data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,VALUE,LAST_UPDATE,CURRENT_HOUR,CURRENT_DAY,MOVING_24_HOUR (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func overviewV1LatestMarketcapFtwTick(groups: [String]? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GENERICRESPONSE?, _ error: Error?) -> Void)) -> RequestTask {
        return overviewV1LatestMarketcapFtwTickWithRequestBuilder(groups: groups).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /overview/v1/latest/marketcap/ftw/tick
     - parameter groups: (query) When requesting ftw universe market cap tick data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,VALUE,LAST_UPDATE,CURRENT_HOUR,CURRENT_DAY,MOVING_24_HOUR (optional)
     - returns: RequestBuilder<GENERICRESPONSE> 
     */
    open class func overviewV1LatestMarketcapFtwTickWithRequestBuilder(groups: [String]? = nil) -> RequestBuilder<GENERICRESPONSE> {
        let localVariablePath = "/overview/v1/latest/marketcap/ftw/tick"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "groups": (wrappedValue: groups?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GENERICRESPONSE>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
