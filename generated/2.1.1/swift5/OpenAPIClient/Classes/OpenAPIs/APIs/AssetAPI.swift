//
// AssetAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class AssetAPI {

    /**

     - parameter address: (query)  
     - parameter chainSymbol: (query)  
     - parameter groups: (query)  (optional, default to "")
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func assetV1DataByAddress(address: String, chainSymbol: String, groups: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GENERICRESPONSE?, _ error: Error?) -> Void)) -> RequestTask {
        return assetV1DataByAddressWithRequestBuilder(address: address, chainSymbol: chainSymbol, groups: groups).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /asset/v1/data/by/address
     - parameter address: (query)  
     - parameter chainSymbol: (query)  
     - parameter groups: (query)  (optional, default to "")
     - returns: RequestBuilder<GENERICRESPONSE> 
     */
    open class func assetV1DataByAddressWithRequestBuilder(address: String, chainSymbol: String, groups: String? = nil) -> RequestBuilder<GENERICRESPONSE> {
        let localVariablePath = "/asset/v1/data/by/address"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "address": (wrappedValue: address.encodeToJSON(), isExplode: false),
            "chain_symbol": (wrappedValue: chainSymbol.encodeToJSON(), isExplode: false),
            "groups": (wrappedValue: groups?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GENERICRESPONSE>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - parameter assetId: (query) The asset id you are interested in 
     - parameter groups: (query)  (optional, default to "")
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func assetV1DataById(assetId: Int, groups: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GENERICRESPONSE?, _ error: Error?) -> Void)) -> RequestTask {
        return assetV1DataByIdWithRequestBuilder(assetId: assetId, groups: groups).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /asset/v1/data/by/id
     - parameter assetId: (query) The asset id you are interested in 
     - parameter groups: (query)  (optional, default to "")
     - returns: RequestBuilder<GENERICRESPONSE> 
     */
    open class func assetV1DataByIdWithRequestBuilder(assetId: Int, groups: String? = nil) -> RequestBuilder<GENERICRESPONSE> {
        let localVariablePath = "/asset/v1/data/by/id"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "asset_id": (wrappedValue: assetId.encodeToJSON(), isExplode: false),
            "groups": (wrappedValue: groups?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GENERICRESPONSE>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - parameter assetSymbol: (query) The asset symbol you are interested in 
     - parameter groups: (query)  (optional, default to "")
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func assetV1DataBySymbol(assetSymbol: String, groups: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GENERICRESPONSE?, _ error: Error?) -> Void)) -> RequestTask {
        return assetV1DataBySymbolWithRequestBuilder(assetSymbol: assetSymbol, groups: groups).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /asset/v1/data/by/symbol
     - parameter assetSymbol: (query) The asset symbol you are interested in 
     - parameter groups: (query)  (optional, default to "")
     - returns: RequestBuilder<GENERICRESPONSE> 
     */
    open class func assetV1DataBySymbolWithRequestBuilder(assetSymbol: String, groups: String? = nil) -> RequestBuilder<GENERICRESPONSE> {
        let localVariablePath = "/asset/v1/data/by/symbol"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "asset_symbol": (wrappedValue: assetSymbol.encodeToJSON(), isExplode: false),
            "groups": (wrappedValue: groups?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GENERICRESPONSE>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     * enum for parameter sortBy
     */
    public enum SortBy_assetV1TopList: String, CaseIterable {
        case createdOn = "CREATED_ON"
        case updatedOn = "UPDATED_ON"
        case symbol = "SYMBOL"
    }

    /**
     * enum for parameter sortDirection
     */
    public enum SortDirection_assetV1TopList: String, CaseIterable {
        case desc = "DESC"
        case asc = "ASC"
    }

    /**

     - parameter page: (query) The page number for the request to get {page_size} coins at the time. (optional, default to 1)
     - parameter pageSize: (query) The number of items returned per page (optional, default to 100)
     - parameter assetType: (query) The asset class/type (optional, default to "")
     - parameter sortBy: (query) Sort by field ( CREATED_ON,UPDATED_ON,SYMBOL ) (optional, default to .createdOn)
     - parameter sortDirection: (query) Sort direction ( DESC,ASC ) (optional, default to .desc)
     - parameter groups: (query)  (optional, default to "")
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func assetV1TopList(page: Int? = nil, pageSize: Int? = nil, assetType: String? = nil, sortBy: SortBy_assetV1TopList? = nil, sortDirection: SortDirection_assetV1TopList? = nil, groups: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GENERICRESPONSE?, _ error: Error?) -> Void)) -> RequestTask {
        return assetV1TopListWithRequestBuilder(page: page, pageSize: pageSize, assetType: assetType, sortBy: sortBy, sortDirection: sortDirection, groups: groups).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /asset/v1/top/list
     - parameter page: (query) The page number for the request to get {page_size} coins at the time. (optional, default to 1)
     - parameter pageSize: (query) The number of items returned per page (optional, default to 100)
     - parameter assetType: (query) The asset class/type (optional, default to "")
     - parameter sortBy: (query) Sort by field ( CREATED_ON,UPDATED_ON,SYMBOL ) (optional, default to .createdOn)
     - parameter sortDirection: (query) Sort direction ( DESC,ASC ) (optional, default to .desc)
     - parameter groups: (query)  (optional, default to "")
     - returns: RequestBuilder<GENERICRESPONSE> 
     */
    open class func assetV1TopListWithRequestBuilder(page: Int? = nil, pageSize: Int? = nil, assetType: String? = nil, sortBy: SortBy_assetV1TopList? = nil, sortDirection: SortDirection_assetV1TopList? = nil, groups: String? = nil) -> RequestBuilder<GENERICRESPONSE> {
        let localVariablePath = "/asset/v1/top/list"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": (wrappedValue: page?.encodeToJSON(), isExplode: false),
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: false),
            "asset_type": (wrappedValue: assetType?.encodeToJSON(), isExplode: false),
            "sort_by": (wrappedValue: sortBy?.encodeToJSON(), isExplode: false),
            "sort_direction": (wrappedValue: sortDirection?.encodeToJSON(), isExplode: false),
            "groups": (wrappedValue: groups?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GENERICRESPONSE>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
