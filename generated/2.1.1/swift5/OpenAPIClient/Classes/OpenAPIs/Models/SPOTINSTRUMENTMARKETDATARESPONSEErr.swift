//
// SPOTINSTRUMENTMARKETDATARESPONSEErr.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SPOTINSTRUMENTMARKETDATARESPONSEErr: Codable, JSONEncodable, Hashable {

    /** A message describing the error */
    public var message: String?
    public var otherInfo: SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo?
    /** A public facing error type. If you want to treat a specific error use the type. */
    public var type: Int?

    public init(message: String? = nil, otherInfo: SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo? = nil, type: Int? = nil) {
        self.message = message
        self.otherInfo = otherInfo
        self.type = type
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case message
        case otherInfo = "other_info"
        case type
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(message, forKey: .message)
        try container.encodeIfPresent(otherInfo, forKey: .otherInfo)
        try container.encodeIfPresent(type, forKey: .type)
    }
}

