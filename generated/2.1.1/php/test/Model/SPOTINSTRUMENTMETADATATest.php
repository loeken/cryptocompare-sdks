<?php
/**
 * SPOTINSTRUMENTMETADATATest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry
 *
 * CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: data@cryptocompare.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.3.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * SPOTINSTRUMENTMETADATATest Class Doc Comment
 *
 * @category    Class
 * @description SPOTINSTRUMENTMETADATA
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class SPOTINSTRUMENTMETADATATest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "SPOTINSTRUMENTMETADATA"
     */
    public function testSPOTINSTRUMENTMETADATA()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "first_seen_on_blob_ts"
     */
    public function testPropertyFirstSeenOnBlobTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "first_seen_on_fix_ts"
     */
    public function testPropertyFirstSeenOnFixTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "first_seen_on_hardcoded_ts"
     */
    public function testPropertyFirstSeenOnHardcodedTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "first_seen_on_index_composition_ts"
     */
    public function testPropertyFirstSeenOnIndexCompositionTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "first_seen_on_nsq_ts"
     */
    public function testPropertyFirstSeenOnNsqTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "first_seen_on_polling_ts"
     */
    public function testPropertyFirstSeenOnPollingTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "first_seen_on_streaming_ts"
     */
    public function testPropertyFirstSeenOnStreamingTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "first_trade_spot_from_backfill"
     */
    public function testPropertyFirstTradeSpotFromBackfill()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "first_trade_spot_from_backfill_external"
     */
    public function testPropertyFirstTradeSpotFromBackfillExternal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "first_trade_spot_from_blob"
     */
    public function testPropertyFirstTradeSpotFromBlob()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "first_trade_spot_from_blob_external"
     */
    public function testPropertyFirstTradeSpotFromBlobExternal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "first_trade_spot_from_calculated"
     */
    public function testPropertyFirstTradeSpotFromCalculated()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "first_trade_spot_from_calculated_external"
     */
    public function testPropertyFirstTradeSpotFromCalculatedExternal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "first_trade_spot_from_fix"
     */
    public function testPropertyFirstTradeSpotFromFix()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "first_trade_spot_from_fix_external"
     */
    public function testPropertyFirstTradeSpotFromFixExternal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "first_trade_spot_from_go"
     */
    public function testPropertyFirstTradeSpotFromGo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "first_trade_spot_from_go_external"
     */
    public function testPropertyFirstTradeSpotFromGoExternal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "first_trade_spot_from_polling"
     */
    public function testPropertyFirstTradeSpotFromPolling()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "first_trade_spot_from_polling_external"
     */
    public function testPropertyFirstTradeSpotFromPollingExternal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "first_trade_spot_from_streaming"
     */
    public function testPropertyFirstTradeSpotFromStreaming()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "first_trade_spot_from_streaming_external"
     */
    public function testPropertyFirstTradeSpotFromStreamingExternal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "host_migration_destination"
     */
    public function testPropertyHostMigrationDestination()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "host_migration_source"
     */
    public function testPropertyHostMigrationSource()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "host_migration_status"
     */
    public function testPropertyHostMigrationStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument"
     */
    public function testPropertyInstrument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_external_data"
     */
    public function testPropertyInstrumentExternalData()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_mapping"
     */
    public function testPropertyInstrumentMapping()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_mapping_history"
     */
    public function testPropertyInstrumentMappingHistory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_source_backfill"
     */
    public function testPropertyInstrumentSourceBackfill()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_source_blob"
     */
    public function testPropertyInstrumentSourceBlob()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_source_calculated"
     */
    public function testPropertyInstrumentSourceCalculated()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_source_fix"
     */
    public function testPropertyInstrumentSourceFix()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_source_go"
     */
    public function testPropertyInstrumentSourceGo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_source_polling"
     */
    public function testPropertyInstrumentSourcePolling()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_source_streaming"
     */
    public function testPropertyInstrumentSourceStreaming()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_status"
     */
    public function testPropertyInstrumentStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_backfill_last_proxied_rest_request"
     */
    public function testPropertyInstrumentTradeSpotFromBackfillLastProxiedRestRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_backfill_rest_uri_last_request_ts"
     */
    public function testPropertyInstrumentTradeSpotFromBackfillRestUriLastRequestTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_backfill_rest_uri_last_response_ts"
     */
    public function testPropertyInstrumentTradeSpotFromBackfillRestUriLastResponseTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_backfill_rest_uri_next_request_ts"
     */
    public function testPropertyInstrumentTradeSpotFromBackfillRestUriNextRequestTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_blob_last_proxied_rest_request"
     */
    public function testPropertyInstrumentTradeSpotFromBlobLastProxiedRestRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_blob_rest_uri_last_request_ts"
     */
    public function testPropertyInstrumentTradeSpotFromBlobRestUriLastRequestTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_blob_rest_uri_last_response_ts"
     */
    public function testPropertyInstrumentTradeSpotFromBlobRestUriLastResponseTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_blob_rest_uri_next_request_ts"
     */
    public function testPropertyInstrumentTradeSpotFromBlobRestUriNextRequestTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_calculated_last_proxied_rest_request"
     */
    public function testPropertyInstrumentTradeSpotFromCalculatedLastProxiedRestRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_calculated_rest_uri_last_request_ts"
     */
    public function testPropertyInstrumentTradeSpotFromCalculatedRestUriLastRequestTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_calculated_rest_uri_last_response_ts"
     */
    public function testPropertyInstrumentTradeSpotFromCalculatedRestUriLastResponseTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_calculated_rest_uri_next_request_ts"
     */
    public function testPropertyInstrumentTradeSpotFromCalculatedRestUriNextRequestTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_fix_last_proxied_rest_request"
     */
    public function testPropertyInstrumentTradeSpotFromFixLastProxiedRestRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_fix_rest_uri_last_request_ts"
     */
    public function testPropertyInstrumentTradeSpotFromFixRestUriLastRequestTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_fix_rest_uri_last_response_ts"
     */
    public function testPropertyInstrumentTradeSpotFromFixRestUriLastResponseTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_fix_rest_uri_next_request_ts"
     */
    public function testPropertyInstrumentTradeSpotFromFixRestUriNextRequestTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_go_last_proxied_rest_request"
     */
    public function testPropertyInstrumentTradeSpotFromGoLastProxiedRestRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_go_rest_uri_last_request_ts"
     */
    public function testPropertyInstrumentTradeSpotFromGoRestUriLastRequestTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_go_rest_uri_last_response_ts"
     */
    public function testPropertyInstrumentTradeSpotFromGoRestUriLastResponseTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_go_rest_uri_next_request_ts"
     */
    public function testPropertyInstrumentTradeSpotFromGoRestUriNextRequestTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_polling_last_proxied_rest_request"
     */
    public function testPropertyInstrumentTradeSpotFromPollingLastProxiedRestRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_polling_rest_uri_last_request_ts"
     */
    public function testPropertyInstrumentTradeSpotFromPollingRestUriLastRequestTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_polling_rest_uri_last_response_ts"
     */
    public function testPropertyInstrumentTradeSpotFromPollingRestUriLastResponseTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_polling_rest_uri_next_request_ts"
     */
    public function testPropertyInstrumentTradeSpotFromPollingRestUriNextRequestTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_streaming_last_proxied_rest_request"
     */
    public function testPropertyInstrumentTradeSpotFromStreamingLastProxiedRestRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_streaming_rest_uri_last_request_ts"
     */
    public function testPropertyInstrumentTradeSpotFromStreamingRestUriLastRequestTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_streaming_rest_uri_last_response_ts"
     */
    public function testPropertyInstrumentTradeSpotFromStreamingRestUriLastResponseTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_from_streaming_rest_uri_next_request_ts"
     */
    public function testPropertyInstrumentTradeSpotFromStreamingRestUriNextRequestTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_is_ready_for_streaming_integration"
     */
    public function testPropertyInstrumentTradeSpotIsReadyForStreamingIntegration()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_rest_uri"
     */
    public function testPropertyInstrumentTradeSpotRestUri()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_rest_url"
     */
    public function testPropertyInstrumentTradeSpotRestUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instrument_trade_spot_streaming_subscription"
     */
    public function testPropertyInstrumentTradeSpotStreamingSubscription()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_concurrent_batch_of_trades_spot_ms"
     */
    public function testPropertyLastConcurrentBatchOfTradesSpotMs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_seen_on_blob_ts"
     */
    public function testPropertyLastSeenOnBlobTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_seen_on_fix_ts"
     */
    public function testPropertyLastSeenOnFixTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_seen_on_hardcoded_ts"
     */
    public function testPropertyLastSeenOnHardcodedTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_seen_on_index_composition_ts"
     */
    public function testPropertyLastSeenOnIndexCompositionTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_seen_on_nsq_ts"
     */
    public function testPropertyLastSeenOnNsqTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_seen_on_polling_ts"
     */
    public function testPropertyLastSeenOnPollingTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_seen_on_streaming_ts"
     */
    public function testPropertyLastSeenOnStreamingTs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_trade_spot_from_backfill"
     */
    public function testPropertyLastTradeSpotFromBackfill()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_trade_spot_from_backfill_external"
     */
    public function testPropertyLastTradeSpotFromBackfillExternal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_trade_spot_from_blob"
     */
    public function testPropertyLastTradeSpotFromBlob()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_trade_spot_from_blob_external"
     */
    public function testPropertyLastTradeSpotFromBlobExternal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_trade_spot_from_calculated"
     */
    public function testPropertyLastTradeSpotFromCalculated()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_trade_spot_from_calculated_external"
     */
    public function testPropertyLastTradeSpotFromCalculatedExternal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_trade_spot_from_fix"
     */
    public function testPropertyLastTradeSpotFromFix()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_trade_spot_from_fix_external"
     */
    public function testPropertyLastTradeSpotFromFixExternal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_trade_spot_from_go"
     */
    public function testPropertyLastTradeSpotFromGo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_trade_spot_from_go_external"
     */
    public function testPropertyLastTradeSpotFromGoExternal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_trade_spot_from_polling"
     */
    public function testPropertyLastTradeSpotFromPolling()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_trade_spot_from_polling_external"
     */
    public function testPropertyLastTradeSpotFromPollingExternal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_trade_spot_from_streaming"
     */
    public function testPropertyLastTradeSpotFromStreaming()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_trade_spot_from_streaming_external"
     */
    public function testPropertyLastTradeSpotFromStreamingExternal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "metadata_version"
     */
    public function testPropertyMetadataVersion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "processing_trades_from_blob_status"
     */
    public function testPropertyProcessingTradesFromBlobStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "total_trades_spot"
     */
    public function testPropertyTotalTradesSpot()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "unstructured_trade_spot_from_backfill_internal_data"
     */
    public function testPropertyUnstructuredTradeSpotFromBackfillInternalData()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "unstructured_trade_spot_from_blob_internal_data"
     */
    public function testPropertyUnstructuredTradeSpotFromBlobInternalData()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "unstructured_trade_spot_from_calculated_internal_data"
     */
    public function testPropertyUnstructuredTradeSpotFromCalculatedInternalData()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "unstructured_trade_spot_from_fix_internal_data"
     */
    public function testPropertyUnstructuredTradeSpotFromFixInternalData()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "unstructured_trade_spot_from_go_internal_data"
     */
    public function testPropertyUnstructuredTradeSpotFromGoInternalData()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "unstructured_trade_spot_from_polling_internal_data"
     */
    public function testPropertyUnstructuredTradeSpotFromPollingInternalData()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "unstructured_trade_spot_from_streaming_internal_data"
     */
    public function testPropertyUnstructuredTradeSpotFromStreamingInternalData()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
