<?php
/**
 * FuturesApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry
 *
 * CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: data@cryptocompare.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.3.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * FuturesApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class FuturesApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for futuresV1HistoricalDays
     *
     * .
     *
     */
    public function testFuturesV1HistoricalDays()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for futuresV1HistoricalFundingRateDays
     *
     * .
     *
     */
    public function testFuturesV1HistoricalFundingRateDays()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for futuresV1HistoricalFundingRateHours
     *
     * .
     *
     */
    public function testFuturesV1HistoricalFundingRateHours()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for futuresV1HistoricalFundingRateMessages
     *
     * .
     *
     */
    public function testFuturesV1HistoricalFundingRateMessages()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for futuresV1HistoricalFundingRateMessagesHour
     *
     * .
     *
     */
    public function testFuturesV1HistoricalFundingRateMessagesHour()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for futuresV1HistoricalFundingRateMinutes
     *
     * .
     *
     */
    public function testFuturesV1HistoricalFundingRateMinutes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for futuresV1HistoricalHours
     *
     * .
     *
     */
    public function testFuturesV1HistoricalHours()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for futuresV1HistoricalMinutes
     *
     * .
     *
     */
    public function testFuturesV1HistoricalMinutes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for futuresV1HistoricalOpenInterestDays
     *
     * .
     *
     */
    public function testFuturesV1HistoricalOpenInterestDays()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for futuresV1HistoricalOpenInterestHours
     *
     * .
     *
     */
    public function testFuturesV1HistoricalOpenInterestHours()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for futuresV1HistoricalOpenInterestMessages
     *
     * .
     *
     */
    public function testFuturesV1HistoricalOpenInterestMessages()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for futuresV1HistoricalOpenInterestMessagesHour
     *
     * .
     *
     */
    public function testFuturesV1HistoricalOpenInterestMessagesHour()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for futuresV1HistoricalOpenInterestMinutes
     *
     * .
     *
     */
    public function testFuturesV1HistoricalOpenInterestMinutes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for futuresV1HistoricalTrades
     *
     * .
     *
     */
    public function testFuturesV1HistoricalTrades()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for futuresV1HistoricalTradesHour
     *
     * .
     *
     */
    public function testFuturesV1HistoricalTradesHour()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for futuresV1LatestFundingRateTick
     *
     * .
     *
     */
    public function testFuturesV1LatestFundingRateTick()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for futuresV1LatestInstrumentMetadata
     *
     * .
     *
     */
    public function testFuturesV1LatestInstrumentMetadata()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for futuresV1LatestOpenInterestTick
     *
     * .
     *
     */
    public function testFuturesV1LatestOpenInterestTick()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for futuresV1LatestTick
     *
     * .
     *
     */
    public function testFuturesV1LatestTick()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for futuresV1Markets
     *
     * .
     *
     */
    public function testFuturesV1Markets()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for futuresV1MarketsInstruments
     *
     * .
     *
     */
    public function testFuturesV1MarketsInstruments()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for futuresV1MarketsInstrumentsUnmapped
     *
     * .
     *
     */
    public function testFuturesV1MarketsInstrumentsUnmapped()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for indexV1HistoricalDays
     *
     * .
     *
     */
    public function testIndexV1HistoricalDays()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for indexV1HistoricalHours
     *
     * .
     *
     */
    public function testIndexV1HistoricalHours()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for indexV1HistoricalMessages
     *
     * .
     *
     */
    public function testIndexV1HistoricalMessages()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for indexV1HistoricalMessagesHour
     *
     * .
     *
     */
    public function testIndexV1HistoricalMessagesHour()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for indexV1HistoricalMinutes
     *
     * .
     *
     */
    public function testIndexV1HistoricalMinutes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for indexV1LatestInstrumentMetadata
     *
     * .
     *
     */
    public function testIndexV1LatestInstrumentMetadata()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for indexV1LatestTick
     *
     * .
     *
     */
    public function testIndexV1LatestTick()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for indexV1Markets
     *
     * .
     *
     */
    public function testIndexV1Markets()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for indexV1MarketsInstruments
     *
     * .
     *
     */
    public function testIndexV1MarketsInstruments()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for indexV1MarketsInstrumentsUnmapped
     *
     * .
     *
     */
    public function testIndexV1MarketsInstrumentsUnmapped()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
