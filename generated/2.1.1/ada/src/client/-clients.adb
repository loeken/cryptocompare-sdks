--  CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry
--  CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.
--
--  The version of the OpenAPI document: 2.1.1
--  Contact: data@cryptocompare.com
--
--  NOTE: This package is auto generated by OpenAPI-Generator 6.3.0-SNAPSHOT.
--  https://openapi-generator.tech
--  Do not edit the class manually.

pragma Warnings (Off, "*is not referenced");
with Swagger.Streams;
package body .Clients is
   pragma Style_Checks ("-mr");

   --  
   procedure Asset_V1Data_By_Address
      (Client : in out Client_Type;
       Address : in Swagger.UString;
       Chain_Symbol : in Swagger.UString;
       Groups : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("address", Address);
      URI.Add_Param ("chain_symbol", Chain_Symbol);
      URI.Add_Param ("groups", Groups);
      URI.Set_Path ("/asset/v1/data/by/address");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Asset_V1Data_By_Address;

   --  
   procedure Asset_V1Data_By_Id
      (Client : in out Client_Type;
       Asset_Id : in Integer;
       Groups : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("asset_id", Asset_Id);
      URI.Add_Param ("groups", Groups);
      URI.Set_Path ("/asset/v1/data/by/id");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Asset_V1Data_By_Id;

   --  
   procedure Asset_V1Data_By_Symbol
      (Client : in out Client_Type;
       Asset_Symbol : in Swagger.UString;
       Groups : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("asset_symbol", Asset_Symbol);
      URI.Add_Param ("groups", Groups);
      URI.Set_Path ("/asset/v1/data/by/symbol");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Asset_V1Data_By_Symbol;

   --  
   procedure Asset_V1Top_List
      (Client : in out Client_Type;
       Page : in Swagger.Nullable_Integer;
       Page_Size : in Swagger.Nullable_Integer;
       Asset_Type : in Swagger.Nullable_UString;
       Sort_By : in Swagger.Nullable_UString;
       Sort_Direction : in Swagger.Nullable_UString;
       Groups : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("page", Page);
      URI.Add_Param ("page_size", Page_Size);
      URI.Add_Param ("asset_type", Asset_Type);
      URI.Add_Param ("sort_by", Sort_By);
      URI.Add_Param ("sort_direction", Sort_Direction);
      URI.Add_Param ("groups", Groups);
      URI.Set_Path ("/asset/v1/top/list");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Asset_V1Top_List;

   --  
   procedure Futures_V1Historical_Days
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       Groups : in Swagger.UString_Vectors.Vector;
       Limit : in Swagger.Nullable_Integer;
       To_Ts : in Swagger.Nullable_Integer;
       Aggregate : in Swagger.Nullable_Integer;
       Fill : in Swagger.Nullable_Boolean;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("to_ts", To_Ts);
      URI.Add_Param ("aggregate", Aggregate);
      URI.Add_Param ("fill", Fill);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Set_Path ("/futures/v1/historical/days");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Futures_V1Historical_Days;

   --  
   procedure Futures_V1Historical_Funding_Rate_Days
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       Groups : in Swagger.UString_Vectors.Vector;
       Limit : in Swagger.Nullable_Integer;
       To_Ts : in Swagger.Nullable_Integer;
       Aggregate : in Swagger.Nullable_Integer;
       Fill : in Swagger.Nullable_Boolean;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("to_ts", To_Ts);
      URI.Add_Param ("aggregate", Aggregate);
      URI.Add_Param ("fill", Fill);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Set_Path ("/futures/v1/historical/funding-rate/days");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Futures_V1Historical_Funding_Rate_Days;

   --  
   procedure Futures_V1Historical_Funding_Rate_Hours
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       Groups : in Swagger.UString_Vectors.Vector;
       Limit : in Swagger.Nullable_Integer;
       To_Ts : in Swagger.Nullable_Integer;
       Aggregate : in Swagger.Nullable_Integer;
       Fill : in Swagger.Nullable_Boolean;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("to_ts", To_Ts);
      URI.Add_Param ("aggregate", Aggregate);
      URI.Add_Param ("fill", Fill);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Set_Path ("/futures/v1/historical/funding-rate/hours");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Futures_V1Historical_Funding_Rate_Hours;

   --  
   procedure Futures_V1Historical_Funding_Rate_Messages
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       After_Ts : in Swagger.Nullable_Integer;
       Last_Ccseq : in Swagger.Nullable_Integer;
       Limit : in Swagger.Nullable_Integer;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Return_404On_Empty_Response : in Swagger.Nullable_Boolean;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("after_ts", After_Ts);
      URI.Add_Param ("last_ccseq", Last_Ccseq);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Add_Param ("return_404_on_empty_response", Return_404On_Empty_Response);
      URI.Set_Path ("/futures/v1/historical/funding-rate-messages");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Futures_V1Historical_Funding_Rate_Messages;

   --  
   procedure Futures_V1Historical_Funding_Rate_Messages_Hour
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       Hour_Ts : in Swagger.Nullable_Integer;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Return_404On_Empty_Response : in Swagger.Nullable_Boolean;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("hour_ts", Hour_Ts);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Add_Param ("return_404_on_empty_response", Return_404On_Empty_Response);
      URI.Set_Path ("/futures/v1/historical/funding-rate-messages/hour");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Futures_V1Historical_Funding_Rate_Messages_Hour;

   --  
   procedure Futures_V1Historical_Funding_Rate_Minutes
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       Groups : in Swagger.UString_Vectors.Vector;
       Limit : in Swagger.Nullable_Integer;
       To_Ts : in Swagger.Nullable_Integer;
       Aggregate : in Swagger.Nullable_Integer;
       Fill : in Swagger.Nullable_Boolean;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("to_ts", To_Ts);
      URI.Add_Param ("aggregate", Aggregate);
      URI.Add_Param ("fill", Fill);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Set_Path ("/futures/v1/historical/funding-rate/minutes");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Futures_V1Historical_Funding_Rate_Minutes;

   --  
   procedure Futures_V1Historical_Hours
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       Groups : in Swagger.UString_Vectors.Vector;
       Limit : in Swagger.Nullable_Integer;
       To_Ts : in Swagger.Nullable_Integer;
       Aggregate : in Swagger.Nullable_Integer;
       Fill : in Swagger.Nullable_Boolean;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("to_ts", To_Ts);
      URI.Add_Param ("aggregate", Aggregate);
      URI.Add_Param ("fill", Fill);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Set_Path ("/futures/v1/historical/hours");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Futures_V1Historical_Hours;

   --  
   procedure Futures_V1Historical_Minutes
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       Groups : in Swagger.UString_Vectors.Vector;
       Limit : in Swagger.Nullable_Integer;
       To_Ts : in Swagger.Nullable_Integer;
       Aggregate : in Swagger.Nullable_Integer;
       Fill : in Swagger.Nullable_Boolean;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("to_ts", To_Ts);
      URI.Add_Param ("aggregate", Aggregate);
      URI.Add_Param ("fill", Fill);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Set_Path ("/futures/v1/historical/minutes");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Futures_V1Historical_Minutes;

   --  
   procedure Futures_V1Historical_Open_Interest_Days
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       Groups : in Swagger.UString_Vectors.Vector;
       Limit : in Swagger.Nullable_Integer;
       To_Ts : in Swagger.Nullable_Integer;
       Aggregate : in Swagger.Nullable_Integer;
       Fill : in Swagger.Nullable_Boolean;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("to_ts", To_Ts);
      URI.Add_Param ("aggregate", Aggregate);
      URI.Add_Param ("fill", Fill);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Set_Path ("/futures/v1/historical/open-interest/days");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Futures_V1Historical_Open_Interest_Days;

   --  
   procedure Futures_V1Historical_Open_Interest_Hours
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       Groups : in Swagger.UString_Vectors.Vector;
       Limit : in Swagger.Nullable_Integer;
       To_Ts : in Swagger.Nullable_Integer;
       Aggregate : in Swagger.Nullable_Integer;
       Fill : in Swagger.Nullable_Boolean;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("to_ts", To_Ts);
      URI.Add_Param ("aggregate", Aggregate);
      URI.Add_Param ("fill", Fill);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Set_Path ("/futures/v1/historical/open-interest/hours");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Futures_V1Historical_Open_Interest_Hours;

   --  
   procedure Futures_V1Historical_Open_Interest_Messages
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       After_Ts : in Swagger.Nullable_Integer;
       Last_Ccseq : in Swagger.Nullable_Integer;
       Limit : in Swagger.Nullable_Integer;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Return_404On_Empty_Response : in Swagger.Nullable_Boolean;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("after_ts", After_Ts);
      URI.Add_Param ("last_ccseq", Last_Ccseq);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Add_Param ("return_404_on_empty_response", Return_404On_Empty_Response);
      URI.Set_Path ("/futures/v1/historical/open-interest-messages");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Futures_V1Historical_Open_Interest_Messages;

   --  
   procedure Futures_V1Historical_Open_Interest_Messages_Hour
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       Hour_Ts : in Swagger.Nullable_Integer;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Return_404On_Empty_Response : in Swagger.Nullable_Boolean;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("hour_ts", Hour_Ts);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Add_Param ("return_404_on_empty_response", Return_404On_Empty_Response);
      URI.Set_Path ("/futures/v1/historical/open-interest-messages/hour");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Futures_V1Historical_Open_Interest_Messages_Hour;

   --  
   procedure Futures_V1Historical_Open_Interest_Minutes
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       Groups : in Swagger.UString_Vectors.Vector;
       Limit : in Swagger.Nullable_Integer;
       To_Ts : in Swagger.Nullable_Integer;
       Aggregate : in Swagger.Nullable_Integer;
       Fill : in Swagger.Nullable_Boolean;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("to_ts", To_Ts);
      URI.Add_Param ("aggregate", Aggregate);
      URI.Add_Param ("fill", Fill);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Set_Path ("/futures/v1/historical/open-interest/minutes");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Futures_V1Historical_Open_Interest_Minutes;

   --  
   procedure Futures_V1Historical_Trades
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       After_Ts : in Swagger.Nullable_Integer;
       Last_Ccseq : in Swagger.Nullable_Integer;
       Limit : in Swagger.Nullable_Integer;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Return_404On_Empty_Response : in Swagger.Nullable_Boolean;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("after_ts", After_Ts);
      URI.Add_Param ("last_ccseq", Last_Ccseq);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Add_Param ("return_404_on_empty_response", Return_404On_Empty_Response);
      URI.Set_Path ("/futures/v1/historical/trades");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Futures_V1Historical_Trades;

   --  
   procedure Futures_V1Historical_Trades_Hour
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       Hour_Ts : in Swagger.Nullable_Integer;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Return_404On_Empty_Response : in Swagger.Nullable_Boolean;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("hour_ts", Hour_Ts);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Add_Param ("return_404_on_empty_response", Return_404On_Empty_Response);
      URI.Set_Path ("/futures/v1/historical/trades/hour");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Futures_V1Historical_Trades_Hour;

   --  
   procedure Futures_V1Latest_Funding_Rate_Tick
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instruments : in Swagger.UString_Vectors.Vector;
       Groups : in Swagger.UString_Vectors.Vector;
       Mapping_Priority : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instruments", Instruments);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Set_Path ("/futures/v1/latest/funding-rate/tick");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Futures_V1Latest_Funding_Rate_Tick;

   --  
   procedure Futures_V1Latest_Instrument_Metadata
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instruments : in Swagger.UString_Vectors.Vector;
       Groups : in Swagger.UString_Vectors.Vector;
       Mapping_Priority : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instruments", Instruments);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Set_Path ("/futures/v1/latest/instrument/metadata");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Futures_V1Latest_Instrument_Metadata;

   --  
   procedure Futures_V1Latest_Open_Interest_Tick
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instruments : in Swagger.UString_Vectors.Vector;
       Groups : in Swagger.UString_Vectors.Vector;
       Mapping_Priority : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instruments", Instruments);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Set_Path ("/futures/v1/latest/open-interest/tick");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Futures_V1Latest_Open_Interest_Tick;

   --  
   procedure Futures_V1Latest_Tick
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instruments : in Swagger.UString_Vectors.Vector;
       Groups : in Swagger.UString_Vectors.Vector;
       Mapping_Priority : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instruments", Instruments);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Set_Path ("/futures/v1/latest/tick");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Futures_V1Latest_Tick;

   --  
   procedure Futures_V1Markets
      (Client : in out Client_Type;
       Market : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Set_Path ("/futures/v1/markets");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Futures_V1Markets;

   --  
   procedure Futures_V1Markets_Instruments
      (Client : in out Client_Type;
       Market : in Swagger.Nullable_UString;
       Instrument : in Swagger.Nullable_UString;
       Instrument_Status : in Swagger.UString_Vectors.Vector;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("instrument_status", Instrument_Status);
      URI.Set_Path ("/futures/v1/markets/instruments");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Futures_V1Markets_Instruments;

   --  
   procedure Futures_V1Markets_Instruments_Unmapped
      (Client : in out Client_Type;
       Market : in Swagger.Nullable_UString;
       Instrument : in Swagger.Nullable_UString;
       Instrument_Status : in Swagger.UString_Vectors.Vector;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("instrument_status", Instrument_Status);
      URI.Set_Path ("/futures/v1/markets/instruments/unmapped");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Futures_V1Markets_Instruments_Unmapped;

   --  
   procedure Index_V1Historical_Days
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       Groups : in Swagger.UString_Vectors.Vector;
       Limit : in Swagger.Nullable_Integer;
       To_Ts : in Swagger.Nullable_Integer;
       Aggregate : in Swagger.Nullable_Integer;
       Fill : in Swagger.Nullable_Boolean;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("to_ts", To_Ts);
      URI.Add_Param ("aggregate", Aggregate);
      URI.Add_Param ("fill", Fill);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Set_Path ("/index/v1/historical/days");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Index_V1Historical_Days;

   --  
   procedure Index_V1Historical_Hours
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       Groups : in Swagger.UString_Vectors.Vector;
       Limit : in Swagger.Nullable_Integer;
       To_Ts : in Swagger.Nullable_Integer;
       Aggregate : in Swagger.Nullable_Integer;
       Fill : in Swagger.Nullable_Boolean;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("to_ts", To_Ts);
      URI.Add_Param ("aggregate", Aggregate);
      URI.Add_Param ("fill", Fill);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Set_Path ("/index/v1/historical/hours");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Index_V1Historical_Hours;

   --  
   procedure Index_V1Historical_Messages
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       After_Ts : in Swagger.Nullable_Integer;
       Last_Ccseq : in Swagger.Nullable_Integer;
       Limit : in Swagger.Nullable_Integer;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Return_404On_Empty_Response : in Swagger.Nullable_Boolean;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("after_ts", After_Ts);
      URI.Add_Param ("last_ccseq", Last_Ccseq);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Add_Param ("return_404_on_empty_response", Return_404On_Empty_Response);
      URI.Set_Path ("/index/v1/historical/messages");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Index_V1Historical_Messages;

   --  
   procedure Index_V1Historical_Messages_Hour
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       Hour_Ts : in Swagger.Nullable_Integer;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Return_404On_Empty_Response : in Swagger.Nullable_Boolean;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("hour_ts", Hour_Ts);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Add_Param ("return_404_on_empty_response", Return_404On_Empty_Response);
      URI.Set_Path ("/index/v1/historical/messages/hour");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Index_V1Historical_Messages_Hour;

   --  
   procedure Index_V1Historical_Minutes
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       Groups : in Swagger.UString_Vectors.Vector;
       Limit : in Swagger.Nullable_Integer;
       To_Ts : in Swagger.Nullable_Integer;
       Aggregate : in Swagger.Nullable_Integer;
       Fill : in Swagger.Nullable_Boolean;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("to_ts", To_Ts);
      URI.Add_Param ("aggregate", Aggregate);
      URI.Add_Param ("fill", Fill);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Set_Path ("/index/v1/historical/minutes");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Index_V1Historical_Minutes;

   --  
   procedure Index_V1Latest_Instrument_Metadata
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instruments : in Swagger.UString_Vectors.Vector;
       Groups : in Swagger.UString_Vectors.Vector;
       Mapping_Priority : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instruments", Instruments);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Set_Path ("/index/v1/latest/instrument/metadata");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Index_V1Latest_Instrument_Metadata;

   --  
   procedure Index_V1Latest_Tick
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instruments : in Swagger.UString_Vectors.Vector;
       Groups : in Swagger.UString_Vectors.Vector;
       Mapping_Priority : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instruments", Instruments);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Set_Path ("/index/v1/latest/tick");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Index_V1Latest_Tick;

   --  
   procedure Index_V1Markets
      (Client : in out Client_Type;
       Market : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Set_Path ("/index/v1/markets");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Index_V1Markets;

   --  
   procedure Index_V1Markets_Instruments
      (Client : in out Client_Type;
       Market : in Swagger.Nullable_UString;
       Instrument : in Swagger.Nullable_UString;
       Instrument_Status : in Swagger.UString_Vectors.Vector;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("instrument_status", Instrument_Status);
      URI.Set_Path ("/index/v1/markets/instruments");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Index_V1Markets_Instruments;

   --  
   procedure Index_V1Markets_Instruments_Unmapped
      (Client : in out Client_Type;
       Market : in Swagger.Nullable_UString;
       Instrument : in Swagger.Nullable_UString;
       Instrument_Status : in Swagger.UString_Vectors.Vector;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("instrument_status", Instrument_Status);
      URI.Set_Path ("/index/v1/markets/instruments/unmapped");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Index_V1Markets_Instruments_Unmapped;

   --  
   procedure News_V1Article_List
      (Client : in out Client_Type;
       Source_Ids : in Swagger.UString_Vectors.Vector;
       Lang : in Swagger.Nullable_UString;
       Categories : in Swagger.UString_Vectors.Vector;
       Exclude_Categories : in Swagger.UString_Vectors.Vector;
       To_Ts : in Swagger.Nullable_Integer;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("source_ids", Source_Ids);
      URI.Add_Param ("lang", Lang);
      URI.Add_Param ("categories", Categories);
      URI.Add_Param ("exclude_categories", Exclude_Categories);
      URI.Add_Param ("to_ts", To_Ts);
      URI.Set_Path ("/news/v1/article/list");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end News_V1Article_List;

   --  
   procedure News_V1Category_List
      (Client : in out Client_Type;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Set_Path ("/news/v1/category/list");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end News_V1Category_List;

   --  
   procedure News_V1Source_List
      (Client : in out Client_Type;
       Lang : in Swagger.Nullable_UString;
       P_Type : in Swagger.Nullable_UString;
       Status : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("lang", Lang);
      URI.Add_Param ("type", P_Type);
      URI.Add_Param ("status", Status);
      URI.Set_Path ("/news/v1/source/list");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end News_V1Source_List;

   --  
   procedure Overview_V1Historical_Marketcap_All_Assets_Days
      (Client : in out Client_Type;
       Groups : in Swagger.UString_Vectors.Vector;
       Limit : in Swagger.Nullable_Integer;
       To_Ts : in Swagger.Nullable_Integer;
       Aggregate : in Swagger.Nullable_Integer;
       Fill : in Swagger.Nullable_Boolean;
       Response_Format : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("to_ts", To_Ts);
      URI.Add_Param ("aggregate", Aggregate);
      URI.Add_Param ("fill", Fill);
      URI.Add_Param ("response_format", Response_Format);
      URI.Set_Path ("/overview/v1/historical/marketcap/all/assets/days");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Overview_V1Historical_Marketcap_All_Assets_Days;

   --  
   procedure Overview_V1Historical_Marketcap_All_Assets_Hours
      (Client : in out Client_Type;
       Groups : in Swagger.UString_Vectors.Vector;
       Limit : in Swagger.Nullable_Integer;
       To_Ts : in Swagger.Nullable_Integer;
       Aggregate : in Swagger.Nullable_Integer;
       Fill : in Swagger.Nullable_Boolean;
       Response_Format : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("to_ts", To_Ts);
      URI.Add_Param ("aggregate", Aggregate);
      URI.Add_Param ("fill", Fill);
      URI.Add_Param ("response_format", Response_Format);
      URI.Set_Path ("/overview/v1/historical/marketcap/all/assets/hours");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Overview_V1Historical_Marketcap_All_Assets_Hours;

   --  
   procedure Overview_V1Historical_Marketcap_Ftw_Assets_Days
      (Client : in out Client_Type;
       Groups : in Swagger.UString_Vectors.Vector;
       Limit : in Swagger.Nullable_Integer;
       To_Ts : in Swagger.Nullable_Integer;
       Aggregate : in Swagger.Nullable_Integer;
       Fill : in Swagger.Nullable_Boolean;
       Response_Format : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("to_ts", To_Ts);
      URI.Add_Param ("aggregate", Aggregate);
      URI.Add_Param ("fill", Fill);
      URI.Add_Param ("response_format", Response_Format);
      URI.Set_Path ("/overview/v1/historical/marketcap/ftw/assets/days");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Overview_V1Historical_Marketcap_Ftw_Assets_Days;

   --  
   procedure Overview_V1Historical_Marketcap_Ftw_Assets_Hours
      (Client : in out Client_Type;
       Groups : in Swagger.UString_Vectors.Vector;
       Limit : in Swagger.Nullable_Integer;
       To_Ts : in Swagger.Nullable_Integer;
       Aggregate : in Swagger.Nullable_Integer;
       Fill : in Swagger.Nullable_Boolean;
       Response_Format : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("to_ts", To_Ts);
      URI.Add_Param ("aggregate", Aggregate);
      URI.Add_Param ("fill", Fill);
      URI.Add_Param ("response_format", Response_Format);
      URI.Set_Path ("/overview/v1/historical/marketcap/ftw/assets/hours");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Overview_V1Historical_Marketcap_Ftw_Assets_Hours;

   --  
   procedure Overview_V1Latest_Marketcap_All_Tick
      (Client : in out Client_Type;
       Groups : in Swagger.UString_Vectors.Vector;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("groups", Groups);
      URI.Set_Path ("/overview/v1/latest/marketcap/all/tick");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Overview_V1Latest_Marketcap_All_Tick;

   --  
   procedure Overview_V1Latest_Marketcap_Ftw_Tick
      (Client : in out Client_Type;
       Groups : in Swagger.UString_Vectors.Vector;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("groups", Groups);
      URI.Set_Path ("/overview/v1/latest/marketcap/ftw/tick");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Overview_V1Latest_Marketcap_Ftw_Tick;

   --  
   procedure Index_Cc_V1Historical_Days
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       Groups : in Swagger.UString_Vectors.Vector;
       Limit : in Swagger.Nullable_Integer;
       To_Ts : in Swagger.Nullable_Integer;
       Aggregate : in Swagger.Nullable_Integer;
       Fill : in Swagger.Nullable_Boolean;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("to_ts", To_Ts);
      URI.Add_Param ("aggregate", Aggregate);
      URI.Add_Param ("fill", Fill);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Set_Path ("/index/cc/v1/historical/days");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Index_Cc_V1Historical_Days;

   --  
   procedure Index_Cc_V1Historical_Hours
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       Groups : in Swagger.UString_Vectors.Vector;
       Limit : in Swagger.Nullable_Integer;
       To_Ts : in Swagger.Nullable_Integer;
       Aggregate : in Swagger.Nullable_Integer;
       Fill : in Swagger.Nullable_Boolean;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("to_ts", To_Ts);
      URI.Add_Param ("aggregate", Aggregate);
      URI.Add_Param ("fill", Fill);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Set_Path ("/index/cc/v1/historical/hours");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Index_Cc_V1Historical_Hours;

   --  
   procedure Index_Cc_V1Historical_Messages
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       After_Ts : in Swagger.Nullable_Integer;
       Last_Ccseq : in Swagger.Nullable_Integer;
       Mapping_Priority : in Swagger.Nullable_UString;
       Limit : in Swagger.Nullable_Integer;
       Response_Format : in Swagger.Nullable_UString;
       Return_404On_Empty_Response : in Swagger.Nullable_Boolean;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("after_ts", After_Ts);
      URI.Add_Param ("last_ccseq", Last_Ccseq);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("response_format", Response_Format);
      URI.Add_Param ("return_404_on_empty_response", Return_404On_Empty_Response);
      URI.Set_Path ("/index/cc/v1/historical/messages");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Index_Cc_V1Historical_Messages;

   --  
   procedure Index_Cc_V1Historical_Messages_Hour
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       Hour_Ts : in Swagger.Nullable_Integer;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Return_404On_Empty_Response : in Swagger.Nullable_Boolean;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("hour_ts", Hour_Ts);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Add_Param ("return_404_on_empty_response", Return_404On_Empty_Response);
      URI.Set_Path ("/index/cc/v1/historical/messages/hour");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Index_Cc_V1Historical_Messages_Hour;

   --  
   procedure Index_Cc_V1Historical_Minutes
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       Groups : in Swagger.UString_Vectors.Vector;
       Limit : in Swagger.Nullable_Integer;
       To_Ts : in Swagger.Nullable_Integer;
       Aggregate : in Swagger.Nullable_Integer;
       Fill : in Swagger.Nullable_Boolean;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("to_ts", To_Ts);
      URI.Add_Param ("aggregate", Aggregate);
      URI.Add_Param ("fill", Fill);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Set_Path ("/index/cc/v1/historical/minutes");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Index_Cc_V1Historical_Minutes;

   --  
   procedure Index_Cc_V1Latest_Instrument_Metadata
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instruments : in Swagger.UString_Vectors.Vector;
       Groups : in Swagger.UString_Vectors.Vector;
       Mapping_Priority : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instruments", Instruments);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Set_Path ("/index/cc/v1/latest/instrument/metadata");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Index_Cc_V1Latest_Instrument_Metadata;

   --  
   procedure Index_Cc_V1Latest_Tick
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instruments : in Swagger.UString_Vectors.Vector;
       Groups : in Swagger.UString_Vectors.Vector;
       Mapping_Priority : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instruments", Instruments);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Set_Path ("/index/cc/v1/latest/tick");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Index_Cc_V1Latest_Tick;

   --  
   procedure Index_Cc_V1Markets
      (Client : in out Client_Type;
       Market : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Set_Path ("/index/cc/v1/markets");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Index_Cc_V1Markets;

   --  
   procedure Index_Cc_V1Markets_Instruments
      (Client : in out Client_Type;
       Market : in Swagger.Nullable_UString;
       Instrument : in Swagger.Nullable_UString;
       Instrument_Status : in Swagger.UString_Vectors.Vector;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("instrument_status", Instrument_Status);
      URI.Set_Path ("/index/cc/v1/markets/instruments");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Index_Cc_V1Markets_Instruments;

   --  
   procedure Index_Cc_V1Markets_Instruments_Unmapped
      (Client : in out Client_Type;
       Market : in Swagger.Nullable_UString;
       Instrument : in Swagger.Nullable_UString;
       Instrument_Status : in Swagger.UString_Vectors.Vector;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("instrument_status", Instrument_Status);
      URI.Set_Path ("/index/cc/v1/markets/instruments/unmapped");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Index_Cc_V1Markets_Instruments_Unmapped;

   --  
   procedure Spot_V1Historical_Days
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       Groups : in Swagger.UString_Vectors.Vector;
       Limit : in Swagger.Nullable_Integer;
       To_Ts : in Swagger.Nullable_Integer;
       Aggregate : in Swagger.Nullable_Integer;
       Fill : in Swagger.Nullable_Boolean;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Result : out .Models.SPOTINSTRUMENTHISTODATARESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("to_ts", To_Ts);
      URI.Add_Param ("aggregate", Aggregate);
      URI.Add_Param ("fill", Fill);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Set_Path ("/spot/v1/historical/days");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Spot_V1Historical_Days;

   --  
   procedure Spot_V1Historical_Hours
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       Groups : in Swagger.UString_Vectors.Vector;
       Limit : in Swagger.Nullable_Integer;
       To_Ts : in Swagger.Nullable_Integer;
       Aggregate : in Swagger.Nullable_Integer;
       Fill : in Swagger.Nullable_Boolean;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Result : out .Models.SPOTINSTRUMENTHISTODATARESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("to_ts", To_Ts);
      URI.Add_Param ("aggregate", Aggregate);
      URI.Add_Param ("fill", Fill);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Set_Path ("/spot/v1/historical/hours");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Spot_V1Historical_Hours;

   --  
   procedure Spot_V1Historical_Minutes
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       Groups : in Swagger.UString_Vectors.Vector;
       Limit : in Swagger.Nullable_Integer;
       To_Ts : in Swagger.Nullable_Integer;
       Aggregate : in Swagger.Nullable_Integer;
       Fill : in Swagger.Nullable_Boolean;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Result : out .Models.SPOTINSTRUMENTHISTODATARESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("to_ts", To_Ts);
      URI.Add_Param ("aggregate", Aggregate);
      URI.Add_Param ("fill", Fill);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Set_Path ("/spot/v1/historical/minutes");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Spot_V1Historical_Minutes;

   --  
   procedure Spot_V1Historical_Orderbook_L2Snapshot_Minute
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       Minute_Ts : in Integer;
       Depth : in Swagger.Nullable_Integer;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("minute_ts", Minute_Ts);
      URI.Add_Param ("depth", Depth);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Set_Path ("/spot/v1/historical/orderbook/l2/snapshot/minute");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Spot_V1Historical_Orderbook_L2Snapshot_Minute;

   --  
   procedure Spot_V1Historical_Trades
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       After_Ts : in Swagger.Nullable_Integer;
       Last_Ccseq : in Swagger.Nullable_Integer;
       Limit : in Swagger.Nullable_Integer;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Return_404On_Empty_Response : in Swagger.Nullable_Boolean;
       Result : out .Models.SPOTINSTRUMENTTRADERESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("after_ts", After_Ts);
      URI.Add_Param ("last_ccseq", Last_Ccseq);
      URI.Add_Param ("limit", Limit);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Add_Param ("return_404_on_empty_response", Return_404On_Empty_Response);
      URI.Set_Path ("/spot/v1/historical/trades");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Spot_V1Historical_Trades;

   --  
   procedure Spot_V1Historical_Trades_Hour
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instrument : in Swagger.UString;
       Hour_Ts : in Swagger.Nullable_Integer;
       Mapping_Priority : in Swagger.Nullable_UString;
       Response_Format : in Swagger.Nullable_UString;
       Return_404On_Empty_Response : in Swagger.Nullable_Boolean;
       Result : out .Models.SPOTINSTRUMENTTRADERESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("hour_ts", Hour_Ts);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Add_Param ("response_format", Response_Format);
      URI.Add_Param ("return_404_on_empty_response", Return_404On_Empty_Response);
      URI.Set_Path ("/spot/v1/historical/trades/hour");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Spot_V1Historical_Trades_Hour;

   --  
   procedure Spot_V1Latest_Instrument_Metadata
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instruments : in Swagger.UString_Vectors.Vector;
       Groups : in Swagger.UString_Vectors.Vector;
       Mapping_Priority : in Swagger.Nullable_UString;
       Result : out .Models.SPOTINSTRUMENTMETADATARESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instruments", Instruments);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Set_Path ("/spot/v1/latest/instrument/metadata");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Spot_V1Latest_Instrument_Metadata;

   --  
   procedure Spot_V1Latest_Tick
      (Client : in out Client_Type;
       Market : in Swagger.UString;
       Instruments : in Swagger.UString_Vectors.Vector;
       Groups : in Swagger.UString_Vectors.Vector;
       Mapping_Priority : in Swagger.Nullable_UString;
       Result : out .Models.SPOTINSTRUMENTMARKETDATARESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instruments", Instruments);
      URI.Add_Param ("groups", Groups);
      URI.Add_Param ("mapping_priority", Mapping_Priority);
      URI.Set_Path ("/spot/v1/latest/tick");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Spot_V1Latest_Tick;

   --  
   procedure Spot_V1Markets
      (Client : in out Client_Type;
       Market : in Swagger.Nullable_UString;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Set_Path ("/spot/v1/markets");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Spot_V1Markets;

   --  
   procedure Spot_V1Markets_Instruments
      (Client : in out Client_Type;
       Market : in Swagger.Nullable_UString;
       Instrument : in Swagger.Nullable_UString;
       Instrument_Status : in Swagger.UString_Vectors.Vector;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("instrument_status", Instrument_Status);
      URI.Set_Path ("/spot/v1/markets/instruments");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Spot_V1Markets_Instruments;

   --  
   procedure Spot_V1Markets_Instruments_Unmapped
      (Client : in out Client_Type;
       Market : in Swagger.Nullable_UString;
       Instrument : in Swagger.Nullable_UString;
       Instrument_Status : in Swagger.UString_Vectors.Vector;
       Result : out .Models.GENERICRESPONSE_Type) is
      URI   : Swagger.Clients.URI_Type;
      Reply : Swagger.Value_Type;
   begin
      Client.Set_Accept ((1 => Swagger.Clients.APPLICATION_JSON));

      URI.Add_Param ("market", Market);
      URI.Add_Param ("instrument", Instrument);
      URI.Add_Param ("instrument_status", Instrument_Status);
      URI.Set_Path ("/spot/v1/markets/instruments/unmapped");
      Client.Call (Swagger.Clients.GET, URI, Reply);
      .Models.Deserialize (Reply, "", Result);
   end Spot_V1Markets_Instruments_Unmapped;
end .Clients;
