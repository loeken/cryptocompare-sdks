--[[
  CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry

  CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.

  The version of the OpenAPI document: 2.1.1
  Contact: data@cryptocompare.com
  Generated by: https://openapi-generator.tech
]]

-- spot_instrument_trade class
local spot_instrument_trade = {}
local spot_instrument_trade_mt = {
	__name = "spot_instrument_trade";
	__index = spot_instrument_trade;
}

local function cast_spot_instrument_trade(t)
	return setmetatable(t, spot_instrument_trade_mt)
end

local function new_spot_instrument_trade(BASE, CCSEQ, ID, INSTRUMENT, MAPPED_INSTRUMENT, MARKET, PRICE, QUANTITY, QUOTE, QUOTE_QUANTITY, RECEIVED_TIMESTAMP, RECEIVED_TIMESTAMP_NS, SIDE, SOURCE, TIMESTAMP, TIMESTAMP_NS, TYPE)
	return cast_spot_instrument_trade({
		["BASE"] = BASE;
		["CCSEQ"] = CCSEQ;
		["ID"] = ID;
		["INSTRUMENT"] = INSTRUMENT;
		["MAPPED_INSTRUMENT"] = MAPPED_INSTRUMENT;
		["MARKET"] = MARKET;
		["PRICE"] = PRICE;
		["QUANTITY"] = QUANTITY;
		["QUOTE"] = QUOTE;
		["QUOTE_QUANTITY"] = QUOTE_QUANTITY;
		["RECEIVED_TIMESTAMP"] = RECEIVED_TIMESTAMP;
		["RECEIVED_TIMESTAMP_NS"] = RECEIVED_TIMESTAMP_NS;
		["SIDE"] = SIDE;
		["SOURCE"] = SOURCE;
		["TIMESTAMP"] = TIMESTAMP;
		["TIMESTAMP_NS"] = TIMESTAMP_NS;
		["TYPE"] = TYPE;
	})
end

return {
	cast = cast_spot_instrument_trade;
	new = new_spot_instrument_trade;
}
