# coding: utf-8

"""
    CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry

    CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.  # noqa: E501

    The version of the OpenAPI document: 2.1.1
    Contact: data@cryptocompare.com
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from openapi_client.configuration import Configuration


class SPOTINSTRUMENTMETADATA(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'first_seen_on_blob_ts': 'int',
        'first_seen_on_fix_ts': 'int',
        'first_seen_on_hardcoded_ts': 'int',
        'first_seen_on_index_composition_ts': 'int',
        'first_seen_on_nsq_ts': 'int',
        'first_seen_on_polling_ts': 'int',
        'first_seen_on_streaming_ts': 'int',
        'first_trade_spot_from_backfill': 'object',
        'first_trade_spot_from_backfill_external': 'object',
        'first_trade_spot_from_blob': 'object',
        'first_trade_spot_from_blob_external': 'object',
        'first_trade_spot_from_calculated': 'object',
        'first_trade_spot_from_calculated_external': 'object',
        'first_trade_spot_from_fix': 'object',
        'first_trade_spot_from_fix_external': 'object',
        'first_trade_spot_from_go': 'object',
        'first_trade_spot_from_go_external': 'object',
        'first_trade_spot_from_polling': 'object',
        'first_trade_spot_from_polling_external': 'object',
        'first_trade_spot_from_streaming': 'object',
        'first_trade_spot_from_streaming_external': 'object',
        'host_migration_destination': 'str',
        'host_migration_source': 'str',
        'host_migration_status': 'str',
        'instrument': 'str',
        'instrument_external_data': 'str',
        'instrument_mapping': 'object',
        'instrument_mapping_history': 'list[str]',
        'instrument_source_backfill': 'str',
        'instrument_source_blob': 'str',
        'instrument_source_calculated': 'str',
        'instrument_source_fix': 'str',
        'instrument_source_go': 'str',
        'instrument_source_polling': 'str',
        'instrument_source_streaming': 'str',
        'instrument_status': 'str',
        'instrument_trade_spot_from_backfill_last_proxied_rest_request': 'object',
        'instrument_trade_spot_from_backfill_rest_uri_last_request_ts': 'int',
        'instrument_trade_spot_from_backfill_rest_uri_last_response_ts': 'int',
        'instrument_trade_spot_from_backfill_rest_uri_next_request_ts': 'int',
        'instrument_trade_spot_from_blob_last_proxied_rest_request': 'object',
        'instrument_trade_spot_from_blob_rest_uri_last_request_ts': 'int',
        'instrument_trade_spot_from_blob_rest_uri_last_response_ts': 'int',
        'instrument_trade_spot_from_blob_rest_uri_next_request_ts': 'int',
        'instrument_trade_spot_from_calculated_last_proxied_rest_request': 'object',
        'instrument_trade_spot_from_calculated_rest_uri_last_request_ts': 'int',
        'instrument_trade_spot_from_calculated_rest_uri_last_response_ts': 'int',
        'instrument_trade_spot_from_calculated_rest_uri_next_request_ts': 'int',
        'instrument_trade_spot_from_fix_last_proxied_rest_request': 'object',
        'instrument_trade_spot_from_fix_rest_uri_last_request_ts': 'int',
        'instrument_trade_spot_from_fix_rest_uri_last_response_ts': 'int',
        'instrument_trade_spot_from_fix_rest_uri_next_request_ts': 'int',
        'instrument_trade_spot_from_go_last_proxied_rest_request': 'object',
        'instrument_trade_spot_from_go_rest_uri_last_request_ts': 'int',
        'instrument_trade_spot_from_go_rest_uri_last_response_ts': 'int',
        'instrument_trade_spot_from_go_rest_uri_next_request_ts': 'int',
        'instrument_trade_spot_from_polling_last_proxied_rest_request': 'object',
        'instrument_trade_spot_from_polling_rest_uri_last_request_ts': 'int',
        'instrument_trade_spot_from_polling_rest_uri_last_response_ts': 'int',
        'instrument_trade_spot_from_polling_rest_uri_next_request_ts': 'int',
        'instrument_trade_spot_from_streaming_last_proxied_rest_request': 'object',
        'instrument_trade_spot_from_streaming_rest_uri_last_request_ts': 'int',
        'instrument_trade_spot_from_streaming_rest_uri_last_response_ts': 'int',
        'instrument_trade_spot_from_streaming_rest_uri_next_request_ts': 'int',
        'instrument_trade_spot_is_ready_for_streaming_integration': 'bool',
        'instrument_trade_spot_rest_uri': 'str',
        'instrument_trade_spot_rest_url': 'str',
        'instrument_trade_spot_streaming_subscription': 'str',
        'last_concurrent_batch_of_trades_spot_ms': 'int',
        'last_seen_on_blob_ts': 'int',
        'last_seen_on_fix_ts': 'int',
        'last_seen_on_hardcoded_ts': 'int',
        'last_seen_on_index_composition_ts': 'int',
        'last_seen_on_nsq_ts': 'int',
        'last_seen_on_polling_ts': 'int',
        'last_seen_on_streaming_ts': 'int',
        'last_trade_spot_from_backfill': 'object',
        'last_trade_spot_from_backfill_external': 'object',
        'last_trade_spot_from_blob': 'object',
        'last_trade_spot_from_blob_external': 'object',
        'last_trade_spot_from_calculated': 'object',
        'last_trade_spot_from_calculated_external': 'object',
        'last_trade_spot_from_fix': 'object',
        'last_trade_spot_from_fix_external': 'object',
        'last_trade_spot_from_go': 'object',
        'last_trade_spot_from_go_external': 'object',
        'last_trade_spot_from_polling': 'object',
        'last_trade_spot_from_polling_external': 'object',
        'last_trade_spot_from_streaming': 'object',
        'last_trade_spot_from_streaming_external': 'object',
        'metadata_version': 'int',
        'processing_trades_from_blob_status': 'str',
        'total_trades_spot': 'int',
        'unstructured_trade_spot_from_backfill_internal_data': 'object',
        'unstructured_trade_spot_from_blob_internal_data': 'object',
        'unstructured_trade_spot_from_calculated_internal_data': 'object',
        'unstructured_trade_spot_from_fix_internal_data': 'object',
        'unstructured_trade_spot_from_go_internal_data': 'object',
        'unstructured_trade_spot_from_polling_internal_data': 'object',
        'unstructured_trade_spot_from_streaming_internal_data': 'object'
    }

    attribute_map = {
        'first_seen_on_blob_ts': 'FIRST_SEEN_ON_BLOB_TS',
        'first_seen_on_fix_ts': 'FIRST_SEEN_ON_FIX_TS',
        'first_seen_on_hardcoded_ts': 'FIRST_SEEN_ON_HARDCODED_TS',
        'first_seen_on_index_composition_ts': 'FIRST_SEEN_ON_INDEX_COMPOSITION_TS',
        'first_seen_on_nsq_ts': 'FIRST_SEEN_ON_NSQ_TS',
        'first_seen_on_polling_ts': 'FIRST_SEEN_ON_POLLING_TS',
        'first_seen_on_streaming_ts': 'FIRST_SEEN_ON_STREAMING_TS',
        'first_trade_spot_from_backfill': 'FIRST_TRADE_SPOT_FROM_BACKFILL',
        'first_trade_spot_from_backfill_external': 'FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL',
        'first_trade_spot_from_blob': 'FIRST_TRADE_SPOT_FROM_BLOB',
        'first_trade_spot_from_blob_external': 'FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL',
        'first_trade_spot_from_calculated': 'FIRST_TRADE_SPOT_FROM_CALCULATED',
        'first_trade_spot_from_calculated_external': 'FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL',
        'first_trade_spot_from_fix': 'FIRST_TRADE_SPOT_FROM_FIX',
        'first_trade_spot_from_fix_external': 'FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL',
        'first_trade_spot_from_go': 'FIRST_TRADE_SPOT_FROM_GO',
        'first_trade_spot_from_go_external': 'FIRST_TRADE_SPOT_FROM_GO_EXTERNAL',
        'first_trade_spot_from_polling': 'FIRST_TRADE_SPOT_FROM_POLLING',
        'first_trade_spot_from_polling_external': 'FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL',
        'first_trade_spot_from_streaming': 'FIRST_TRADE_SPOT_FROM_STREAMING',
        'first_trade_spot_from_streaming_external': 'FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL',
        'host_migration_destination': 'HOST_MIGRATION_DESTINATION',
        'host_migration_source': 'HOST_MIGRATION_SOURCE',
        'host_migration_status': 'HOST_MIGRATION_STATUS',
        'instrument': 'INSTRUMENT',
        'instrument_external_data': 'INSTRUMENT_EXTERNAL_DATA',
        'instrument_mapping': 'INSTRUMENT_MAPPING',
        'instrument_mapping_history': 'INSTRUMENT_MAPPING_HISTORY',
        'instrument_source_backfill': 'INSTRUMENT_SOURCE_BACKFILL',
        'instrument_source_blob': 'INSTRUMENT_SOURCE_BLOB',
        'instrument_source_calculated': 'INSTRUMENT_SOURCE_CALCULATED',
        'instrument_source_fix': 'INSTRUMENT_SOURCE_FIX',
        'instrument_source_go': 'INSTRUMENT_SOURCE_GO',
        'instrument_source_polling': 'INSTRUMENT_SOURCE_POLLING',
        'instrument_source_streaming': 'INSTRUMENT_SOURCE_STREAMING',
        'instrument_status': 'INSTRUMENT_STATUS',
        'instrument_trade_spot_from_backfill_last_proxied_rest_request': 'INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST',
        'instrument_trade_spot_from_backfill_rest_uri_last_request_ts': 'INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS',
        'instrument_trade_spot_from_backfill_rest_uri_last_response_ts': 'INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS',
        'instrument_trade_spot_from_backfill_rest_uri_next_request_ts': 'INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS',
        'instrument_trade_spot_from_blob_last_proxied_rest_request': 'INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST',
        'instrument_trade_spot_from_blob_rest_uri_last_request_ts': 'INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS',
        'instrument_trade_spot_from_blob_rest_uri_last_response_ts': 'INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS',
        'instrument_trade_spot_from_blob_rest_uri_next_request_ts': 'INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS',
        'instrument_trade_spot_from_calculated_last_proxied_rest_request': 'INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST',
        'instrument_trade_spot_from_calculated_rest_uri_last_request_ts': 'INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS',
        'instrument_trade_spot_from_calculated_rest_uri_last_response_ts': 'INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS',
        'instrument_trade_spot_from_calculated_rest_uri_next_request_ts': 'INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS',
        'instrument_trade_spot_from_fix_last_proxied_rest_request': 'INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST',
        'instrument_trade_spot_from_fix_rest_uri_last_request_ts': 'INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS',
        'instrument_trade_spot_from_fix_rest_uri_last_response_ts': 'INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS',
        'instrument_trade_spot_from_fix_rest_uri_next_request_ts': 'INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS',
        'instrument_trade_spot_from_go_last_proxied_rest_request': 'INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST',
        'instrument_trade_spot_from_go_rest_uri_last_request_ts': 'INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS',
        'instrument_trade_spot_from_go_rest_uri_last_response_ts': 'INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS',
        'instrument_trade_spot_from_go_rest_uri_next_request_ts': 'INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS',
        'instrument_trade_spot_from_polling_last_proxied_rest_request': 'INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST',
        'instrument_trade_spot_from_polling_rest_uri_last_request_ts': 'INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS',
        'instrument_trade_spot_from_polling_rest_uri_last_response_ts': 'INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS',
        'instrument_trade_spot_from_polling_rest_uri_next_request_ts': 'INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS',
        'instrument_trade_spot_from_streaming_last_proxied_rest_request': 'INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST',
        'instrument_trade_spot_from_streaming_rest_uri_last_request_ts': 'INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS',
        'instrument_trade_spot_from_streaming_rest_uri_last_response_ts': 'INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS',
        'instrument_trade_spot_from_streaming_rest_uri_next_request_ts': 'INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS',
        'instrument_trade_spot_is_ready_for_streaming_integration': 'INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION',
        'instrument_trade_spot_rest_uri': 'INSTRUMENT_TRADE_SPOT_REST_URI',
        'instrument_trade_spot_rest_url': 'INSTRUMENT_TRADE_SPOT_REST_URL',
        'instrument_trade_spot_streaming_subscription': 'INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION',
        'last_concurrent_batch_of_trades_spot_ms': 'LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS',
        'last_seen_on_blob_ts': 'LAST_SEEN_ON_BLOB_TS',
        'last_seen_on_fix_ts': 'LAST_SEEN_ON_FIX_TS',
        'last_seen_on_hardcoded_ts': 'LAST_SEEN_ON_HARDCODED_TS',
        'last_seen_on_index_composition_ts': 'LAST_SEEN_ON_INDEX_COMPOSITION_TS',
        'last_seen_on_nsq_ts': 'LAST_SEEN_ON_NSQ_TS',
        'last_seen_on_polling_ts': 'LAST_SEEN_ON_POLLING_TS',
        'last_seen_on_streaming_ts': 'LAST_SEEN_ON_STREAMING_TS',
        'last_trade_spot_from_backfill': 'LAST_TRADE_SPOT_FROM_BACKFILL',
        'last_trade_spot_from_backfill_external': 'LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL',
        'last_trade_spot_from_blob': 'LAST_TRADE_SPOT_FROM_BLOB',
        'last_trade_spot_from_blob_external': 'LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL',
        'last_trade_spot_from_calculated': 'LAST_TRADE_SPOT_FROM_CALCULATED',
        'last_trade_spot_from_calculated_external': 'LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL',
        'last_trade_spot_from_fix': 'LAST_TRADE_SPOT_FROM_FIX',
        'last_trade_spot_from_fix_external': 'LAST_TRADE_SPOT_FROM_FIX_EXTERNAL',
        'last_trade_spot_from_go': 'LAST_TRADE_SPOT_FROM_GO',
        'last_trade_spot_from_go_external': 'LAST_TRADE_SPOT_FROM_GO_EXTERNAL',
        'last_trade_spot_from_polling': 'LAST_TRADE_SPOT_FROM_POLLING',
        'last_trade_spot_from_polling_external': 'LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL',
        'last_trade_spot_from_streaming': 'LAST_TRADE_SPOT_FROM_STREAMING',
        'last_trade_spot_from_streaming_external': 'LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL',
        'metadata_version': 'METADATA_VERSION',
        'processing_trades_from_blob_status': 'PROCESSING_TRADES_FROM_BLOB_STATUS',
        'total_trades_spot': 'TOTAL_TRADES_SPOT',
        'unstructured_trade_spot_from_backfill_internal_data': 'UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA',
        'unstructured_trade_spot_from_blob_internal_data': 'UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA',
        'unstructured_trade_spot_from_calculated_internal_data': 'UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA',
        'unstructured_trade_spot_from_fix_internal_data': 'UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA',
        'unstructured_trade_spot_from_go_internal_data': 'UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA',
        'unstructured_trade_spot_from_polling_internal_data': 'UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA',
        'unstructured_trade_spot_from_streaming_internal_data': 'UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA'
    }

    def __init__(self, first_seen_on_blob_ts=None, first_seen_on_fix_ts=None, first_seen_on_hardcoded_ts=None, first_seen_on_index_composition_ts=None, first_seen_on_nsq_ts=None, first_seen_on_polling_ts=None, first_seen_on_streaming_ts=None, first_trade_spot_from_backfill=None, first_trade_spot_from_backfill_external=None, first_trade_spot_from_blob=None, first_trade_spot_from_blob_external=None, first_trade_spot_from_calculated=None, first_trade_spot_from_calculated_external=None, first_trade_spot_from_fix=None, first_trade_spot_from_fix_external=None, first_trade_spot_from_go=None, first_trade_spot_from_go_external=None, first_trade_spot_from_polling=None, first_trade_spot_from_polling_external=None, first_trade_spot_from_streaming=None, first_trade_spot_from_streaming_external=None, host_migration_destination=None, host_migration_source=None, host_migration_status=None, instrument=None, instrument_external_data=None, instrument_mapping=None, instrument_mapping_history=[], instrument_source_backfill=None, instrument_source_blob=None, instrument_source_calculated=None, instrument_source_fix=None, instrument_source_go=None, instrument_source_polling=None, instrument_source_streaming=None, instrument_status='ACTIVE', instrument_trade_spot_from_backfill_last_proxied_rest_request=None, instrument_trade_spot_from_backfill_rest_uri_last_request_ts=None, instrument_trade_spot_from_backfill_rest_uri_last_response_ts=None, instrument_trade_spot_from_backfill_rest_uri_next_request_ts=None, instrument_trade_spot_from_blob_last_proxied_rest_request=None, instrument_trade_spot_from_blob_rest_uri_last_request_ts=None, instrument_trade_spot_from_blob_rest_uri_last_response_ts=None, instrument_trade_spot_from_blob_rest_uri_next_request_ts=None, instrument_trade_spot_from_calculated_last_proxied_rest_request=None, instrument_trade_spot_from_calculated_rest_uri_last_request_ts=None, instrument_trade_spot_from_calculated_rest_uri_last_response_ts=None, instrument_trade_spot_from_calculated_rest_uri_next_request_ts=None, instrument_trade_spot_from_fix_last_proxied_rest_request=None, instrument_trade_spot_from_fix_rest_uri_last_request_ts=None, instrument_trade_spot_from_fix_rest_uri_last_response_ts=None, instrument_trade_spot_from_fix_rest_uri_next_request_ts=None, instrument_trade_spot_from_go_last_proxied_rest_request=None, instrument_trade_spot_from_go_rest_uri_last_request_ts=None, instrument_trade_spot_from_go_rest_uri_last_response_ts=None, instrument_trade_spot_from_go_rest_uri_next_request_ts=None, instrument_trade_spot_from_polling_last_proxied_rest_request=None, instrument_trade_spot_from_polling_rest_uri_last_request_ts=None, instrument_trade_spot_from_polling_rest_uri_last_response_ts=None, instrument_trade_spot_from_polling_rest_uri_next_request_ts=None, instrument_trade_spot_from_streaming_last_proxied_rest_request=None, instrument_trade_spot_from_streaming_rest_uri_last_request_ts=None, instrument_trade_spot_from_streaming_rest_uri_last_response_ts=None, instrument_trade_spot_from_streaming_rest_uri_next_request_ts=None, instrument_trade_spot_is_ready_for_streaming_integration=False, instrument_trade_spot_rest_uri=None, instrument_trade_spot_rest_url=None, instrument_trade_spot_streaming_subscription=None, last_concurrent_batch_of_trades_spot_ms=None, last_seen_on_blob_ts=None, last_seen_on_fix_ts=None, last_seen_on_hardcoded_ts=None, last_seen_on_index_composition_ts=None, last_seen_on_nsq_ts=None, last_seen_on_polling_ts=None, last_seen_on_streaming_ts=None, last_trade_spot_from_backfill=None, last_trade_spot_from_backfill_external=None, last_trade_spot_from_blob=None, last_trade_spot_from_blob_external=None, last_trade_spot_from_calculated=None, last_trade_spot_from_calculated_external=None, last_trade_spot_from_fix=None, last_trade_spot_from_fix_external=None, last_trade_spot_from_go=None, last_trade_spot_from_go_external=None, last_trade_spot_from_polling=None, last_trade_spot_from_polling_external=None, last_trade_spot_from_streaming=None, last_trade_spot_from_streaming_external=None, metadata_version=4, processing_trades_from_blob_status=None, total_trades_spot=None, unstructured_trade_spot_from_backfill_internal_data=None, unstructured_trade_spot_from_blob_internal_data=None, unstructured_trade_spot_from_calculated_internal_data=None, unstructured_trade_spot_from_fix_internal_data=None, unstructured_trade_spot_from_go_internal_data=None, unstructured_trade_spot_from_polling_internal_data=None, unstructured_trade_spot_from_streaming_internal_data=None, local_vars_configuration=None):  # noqa: E501
        """SPOTINSTRUMENTMETADATA - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration

        self._first_seen_on_blob_ts = None
        self._first_seen_on_fix_ts = None
        self._first_seen_on_hardcoded_ts = None
        self._first_seen_on_index_composition_ts = None
        self._first_seen_on_nsq_ts = None
        self._first_seen_on_polling_ts = None
        self._first_seen_on_streaming_ts = None
        self._first_trade_spot_from_backfill = None
        self._first_trade_spot_from_backfill_external = None
        self._first_trade_spot_from_blob = None
        self._first_trade_spot_from_blob_external = None
        self._first_trade_spot_from_calculated = None
        self._first_trade_spot_from_calculated_external = None
        self._first_trade_spot_from_fix = None
        self._first_trade_spot_from_fix_external = None
        self._first_trade_spot_from_go = None
        self._first_trade_spot_from_go_external = None
        self._first_trade_spot_from_polling = None
        self._first_trade_spot_from_polling_external = None
        self._first_trade_spot_from_streaming = None
        self._first_trade_spot_from_streaming_external = None
        self._host_migration_destination = None
        self._host_migration_source = None
        self._host_migration_status = None
        self._instrument = None
        self._instrument_external_data = None
        self._instrument_mapping = None
        self._instrument_mapping_history = None
        self._instrument_source_backfill = None
        self._instrument_source_blob = None
        self._instrument_source_calculated = None
        self._instrument_source_fix = None
        self._instrument_source_go = None
        self._instrument_source_polling = None
        self._instrument_source_streaming = None
        self._instrument_status = None
        self._instrument_trade_spot_from_backfill_last_proxied_rest_request = None
        self._instrument_trade_spot_from_backfill_rest_uri_last_request_ts = None
        self._instrument_trade_spot_from_backfill_rest_uri_last_response_ts = None
        self._instrument_trade_spot_from_backfill_rest_uri_next_request_ts = None
        self._instrument_trade_spot_from_blob_last_proxied_rest_request = None
        self._instrument_trade_spot_from_blob_rest_uri_last_request_ts = None
        self._instrument_trade_spot_from_blob_rest_uri_last_response_ts = None
        self._instrument_trade_spot_from_blob_rest_uri_next_request_ts = None
        self._instrument_trade_spot_from_calculated_last_proxied_rest_request = None
        self._instrument_trade_spot_from_calculated_rest_uri_last_request_ts = None
        self._instrument_trade_spot_from_calculated_rest_uri_last_response_ts = None
        self._instrument_trade_spot_from_calculated_rest_uri_next_request_ts = None
        self._instrument_trade_spot_from_fix_last_proxied_rest_request = None
        self._instrument_trade_spot_from_fix_rest_uri_last_request_ts = None
        self._instrument_trade_spot_from_fix_rest_uri_last_response_ts = None
        self._instrument_trade_spot_from_fix_rest_uri_next_request_ts = None
        self._instrument_trade_spot_from_go_last_proxied_rest_request = None
        self._instrument_trade_spot_from_go_rest_uri_last_request_ts = None
        self._instrument_trade_spot_from_go_rest_uri_last_response_ts = None
        self._instrument_trade_spot_from_go_rest_uri_next_request_ts = None
        self._instrument_trade_spot_from_polling_last_proxied_rest_request = None
        self._instrument_trade_spot_from_polling_rest_uri_last_request_ts = None
        self._instrument_trade_spot_from_polling_rest_uri_last_response_ts = None
        self._instrument_trade_spot_from_polling_rest_uri_next_request_ts = None
        self._instrument_trade_spot_from_streaming_last_proxied_rest_request = None
        self._instrument_trade_spot_from_streaming_rest_uri_last_request_ts = None
        self._instrument_trade_spot_from_streaming_rest_uri_last_response_ts = None
        self._instrument_trade_spot_from_streaming_rest_uri_next_request_ts = None
        self._instrument_trade_spot_is_ready_for_streaming_integration = None
        self._instrument_trade_spot_rest_uri = None
        self._instrument_trade_spot_rest_url = None
        self._instrument_trade_spot_streaming_subscription = None
        self._last_concurrent_batch_of_trades_spot_ms = None
        self._last_seen_on_blob_ts = None
        self._last_seen_on_fix_ts = None
        self._last_seen_on_hardcoded_ts = None
        self._last_seen_on_index_composition_ts = None
        self._last_seen_on_nsq_ts = None
        self._last_seen_on_polling_ts = None
        self._last_seen_on_streaming_ts = None
        self._last_trade_spot_from_backfill = None
        self._last_trade_spot_from_backfill_external = None
        self._last_trade_spot_from_blob = None
        self._last_trade_spot_from_blob_external = None
        self._last_trade_spot_from_calculated = None
        self._last_trade_spot_from_calculated_external = None
        self._last_trade_spot_from_fix = None
        self._last_trade_spot_from_fix_external = None
        self._last_trade_spot_from_go = None
        self._last_trade_spot_from_go_external = None
        self._last_trade_spot_from_polling = None
        self._last_trade_spot_from_polling_external = None
        self._last_trade_spot_from_streaming = None
        self._last_trade_spot_from_streaming_external = None
        self._metadata_version = None
        self._processing_trades_from_blob_status = None
        self._total_trades_spot = None
        self._unstructured_trade_spot_from_backfill_internal_data = None
        self._unstructured_trade_spot_from_blob_internal_data = None
        self._unstructured_trade_spot_from_calculated_internal_data = None
        self._unstructured_trade_spot_from_fix_internal_data = None
        self._unstructured_trade_spot_from_go_internal_data = None
        self._unstructured_trade_spot_from_polling_internal_data = None
        self._unstructured_trade_spot_from_streaming_internal_data = None
        self.discriminator = None

        if first_seen_on_blob_ts is not None:
            self.first_seen_on_blob_ts = first_seen_on_blob_ts
        if first_seen_on_fix_ts is not None:
            self.first_seen_on_fix_ts = first_seen_on_fix_ts
        if first_seen_on_hardcoded_ts is not None:
            self.first_seen_on_hardcoded_ts = first_seen_on_hardcoded_ts
        if first_seen_on_index_composition_ts is not None:
            self.first_seen_on_index_composition_ts = first_seen_on_index_composition_ts
        if first_seen_on_nsq_ts is not None:
            self.first_seen_on_nsq_ts = first_seen_on_nsq_ts
        if first_seen_on_polling_ts is not None:
            self.first_seen_on_polling_ts = first_seen_on_polling_ts
        if first_seen_on_streaming_ts is not None:
            self.first_seen_on_streaming_ts = first_seen_on_streaming_ts
        if first_trade_spot_from_backfill is not None:
            self.first_trade_spot_from_backfill = first_trade_spot_from_backfill
        if first_trade_spot_from_backfill_external is not None:
            self.first_trade_spot_from_backfill_external = first_trade_spot_from_backfill_external
        if first_trade_spot_from_blob is not None:
            self.first_trade_spot_from_blob = first_trade_spot_from_blob
        if first_trade_spot_from_blob_external is not None:
            self.first_trade_spot_from_blob_external = first_trade_spot_from_blob_external
        if first_trade_spot_from_calculated is not None:
            self.first_trade_spot_from_calculated = first_trade_spot_from_calculated
        if first_trade_spot_from_calculated_external is not None:
            self.first_trade_spot_from_calculated_external = first_trade_spot_from_calculated_external
        if first_trade_spot_from_fix is not None:
            self.first_trade_spot_from_fix = first_trade_spot_from_fix
        if first_trade_spot_from_fix_external is not None:
            self.first_trade_spot_from_fix_external = first_trade_spot_from_fix_external
        if first_trade_spot_from_go is not None:
            self.first_trade_spot_from_go = first_trade_spot_from_go
        if first_trade_spot_from_go_external is not None:
            self.first_trade_spot_from_go_external = first_trade_spot_from_go_external
        if first_trade_spot_from_polling is not None:
            self.first_trade_spot_from_polling = first_trade_spot_from_polling
        if first_trade_spot_from_polling_external is not None:
            self.first_trade_spot_from_polling_external = first_trade_spot_from_polling_external
        if first_trade_spot_from_streaming is not None:
            self.first_trade_spot_from_streaming = first_trade_spot_from_streaming
        if first_trade_spot_from_streaming_external is not None:
            self.first_trade_spot_from_streaming_external = first_trade_spot_from_streaming_external
        if host_migration_destination is not None:
            self.host_migration_destination = host_migration_destination
        if host_migration_source is not None:
            self.host_migration_source = host_migration_source
        if host_migration_status is not None:
            self.host_migration_status = host_migration_status
        if instrument is not None:
            self.instrument = instrument
        if instrument_external_data is not None:
            self.instrument_external_data = instrument_external_data
        if instrument_mapping is not None:
            self.instrument_mapping = instrument_mapping
        if instrument_mapping_history is not None:
            self.instrument_mapping_history = instrument_mapping_history
        if instrument_source_backfill is not None:
            self.instrument_source_backfill = instrument_source_backfill
        if instrument_source_blob is not None:
            self.instrument_source_blob = instrument_source_blob
        if instrument_source_calculated is not None:
            self.instrument_source_calculated = instrument_source_calculated
        if instrument_source_fix is not None:
            self.instrument_source_fix = instrument_source_fix
        if instrument_source_go is not None:
            self.instrument_source_go = instrument_source_go
        if instrument_source_polling is not None:
            self.instrument_source_polling = instrument_source_polling
        if instrument_source_streaming is not None:
            self.instrument_source_streaming = instrument_source_streaming
        if instrument_status is not None:
            self.instrument_status = instrument_status
        if instrument_trade_spot_from_backfill_last_proxied_rest_request is not None:
            self.instrument_trade_spot_from_backfill_last_proxied_rest_request = instrument_trade_spot_from_backfill_last_proxied_rest_request
        if instrument_trade_spot_from_backfill_rest_uri_last_request_ts is not None:
            self.instrument_trade_spot_from_backfill_rest_uri_last_request_ts = instrument_trade_spot_from_backfill_rest_uri_last_request_ts
        if instrument_trade_spot_from_backfill_rest_uri_last_response_ts is not None:
            self.instrument_trade_spot_from_backfill_rest_uri_last_response_ts = instrument_trade_spot_from_backfill_rest_uri_last_response_ts
        if instrument_trade_spot_from_backfill_rest_uri_next_request_ts is not None:
            self.instrument_trade_spot_from_backfill_rest_uri_next_request_ts = instrument_trade_spot_from_backfill_rest_uri_next_request_ts
        if instrument_trade_spot_from_blob_last_proxied_rest_request is not None:
            self.instrument_trade_spot_from_blob_last_proxied_rest_request = instrument_trade_spot_from_blob_last_proxied_rest_request
        if instrument_trade_spot_from_blob_rest_uri_last_request_ts is not None:
            self.instrument_trade_spot_from_blob_rest_uri_last_request_ts = instrument_trade_spot_from_blob_rest_uri_last_request_ts
        if instrument_trade_spot_from_blob_rest_uri_last_response_ts is not None:
            self.instrument_trade_spot_from_blob_rest_uri_last_response_ts = instrument_trade_spot_from_blob_rest_uri_last_response_ts
        if instrument_trade_spot_from_blob_rest_uri_next_request_ts is not None:
            self.instrument_trade_spot_from_blob_rest_uri_next_request_ts = instrument_trade_spot_from_blob_rest_uri_next_request_ts
        if instrument_trade_spot_from_calculated_last_proxied_rest_request is not None:
            self.instrument_trade_spot_from_calculated_last_proxied_rest_request = instrument_trade_spot_from_calculated_last_proxied_rest_request
        if instrument_trade_spot_from_calculated_rest_uri_last_request_ts is not None:
            self.instrument_trade_spot_from_calculated_rest_uri_last_request_ts = instrument_trade_spot_from_calculated_rest_uri_last_request_ts
        if instrument_trade_spot_from_calculated_rest_uri_last_response_ts is not None:
            self.instrument_trade_spot_from_calculated_rest_uri_last_response_ts = instrument_trade_spot_from_calculated_rest_uri_last_response_ts
        if instrument_trade_spot_from_calculated_rest_uri_next_request_ts is not None:
            self.instrument_trade_spot_from_calculated_rest_uri_next_request_ts = instrument_trade_spot_from_calculated_rest_uri_next_request_ts
        if instrument_trade_spot_from_fix_last_proxied_rest_request is not None:
            self.instrument_trade_spot_from_fix_last_proxied_rest_request = instrument_trade_spot_from_fix_last_proxied_rest_request
        if instrument_trade_spot_from_fix_rest_uri_last_request_ts is not None:
            self.instrument_trade_spot_from_fix_rest_uri_last_request_ts = instrument_trade_spot_from_fix_rest_uri_last_request_ts
        if instrument_trade_spot_from_fix_rest_uri_last_response_ts is not None:
            self.instrument_trade_spot_from_fix_rest_uri_last_response_ts = instrument_trade_spot_from_fix_rest_uri_last_response_ts
        if instrument_trade_spot_from_fix_rest_uri_next_request_ts is not None:
            self.instrument_trade_spot_from_fix_rest_uri_next_request_ts = instrument_trade_spot_from_fix_rest_uri_next_request_ts
        if instrument_trade_spot_from_go_last_proxied_rest_request is not None:
            self.instrument_trade_spot_from_go_last_proxied_rest_request = instrument_trade_spot_from_go_last_proxied_rest_request
        if instrument_trade_spot_from_go_rest_uri_last_request_ts is not None:
            self.instrument_trade_spot_from_go_rest_uri_last_request_ts = instrument_trade_spot_from_go_rest_uri_last_request_ts
        if instrument_trade_spot_from_go_rest_uri_last_response_ts is not None:
            self.instrument_trade_spot_from_go_rest_uri_last_response_ts = instrument_trade_spot_from_go_rest_uri_last_response_ts
        if instrument_trade_spot_from_go_rest_uri_next_request_ts is not None:
            self.instrument_trade_spot_from_go_rest_uri_next_request_ts = instrument_trade_spot_from_go_rest_uri_next_request_ts
        if instrument_trade_spot_from_polling_last_proxied_rest_request is not None:
            self.instrument_trade_spot_from_polling_last_proxied_rest_request = instrument_trade_spot_from_polling_last_proxied_rest_request
        if instrument_trade_spot_from_polling_rest_uri_last_request_ts is not None:
            self.instrument_trade_spot_from_polling_rest_uri_last_request_ts = instrument_trade_spot_from_polling_rest_uri_last_request_ts
        if instrument_trade_spot_from_polling_rest_uri_last_response_ts is not None:
            self.instrument_trade_spot_from_polling_rest_uri_last_response_ts = instrument_trade_spot_from_polling_rest_uri_last_response_ts
        if instrument_trade_spot_from_polling_rest_uri_next_request_ts is not None:
            self.instrument_trade_spot_from_polling_rest_uri_next_request_ts = instrument_trade_spot_from_polling_rest_uri_next_request_ts
        if instrument_trade_spot_from_streaming_last_proxied_rest_request is not None:
            self.instrument_trade_spot_from_streaming_last_proxied_rest_request = instrument_trade_spot_from_streaming_last_proxied_rest_request
        if instrument_trade_spot_from_streaming_rest_uri_last_request_ts is not None:
            self.instrument_trade_spot_from_streaming_rest_uri_last_request_ts = instrument_trade_spot_from_streaming_rest_uri_last_request_ts
        if instrument_trade_spot_from_streaming_rest_uri_last_response_ts is not None:
            self.instrument_trade_spot_from_streaming_rest_uri_last_response_ts = instrument_trade_spot_from_streaming_rest_uri_last_response_ts
        if instrument_trade_spot_from_streaming_rest_uri_next_request_ts is not None:
            self.instrument_trade_spot_from_streaming_rest_uri_next_request_ts = instrument_trade_spot_from_streaming_rest_uri_next_request_ts
        if instrument_trade_spot_is_ready_for_streaming_integration is not None:
            self.instrument_trade_spot_is_ready_for_streaming_integration = instrument_trade_spot_is_ready_for_streaming_integration
        if instrument_trade_spot_rest_uri is not None:
            self.instrument_trade_spot_rest_uri = instrument_trade_spot_rest_uri
        if instrument_trade_spot_rest_url is not None:
            self.instrument_trade_spot_rest_url = instrument_trade_spot_rest_url
        if instrument_trade_spot_streaming_subscription is not None:
            self.instrument_trade_spot_streaming_subscription = instrument_trade_spot_streaming_subscription
        if last_concurrent_batch_of_trades_spot_ms is not None:
            self.last_concurrent_batch_of_trades_spot_ms = last_concurrent_batch_of_trades_spot_ms
        if last_seen_on_blob_ts is not None:
            self.last_seen_on_blob_ts = last_seen_on_blob_ts
        if last_seen_on_fix_ts is not None:
            self.last_seen_on_fix_ts = last_seen_on_fix_ts
        if last_seen_on_hardcoded_ts is not None:
            self.last_seen_on_hardcoded_ts = last_seen_on_hardcoded_ts
        if last_seen_on_index_composition_ts is not None:
            self.last_seen_on_index_composition_ts = last_seen_on_index_composition_ts
        if last_seen_on_nsq_ts is not None:
            self.last_seen_on_nsq_ts = last_seen_on_nsq_ts
        if last_seen_on_polling_ts is not None:
            self.last_seen_on_polling_ts = last_seen_on_polling_ts
        if last_seen_on_streaming_ts is not None:
            self.last_seen_on_streaming_ts = last_seen_on_streaming_ts
        if last_trade_spot_from_backfill is not None:
            self.last_trade_spot_from_backfill = last_trade_spot_from_backfill
        if last_trade_spot_from_backfill_external is not None:
            self.last_trade_spot_from_backfill_external = last_trade_spot_from_backfill_external
        if last_trade_spot_from_blob is not None:
            self.last_trade_spot_from_blob = last_trade_spot_from_blob
        if last_trade_spot_from_blob_external is not None:
            self.last_trade_spot_from_blob_external = last_trade_spot_from_blob_external
        if last_trade_spot_from_calculated is not None:
            self.last_trade_spot_from_calculated = last_trade_spot_from_calculated
        if last_trade_spot_from_calculated_external is not None:
            self.last_trade_spot_from_calculated_external = last_trade_spot_from_calculated_external
        if last_trade_spot_from_fix is not None:
            self.last_trade_spot_from_fix = last_trade_spot_from_fix
        if last_trade_spot_from_fix_external is not None:
            self.last_trade_spot_from_fix_external = last_trade_spot_from_fix_external
        if last_trade_spot_from_go is not None:
            self.last_trade_spot_from_go = last_trade_spot_from_go
        if last_trade_spot_from_go_external is not None:
            self.last_trade_spot_from_go_external = last_trade_spot_from_go_external
        if last_trade_spot_from_polling is not None:
            self.last_trade_spot_from_polling = last_trade_spot_from_polling
        if last_trade_spot_from_polling_external is not None:
            self.last_trade_spot_from_polling_external = last_trade_spot_from_polling_external
        if last_trade_spot_from_streaming is not None:
            self.last_trade_spot_from_streaming = last_trade_spot_from_streaming
        if last_trade_spot_from_streaming_external is not None:
            self.last_trade_spot_from_streaming_external = last_trade_spot_from_streaming_external
        if metadata_version is not None:
            self.metadata_version = metadata_version
        if processing_trades_from_blob_status is not None:
            self.processing_trades_from_blob_status = processing_trades_from_blob_status
        if total_trades_spot is not None:
            self.total_trades_spot = total_trades_spot
        if unstructured_trade_spot_from_backfill_internal_data is not None:
            self.unstructured_trade_spot_from_backfill_internal_data = unstructured_trade_spot_from_backfill_internal_data
        if unstructured_trade_spot_from_blob_internal_data is not None:
            self.unstructured_trade_spot_from_blob_internal_data = unstructured_trade_spot_from_blob_internal_data
        if unstructured_trade_spot_from_calculated_internal_data is not None:
            self.unstructured_trade_spot_from_calculated_internal_data = unstructured_trade_spot_from_calculated_internal_data
        if unstructured_trade_spot_from_fix_internal_data is not None:
            self.unstructured_trade_spot_from_fix_internal_data = unstructured_trade_spot_from_fix_internal_data
        if unstructured_trade_spot_from_go_internal_data is not None:
            self.unstructured_trade_spot_from_go_internal_data = unstructured_trade_spot_from_go_internal_data
        if unstructured_trade_spot_from_polling_internal_data is not None:
            self.unstructured_trade_spot_from_polling_internal_data = unstructured_trade_spot_from_polling_internal_data
        if unstructured_trade_spot_from_streaming_internal_data is not None:
            self.unstructured_trade_spot_from_streaming_internal_data = unstructured_trade_spot_from_streaming_internal_data

    @property
    def first_seen_on_blob_ts(self):
        """Gets the first_seen_on_blob_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the first time instrument was seen on instrumentListSourceType BLOB.  # noqa: E501

        :return: The first_seen_on_blob_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._first_seen_on_blob_ts

    @first_seen_on_blob_ts.setter
    def first_seen_on_blob_ts(self, first_seen_on_blob_ts):
        """Sets the first_seen_on_blob_ts of this SPOTINSTRUMENTMETADATA.

        This is the first time instrument was seen on instrumentListSourceType BLOB.  # noqa: E501

        :param first_seen_on_blob_ts: The first_seen_on_blob_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type first_seen_on_blob_ts: int
        """

        self._first_seen_on_blob_ts = first_seen_on_blob_ts

    @property
    def first_seen_on_fix_ts(self):
        """Gets the first_seen_on_fix_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the first time instrument was seen on instrumentListSourceType FIX.  # noqa: E501

        :return: The first_seen_on_fix_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._first_seen_on_fix_ts

    @first_seen_on_fix_ts.setter
    def first_seen_on_fix_ts(self, first_seen_on_fix_ts):
        """Sets the first_seen_on_fix_ts of this SPOTINSTRUMENTMETADATA.

        This is the first time instrument was seen on instrumentListSourceType FIX.  # noqa: E501

        :param first_seen_on_fix_ts: The first_seen_on_fix_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type first_seen_on_fix_ts: int
        """

        self._first_seen_on_fix_ts = first_seen_on_fix_ts

    @property
    def first_seen_on_hardcoded_ts(self):
        """Gets the first_seen_on_hardcoded_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the first time instrument was seen on instrumentListSourceType HARDCODED.  # noqa: E501

        :return: The first_seen_on_hardcoded_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._first_seen_on_hardcoded_ts

    @first_seen_on_hardcoded_ts.setter
    def first_seen_on_hardcoded_ts(self, first_seen_on_hardcoded_ts):
        """Sets the first_seen_on_hardcoded_ts of this SPOTINSTRUMENTMETADATA.

        This is the first time instrument was seen on instrumentListSourceType HARDCODED.  # noqa: E501

        :param first_seen_on_hardcoded_ts: The first_seen_on_hardcoded_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type first_seen_on_hardcoded_ts: int
        """

        self._first_seen_on_hardcoded_ts = first_seen_on_hardcoded_ts

    @property
    def first_seen_on_index_composition_ts(self):
        """Gets the first_seen_on_index_composition_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the first time instrument was seen on instrumentListSourceType INDEX_COMPOSITION.  # noqa: E501

        :return: The first_seen_on_index_composition_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._first_seen_on_index_composition_ts

    @first_seen_on_index_composition_ts.setter
    def first_seen_on_index_composition_ts(self, first_seen_on_index_composition_ts):
        """Sets the first_seen_on_index_composition_ts of this SPOTINSTRUMENTMETADATA.

        This is the first time instrument was seen on instrumentListSourceType INDEX_COMPOSITION.  # noqa: E501

        :param first_seen_on_index_composition_ts: The first_seen_on_index_composition_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type first_seen_on_index_composition_ts: int
        """

        self._first_seen_on_index_composition_ts = first_seen_on_index_composition_ts

    @property
    def first_seen_on_nsq_ts(self):
        """Gets the first_seen_on_nsq_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the first time instrument was seen on instrumentListSourceType NSQ.  # noqa: E501

        :return: The first_seen_on_nsq_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._first_seen_on_nsq_ts

    @first_seen_on_nsq_ts.setter
    def first_seen_on_nsq_ts(self, first_seen_on_nsq_ts):
        """Sets the first_seen_on_nsq_ts of this SPOTINSTRUMENTMETADATA.

        This is the first time instrument was seen on instrumentListSourceType NSQ.  # noqa: E501

        :param first_seen_on_nsq_ts: The first_seen_on_nsq_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type first_seen_on_nsq_ts: int
        """

        self._first_seen_on_nsq_ts = first_seen_on_nsq_ts

    @property
    def first_seen_on_polling_ts(self):
        """Gets the first_seen_on_polling_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the first time instrument was seen on instrumentListSourceType POLLING.  # noqa: E501

        :return: The first_seen_on_polling_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._first_seen_on_polling_ts

    @first_seen_on_polling_ts.setter
    def first_seen_on_polling_ts(self, first_seen_on_polling_ts):
        """Sets the first_seen_on_polling_ts of this SPOTINSTRUMENTMETADATA.

        This is the first time instrument was seen on instrumentListSourceType POLLING.  # noqa: E501

        :param first_seen_on_polling_ts: The first_seen_on_polling_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type first_seen_on_polling_ts: int
        """

        self._first_seen_on_polling_ts = first_seen_on_polling_ts

    @property
    def first_seen_on_streaming_ts(self):
        """Gets the first_seen_on_streaming_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the first time instrument was seen on instrumentListSourceType STREAMING.  # noqa: E501

        :return: The first_seen_on_streaming_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._first_seen_on_streaming_ts

    @first_seen_on_streaming_ts.setter
    def first_seen_on_streaming_ts(self, first_seen_on_streaming_ts):
        """Sets the first_seen_on_streaming_ts of this SPOTINSTRUMENTMETADATA.

        This is the first time instrument was seen on instrumentListSourceType STREAMING.  # noqa: E501

        :param first_seen_on_streaming_ts: The first_seen_on_streaming_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type first_seen_on_streaming_ts: int
        """

        self._first_seen_on_streaming_ts = first_seen_on_streaming_ts

    @property
    def first_trade_spot_from_backfill(self):
        """Gets the first_trade_spot_from_backfill of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the first TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :return: The first_trade_spot_from_backfill of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._first_trade_spot_from_backfill

    @first_trade_spot_from_backfill.setter
    def first_trade_spot_from_backfill(self, first_trade_spot_from_backfill):
        """Sets the first_trade_spot_from_backfill of this SPOTINSTRUMENTMETADATA.

        This is the first TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :param first_trade_spot_from_backfill: The first_trade_spot_from_backfill of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type first_trade_spot_from_backfill: object
        """

        self._first_trade_spot_from_backfill = first_trade_spot_from_backfill

    @property
    def first_trade_spot_from_backfill_external(self):
        """Gets the first_trade_spot_from_backfill_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the first TRADE_SPOT that we have seen on the specific source type in external format.  # noqa: E501

        :return: The first_trade_spot_from_backfill_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._first_trade_spot_from_backfill_external

    @first_trade_spot_from_backfill_external.setter
    def first_trade_spot_from_backfill_external(self, first_trade_spot_from_backfill_external):
        """Sets the first_trade_spot_from_backfill_external of this SPOTINSTRUMENTMETADATA.

        This is the first TRADE_SPOT that we have seen on the specific source type in external format.  # noqa: E501

        :param first_trade_spot_from_backfill_external: The first_trade_spot_from_backfill_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type first_trade_spot_from_backfill_external: object
        """

        self._first_trade_spot_from_backfill_external = first_trade_spot_from_backfill_external

    @property
    def first_trade_spot_from_blob(self):
        """Gets the first_trade_spot_from_blob of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the first TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :return: The first_trade_spot_from_blob of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._first_trade_spot_from_blob

    @first_trade_spot_from_blob.setter
    def first_trade_spot_from_blob(self, first_trade_spot_from_blob):
        """Sets the first_trade_spot_from_blob of this SPOTINSTRUMENTMETADATA.

        This is the first TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :param first_trade_spot_from_blob: The first_trade_spot_from_blob of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type first_trade_spot_from_blob: object
        """

        self._first_trade_spot_from_blob = first_trade_spot_from_blob

    @property
    def first_trade_spot_from_blob_external(self):
        """Gets the first_trade_spot_from_blob_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the first TRADE_SPOT that we have seen on the specific source type in external format.  # noqa: E501

        :return: The first_trade_spot_from_blob_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._first_trade_spot_from_blob_external

    @first_trade_spot_from_blob_external.setter
    def first_trade_spot_from_blob_external(self, first_trade_spot_from_blob_external):
        """Sets the first_trade_spot_from_blob_external of this SPOTINSTRUMENTMETADATA.

        This is the first TRADE_SPOT that we have seen on the specific source type in external format.  # noqa: E501

        :param first_trade_spot_from_blob_external: The first_trade_spot_from_blob_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type first_trade_spot_from_blob_external: object
        """

        self._first_trade_spot_from_blob_external = first_trade_spot_from_blob_external

    @property
    def first_trade_spot_from_calculated(self):
        """Gets the first_trade_spot_from_calculated of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the first TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :return: The first_trade_spot_from_calculated of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._first_trade_spot_from_calculated

    @first_trade_spot_from_calculated.setter
    def first_trade_spot_from_calculated(self, first_trade_spot_from_calculated):
        """Sets the first_trade_spot_from_calculated of this SPOTINSTRUMENTMETADATA.

        This is the first TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :param first_trade_spot_from_calculated: The first_trade_spot_from_calculated of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type first_trade_spot_from_calculated: object
        """

        self._first_trade_spot_from_calculated = first_trade_spot_from_calculated

    @property
    def first_trade_spot_from_calculated_external(self):
        """Gets the first_trade_spot_from_calculated_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the first TRADE_SPOT that we have seen on the specific source type in external format.  # noqa: E501

        :return: The first_trade_spot_from_calculated_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._first_trade_spot_from_calculated_external

    @first_trade_spot_from_calculated_external.setter
    def first_trade_spot_from_calculated_external(self, first_trade_spot_from_calculated_external):
        """Sets the first_trade_spot_from_calculated_external of this SPOTINSTRUMENTMETADATA.

        This is the first TRADE_SPOT that we have seen on the specific source type in external format.  # noqa: E501

        :param first_trade_spot_from_calculated_external: The first_trade_spot_from_calculated_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type first_trade_spot_from_calculated_external: object
        """

        self._first_trade_spot_from_calculated_external = first_trade_spot_from_calculated_external

    @property
    def first_trade_spot_from_fix(self):
        """Gets the first_trade_spot_from_fix of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the first TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :return: The first_trade_spot_from_fix of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._first_trade_spot_from_fix

    @first_trade_spot_from_fix.setter
    def first_trade_spot_from_fix(self, first_trade_spot_from_fix):
        """Sets the first_trade_spot_from_fix of this SPOTINSTRUMENTMETADATA.

        This is the first TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :param first_trade_spot_from_fix: The first_trade_spot_from_fix of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type first_trade_spot_from_fix: object
        """

        self._first_trade_spot_from_fix = first_trade_spot_from_fix

    @property
    def first_trade_spot_from_fix_external(self):
        """Gets the first_trade_spot_from_fix_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the first TRADE_SPOT that we have seen on the specific source type in external format.  # noqa: E501

        :return: The first_trade_spot_from_fix_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._first_trade_spot_from_fix_external

    @first_trade_spot_from_fix_external.setter
    def first_trade_spot_from_fix_external(self, first_trade_spot_from_fix_external):
        """Sets the first_trade_spot_from_fix_external of this SPOTINSTRUMENTMETADATA.

        This is the first TRADE_SPOT that we have seen on the specific source type in external format.  # noqa: E501

        :param first_trade_spot_from_fix_external: The first_trade_spot_from_fix_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type first_trade_spot_from_fix_external: object
        """

        self._first_trade_spot_from_fix_external = first_trade_spot_from_fix_external

    @property
    def first_trade_spot_from_go(self):
        """Gets the first_trade_spot_from_go of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the first TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :return: The first_trade_spot_from_go of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._first_trade_spot_from_go

    @first_trade_spot_from_go.setter
    def first_trade_spot_from_go(self, first_trade_spot_from_go):
        """Sets the first_trade_spot_from_go of this SPOTINSTRUMENTMETADATA.

        This is the first TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :param first_trade_spot_from_go: The first_trade_spot_from_go of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type first_trade_spot_from_go: object
        """

        self._first_trade_spot_from_go = first_trade_spot_from_go

    @property
    def first_trade_spot_from_go_external(self):
        """Gets the first_trade_spot_from_go_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the first TRADE_SPOT that we have seen on the specific source type in external format.  # noqa: E501

        :return: The first_trade_spot_from_go_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._first_trade_spot_from_go_external

    @first_trade_spot_from_go_external.setter
    def first_trade_spot_from_go_external(self, first_trade_spot_from_go_external):
        """Sets the first_trade_spot_from_go_external of this SPOTINSTRUMENTMETADATA.

        This is the first TRADE_SPOT that we have seen on the specific source type in external format.  # noqa: E501

        :param first_trade_spot_from_go_external: The first_trade_spot_from_go_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type first_trade_spot_from_go_external: object
        """

        self._first_trade_spot_from_go_external = first_trade_spot_from_go_external

    @property
    def first_trade_spot_from_polling(self):
        """Gets the first_trade_spot_from_polling of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the first TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :return: The first_trade_spot_from_polling of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._first_trade_spot_from_polling

    @first_trade_spot_from_polling.setter
    def first_trade_spot_from_polling(self, first_trade_spot_from_polling):
        """Sets the first_trade_spot_from_polling of this SPOTINSTRUMENTMETADATA.

        This is the first TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :param first_trade_spot_from_polling: The first_trade_spot_from_polling of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type first_trade_spot_from_polling: object
        """

        self._first_trade_spot_from_polling = first_trade_spot_from_polling

    @property
    def first_trade_spot_from_polling_external(self):
        """Gets the first_trade_spot_from_polling_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the first TRADE_SPOT that we have seen on the specific source type in external format.  # noqa: E501

        :return: The first_trade_spot_from_polling_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._first_trade_spot_from_polling_external

    @first_trade_spot_from_polling_external.setter
    def first_trade_spot_from_polling_external(self, first_trade_spot_from_polling_external):
        """Sets the first_trade_spot_from_polling_external of this SPOTINSTRUMENTMETADATA.

        This is the first TRADE_SPOT that we have seen on the specific source type in external format.  # noqa: E501

        :param first_trade_spot_from_polling_external: The first_trade_spot_from_polling_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type first_trade_spot_from_polling_external: object
        """

        self._first_trade_spot_from_polling_external = first_trade_spot_from_polling_external

    @property
    def first_trade_spot_from_streaming(self):
        """Gets the first_trade_spot_from_streaming of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the first TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :return: The first_trade_spot_from_streaming of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._first_trade_spot_from_streaming

    @first_trade_spot_from_streaming.setter
    def first_trade_spot_from_streaming(self, first_trade_spot_from_streaming):
        """Sets the first_trade_spot_from_streaming of this SPOTINSTRUMENTMETADATA.

        This is the first TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :param first_trade_spot_from_streaming: The first_trade_spot_from_streaming of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type first_trade_spot_from_streaming: object
        """

        self._first_trade_spot_from_streaming = first_trade_spot_from_streaming

    @property
    def first_trade_spot_from_streaming_external(self):
        """Gets the first_trade_spot_from_streaming_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the first TRADE_SPOT that we have seen on the specific source type in external format.  # noqa: E501

        :return: The first_trade_spot_from_streaming_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._first_trade_spot_from_streaming_external

    @first_trade_spot_from_streaming_external.setter
    def first_trade_spot_from_streaming_external(self, first_trade_spot_from_streaming_external):
        """Sets the first_trade_spot_from_streaming_external of this SPOTINSTRUMENTMETADATA.

        This is the first TRADE_SPOT that we have seen on the specific source type in external format.  # noqa: E501

        :param first_trade_spot_from_streaming_external: The first_trade_spot_from_streaming_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type first_trade_spot_from_streaming_external: object
        """

        self._first_trade_spot_from_streaming_external = first_trade_spot_from_streaming_external

    @property
    def host_migration_destination(self):
        """Gets the host_migration_destination of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The migration destination vm hostname.  # noqa: E501

        :return: The host_migration_destination of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: str
        """
        return self._host_migration_destination

    @host_migration_destination.setter
    def host_migration_destination(self, host_migration_destination):
        """Sets the host_migration_destination of this SPOTINSTRUMENTMETADATA.

        The migration destination vm hostname.  # noqa: E501

        :param host_migration_destination: The host_migration_destination of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type host_migration_destination: str
        """

        self._host_migration_destination = host_migration_destination

    @property
    def host_migration_source(self):
        """Gets the host_migration_source of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The migration source vm hostname.  # noqa: E501

        :return: The host_migration_source of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: str
        """
        return self._host_migration_source

    @host_migration_source.setter
    def host_migration_source(self, host_migration_source):
        """Sets the host_migration_source of this SPOTINSTRUMENTMETADATA.

        The migration source vm hostname.  # noqa: E501

        :param host_migration_source: The host_migration_source of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type host_migration_source: str
        """

        self._host_migration_source = host_migration_source

    @property
    def host_migration_status(self):
        """Gets the host_migration_status of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The migration status of the symbol, we only poll / stream / connect empty or SETTLED  # noqa: E501

        :return: The host_migration_status of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: str
        """
        return self._host_migration_status

    @host_migration_status.setter
    def host_migration_status(self, host_migration_status):
        """Sets the host_migration_status of this SPOTINSTRUMENTMETADATA.

        The migration status of the symbol, we only poll / stream / connect empty or SETTLED  # noqa: E501

        :param host_migration_status: The host_migration_status of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type host_migration_status: str
        """

        self._host_migration_status = host_migration_status

    @property
    def instrument(self):
        """Gets the instrument of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The instrument ID as it is on the exchange with small modifications - we do not allow the following characters inside isntrument ids: ,/&?  # noqa: E501

        :return: The instrument of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: str
        """
        return self._instrument

    @instrument.setter
    def instrument(self, instrument):
        """Sets the instrument of this SPOTINSTRUMENTMETADATA.

        The instrument ID as it is on the exchange with small modifications - we do not allow the following characters inside isntrument ids: ,/&?  # noqa: E501

        :param instrument: The instrument of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument: str
        """

        self._instrument = instrument

    @property
    def instrument_external_data(self):
        """Gets the instrument_external_data of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The full data we get from the polling endpoint for this specific instrument. This is a JSON stringified object with different properties per exchange.  # noqa: E501

        :return: The instrument_external_data of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: str
        """
        return self._instrument_external_data

    @instrument_external_data.setter
    def instrument_external_data(self, instrument_external_data):
        """Sets the instrument_external_data of this SPOTINSTRUMENTMETADATA.

        The full data we get from the polling endpoint for this specific instrument. This is a JSON stringified object with different properties per exchange.  # noqa: E501

        :param instrument_external_data: The instrument_external_data of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_external_data: str
        """

        self._instrument_external_data = instrument_external_data

    @property
    def instrument_mapping(self):
        """Gets the instrument_mapping of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The current mapping information for this instrument  # noqa: E501

        :return: The instrument_mapping of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._instrument_mapping

    @instrument_mapping.setter
    def instrument_mapping(self, instrument_mapping):
        """Sets the instrument_mapping of this SPOTINSTRUMENTMETADATA.

        The current mapping information for this instrument  # noqa: E501

        :param instrument_mapping: The instrument_mapping of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_mapping: object
        """

        self._instrument_mapping = instrument_mapping

    @property
    def instrument_mapping_history(self):
        """Gets the instrument_mapping_history of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        Historical mapping information for this instrument  # noqa: E501

        :return: The instrument_mapping_history of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: list[str]
        """
        return self._instrument_mapping_history

    @instrument_mapping_history.setter
    def instrument_mapping_history(self, instrument_mapping_history):
        """Sets the instrument_mapping_history of this SPOTINSTRUMENTMETADATA.

        Historical mapping information for this instrument  # noqa: E501

        :param instrument_mapping_history: The instrument_mapping_history of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_mapping_history: list[str]
        """

        self._instrument_mapping_history = instrument_mapping_history

    @property
    def instrument_source_backfill(self):
        """Gets the instrument_source_backfill of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.  # noqa: E501

        :return: The instrument_source_backfill of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: str
        """
        return self._instrument_source_backfill

    @instrument_source_backfill.setter
    def instrument_source_backfill(self, instrument_source_backfill):
        """Sets the instrument_source_backfill of this SPOTINSTRUMENTMETADATA.

        Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.  # noqa: E501

        :param instrument_source_backfill: The instrument_source_backfill of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_source_backfill: str
        """

        self._instrument_source_backfill = instrument_source_backfill

    @property
    def instrument_source_blob(self):
        """Gets the instrument_source_blob of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.  # noqa: E501

        :return: The instrument_source_blob of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: str
        """
        return self._instrument_source_blob

    @instrument_source_blob.setter
    def instrument_source_blob(self, instrument_source_blob):
        """Sets the instrument_source_blob of this SPOTINSTRUMENTMETADATA.

        Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.  # noqa: E501

        :param instrument_source_blob: The instrument_source_blob of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_source_blob: str
        """

        self._instrument_source_blob = instrument_source_blob

    @property
    def instrument_source_calculated(self):
        """Gets the instrument_source_calculated of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.  # noqa: E501

        :return: The instrument_source_calculated of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: str
        """
        return self._instrument_source_calculated

    @instrument_source_calculated.setter
    def instrument_source_calculated(self, instrument_source_calculated):
        """Sets the instrument_source_calculated of this SPOTINSTRUMENTMETADATA.

        Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.  # noqa: E501

        :param instrument_source_calculated: The instrument_source_calculated of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_source_calculated: str
        """

        self._instrument_source_calculated = instrument_source_calculated

    @property
    def instrument_source_fix(self):
        """Gets the instrument_source_fix of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.  # noqa: E501

        :return: The instrument_source_fix of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: str
        """
        return self._instrument_source_fix

    @instrument_source_fix.setter
    def instrument_source_fix(self, instrument_source_fix):
        """Sets the instrument_source_fix of this SPOTINSTRUMENTMETADATA.

        Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.  # noqa: E501

        :param instrument_source_fix: The instrument_source_fix of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_source_fix: str
        """

        self._instrument_source_fix = instrument_source_fix

    @property
    def instrument_source_go(self):
        """Gets the instrument_source_go of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.  # noqa: E501

        :return: The instrument_source_go of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: str
        """
        return self._instrument_source_go

    @instrument_source_go.setter
    def instrument_source_go(self, instrument_source_go):
        """Sets the instrument_source_go of this SPOTINSTRUMENTMETADATA.

        Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.  # noqa: E501

        :param instrument_source_go: The instrument_source_go of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_source_go: str
        """

        self._instrument_source_go = instrument_source_go

    @property
    def instrument_source_polling(self):
        """Gets the instrument_source_polling of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.  # noqa: E501

        :return: The instrument_source_polling of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: str
        """
        return self._instrument_source_polling

    @instrument_source_polling.setter
    def instrument_source_polling(self, instrument_source_polling):
        """Sets the instrument_source_polling of this SPOTINSTRUMENTMETADATA.

        Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.  # noqa: E501

        :param instrument_source_polling: The instrument_source_polling of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_source_polling: str
        """

        self._instrument_source_polling = instrument_source_polling

    @property
    def instrument_source_streaming(self):
        """Gets the instrument_source_streaming of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.  # noqa: E501

        :return: The instrument_source_streaming of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: str
        """
        return self._instrument_source_streaming

    @instrument_source_streaming.setter
    def instrument_source_streaming(self, instrument_source_streaming):
        """Sets the instrument_source_streaming of this SPOTINSTRUMENTMETADATA.

        Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.  # noqa: E501

        :param instrument_source_streaming: The instrument_source_streaming of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_source_streaming: str
        """

        self._instrument_source_streaming = instrument_source_streaming

    @property
    def instrument_status(self):
        """Gets the instrument_status of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The status of the symbol, we only poll / stream / connect to the ACTIVE ones, for the RETIRED / IGNORED / EXPIRED  one we no longer query for data.  # noqa: E501

        :return: The instrument_status of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: str
        """
        return self._instrument_status

    @instrument_status.setter
    def instrument_status(self, instrument_status):
        """Sets the instrument_status of this SPOTINSTRUMENTMETADATA.

        The status of the symbol, we only poll / stream / connect to the ACTIVE ones, for the RETIRED / IGNORED / EXPIRED  one we no longer query for data.  # noqa: E501

        :param instrument_status: The instrument_status of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_status: str
        """

        self._instrument_status = instrument_status

    @property
    def instrument_trade_spot_from_backfill_last_proxied_rest_request(self):
        """Gets the instrument_trade_spot_from_backfill_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_backfill_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._instrument_trade_spot_from_backfill_last_proxied_rest_request

    @instrument_trade_spot_from_backfill_last_proxied_rest_request.setter
    def instrument_trade_spot_from_backfill_last_proxied_rest_request(self, instrument_trade_spot_from_backfill_last_proxied_rest_request):
        """Sets the instrument_trade_spot_from_backfill_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.

        The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :param instrument_trade_spot_from_backfill_last_proxied_rest_request: The instrument_trade_spot_from_backfill_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_backfill_last_proxied_rest_request: object
        """

        self._instrument_trade_spot_from_backfill_last_proxied_rest_request = instrument_trade_spot_from_backfill_last_proxied_rest_request

    @property
    def instrument_trade_spot_from_backfill_rest_uri_last_request_ts(self):
        """Gets the instrument_trade_spot_from_backfill_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_backfill_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._instrument_trade_spot_from_backfill_rest_uri_last_request_ts

    @instrument_trade_spot_from_backfill_rest_uri_last_request_ts.setter
    def instrument_trade_spot_from_backfill_rest_uri_last_request_ts(self, instrument_trade_spot_from_backfill_rest_uri_last_request_ts):
        """Sets the instrument_trade_spot_from_backfill_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.

        The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :param instrument_trade_spot_from_backfill_rest_uri_last_request_ts: The instrument_trade_spot_from_backfill_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_backfill_rest_uri_last_request_ts: int
        """

        self._instrument_trade_spot_from_backfill_rest_uri_last_request_ts = instrument_trade_spot_from_backfill_rest_uri_last_request_ts

    @property
    def instrument_trade_spot_from_backfill_rest_uri_last_response_ts(self):
        """Gets the instrument_trade_spot_from_backfill_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_backfill_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._instrument_trade_spot_from_backfill_rest_uri_last_response_ts

    @instrument_trade_spot_from_backfill_rest_uri_last_response_ts.setter
    def instrument_trade_spot_from_backfill_rest_uri_last_response_ts(self, instrument_trade_spot_from_backfill_rest_uri_last_response_ts):
        """Sets the instrument_trade_spot_from_backfill_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.

        The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.  # noqa: E501

        :param instrument_trade_spot_from_backfill_rest_uri_last_response_ts: The instrument_trade_spot_from_backfill_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_backfill_rest_uri_last_response_ts: int
        """

        self._instrument_trade_spot_from_backfill_rest_uri_last_response_ts = instrument_trade_spot_from_backfill_rest_uri_last_response_ts

    @property
    def instrument_trade_spot_from_backfill_rest_uri_next_request_ts(self):
        """Gets the instrument_trade_spot_from_backfill_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The next time we expect to make a request for TRADE_SPOT on this instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_backfill_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._instrument_trade_spot_from_backfill_rest_uri_next_request_ts

    @instrument_trade_spot_from_backfill_rest_uri_next_request_ts.setter
    def instrument_trade_spot_from_backfill_rest_uri_next_request_ts(self, instrument_trade_spot_from_backfill_rest_uri_next_request_ts):
        """Sets the instrument_trade_spot_from_backfill_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.

        The next time we expect to make a request for TRADE_SPOT on this instrument.  # noqa: E501

        :param instrument_trade_spot_from_backfill_rest_uri_next_request_ts: The instrument_trade_spot_from_backfill_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_backfill_rest_uri_next_request_ts: int
        """

        self._instrument_trade_spot_from_backfill_rest_uri_next_request_ts = instrument_trade_spot_from_backfill_rest_uri_next_request_ts

    @property
    def instrument_trade_spot_from_blob_last_proxied_rest_request(self):
        """Gets the instrument_trade_spot_from_blob_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_blob_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._instrument_trade_spot_from_blob_last_proxied_rest_request

    @instrument_trade_spot_from_blob_last_proxied_rest_request.setter
    def instrument_trade_spot_from_blob_last_proxied_rest_request(self, instrument_trade_spot_from_blob_last_proxied_rest_request):
        """Sets the instrument_trade_spot_from_blob_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.

        The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :param instrument_trade_spot_from_blob_last_proxied_rest_request: The instrument_trade_spot_from_blob_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_blob_last_proxied_rest_request: object
        """

        self._instrument_trade_spot_from_blob_last_proxied_rest_request = instrument_trade_spot_from_blob_last_proxied_rest_request

    @property
    def instrument_trade_spot_from_blob_rest_uri_last_request_ts(self):
        """Gets the instrument_trade_spot_from_blob_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_blob_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._instrument_trade_spot_from_blob_rest_uri_last_request_ts

    @instrument_trade_spot_from_blob_rest_uri_last_request_ts.setter
    def instrument_trade_spot_from_blob_rest_uri_last_request_ts(self, instrument_trade_spot_from_blob_rest_uri_last_request_ts):
        """Sets the instrument_trade_spot_from_blob_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.

        The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :param instrument_trade_spot_from_blob_rest_uri_last_request_ts: The instrument_trade_spot_from_blob_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_blob_rest_uri_last_request_ts: int
        """

        self._instrument_trade_spot_from_blob_rest_uri_last_request_ts = instrument_trade_spot_from_blob_rest_uri_last_request_ts

    @property
    def instrument_trade_spot_from_blob_rest_uri_last_response_ts(self):
        """Gets the instrument_trade_spot_from_blob_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_blob_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._instrument_trade_spot_from_blob_rest_uri_last_response_ts

    @instrument_trade_spot_from_blob_rest_uri_last_response_ts.setter
    def instrument_trade_spot_from_blob_rest_uri_last_response_ts(self, instrument_trade_spot_from_blob_rest_uri_last_response_ts):
        """Sets the instrument_trade_spot_from_blob_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.

        The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.  # noqa: E501

        :param instrument_trade_spot_from_blob_rest_uri_last_response_ts: The instrument_trade_spot_from_blob_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_blob_rest_uri_last_response_ts: int
        """

        self._instrument_trade_spot_from_blob_rest_uri_last_response_ts = instrument_trade_spot_from_blob_rest_uri_last_response_ts

    @property
    def instrument_trade_spot_from_blob_rest_uri_next_request_ts(self):
        """Gets the instrument_trade_spot_from_blob_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The next time we expect to make a request for TRADE_SPOT on this instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_blob_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._instrument_trade_spot_from_blob_rest_uri_next_request_ts

    @instrument_trade_spot_from_blob_rest_uri_next_request_ts.setter
    def instrument_trade_spot_from_blob_rest_uri_next_request_ts(self, instrument_trade_spot_from_blob_rest_uri_next_request_ts):
        """Sets the instrument_trade_spot_from_blob_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.

        The next time we expect to make a request for TRADE_SPOT on this instrument.  # noqa: E501

        :param instrument_trade_spot_from_blob_rest_uri_next_request_ts: The instrument_trade_spot_from_blob_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_blob_rest_uri_next_request_ts: int
        """

        self._instrument_trade_spot_from_blob_rest_uri_next_request_ts = instrument_trade_spot_from_blob_rest_uri_next_request_ts

    @property
    def instrument_trade_spot_from_calculated_last_proxied_rest_request(self):
        """Gets the instrument_trade_spot_from_calculated_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_calculated_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._instrument_trade_spot_from_calculated_last_proxied_rest_request

    @instrument_trade_spot_from_calculated_last_proxied_rest_request.setter
    def instrument_trade_spot_from_calculated_last_proxied_rest_request(self, instrument_trade_spot_from_calculated_last_proxied_rest_request):
        """Sets the instrument_trade_spot_from_calculated_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.

        The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :param instrument_trade_spot_from_calculated_last_proxied_rest_request: The instrument_trade_spot_from_calculated_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_calculated_last_proxied_rest_request: object
        """

        self._instrument_trade_spot_from_calculated_last_proxied_rest_request = instrument_trade_spot_from_calculated_last_proxied_rest_request

    @property
    def instrument_trade_spot_from_calculated_rest_uri_last_request_ts(self):
        """Gets the instrument_trade_spot_from_calculated_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_calculated_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._instrument_trade_spot_from_calculated_rest_uri_last_request_ts

    @instrument_trade_spot_from_calculated_rest_uri_last_request_ts.setter
    def instrument_trade_spot_from_calculated_rest_uri_last_request_ts(self, instrument_trade_spot_from_calculated_rest_uri_last_request_ts):
        """Sets the instrument_trade_spot_from_calculated_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.

        The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :param instrument_trade_spot_from_calculated_rest_uri_last_request_ts: The instrument_trade_spot_from_calculated_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_calculated_rest_uri_last_request_ts: int
        """

        self._instrument_trade_spot_from_calculated_rest_uri_last_request_ts = instrument_trade_spot_from_calculated_rest_uri_last_request_ts

    @property
    def instrument_trade_spot_from_calculated_rest_uri_last_response_ts(self):
        """Gets the instrument_trade_spot_from_calculated_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_calculated_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._instrument_trade_spot_from_calculated_rest_uri_last_response_ts

    @instrument_trade_spot_from_calculated_rest_uri_last_response_ts.setter
    def instrument_trade_spot_from_calculated_rest_uri_last_response_ts(self, instrument_trade_spot_from_calculated_rest_uri_last_response_ts):
        """Sets the instrument_trade_spot_from_calculated_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.

        The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.  # noqa: E501

        :param instrument_trade_spot_from_calculated_rest_uri_last_response_ts: The instrument_trade_spot_from_calculated_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_calculated_rest_uri_last_response_ts: int
        """

        self._instrument_trade_spot_from_calculated_rest_uri_last_response_ts = instrument_trade_spot_from_calculated_rest_uri_last_response_ts

    @property
    def instrument_trade_spot_from_calculated_rest_uri_next_request_ts(self):
        """Gets the instrument_trade_spot_from_calculated_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The next time we expect to make a request for TRADE_SPOT on this instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_calculated_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._instrument_trade_spot_from_calculated_rest_uri_next_request_ts

    @instrument_trade_spot_from_calculated_rest_uri_next_request_ts.setter
    def instrument_trade_spot_from_calculated_rest_uri_next_request_ts(self, instrument_trade_spot_from_calculated_rest_uri_next_request_ts):
        """Sets the instrument_trade_spot_from_calculated_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.

        The next time we expect to make a request for TRADE_SPOT on this instrument.  # noqa: E501

        :param instrument_trade_spot_from_calculated_rest_uri_next_request_ts: The instrument_trade_spot_from_calculated_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_calculated_rest_uri_next_request_ts: int
        """

        self._instrument_trade_spot_from_calculated_rest_uri_next_request_ts = instrument_trade_spot_from_calculated_rest_uri_next_request_ts

    @property
    def instrument_trade_spot_from_fix_last_proxied_rest_request(self):
        """Gets the instrument_trade_spot_from_fix_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_fix_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._instrument_trade_spot_from_fix_last_proxied_rest_request

    @instrument_trade_spot_from_fix_last_proxied_rest_request.setter
    def instrument_trade_spot_from_fix_last_proxied_rest_request(self, instrument_trade_spot_from_fix_last_proxied_rest_request):
        """Sets the instrument_trade_spot_from_fix_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.

        The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :param instrument_trade_spot_from_fix_last_proxied_rest_request: The instrument_trade_spot_from_fix_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_fix_last_proxied_rest_request: object
        """

        self._instrument_trade_spot_from_fix_last_proxied_rest_request = instrument_trade_spot_from_fix_last_proxied_rest_request

    @property
    def instrument_trade_spot_from_fix_rest_uri_last_request_ts(self):
        """Gets the instrument_trade_spot_from_fix_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_fix_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._instrument_trade_spot_from_fix_rest_uri_last_request_ts

    @instrument_trade_spot_from_fix_rest_uri_last_request_ts.setter
    def instrument_trade_spot_from_fix_rest_uri_last_request_ts(self, instrument_trade_spot_from_fix_rest_uri_last_request_ts):
        """Sets the instrument_trade_spot_from_fix_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.

        The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :param instrument_trade_spot_from_fix_rest_uri_last_request_ts: The instrument_trade_spot_from_fix_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_fix_rest_uri_last_request_ts: int
        """

        self._instrument_trade_spot_from_fix_rest_uri_last_request_ts = instrument_trade_spot_from_fix_rest_uri_last_request_ts

    @property
    def instrument_trade_spot_from_fix_rest_uri_last_response_ts(self):
        """Gets the instrument_trade_spot_from_fix_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_fix_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._instrument_trade_spot_from_fix_rest_uri_last_response_ts

    @instrument_trade_spot_from_fix_rest_uri_last_response_ts.setter
    def instrument_trade_spot_from_fix_rest_uri_last_response_ts(self, instrument_trade_spot_from_fix_rest_uri_last_response_ts):
        """Sets the instrument_trade_spot_from_fix_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.

        The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.  # noqa: E501

        :param instrument_trade_spot_from_fix_rest_uri_last_response_ts: The instrument_trade_spot_from_fix_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_fix_rest_uri_last_response_ts: int
        """

        self._instrument_trade_spot_from_fix_rest_uri_last_response_ts = instrument_trade_spot_from_fix_rest_uri_last_response_ts

    @property
    def instrument_trade_spot_from_fix_rest_uri_next_request_ts(self):
        """Gets the instrument_trade_spot_from_fix_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The next time we expect to make a request for TRADE_SPOT on this instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_fix_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._instrument_trade_spot_from_fix_rest_uri_next_request_ts

    @instrument_trade_spot_from_fix_rest_uri_next_request_ts.setter
    def instrument_trade_spot_from_fix_rest_uri_next_request_ts(self, instrument_trade_spot_from_fix_rest_uri_next_request_ts):
        """Sets the instrument_trade_spot_from_fix_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.

        The next time we expect to make a request for TRADE_SPOT on this instrument.  # noqa: E501

        :param instrument_trade_spot_from_fix_rest_uri_next_request_ts: The instrument_trade_spot_from_fix_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_fix_rest_uri_next_request_ts: int
        """

        self._instrument_trade_spot_from_fix_rest_uri_next_request_ts = instrument_trade_spot_from_fix_rest_uri_next_request_ts

    @property
    def instrument_trade_spot_from_go_last_proxied_rest_request(self):
        """Gets the instrument_trade_spot_from_go_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_go_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._instrument_trade_spot_from_go_last_proxied_rest_request

    @instrument_trade_spot_from_go_last_proxied_rest_request.setter
    def instrument_trade_spot_from_go_last_proxied_rest_request(self, instrument_trade_spot_from_go_last_proxied_rest_request):
        """Sets the instrument_trade_spot_from_go_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.

        The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :param instrument_trade_spot_from_go_last_proxied_rest_request: The instrument_trade_spot_from_go_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_go_last_proxied_rest_request: object
        """

        self._instrument_trade_spot_from_go_last_proxied_rest_request = instrument_trade_spot_from_go_last_proxied_rest_request

    @property
    def instrument_trade_spot_from_go_rest_uri_last_request_ts(self):
        """Gets the instrument_trade_spot_from_go_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_go_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._instrument_trade_spot_from_go_rest_uri_last_request_ts

    @instrument_trade_spot_from_go_rest_uri_last_request_ts.setter
    def instrument_trade_spot_from_go_rest_uri_last_request_ts(self, instrument_trade_spot_from_go_rest_uri_last_request_ts):
        """Sets the instrument_trade_spot_from_go_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.

        The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :param instrument_trade_spot_from_go_rest_uri_last_request_ts: The instrument_trade_spot_from_go_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_go_rest_uri_last_request_ts: int
        """

        self._instrument_trade_spot_from_go_rest_uri_last_request_ts = instrument_trade_spot_from_go_rest_uri_last_request_ts

    @property
    def instrument_trade_spot_from_go_rest_uri_last_response_ts(self):
        """Gets the instrument_trade_spot_from_go_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_go_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._instrument_trade_spot_from_go_rest_uri_last_response_ts

    @instrument_trade_spot_from_go_rest_uri_last_response_ts.setter
    def instrument_trade_spot_from_go_rest_uri_last_response_ts(self, instrument_trade_spot_from_go_rest_uri_last_response_ts):
        """Sets the instrument_trade_spot_from_go_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.

        The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.  # noqa: E501

        :param instrument_trade_spot_from_go_rest_uri_last_response_ts: The instrument_trade_spot_from_go_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_go_rest_uri_last_response_ts: int
        """

        self._instrument_trade_spot_from_go_rest_uri_last_response_ts = instrument_trade_spot_from_go_rest_uri_last_response_ts

    @property
    def instrument_trade_spot_from_go_rest_uri_next_request_ts(self):
        """Gets the instrument_trade_spot_from_go_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The next time we expect to make a request for TRADE_SPOT on this instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_go_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._instrument_trade_spot_from_go_rest_uri_next_request_ts

    @instrument_trade_spot_from_go_rest_uri_next_request_ts.setter
    def instrument_trade_spot_from_go_rest_uri_next_request_ts(self, instrument_trade_spot_from_go_rest_uri_next_request_ts):
        """Sets the instrument_trade_spot_from_go_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.

        The next time we expect to make a request for TRADE_SPOT on this instrument.  # noqa: E501

        :param instrument_trade_spot_from_go_rest_uri_next_request_ts: The instrument_trade_spot_from_go_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_go_rest_uri_next_request_ts: int
        """

        self._instrument_trade_spot_from_go_rest_uri_next_request_ts = instrument_trade_spot_from_go_rest_uri_next_request_ts

    @property
    def instrument_trade_spot_from_polling_last_proxied_rest_request(self):
        """Gets the instrument_trade_spot_from_polling_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_polling_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._instrument_trade_spot_from_polling_last_proxied_rest_request

    @instrument_trade_spot_from_polling_last_proxied_rest_request.setter
    def instrument_trade_spot_from_polling_last_proxied_rest_request(self, instrument_trade_spot_from_polling_last_proxied_rest_request):
        """Sets the instrument_trade_spot_from_polling_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.

        The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :param instrument_trade_spot_from_polling_last_proxied_rest_request: The instrument_trade_spot_from_polling_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_polling_last_proxied_rest_request: object
        """

        self._instrument_trade_spot_from_polling_last_proxied_rest_request = instrument_trade_spot_from_polling_last_proxied_rest_request

    @property
    def instrument_trade_spot_from_polling_rest_uri_last_request_ts(self):
        """Gets the instrument_trade_spot_from_polling_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_polling_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._instrument_trade_spot_from_polling_rest_uri_last_request_ts

    @instrument_trade_spot_from_polling_rest_uri_last_request_ts.setter
    def instrument_trade_spot_from_polling_rest_uri_last_request_ts(self, instrument_trade_spot_from_polling_rest_uri_last_request_ts):
        """Sets the instrument_trade_spot_from_polling_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.

        The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :param instrument_trade_spot_from_polling_rest_uri_last_request_ts: The instrument_trade_spot_from_polling_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_polling_rest_uri_last_request_ts: int
        """

        self._instrument_trade_spot_from_polling_rest_uri_last_request_ts = instrument_trade_spot_from_polling_rest_uri_last_request_ts

    @property
    def instrument_trade_spot_from_polling_rest_uri_last_response_ts(self):
        """Gets the instrument_trade_spot_from_polling_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_polling_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._instrument_trade_spot_from_polling_rest_uri_last_response_ts

    @instrument_trade_spot_from_polling_rest_uri_last_response_ts.setter
    def instrument_trade_spot_from_polling_rest_uri_last_response_ts(self, instrument_trade_spot_from_polling_rest_uri_last_response_ts):
        """Sets the instrument_trade_spot_from_polling_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.

        The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.  # noqa: E501

        :param instrument_trade_spot_from_polling_rest_uri_last_response_ts: The instrument_trade_spot_from_polling_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_polling_rest_uri_last_response_ts: int
        """

        self._instrument_trade_spot_from_polling_rest_uri_last_response_ts = instrument_trade_spot_from_polling_rest_uri_last_response_ts

    @property
    def instrument_trade_spot_from_polling_rest_uri_next_request_ts(self):
        """Gets the instrument_trade_spot_from_polling_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The next time we expect to make a request for TRADE_SPOT on this instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_polling_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._instrument_trade_spot_from_polling_rest_uri_next_request_ts

    @instrument_trade_spot_from_polling_rest_uri_next_request_ts.setter
    def instrument_trade_spot_from_polling_rest_uri_next_request_ts(self, instrument_trade_spot_from_polling_rest_uri_next_request_ts):
        """Sets the instrument_trade_spot_from_polling_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.

        The next time we expect to make a request for TRADE_SPOT on this instrument.  # noqa: E501

        :param instrument_trade_spot_from_polling_rest_uri_next_request_ts: The instrument_trade_spot_from_polling_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_polling_rest_uri_next_request_ts: int
        """

        self._instrument_trade_spot_from_polling_rest_uri_next_request_ts = instrument_trade_spot_from_polling_rest_uri_next_request_ts

    @property
    def instrument_trade_spot_from_streaming_last_proxied_rest_request(self):
        """Gets the instrument_trade_spot_from_streaming_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_streaming_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._instrument_trade_spot_from_streaming_last_proxied_rest_request

    @instrument_trade_spot_from_streaming_last_proxied_rest_request.setter
    def instrument_trade_spot_from_streaming_last_proxied_rest_request(self, instrument_trade_spot_from_streaming_last_proxied_rest_request):
        """Sets the instrument_trade_spot_from_streaming_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.

        The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :param instrument_trade_spot_from_streaming_last_proxied_rest_request: The instrument_trade_spot_from_streaming_last_proxied_rest_request of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_streaming_last_proxied_rest_request: object
        """

        self._instrument_trade_spot_from_streaming_last_proxied_rest_request = instrument_trade_spot_from_streaming_last_proxied_rest_request

    @property
    def instrument_trade_spot_from_streaming_rest_uri_last_request_ts(self):
        """Gets the instrument_trade_spot_from_streaming_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_streaming_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._instrument_trade_spot_from_streaming_rest_uri_last_request_ts

    @instrument_trade_spot_from_streaming_rest_uri_last_request_ts.setter
    def instrument_trade_spot_from_streaming_rest_uri_last_request_ts(self, instrument_trade_spot_from_streaming_rest_uri_last_request_ts):
        """Sets the instrument_trade_spot_from_streaming_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.

        The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :param instrument_trade_spot_from_streaming_rest_uri_last_request_ts: The instrument_trade_spot_from_streaming_rest_uri_last_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_streaming_rest_uri_last_request_ts: int
        """

        self._instrument_trade_spot_from_streaming_rest_uri_last_request_ts = instrument_trade_spot_from_streaming_rest_uri_last_request_ts

    @property
    def instrument_trade_spot_from_streaming_rest_uri_last_response_ts(self):
        """Gets the instrument_trade_spot_from_streaming_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_streaming_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._instrument_trade_spot_from_streaming_rest_uri_last_response_ts

    @instrument_trade_spot_from_streaming_rest_uri_last_response_ts.setter
    def instrument_trade_spot_from_streaming_rest_uri_last_response_ts(self, instrument_trade_spot_from_streaming_rest_uri_last_response_ts):
        """Sets the instrument_trade_spot_from_streaming_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.

        The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.  # noqa: E501

        :param instrument_trade_spot_from_streaming_rest_uri_last_response_ts: The instrument_trade_spot_from_streaming_rest_uri_last_response_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_streaming_rest_uri_last_response_ts: int
        """

        self._instrument_trade_spot_from_streaming_rest_uri_last_response_ts = instrument_trade_spot_from_streaming_rest_uri_last_response_ts

    @property
    def instrument_trade_spot_from_streaming_rest_uri_next_request_ts(self):
        """Gets the instrument_trade_spot_from_streaming_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The next time we expect to make a request for TRADE_SPOT on this instrument.  # noqa: E501

        :return: The instrument_trade_spot_from_streaming_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._instrument_trade_spot_from_streaming_rest_uri_next_request_ts

    @instrument_trade_spot_from_streaming_rest_uri_next_request_ts.setter
    def instrument_trade_spot_from_streaming_rest_uri_next_request_ts(self, instrument_trade_spot_from_streaming_rest_uri_next_request_ts):
        """Sets the instrument_trade_spot_from_streaming_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.

        The next time we expect to make a request for TRADE_SPOT on this instrument.  # noqa: E501

        :param instrument_trade_spot_from_streaming_rest_uri_next_request_ts: The instrument_trade_spot_from_streaming_rest_uri_next_request_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_from_streaming_rest_uri_next_request_ts: int
        """

        self._instrument_trade_spot_from_streaming_rest_uri_next_request_ts = instrument_trade_spot_from_streaming_rest_uri_next_request_ts

    @property
    def instrument_trade_spot_is_ready_for_streaming_integration(self):
        """Gets the instrument_trade_spot_is_ready_for_streaming_integration of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This flags the exchange instrument as in ready to consume TRADE_SPOT via a streaming integration.  # noqa: E501

        :return: The instrument_trade_spot_is_ready_for_streaming_integration of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: bool
        """
        return self._instrument_trade_spot_is_ready_for_streaming_integration

    @instrument_trade_spot_is_ready_for_streaming_integration.setter
    def instrument_trade_spot_is_ready_for_streaming_integration(self, instrument_trade_spot_is_ready_for_streaming_integration):
        """Sets the instrument_trade_spot_is_ready_for_streaming_integration of this SPOTINSTRUMENTMETADATA.

        This flags the exchange instrument as in ready to consume TRADE_SPOT via a streaming integration.  # noqa: E501

        :param instrument_trade_spot_is_ready_for_streaming_integration: The instrument_trade_spot_is_ready_for_streaming_integration of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_is_ready_for_streaming_integration: bool
        """

        self._instrument_trade_spot_is_ready_for_streaming_integration = instrument_trade_spot_is_ready_for_streaming_integration

    @property
    def instrument_trade_spot_rest_uri(self):
        """Gets the instrument_trade_spot_rest_uri of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is used to build up the request in some cases, this is where we put the id we use when querying for TRADE_SPOT.  # noqa: E501

        :return: The instrument_trade_spot_rest_uri of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: str
        """
        return self._instrument_trade_spot_rest_uri

    @instrument_trade_spot_rest_uri.setter
    def instrument_trade_spot_rest_uri(self, instrument_trade_spot_rest_uri):
        """Sets the instrument_trade_spot_rest_uri of this SPOTINSTRUMENTMETADATA.

        This is used to build up the request in some cases, this is where we put the id we use when querying for TRADE_SPOT.  # noqa: E501

        :param instrument_trade_spot_rest_uri: The instrument_trade_spot_rest_uri of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_rest_uri: str
        """

        self._instrument_trade_spot_rest_uri = instrument_trade_spot_rest_uri

    @property
    def instrument_trade_spot_rest_url(self):
        """Gets the instrument_trade_spot_rest_url of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The URL we send to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :return: The instrument_trade_spot_rest_url of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: str
        """
        return self._instrument_trade_spot_rest_url

    @instrument_trade_spot_rest_url.setter
    def instrument_trade_spot_rest_url(self, instrument_trade_spot_rest_url):
        """Sets the instrument_trade_spot_rest_url of this SPOTINSTRUMENTMETADATA.

        The URL we send to the proxy swarm to get TRADE_SPOT for the instrument.  # noqa: E501

        :param instrument_trade_spot_rest_url: The instrument_trade_spot_rest_url of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_rest_url: str
        """

        self._instrument_trade_spot_rest_url = instrument_trade_spot_rest_url

    @property
    def instrument_trade_spot_streaming_subscription(self):
        """Gets the instrument_trade_spot_streaming_subscription of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is used to build up the subscription in some cases, this is where we put the id we use when subscribing for TRADE_SPOT on this instrument.  # noqa: E501

        :return: The instrument_trade_spot_streaming_subscription of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: str
        """
        return self._instrument_trade_spot_streaming_subscription

    @instrument_trade_spot_streaming_subscription.setter
    def instrument_trade_spot_streaming_subscription(self, instrument_trade_spot_streaming_subscription):
        """Sets the instrument_trade_spot_streaming_subscription of this SPOTINSTRUMENTMETADATA.

        This is used to build up the subscription in some cases, this is where we put the id we use when subscribing for TRADE_SPOT on this instrument.  # noqa: E501

        :param instrument_trade_spot_streaming_subscription: The instrument_trade_spot_streaming_subscription of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type instrument_trade_spot_streaming_subscription: str
        """

        self._instrument_trade_spot_streaming_subscription = instrument_trade_spot_streaming_subscription

    @property
    def last_concurrent_batch_of_trades_spot_ms(self):
        """Gets the last_concurrent_batch_of_trades_spot_ms of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The timestamp last encountered where the batch of trades from TRADES_SPOT all occured at the same time. This is an issue when making the next request that requires polling by timestamp as a start/from parameter  # noqa: E501

        :return: The last_concurrent_batch_of_trades_spot_ms of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._last_concurrent_batch_of_trades_spot_ms

    @last_concurrent_batch_of_trades_spot_ms.setter
    def last_concurrent_batch_of_trades_spot_ms(self, last_concurrent_batch_of_trades_spot_ms):
        """Sets the last_concurrent_batch_of_trades_spot_ms of this SPOTINSTRUMENTMETADATA.

        The timestamp last encountered where the batch of trades from TRADES_SPOT all occured at the same time. This is an issue when making the next request that requires polling by timestamp as a start/from parameter  # noqa: E501

        :param last_concurrent_batch_of_trades_spot_ms: The last_concurrent_batch_of_trades_spot_ms of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type last_concurrent_batch_of_trades_spot_ms: int
        """

        self._last_concurrent_batch_of_trades_spot_ms = last_concurrent_batch_of_trades_spot_ms

    @property
    def last_seen_on_blob_ts(self):
        """Gets the last_seen_on_blob_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the last time instrument was seen on instrumentListSourceType BLOB.  # noqa: E501

        :return: The last_seen_on_blob_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._last_seen_on_blob_ts

    @last_seen_on_blob_ts.setter
    def last_seen_on_blob_ts(self, last_seen_on_blob_ts):
        """Sets the last_seen_on_blob_ts of this SPOTINSTRUMENTMETADATA.

        This is the last time instrument was seen on instrumentListSourceType BLOB.  # noqa: E501

        :param last_seen_on_blob_ts: The last_seen_on_blob_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type last_seen_on_blob_ts: int
        """

        self._last_seen_on_blob_ts = last_seen_on_blob_ts

    @property
    def last_seen_on_fix_ts(self):
        """Gets the last_seen_on_fix_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the last time instrument was seen on instrumentListSourceType FIX.  # noqa: E501

        :return: The last_seen_on_fix_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._last_seen_on_fix_ts

    @last_seen_on_fix_ts.setter
    def last_seen_on_fix_ts(self, last_seen_on_fix_ts):
        """Sets the last_seen_on_fix_ts of this SPOTINSTRUMENTMETADATA.

        This is the last time instrument was seen on instrumentListSourceType FIX.  # noqa: E501

        :param last_seen_on_fix_ts: The last_seen_on_fix_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type last_seen_on_fix_ts: int
        """

        self._last_seen_on_fix_ts = last_seen_on_fix_ts

    @property
    def last_seen_on_hardcoded_ts(self):
        """Gets the last_seen_on_hardcoded_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the last time instrument was seen on instrumentListSourceType HARDCODED.  # noqa: E501

        :return: The last_seen_on_hardcoded_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._last_seen_on_hardcoded_ts

    @last_seen_on_hardcoded_ts.setter
    def last_seen_on_hardcoded_ts(self, last_seen_on_hardcoded_ts):
        """Sets the last_seen_on_hardcoded_ts of this SPOTINSTRUMENTMETADATA.

        This is the last time instrument was seen on instrumentListSourceType HARDCODED.  # noqa: E501

        :param last_seen_on_hardcoded_ts: The last_seen_on_hardcoded_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type last_seen_on_hardcoded_ts: int
        """

        self._last_seen_on_hardcoded_ts = last_seen_on_hardcoded_ts

    @property
    def last_seen_on_index_composition_ts(self):
        """Gets the last_seen_on_index_composition_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the last time instrument was seen on instrumentListSourceType INDEX_COMPOSITION.  # noqa: E501

        :return: The last_seen_on_index_composition_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._last_seen_on_index_composition_ts

    @last_seen_on_index_composition_ts.setter
    def last_seen_on_index_composition_ts(self, last_seen_on_index_composition_ts):
        """Sets the last_seen_on_index_composition_ts of this SPOTINSTRUMENTMETADATA.

        This is the last time instrument was seen on instrumentListSourceType INDEX_COMPOSITION.  # noqa: E501

        :param last_seen_on_index_composition_ts: The last_seen_on_index_composition_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type last_seen_on_index_composition_ts: int
        """

        self._last_seen_on_index_composition_ts = last_seen_on_index_composition_ts

    @property
    def last_seen_on_nsq_ts(self):
        """Gets the last_seen_on_nsq_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the last time instrument was seen on instrumentListSourceType NSQ.  # noqa: E501

        :return: The last_seen_on_nsq_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._last_seen_on_nsq_ts

    @last_seen_on_nsq_ts.setter
    def last_seen_on_nsq_ts(self, last_seen_on_nsq_ts):
        """Sets the last_seen_on_nsq_ts of this SPOTINSTRUMENTMETADATA.

        This is the last time instrument was seen on instrumentListSourceType NSQ.  # noqa: E501

        :param last_seen_on_nsq_ts: The last_seen_on_nsq_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type last_seen_on_nsq_ts: int
        """

        self._last_seen_on_nsq_ts = last_seen_on_nsq_ts

    @property
    def last_seen_on_polling_ts(self):
        """Gets the last_seen_on_polling_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the last time instrument was seen on instrumentListSourceType POLLING.  # noqa: E501

        :return: The last_seen_on_polling_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._last_seen_on_polling_ts

    @last_seen_on_polling_ts.setter
    def last_seen_on_polling_ts(self, last_seen_on_polling_ts):
        """Sets the last_seen_on_polling_ts of this SPOTINSTRUMENTMETADATA.

        This is the last time instrument was seen on instrumentListSourceType POLLING.  # noqa: E501

        :param last_seen_on_polling_ts: The last_seen_on_polling_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type last_seen_on_polling_ts: int
        """

        self._last_seen_on_polling_ts = last_seen_on_polling_ts

    @property
    def last_seen_on_streaming_ts(self):
        """Gets the last_seen_on_streaming_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the last time instrument was seen on instrumentListSourceType STREAMING.  # noqa: E501

        :return: The last_seen_on_streaming_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._last_seen_on_streaming_ts

    @last_seen_on_streaming_ts.setter
    def last_seen_on_streaming_ts(self, last_seen_on_streaming_ts):
        """Sets the last_seen_on_streaming_ts of this SPOTINSTRUMENTMETADATA.

        This is the last time instrument was seen on instrumentListSourceType STREAMING.  # noqa: E501

        :param last_seen_on_streaming_ts: The last_seen_on_streaming_ts of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type last_seen_on_streaming_ts: int
        """

        self._last_seen_on_streaming_ts = last_seen_on_streaming_ts

    @property
    def last_trade_spot_from_backfill(self):
        """Gets the last_trade_spot_from_backfill of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the last TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :return: The last_trade_spot_from_backfill of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._last_trade_spot_from_backfill

    @last_trade_spot_from_backfill.setter
    def last_trade_spot_from_backfill(self, last_trade_spot_from_backfill):
        """Sets the last_trade_spot_from_backfill of this SPOTINSTRUMENTMETADATA.

        This is the last TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :param last_trade_spot_from_backfill: The last_trade_spot_from_backfill of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type last_trade_spot_from_backfill: object
        """

        self._last_trade_spot_from_backfill = last_trade_spot_from_backfill

    @property
    def last_trade_spot_from_backfill_external(self):
        """Gets the last_trade_spot_from_backfill_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the last TRADE_SPOT that we have seen on the specific trade source in external format.  # noqa: E501

        :return: The last_trade_spot_from_backfill_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._last_trade_spot_from_backfill_external

    @last_trade_spot_from_backfill_external.setter
    def last_trade_spot_from_backfill_external(self, last_trade_spot_from_backfill_external):
        """Sets the last_trade_spot_from_backfill_external of this SPOTINSTRUMENTMETADATA.

        This is the last TRADE_SPOT that we have seen on the specific trade source in external format.  # noqa: E501

        :param last_trade_spot_from_backfill_external: The last_trade_spot_from_backfill_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type last_trade_spot_from_backfill_external: object
        """

        self._last_trade_spot_from_backfill_external = last_trade_spot_from_backfill_external

    @property
    def last_trade_spot_from_blob(self):
        """Gets the last_trade_spot_from_blob of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the last TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :return: The last_trade_spot_from_blob of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._last_trade_spot_from_blob

    @last_trade_spot_from_blob.setter
    def last_trade_spot_from_blob(self, last_trade_spot_from_blob):
        """Sets the last_trade_spot_from_blob of this SPOTINSTRUMENTMETADATA.

        This is the last TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :param last_trade_spot_from_blob: The last_trade_spot_from_blob of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type last_trade_spot_from_blob: object
        """

        self._last_trade_spot_from_blob = last_trade_spot_from_blob

    @property
    def last_trade_spot_from_blob_external(self):
        """Gets the last_trade_spot_from_blob_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the last TRADE_SPOT that we have seen on the specific trade source in external format.  # noqa: E501

        :return: The last_trade_spot_from_blob_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._last_trade_spot_from_blob_external

    @last_trade_spot_from_blob_external.setter
    def last_trade_spot_from_blob_external(self, last_trade_spot_from_blob_external):
        """Sets the last_trade_spot_from_blob_external of this SPOTINSTRUMENTMETADATA.

        This is the last TRADE_SPOT that we have seen on the specific trade source in external format.  # noqa: E501

        :param last_trade_spot_from_blob_external: The last_trade_spot_from_blob_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type last_trade_spot_from_blob_external: object
        """

        self._last_trade_spot_from_blob_external = last_trade_spot_from_blob_external

    @property
    def last_trade_spot_from_calculated(self):
        """Gets the last_trade_spot_from_calculated of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the last TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :return: The last_trade_spot_from_calculated of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._last_trade_spot_from_calculated

    @last_trade_spot_from_calculated.setter
    def last_trade_spot_from_calculated(self, last_trade_spot_from_calculated):
        """Sets the last_trade_spot_from_calculated of this SPOTINSTRUMENTMETADATA.

        This is the last TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :param last_trade_spot_from_calculated: The last_trade_spot_from_calculated of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type last_trade_spot_from_calculated: object
        """

        self._last_trade_spot_from_calculated = last_trade_spot_from_calculated

    @property
    def last_trade_spot_from_calculated_external(self):
        """Gets the last_trade_spot_from_calculated_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the last TRADE_SPOT that we have seen on the specific trade source in external format.  # noqa: E501

        :return: The last_trade_spot_from_calculated_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._last_trade_spot_from_calculated_external

    @last_trade_spot_from_calculated_external.setter
    def last_trade_spot_from_calculated_external(self, last_trade_spot_from_calculated_external):
        """Sets the last_trade_spot_from_calculated_external of this SPOTINSTRUMENTMETADATA.

        This is the last TRADE_SPOT that we have seen on the specific trade source in external format.  # noqa: E501

        :param last_trade_spot_from_calculated_external: The last_trade_spot_from_calculated_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type last_trade_spot_from_calculated_external: object
        """

        self._last_trade_spot_from_calculated_external = last_trade_spot_from_calculated_external

    @property
    def last_trade_spot_from_fix(self):
        """Gets the last_trade_spot_from_fix of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the last TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :return: The last_trade_spot_from_fix of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._last_trade_spot_from_fix

    @last_trade_spot_from_fix.setter
    def last_trade_spot_from_fix(self, last_trade_spot_from_fix):
        """Sets the last_trade_spot_from_fix of this SPOTINSTRUMENTMETADATA.

        This is the last TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :param last_trade_spot_from_fix: The last_trade_spot_from_fix of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type last_trade_spot_from_fix: object
        """

        self._last_trade_spot_from_fix = last_trade_spot_from_fix

    @property
    def last_trade_spot_from_fix_external(self):
        """Gets the last_trade_spot_from_fix_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the last TRADE_SPOT that we have seen on the specific trade source in external format.  # noqa: E501

        :return: The last_trade_spot_from_fix_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._last_trade_spot_from_fix_external

    @last_trade_spot_from_fix_external.setter
    def last_trade_spot_from_fix_external(self, last_trade_spot_from_fix_external):
        """Sets the last_trade_spot_from_fix_external of this SPOTINSTRUMENTMETADATA.

        This is the last TRADE_SPOT that we have seen on the specific trade source in external format.  # noqa: E501

        :param last_trade_spot_from_fix_external: The last_trade_spot_from_fix_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type last_trade_spot_from_fix_external: object
        """

        self._last_trade_spot_from_fix_external = last_trade_spot_from_fix_external

    @property
    def last_trade_spot_from_go(self):
        """Gets the last_trade_spot_from_go of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the last TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :return: The last_trade_spot_from_go of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._last_trade_spot_from_go

    @last_trade_spot_from_go.setter
    def last_trade_spot_from_go(self, last_trade_spot_from_go):
        """Sets the last_trade_spot_from_go of this SPOTINSTRUMENTMETADATA.

        This is the last TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :param last_trade_spot_from_go: The last_trade_spot_from_go of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type last_trade_spot_from_go: object
        """

        self._last_trade_spot_from_go = last_trade_spot_from_go

    @property
    def last_trade_spot_from_go_external(self):
        """Gets the last_trade_spot_from_go_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the last TRADE_SPOT that we have seen on the specific trade source in external format.  # noqa: E501

        :return: The last_trade_spot_from_go_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._last_trade_spot_from_go_external

    @last_trade_spot_from_go_external.setter
    def last_trade_spot_from_go_external(self, last_trade_spot_from_go_external):
        """Sets the last_trade_spot_from_go_external of this SPOTINSTRUMENTMETADATA.

        This is the last TRADE_SPOT that we have seen on the specific trade source in external format.  # noqa: E501

        :param last_trade_spot_from_go_external: The last_trade_spot_from_go_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type last_trade_spot_from_go_external: object
        """

        self._last_trade_spot_from_go_external = last_trade_spot_from_go_external

    @property
    def last_trade_spot_from_polling(self):
        """Gets the last_trade_spot_from_polling of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the last TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :return: The last_trade_spot_from_polling of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._last_trade_spot_from_polling

    @last_trade_spot_from_polling.setter
    def last_trade_spot_from_polling(self, last_trade_spot_from_polling):
        """Sets the last_trade_spot_from_polling of this SPOTINSTRUMENTMETADATA.

        This is the last TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :param last_trade_spot_from_polling: The last_trade_spot_from_polling of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type last_trade_spot_from_polling: object
        """

        self._last_trade_spot_from_polling = last_trade_spot_from_polling

    @property
    def last_trade_spot_from_polling_external(self):
        """Gets the last_trade_spot_from_polling_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the last TRADE_SPOT that we have seen on the specific trade source in external format.  # noqa: E501

        :return: The last_trade_spot_from_polling_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._last_trade_spot_from_polling_external

    @last_trade_spot_from_polling_external.setter
    def last_trade_spot_from_polling_external(self, last_trade_spot_from_polling_external):
        """Sets the last_trade_spot_from_polling_external of this SPOTINSTRUMENTMETADATA.

        This is the last TRADE_SPOT that we have seen on the specific trade source in external format.  # noqa: E501

        :param last_trade_spot_from_polling_external: The last_trade_spot_from_polling_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type last_trade_spot_from_polling_external: object
        """

        self._last_trade_spot_from_polling_external = last_trade_spot_from_polling_external

    @property
    def last_trade_spot_from_streaming(self):
        """Gets the last_trade_spot_from_streaming of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the last TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :return: The last_trade_spot_from_streaming of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._last_trade_spot_from_streaming

    @last_trade_spot_from_streaming.setter
    def last_trade_spot_from_streaming(self, last_trade_spot_from_streaming):
        """Sets the last_trade_spot_from_streaming of this SPOTINSTRUMENTMETADATA.

        This is the last TRADE_SPOT that we have seen on the specific source type in internal format.  # noqa: E501

        :param last_trade_spot_from_streaming: The last_trade_spot_from_streaming of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type last_trade_spot_from_streaming: object
        """

        self._last_trade_spot_from_streaming = last_trade_spot_from_streaming

    @property
    def last_trade_spot_from_streaming_external(self):
        """Gets the last_trade_spot_from_streaming_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is the last TRADE_SPOT that we have seen on the specific trade source in external format.  # noqa: E501

        :return: The last_trade_spot_from_streaming_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._last_trade_spot_from_streaming_external

    @last_trade_spot_from_streaming_external.setter
    def last_trade_spot_from_streaming_external(self, last_trade_spot_from_streaming_external):
        """Sets the last_trade_spot_from_streaming_external of this SPOTINSTRUMENTMETADATA.

        This is the last TRADE_SPOT that we have seen on the specific trade source in external format.  # noqa: E501

        :param last_trade_spot_from_streaming_external: The last_trade_spot_from_streaming_external of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type last_trade_spot_from_streaming_external: object
        """

        self._last_trade_spot_from_streaming_external = last_trade_spot_from_streaming_external

    @property
    def metadata_version(self):
        """Gets the metadata_version of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        The version of metadata, used for version conversions/migrates.  # noqa: E501

        :return: The metadata_version of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._metadata_version

    @metadata_version.setter
    def metadata_version(self, metadata_version):
        """Sets the metadata_version of this SPOTINSTRUMENTMETADATA.

        The version of metadata, used for version conversions/migrates.  # noqa: E501

        :param metadata_version: The metadata_version of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type metadata_version: int
        """

        self._metadata_version = metadata_version

    @property
    def processing_trades_from_blob_status(self):
        """Gets the processing_trades_from_blob_status of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This states the status of blob migration for this intrument on this exchange.  # noqa: E501

        :return: The processing_trades_from_blob_status of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: str
        """
        return self._processing_trades_from_blob_status

    @processing_trades_from_blob_status.setter
    def processing_trades_from_blob_status(self, processing_trades_from_blob_status):
        """Sets the processing_trades_from_blob_status of this SPOTINSTRUMENTMETADATA.

        This states the status of blob migration for this intrument on this exchange.  # noqa: E501

        :param processing_trades_from_blob_status: The processing_trades_from_blob_status of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type processing_trades_from_blob_status: str
        """

        self._processing_trades_from_blob_status = processing_trades_from_blob_status

    @property
    def total_trades_spot(self):
        """Gets the total_trades_spot of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is both the CCSEQ and the total TRADES_SPOT we have processed on this instrument  # noqa: E501

        :return: The total_trades_spot of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: int
        """
        return self._total_trades_spot

    @total_trades_spot.setter
    def total_trades_spot(self, total_trades_spot):
        """Sets the total_trades_spot of this SPOTINSTRUMENTMETADATA.

        This is both the CCSEQ and the total TRADES_SPOT we have processed on this instrument  # noqa: E501

        :param total_trades_spot: The total_trades_spot of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type total_trades_spot: int
        """

        self._total_trades_spot = total_trades_spot

    @property
    def unstructured_trade_spot_from_backfill_internal_data(self):
        """Gets the unstructured_trade_spot_from_backfill_internal_data of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.  # noqa: E501

        :return: The unstructured_trade_spot_from_backfill_internal_data of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._unstructured_trade_spot_from_backfill_internal_data

    @unstructured_trade_spot_from_backfill_internal_data.setter
    def unstructured_trade_spot_from_backfill_internal_data(self, unstructured_trade_spot_from_backfill_internal_data):
        """Sets the unstructured_trade_spot_from_backfill_internal_data of this SPOTINSTRUMENTMETADATA.

        This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.  # noqa: E501

        :param unstructured_trade_spot_from_backfill_internal_data: The unstructured_trade_spot_from_backfill_internal_data of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type unstructured_trade_spot_from_backfill_internal_data: object
        """

        self._unstructured_trade_spot_from_backfill_internal_data = unstructured_trade_spot_from_backfill_internal_data

    @property
    def unstructured_trade_spot_from_blob_internal_data(self):
        """Gets the unstructured_trade_spot_from_blob_internal_data of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.  # noqa: E501

        :return: The unstructured_trade_spot_from_blob_internal_data of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._unstructured_trade_spot_from_blob_internal_data

    @unstructured_trade_spot_from_blob_internal_data.setter
    def unstructured_trade_spot_from_blob_internal_data(self, unstructured_trade_spot_from_blob_internal_data):
        """Sets the unstructured_trade_spot_from_blob_internal_data of this SPOTINSTRUMENTMETADATA.

        This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.  # noqa: E501

        :param unstructured_trade_spot_from_blob_internal_data: The unstructured_trade_spot_from_blob_internal_data of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type unstructured_trade_spot_from_blob_internal_data: object
        """

        self._unstructured_trade_spot_from_blob_internal_data = unstructured_trade_spot_from_blob_internal_data

    @property
    def unstructured_trade_spot_from_calculated_internal_data(self):
        """Gets the unstructured_trade_spot_from_calculated_internal_data of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.  # noqa: E501

        :return: The unstructured_trade_spot_from_calculated_internal_data of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._unstructured_trade_spot_from_calculated_internal_data

    @unstructured_trade_spot_from_calculated_internal_data.setter
    def unstructured_trade_spot_from_calculated_internal_data(self, unstructured_trade_spot_from_calculated_internal_data):
        """Sets the unstructured_trade_spot_from_calculated_internal_data of this SPOTINSTRUMENTMETADATA.

        This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.  # noqa: E501

        :param unstructured_trade_spot_from_calculated_internal_data: The unstructured_trade_spot_from_calculated_internal_data of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type unstructured_trade_spot_from_calculated_internal_data: object
        """

        self._unstructured_trade_spot_from_calculated_internal_data = unstructured_trade_spot_from_calculated_internal_data

    @property
    def unstructured_trade_spot_from_fix_internal_data(self):
        """Gets the unstructured_trade_spot_from_fix_internal_data of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.  # noqa: E501

        :return: The unstructured_trade_spot_from_fix_internal_data of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._unstructured_trade_spot_from_fix_internal_data

    @unstructured_trade_spot_from_fix_internal_data.setter
    def unstructured_trade_spot_from_fix_internal_data(self, unstructured_trade_spot_from_fix_internal_data):
        """Sets the unstructured_trade_spot_from_fix_internal_data of this SPOTINSTRUMENTMETADATA.

        This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.  # noqa: E501

        :param unstructured_trade_spot_from_fix_internal_data: The unstructured_trade_spot_from_fix_internal_data of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type unstructured_trade_spot_from_fix_internal_data: object
        """

        self._unstructured_trade_spot_from_fix_internal_data = unstructured_trade_spot_from_fix_internal_data

    @property
    def unstructured_trade_spot_from_go_internal_data(self):
        """Gets the unstructured_trade_spot_from_go_internal_data of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.  # noqa: E501

        :return: The unstructured_trade_spot_from_go_internal_data of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._unstructured_trade_spot_from_go_internal_data

    @unstructured_trade_spot_from_go_internal_data.setter
    def unstructured_trade_spot_from_go_internal_data(self, unstructured_trade_spot_from_go_internal_data):
        """Sets the unstructured_trade_spot_from_go_internal_data of this SPOTINSTRUMENTMETADATA.

        This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.  # noqa: E501

        :param unstructured_trade_spot_from_go_internal_data: The unstructured_trade_spot_from_go_internal_data of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type unstructured_trade_spot_from_go_internal_data: object
        """

        self._unstructured_trade_spot_from_go_internal_data = unstructured_trade_spot_from_go_internal_data

    @property
    def unstructured_trade_spot_from_polling_internal_data(self):
        """Gets the unstructured_trade_spot_from_polling_internal_data of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.  # noqa: E501

        :return: The unstructured_trade_spot_from_polling_internal_data of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._unstructured_trade_spot_from_polling_internal_data

    @unstructured_trade_spot_from_polling_internal_data.setter
    def unstructured_trade_spot_from_polling_internal_data(self, unstructured_trade_spot_from_polling_internal_data):
        """Sets the unstructured_trade_spot_from_polling_internal_data of this SPOTINSTRUMENTMETADATA.

        This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.  # noqa: E501

        :param unstructured_trade_spot_from_polling_internal_data: The unstructured_trade_spot_from_polling_internal_data of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type unstructured_trade_spot_from_polling_internal_data: object
        """

        self._unstructured_trade_spot_from_polling_internal_data = unstructured_trade_spot_from_polling_internal_data

    @property
    def unstructured_trade_spot_from_streaming_internal_data(self):
        """Gets the unstructured_trade_spot_from_streaming_internal_data of this SPOTINSTRUMENTMETADATA.  # noqa: E501

        This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.  # noqa: E501

        :return: The unstructured_trade_spot_from_streaming_internal_data of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :rtype: object
        """
        return self._unstructured_trade_spot_from_streaming_internal_data

    @unstructured_trade_spot_from_streaming_internal_data.setter
    def unstructured_trade_spot_from_streaming_internal_data(self, unstructured_trade_spot_from_streaming_internal_data):
        """Sets the unstructured_trade_spot_from_streaming_internal_data of this SPOTINSTRUMENTMETADATA.

        This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.  # noqa: E501

        :param unstructured_trade_spot_from_streaming_internal_data: The unstructured_trade_spot_from_streaming_internal_data of this SPOTINSTRUMENTMETADATA.  # noqa: E501
        :type unstructured_trade_spot_from_streaming_internal_data: object
        """

        self._unstructured_trade_spot_from_streaming_internal_data = unstructured_trade_spot_from_streaming_internal_data

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SPOTINSTRUMENTMETADATA):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, SPOTINSTRUMENTMETADATA):
            return True

        return self.to_dict() != other.to_dict()
