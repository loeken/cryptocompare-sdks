# coding: utf-8

"""
    CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry

    CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.  # noqa: E501

    The version of the OpenAPI document: 2.1.1
    Contact: data@cryptocompare.com
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from openapi_client.configuration import Configuration


class SPOTINSTRUMENTMARKETDATA(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'base': 'str',
        'ccseq': 'int',
        'current_day_high': 'int',
        'current_day_low': 'int',
        'current_day_open': 'int',
        'current_day_quote_volume': 'int',
        'current_day_quote_volume_buy': 'int',
        'current_day_quote_volume_sell': 'int',
        'current_day_quote_volume_unknown': 'int',
        'current_day_total_trades': 'int',
        'current_day_total_trades_buy': 'int',
        'current_day_total_trades_sell': 'int',
        'current_day_total_trades_unknown': 'int',
        'current_day_volume': 'int',
        'current_day_volume_buy': 'int',
        'current_day_volume_sell': 'int',
        'current_day_volume_unknown': 'int',
        'current_hour_high': 'int',
        'current_hour_low': 'int',
        'current_hour_open': 'int',
        'current_hour_quote_volume': 'int',
        'current_hour_quote_volume_buy': 'int',
        'current_hour_quote_volume_sell': 'int',
        'current_hour_quote_volume_unknown': 'int',
        'current_hour_total_trades': 'int',
        'current_hour_total_trades_buy': 'int',
        'current_hour_total_trades_sell': 'int',
        'current_hour_total_trades_unknown': 'int',
        'current_hour_volume': 'int',
        'current_hour_volume_buy': 'int',
        'current_hour_volume_sell': 'int',
        'current_hour_volume_unknown': 'int',
        'current_month_high': 'int',
        'current_month_low': 'int',
        'current_month_open': 'int',
        'current_month_quote_volume': 'int',
        'current_month_quote_volume_buy': 'int',
        'current_month_quote_volume_sell': 'int',
        'current_month_quote_volume_unknown': 'int',
        'current_month_total_trades': 'int',
        'current_month_total_trades_buy': 'int',
        'current_month_total_trades_sell': 'int',
        'current_month_total_trades_unknown': 'int',
        'current_month_volume': 'int',
        'current_month_volume_buy': 'int',
        'current_month_volume_sell': 'int',
        'current_month_volume_unknown': 'int',
        'current_week_high': 'int',
        'current_week_low': 'int',
        'current_week_open': 'int',
        'current_week_quote_volume': 'int',
        'current_week_quote_volume_buy': 'int',
        'current_week_quote_volume_sell': 'int',
        'current_week_quote_volume_unknown': 'int',
        'current_week_total_trades': 'int',
        'current_week_total_trades_buy': 'int',
        'current_week_total_trades_sell': 'int',
        'current_week_total_trades_unknown': 'int',
        'current_week_volume': 'int',
        'current_week_volume_buy': 'int',
        'current_week_volume_sell': 'int',
        'current_week_volume_unknown': 'int',
        'current_year_high': 'int',
        'current_year_low': 'int',
        'current_year_open': 'int',
        'current_year_quote_volume': 'int',
        'current_year_quote_volume_buy': 'int',
        'current_year_quote_volume_sell': 'int',
        'current_year_quote_volume_unknown': 'int',
        'current_year_total_trades': 'int',
        'current_year_total_trades_buy': 'int',
        'current_year_total_trades_sell': 'int',
        'current_year_total_trades_unknown': 'int',
        'current_year_volume': 'int',
        'current_year_volume_buy': 'int',
        'current_year_volume_sell': 'int',
        'current_year_volume_unknown': 'int',
        'instrument': 'str',
        'last_processed_trade_ccseq': 'str',
        'last_processed_trade_price': 'int',
        'last_processed_trade_quantity': 'int',
        'last_processed_trade_quote_quantity': 'int',
        'last_processed_trade_side': 'str',
        'last_processed_trade_ts': 'int',
        'last_trade_ccseq': 'str',
        'last_trade_id': 'str',
        'last_trade_quantity': 'int',
        'last_trade_quote_quantity': 'int',
        'last_trade_side': 'str',
        'lifetime_first_trade_ts': 'int',
        'lifetime_high': 'int',
        'lifetime_high_ts': 'int',
        'lifetime_low': 'int',
        'lifetime_low_ts': 'int',
        'lifetime_open': 'int',
        'lifetime_quote_volume': 'int',
        'lifetime_quote_volume_buy': 'int',
        'lifetime_quote_volume_sell': 'int',
        'lifetime_quote_volume_unknown': 'int',
        'lifetime_total_trades': 'int',
        'lifetime_total_trades_buy': 'int',
        'lifetime_total_trades_sell': 'int',
        'lifetime_total_trades_unknown': 'int',
        'lifetime_volume': 'int',
        'lifetime_volume_buy': 'int',
        'lifetime_volume_sell': 'int',
        'lifetime_volume_unknown': 'int',
        'mapped_instrument': 'str',
        'market': 'str',
        'moving_180_day_high': 'int',
        'moving_180_day_low': 'int',
        'moving_180_day_open': 'int',
        'moving_180_day_quote_volume': 'int',
        'moving_180_day_quote_volume_buy': 'int',
        'moving_180_day_quote_volume_sell': 'int',
        'moving_180_day_quote_volume_unknown': 'int',
        'moving_180_day_total_trades': 'int',
        'moving_180_day_total_trades_buy': 'int',
        'moving_180_day_total_trades_sell': 'int',
        'moving_180_day_total_trades_unknown': 'int',
        'moving_180_day_volume': 'int',
        'moving_180_day_volume_buy': 'int',
        'moving_180_day_volume_sell': 'int',
        'moving_180_day_volume_unknown': 'int',
        'moving_24_hour_high': 'int',
        'moving_24_hour_low': 'int',
        'moving_24_hour_open': 'int',
        'moving_24_hour_quote_volume': 'int',
        'moving_24_hour_quote_volume_buy': 'int',
        'moving_24_hour_quote_volume_sell': 'int',
        'moving_24_hour_quote_volume_unknown': 'int',
        'moving_24_hour_total_trades': 'int',
        'moving_24_hour_total_trades_buy': 'int',
        'moving_24_hour_total_trades_sell': 'int',
        'moving_24_hour_total_trades_unknown': 'int',
        'moving_24_hour_volume': 'int',
        'moving_24_hour_volume_buy': 'int',
        'moving_24_hour_volume_sell': 'int',
        'moving_24_hour_volume_unknown': 'int',
        'moving_30_day_high': 'int',
        'moving_30_day_low': 'int',
        'moving_30_day_open': 'int',
        'moving_30_day_quote_volume': 'int',
        'moving_30_day_quote_volume_buy': 'int',
        'moving_30_day_quote_volume_sell': 'int',
        'moving_30_day_quote_volume_unknown': 'int',
        'moving_30_day_total_trades': 'int',
        'moving_30_day_total_trades_buy': 'int',
        'moving_30_day_total_trades_sell': 'int',
        'moving_30_day_total_trades_unknown': 'int',
        'moving_30_day_volume': 'int',
        'moving_30_day_volume_buy': 'int',
        'moving_30_day_volume_sell': 'int',
        'moving_30_day_volume_unknown': 'int',
        'moving_365_day_high': 'int',
        'moving_365_day_low': 'int',
        'moving_365_day_open': 'int',
        'moving_365_day_quote_volume': 'int',
        'moving_365_day_quote_volume_buy': 'int',
        'moving_365_day_quote_volume_sell': 'int',
        'moving_365_day_quote_volume_unknown': 'int',
        'moving_365_day_total_trades': 'int',
        'moving_365_day_total_trades_buy': 'int',
        'moving_365_day_total_trades_sell': 'int',
        'moving_365_day_total_trades_unknown': 'int',
        'moving_365_day_volume': 'int',
        'moving_365_day_volume_buy': 'int',
        'moving_365_day_volume_sell': 'int',
        'moving_365_day_volume_unknown': 'int',
        'moving_7_day_high': 'int',
        'moving_7_day_low': 'int',
        'moving_7_day_open': 'int',
        'moving_7_day_quote_volume': 'int',
        'moving_7_day_quote_volume_buy': 'int',
        'moving_7_day_quote_volume_sell': 'int',
        'moving_7_day_quote_volume_unknown': 'int',
        'moving_7_day_total_trades': 'int',
        'moving_7_day_total_trades_buy': 'int',
        'moving_7_day_total_trades_sell': 'int',
        'moving_7_day_total_trades_unknown': 'int',
        'moving_7_day_volume': 'int',
        'moving_7_day_volume_buy': 'int',
        'moving_7_day_volume_sell': 'int',
        'moving_7_day_volume_unknown': 'int',
        'moving_90_day_high': 'int',
        'moving_90_day_low': 'int',
        'moving_90_day_open': 'int',
        'moving_90_day_quote_volume': 'int',
        'moving_90_day_quote_volume_buy': 'int',
        'moving_90_day_quote_volume_sell': 'int',
        'moving_90_day_quote_volume_unknown': 'int',
        'moving_90_day_total_trades': 'int',
        'moving_90_day_total_trades_buy': 'int',
        'moving_90_day_total_trades_sell': 'int',
        'moving_90_day_total_trades_unknown': 'int',
        'moving_90_day_volume': 'int',
        'moving_90_day_volume_buy': 'int',
        'moving_90_day_volume_sell': 'int',
        'moving_90_day_volume_unknown': 'int',
        'price': 'int',
        'price_flag': 'str',
        'price_last_update_ts': 'int',
        'quote': 'str',
        'top_ask_last_update_ts': 'int',
        'top_ask_price': 'int',
        'top_ask_quantity': 'int',
        'top_bid_last_update_ts': 'int',
        'top_bid_price': 'int',
        'top_bid_quantity': 'int',
        'type': 'str'
    }

    attribute_map = {
        'base': 'BASE',
        'ccseq': 'CCSEQ',
        'current_day_high': 'CURRENT_DAY_HIGH',
        'current_day_low': 'CURRENT_DAY_LOW',
        'current_day_open': 'CURRENT_DAY_OPEN',
        'current_day_quote_volume': 'CURRENT_DAY_QUOTE_VOLUME',
        'current_day_quote_volume_buy': 'CURRENT_DAY_QUOTE_VOLUME_BUY',
        'current_day_quote_volume_sell': 'CURRENT_DAY_QUOTE_VOLUME_SELL',
        'current_day_quote_volume_unknown': 'CURRENT_DAY_QUOTE_VOLUME_UNKNOWN',
        'current_day_total_trades': 'CURRENT_DAY_TOTAL_TRADES',
        'current_day_total_trades_buy': 'CURRENT_DAY_TOTAL_TRADES_BUY',
        'current_day_total_trades_sell': 'CURRENT_DAY_TOTAL_TRADES_SELL',
        'current_day_total_trades_unknown': 'CURRENT_DAY_TOTAL_TRADES_UNKNOWN',
        'current_day_volume': 'CURRENT_DAY_VOLUME',
        'current_day_volume_buy': 'CURRENT_DAY_VOLUME_BUY',
        'current_day_volume_sell': 'CURRENT_DAY_VOLUME_SELL',
        'current_day_volume_unknown': 'CURRENT_DAY_VOLUME_UNKNOWN',
        'current_hour_high': 'CURRENT_HOUR_HIGH',
        'current_hour_low': 'CURRENT_HOUR_LOW',
        'current_hour_open': 'CURRENT_HOUR_OPEN',
        'current_hour_quote_volume': 'CURRENT_HOUR_QUOTE_VOLUME',
        'current_hour_quote_volume_buy': 'CURRENT_HOUR_QUOTE_VOLUME_BUY',
        'current_hour_quote_volume_sell': 'CURRENT_HOUR_QUOTE_VOLUME_SELL',
        'current_hour_quote_volume_unknown': 'CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN',
        'current_hour_total_trades': 'CURRENT_HOUR_TOTAL_TRADES',
        'current_hour_total_trades_buy': 'CURRENT_HOUR_TOTAL_TRADES_BUY',
        'current_hour_total_trades_sell': 'CURRENT_HOUR_TOTAL_TRADES_SELL',
        'current_hour_total_trades_unknown': 'CURRENT_HOUR_TOTAL_TRADES_UNKNOWN',
        'current_hour_volume': 'CURRENT_HOUR_VOLUME',
        'current_hour_volume_buy': 'CURRENT_HOUR_VOLUME_BUY',
        'current_hour_volume_sell': 'CURRENT_HOUR_VOLUME_SELL',
        'current_hour_volume_unknown': 'CURRENT_HOUR_VOLUME_UNKNOWN',
        'current_month_high': 'CURRENT_MONTH_HIGH',
        'current_month_low': 'CURRENT_MONTH_LOW',
        'current_month_open': 'CURRENT_MONTH_OPEN',
        'current_month_quote_volume': 'CURRENT_MONTH_QUOTE_VOLUME',
        'current_month_quote_volume_buy': 'CURRENT_MONTH_QUOTE_VOLUME_BUY',
        'current_month_quote_volume_sell': 'CURRENT_MONTH_QUOTE_VOLUME_SELL',
        'current_month_quote_volume_unknown': 'CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN',
        'current_month_total_trades': 'CURRENT_MONTH_TOTAL_TRADES',
        'current_month_total_trades_buy': 'CURRENT_MONTH_TOTAL_TRADES_BUY',
        'current_month_total_trades_sell': 'CURRENT_MONTH_TOTAL_TRADES_SELL',
        'current_month_total_trades_unknown': 'CURRENT_MONTH_TOTAL_TRADES_UNKNOWN',
        'current_month_volume': 'CURRENT_MONTH_VOLUME',
        'current_month_volume_buy': 'CURRENT_MONTH_VOLUME_BUY',
        'current_month_volume_sell': 'CURRENT_MONTH_VOLUME_SELL',
        'current_month_volume_unknown': 'CURRENT_MONTH_VOLUME_UNKNOWN',
        'current_week_high': 'CURRENT_WEEK_HIGH',
        'current_week_low': 'CURRENT_WEEK_LOW',
        'current_week_open': 'CURRENT_WEEK_OPEN',
        'current_week_quote_volume': 'CURRENT_WEEK_QUOTE_VOLUME',
        'current_week_quote_volume_buy': 'CURRENT_WEEK_QUOTE_VOLUME_BUY',
        'current_week_quote_volume_sell': 'CURRENT_WEEK_QUOTE_VOLUME_SELL',
        'current_week_quote_volume_unknown': 'CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN',
        'current_week_total_trades': 'CURRENT_WEEK_TOTAL_TRADES',
        'current_week_total_trades_buy': 'CURRENT_WEEK_TOTAL_TRADES_BUY',
        'current_week_total_trades_sell': 'CURRENT_WEEK_TOTAL_TRADES_SELL',
        'current_week_total_trades_unknown': 'CURRENT_WEEK_TOTAL_TRADES_UNKNOWN',
        'current_week_volume': 'CURRENT_WEEK_VOLUME',
        'current_week_volume_buy': 'CURRENT_WEEK_VOLUME_BUY',
        'current_week_volume_sell': 'CURRENT_WEEK_VOLUME_SELL',
        'current_week_volume_unknown': 'CURRENT_WEEK_VOLUME_UNKNOWN',
        'current_year_high': 'CURRENT_YEAR_HIGH',
        'current_year_low': 'CURRENT_YEAR_LOW',
        'current_year_open': 'CURRENT_YEAR_OPEN',
        'current_year_quote_volume': 'CURRENT_YEAR_QUOTE_VOLUME',
        'current_year_quote_volume_buy': 'CURRENT_YEAR_QUOTE_VOLUME_BUY',
        'current_year_quote_volume_sell': 'CURRENT_YEAR_QUOTE_VOLUME_SELL',
        'current_year_quote_volume_unknown': 'CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN',
        'current_year_total_trades': 'CURRENT_YEAR_TOTAL_TRADES',
        'current_year_total_trades_buy': 'CURRENT_YEAR_TOTAL_TRADES_BUY',
        'current_year_total_trades_sell': 'CURRENT_YEAR_TOTAL_TRADES_SELL',
        'current_year_total_trades_unknown': 'CURRENT_YEAR_TOTAL_TRADES_UNKNOWN',
        'current_year_volume': 'CURRENT_YEAR_VOLUME',
        'current_year_volume_buy': 'CURRENT_YEAR_VOLUME_BUY',
        'current_year_volume_sell': 'CURRENT_YEAR_VOLUME_SELL',
        'current_year_volume_unknown': 'CURRENT_YEAR_VOLUME_UNKNOWN',
        'instrument': 'INSTRUMENT',
        'last_processed_trade_ccseq': 'LAST_PROCESSED_TRADE_CCSEQ',
        'last_processed_trade_price': 'LAST_PROCESSED_TRADE_PRICE',
        'last_processed_trade_quantity': 'LAST_PROCESSED_TRADE_QUANTITY',
        'last_processed_trade_quote_quantity': 'LAST_PROCESSED_TRADE_QUOTE_QUANTITY',
        'last_processed_trade_side': 'LAST_PROCESSED_TRADE_SIDE',
        'last_processed_trade_ts': 'LAST_PROCESSED_TRADE_TS',
        'last_trade_ccseq': 'LAST_TRADE_CCSEQ',
        'last_trade_id': 'LAST_TRADE_ID',
        'last_trade_quantity': 'LAST_TRADE_QUANTITY',
        'last_trade_quote_quantity': 'LAST_TRADE_QUOTE_QUANTITY',
        'last_trade_side': 'LAST_TRADE_SIDE',
        'lifetime_first_trade_ts': 'LIFETIME_FIRST_TRADE_TS',
        'lifetime_high': 'LIFETIME_HIGH',
        'lifetime_high_ts': 'LIFETIME_HIGH_TS',
        'lifetime_low': 'LIFETIME_LOW',
        'lifetime_low_ts': 'LIFETIME_LOW_TS',
        'lifetime_open': 'LIFETIME_OPEN',
        'lifetime_quote_volume': 'LIFETIME_QUOTE_VOLUME',
        'lifetime_quote_volume_buy': 'LIFETIME_QUOTE_VOLUME_BUY',
        'lifetime_quote_volume_sell': 'LIFETIME_QUOTE_VOLUME_SELL',
        'lifetime_quote_volume_unknown': 'LIFETIME_QUOTE_VOLUME_UNKNOWN',
        'lifetime_total_trades': 'LIFETIME_TOTAL_TRADES',
        'lifetime_total_trades_buy': 'LIFETIME_TOTAL_TRADES_BUY',
        'lifetime_total_trades_sell': 'LIFETIME_TOTAL_TRADES_SELL',
        'lifetime_total_trades_unknown': 'LIFETIME_TOTAL_TRADES_UNKNOWN',
        'lifetime_volume': 'LIFETIME_VOLUME',
        'lifetime_volume_buy': 'LIFETIME_VOLUME_BUY',
        'lifetime_volume_sell': 'LIFETIME_VOLUME_SELL',
        'lifetime_volume_unknown': 'LIFETIME_VOLUME_UNKNOWN',
        'mapped_instrument': 'MAPPED_INSTRUMENT',
        'market': 'MARKET',
        'moving_180_day_high': 'MOVING_180_DAY_HIGH',
        'moving_180_day_low': 'MOVING_180_DAY_LOW',
        'moving_180_day_open': 'MOVING_180_DAY_OPEN',
        'moving_180_day_quote_volume': 'MOVING_180_DAY_QUOTE_VOLUME',
        'moving_180_day_quote_volume_buy': 'MOVING_180_DAY_QUOTE_VOLUME_BUY',
        'moving_180_day_quote_volume_sell': 'MOVING_180_DAY_QUOTE_VOLUME_SELL',
        'moving_180_day_quote_volume_unknown': 'MOVING_180_DAY_QUOTE_VOLUME_UNKNOWN',
        'moving_180_day_total_trades': 'MOVING_180_DAY_TOTAL_TRADES',
        'moving_180_day_total_trades_buy': 'MOVING_180_DAY_TOTAL_TRADES_BUY',
        'moving_180_day_total_trades_sell': 'MOVING_180_DAY_TOTAL_TRADES_SELL',
        'moving_180_day_total_trades_unknown': 'MOVING_180_DAY_TOTAL_TRADES_UNKNOWN',
        'moving_180_day_volume': 'MOVING_180_DAY_VOLUME',
        'moving_180_day_volume_buy': 'MOVING_180_DAY_VOLUME_BUY',
        'moving_180_day_volume_sell': 'MOVING_180_DAY_VOLUME_SELL',
        'moving_180_day_volume_unknown': 'MOVING_180_DAY_VOLUME_UNKNOWN',
        'moving_24_hour_high': 'MOVING_24_HOUR_HIGH',
        'moving_24_hour_low': 'MOVING_24_HOUR_LOW',
        'moving_24_hour_open': 'MOVING_24_HOUR_OPEN',
        'moving_24_hour_quote_volume': 'MOVING_24_HOUR_QUOTE_VOLUME',
        'moving_24_hour_quote_volume_buy': 'MOVING_24_HOUR_QUOTE_VOLUME_BUY',
        'moving_24_hour_quote_volume_sell': 'MOVING_24_HOUR_QUOTE_VOLUME_SELL',
        'moving_24_hour_quote_volume_unknown': 'MOVING_24_HOUR_QUOTE_VOLUME_UNKNOWN',
        'moving_24_hour_total_trades': 'MOVING_24_HOUR_TOTAL_TRADES',
        'moving_24_hour_total_trades_buy': 'MOVING_24_HOUR_TOTAL_TRADES_BUY',
        'moving_24_hour_total_trades_sell': 'MOVING_24_HOUR_TOTAL_TRADES_SELL',
        'moving_24_hour_total_trades_unknown': 'MOVING_24_HOUR_TOTAL_TRADES_UNKNOWN',
        'moving_24_hour_volume': 'MOVING_24_HOUR_VOLUME',
        'moving_24_hour_volume_buy': 'MOVING_24_HOUR_VOLUME_BUY',
        'moving_24_hour_volume_sell': 'MOVING_24_HOUR_VOLUME_SELL',
        'moving_24_hour_volume_unknown': 'MOVING_24_HOUR_VOLUME_UNKNOWN',
        'moving_30_day_high': 'MOVING_30_DAY_HIGH',
        'moving_30_day_low': 'MOVING_30_DAY_LOW',
        'moving_30_day_open': 'MOVING_30_DAY_OPEN',
        'moving_30_day_quote_volume': 'MOVING_30_DAY_QUOTE_VOLUME',
        'moving_30_day_quote_volume_buy': 'MOVING_30_DAY_QUOTE_VOLUME_BUY',
        'moving_30_day_quote_volume_sell': 'MOVING_30_DAY_QUOTE_VOLUME_SELL',
        'moving_30_day_quote_volume_unknown': 'MOVING_30_DAY_QUOTE_VOLUME_UNKNOWN',
        'moving_30_day_total_trades': 'MOVING_30_DAY_TOTAL_TRADES',
        'moving_30_day_total_trades_buy': 'MOVING_30_DAY_TOTAL_TRADES_BUY',
        'moving_30_day_total_trades_sell': 'MOVING_30_DAY_TOTAL_TRADES_SELL',
        'moving_30_day_total_trades_unknown': 'MOVING_30_DAY_TOTAL_TRADES_UNKNOWN',
        'moving_30_day_volume': 'MOVING_30_DAY_VOLUME',
        'moving_30_day_volume_buy': 'MOVING_30_DAY_VOLUME_BUY',
        'moving_30_day_volume_sell': 'MOVING_30_DAY_VOLUME_SELL',
        'moving_30_day_volume_unknown': 'MOVING_30_DAY_VOLUME_UNKNOWN',
        'moving_365_day_high': 'MOVING_365_DAY_HIGH',
        'moving_365_day_low': 'MOVING_365_DAY_LOW',
        'moving_365_day_open': 'MOVING_365_DAY_OPEN',
        'moving_365_day_quote_volume': 'MOVING_365_DAY_QUOTE_VOLUME',
        'moving_365_day_quote_volume_buy': 'MOVING_365_DAY_QUOTE_VOLUME_BUY',
        'moving_365_day_quote_volume_sell': 'MOVING_365_DAY_QUOTE_VOLUME_SELL',
        'moving_365_day_quote_volume_unknown': 'MOVING_365_DAY_QUOTE_VOLUME_UNKNOWN',
        'moving_365_day_total_trades': 'MOVING_365_DAY_TOTAL_TRADES',
        'moving_365_day_total_trades_buy': 'MOVING_365_DAY_TOTAL_TRADES_BUY',
        'moving_365_day_total_trades_sell': 'MOVING_365_DAY_TOTAL_TRADES_SELL',
        'moving_365_day_total_trades_unknown': 'MOVING_365_DAY_TOTAL_TRADES_UNKNOWN',
        'moving_365_day_volume': 'MOVING_365_DAY_VOLUME',
        'moving_365_day_volume_buy': 'MOVING_365_DAY_VOLUME_BUY',
        'moving_365_day_volume_sell': 'MOVING_365_DAY_VOLUME_SELL',
        'moving_365_day_volume_unknown': 'MOVING_365_DAY_VOLUME_UNKNOWN',
        'moving_7_day_high': 'MOVING_7_DAY_HIGH',
        'moving_7_day_low': 'MOVING_7_DAY_LOW',
        'moving_7_day_open': 'MOVING_7_DAY_OPEN',
        'moving_7_day_quote_volume': 'MOVING_7_DAY_QUOTE_VOLUME',
        'moving_7_day_quote_volume_buy': 'MOVING_7_DAY_QUOTE_VOLUME_BUY',
        'moving_7_day_quote_volume_sell': 'MOVING_7_DAY_QUOTE_VOLUME_SELL',
        'moving_7_day_quote_volume_unknown': 'MOVING_7_DAY_QUOTE_VOLUME_UNKNOWN',
        'moving_7_day_total_trades': 'MOVING_7_DAY_TOTAL_TRADES',
        'moving_7_day_total_trades_buy': 'MOVING_7_DAY_TOTAL_TRADES_BUY',
        'moving_7_day_total_trades_sell': 'MOVING_7_DAY_TOTAL_TRADES_SELL',
        'moving_7_day_total_trades_unknown': 'MOVING_7_DAY_TOTAL_TRADES_UNKNOWN',
        'moving_7_day_volume': 'MOVING_7_DAY_VOLUME',
        'moving_7_day_volume_buy': 'MOVING_7_DAY_VOLUME_BUY',
        'moving_7_day_volume_sell': 'MOVING_7_DAY_VOLUME_SELL',
        'moving_7_day_volume_unknown': 'MOVING_7_DAY_VOLUME_UNKNOWN',
        'moving_90_day_high': 'MOVING_90_DAY_HIGH',
        'moving_90_day_low': 'MOVING_90_DAY_LOW',
        'moving_90_day_open': 'MOVING_90_DAY_OPEN',
        'moving_90_day_quote_volume': 'MOVING_90_DAY_QUOTE_VOLUME',
        'moving_90_day_quote_volume_buy': 'MOVING_90_DAY_QUOTE_VOLUME_BUY',
        'moving_90_day_quote_volume_sell': 'MOVING_90_DAY_QUOTE_VOLUME_SELL',
        'moving_90_day_quote_volume_unknown': 'MOVING_90_DAY_QUOTE_VOLUME_UNKNOWN',
        'moving_90_day_total_trades': 'MOVING_90_DAY_TOTAL_TRADES',
        'moving_90_day_total_trades_buy': 'MOVING_90_DAY_TOTAL_TRADES_BUY',
        'moving_90_day_total_trades_sell': 'MOVING_90_DAY_TOTAL_TRADES_SELL',
        'moving_90_day_total_trades_unknown': 'MOVING_90_DAY_TOTAL_TRADES_UNKNOWN',
        'moving_90_day_volume': 'MOVING_90_DAY_VOLUME',
        'moving_90_day_volume_buy': 'MOVING_90_DAY_VOLUME_BUY',
        'moving_90_day_volume_sell': 'MOVING_90_DAY_VOLUME_SELL',
        'moving_90_day_volume_unknown': 'MOVING_90_DAY_VOLUME_UNKNOWN',
        'price': 'PRICE',
        'price_flag': 'PRICE_FLAG',
        'price_last_update_ts': 'PRICE_LAST_UPDATE_TS',
        'quote': 'QUOTE',
        'top_ask_last_update_ts': 'TOP_ASK_LAST_UPDATE_TS',
        'top_ask_price': 'TOP_ASK_PRICE',
        'top_ask_quantity': 'TOP_ASK_QUANTITY',
        'top_bid_last_update_ts': 'TOP_BID_LAST_UPDATE_TS',
        'top_bid_price': 'TOP_BID_PRICE',
        'top_bid_quantity': 'TOP_BID_QUANTITY',
        'type': 'TYPE'
    }

    def __init__(self, base=None, ccseq=None, current_day_high=None, current_day_low=None, current_day_open=None, current_day_quote_volume=None, current_day_quote_volume_buy=None, current_day_quote_volume_sell=None, current_day_quote_volume_unknown=None, current_day_total_trades=None, current_day_total_trades_buy=None, current_day_total_trades_sell=None, current_day_total_trades_unknown=None, current_day_volume=None, current_day_volume_buy=None, current_day_volume_sell=None, current_day_volume_unknown=None, current_hour_high=None, current_hour_low=None, current_hour_open=None, current_hour_quote_volume=None, current_hour_quote_volume_buy=None, current_hour_quote_volume_sell=None, current_hour_quote_volume_unknown=None, current_hour_total_trades=None, current_hour_total_trades_buy=None, current_hour_total_trades_sell=None, current_hour_total_trades_unknown=None, current_hour_volume=None, current_hour_volume_buy=None, current_hour_volume_sell=None, current_hour_volume_unknown=None, current_month_high=None, current_month_low=None, current_month_open=None, current_month_quote_volume=None, current_month_quote_volume_buy=None, current_month_quote_volume_sell=None, current_month_quote_volume_unknown=None, current_month_total_trades=None, current_month_total_trades_buy=None, current_month_total_trades_sell=None, current_month_total_trades_unknown=None, current_month_volume=None, current_month_volume_buy=None, current_month_volume_sell=None, current_month_volume_unknown=None, current_week_high=None, current_week_low=None, current_week_open=None, current_week_quote_volume=None, current_week_quote_volume_buy=None, current_week_quote_volume_sell=None, current_week_quote_volume_unknown=None, current_week_total_trades=None, current_week_total_trades_buy=None, current_week_total_trades_sell=None, current_week_total_trades_unknown=None, current_week_volume=None, current_week_volume_buy=None, current_week_volume_sell=None, current_week_volume_unknown=None, current_year_high=None, current_year_low=None, current_year_open=None, current_year_quote_volume=None, current_year_quote_volume_buy=None, current_year_quote_volume_sell=None, current_year_quote_volume_unknown=None, current_year_total_trades=None, current_year_total_trades_buy=None, current_year_total_trades_sell=None, current_year_total_trades_unknown=None, current_year_volume=None, current_year_volume_buy=None, current_year_volume_sell=None, current_year_volume_unknown=None, instrument=None, last_processed_trade_ccseq=None, last_processed_trade_price=None, last_processed_trade_quantity=None, last_processed_trade_quote_quantity=None, last_processed_trade_side=None, last_processed_trade_ts=None, last_trade_ccseq=None, last_trade_id=None, last_trade_quantity=None, last_trade_quote_quantity=None, last_trade_side=None, lifetime_first_trade_ts=None, lifetime_high=None, lifetime_high_ts=None, lifetime_low=None, lifetime_low_ts=None, lifetime_open=None, lifetime_quote_volume=None, lifetime_quote_volume_buy=None, lifetime_quote_volume_sell=None, lifetime_quote_volume_unknown=None, lifetime_total_trades=None, lifetime_total_trades_buy=None, lifetime_total_trades_sell=None, lifetime_total_trades_unknown=None, lifetime_volume=None, lifetime_volume_buy=None, lifetime_volume_sell=None, lifetime_volume_unknown=None, mapped_instrument=None, market=None, moving_180_day_high=None, moving_180_day_low=None, moving_180_day_open=None, moving_180_day_quote_volume=None, moving_180_day_quote_volume_buy=None, moving_180_day_quote_volume_sell=None, moving_180_day_quote_volume_unknown=None, moving_180_day_total_trades=None, moving_180_day_total_trades_buy=None, moving_180_day_total_trades_sell=None, moving_180_day_total_trades_unknown=None, moving_180_day_volume=None, moving_180_day_volume_buy=None, moving_180_day_volume_sell=None, moving_180_day_volume_unknown=None, moving_24_hour_high=None, moving_24_hour_low=None, moving_24_hour_open=None, moving_24_hour_quote_volume=None, moving_24_hour_quote_volume_buy=None, moving_24_hour_quote_volume_sell=None, moving_24_hour_quote_volume_unknown=None, moving_24_hour_total_trades=None, moving_24_hour_total_trades_buy=None, moving_24_hour_total_trades_sell=None, moving_24_hour_total_trades_unknown=None, moving_24_hour_volume=None, moving_24_hour_volume_buy=None, moving_24_hour_volume_sell=None, moving_24_hour_volume_unknown=None, moving_30_day_high=None, moving_30_day_low=None, moving_30_day_open=None, moving_30_day_quote_volume=None, moving_30_day_quote_volume_buy=None, moving_30_day_quote_volume_sell=None, moving_30_day_quote_volume_unknown=None, moving_30_day_total_trades=None, moving_30_day_total_trades_buy=None, moving_30_day_total_trades_sell=None, moving_30_day_total_trades_unknown=None, moving_30_day_volume=None, moving_30_day_volume_buy=None, moving_30_day_volume_sell=None, moving_30_day_volume_unknown=None, moving_365_day_high=None, moving_365_day_low=None, moving_365_day_open=None, moving_365_day_quote_volume=None, moving_365_day_quote_volume_buy=None, moving_365_day_quote_volume_sell=None, moving_365_day_quote_volume_unknown=None, moving_365_day_total_trades=None, moving_365_day_total_trades_buy=None, moving_365_day_total_trades_sell=None, moving_365_day_total_trades_unknown=None, moving_365_day_volume=None, moving_365_day_volume_buy=None, moving_365_day_volume_sell=None, moving_365_day_volume_unknown=None, moving_7_day_high=None, moving_7_day_low=None, moving_7_day_open=None, moving_7_day_quote_volume=None, moving_7_day_quote_volume_buy=None, moving_7_day_quote_volume_sell=None, moving_7_day_quote_volume_unknown=None, moving_7_day_total_trades=None, moving_7_day_total_trades_buy=None, moving_7_day_total_trades_sell=None, moving_7_day_total_trades_unknown=None, moving_7_day_volume=None, moving_7_day_volume_buy=None, moving_7_day_volume_sell=None, moving_7_day_volume_unknown=None, moving_90_day_high=None, moving_90_day_low=None, moving_90_day_open=None, moving_90_day_quote_volume=None, moving_90_day_quote_volume_buy=None, moving_90_day_quote_volume_sell=None, moving_90_day_quote_volume_unknown=None, moving_90_day_total_trades=None, moving_90_day_total_trades_buy=None, moving_90_day_total_trades_sell=None, moving_90_day_total_trades_unknown=None, moving_90_day_volume=None, moving_90_day_volume_buy=None, moving_90_day_volume_sell=None, moving_90_day_volume_unknown=None, price=None, price_flag=None, price_last_update_ts=None, quote=None, top_ask_last_update_ts=None, top_ask_price=None, top_ask_quantity=None, top_bid_last_update_ts=None, top_bid_price=None, top_bid_quantity=None, type=None, local_vars_configuration=None):  # noqa: E501
        """SPOTINSTRUMENTMARKETDATA - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration

        self._base = None
        self._ccseq = None
        self._current_day_high = None
        self._current_day_low = None
        self._current_day_open = None
        self._current_day_quote_volume = None
        self._current_day_quote_volume_buy = None
        self._current_day_quote_volume_sell = None
        self._current_day_quote_volume_unknown = None
        self._current_day_total_trades = None
        self._current_day_total_trades_buy = None
        self._current_day_total_trades_sell = None
        self._current_day_total_trades_unknown = None
        self._current_day_volume = None
        self._current_day_volume_buy = None
        self._current_day_volume_sell = None
        self._current_day_volume_unknown = None
        self._current_hour_high = None
        self._current_hour_low = None
        self._current_hour_open = None
        self._current_hour_quote_volume = None
        self._current_hour_quote_volume_buy = None
        self._current_hour_quote_volume_sell = None
        self._current_hour_quote_volume_unknown = None
        self._current_hour_total_trades = None
        self._current_hour_total_trades_buy = None
        self._current_hour_total_trades_sell = None
        self._current_hour_total_trades_unknown = None
        self._current_hour_volume = None
        self._current_hour_volume_buy = None
        self._current_hour_volume_sell = None
        self._current_hour_volume_unknown = None
        self._current_month_high = None
        self._current_month_low = None
        self._current_month_open = None
        self._current_month_quote_volume = None
        self._current_month_quote_volume_buy = None
        self._current_month_quote_volume_sell = None
        self._current_month_quote_volume_unknown = None
        self._current_month_total_trades = None
        self._current_month_total_trades_buy = None
        self._current_month_total_trades_sell = None
        self._current_month_total_trades_unknown = None
        self._current_month_volume = None
        self._current_month_volume_buy = None
        self._current_month_volume_sell = None
        self._current_month_volume_unknown = None
        self._current_week_high = None
        self._current_week_low = None
        self._current_week_open = None
        self._current_week_quote_volume = None
        self._current_week_quote_volume_buy = None
        self._current_week_quote_volume_sell = None
        self._current_week_quote_volume_unknown = None
        self._current_week_total_trades = None
        self._current_week_total_trades_buy = None
        self._current_week_total_trades_sell = None
        self._current_week_total_trades_unknown = None
        self._current_week_volume = None
        self._current_week_volume_buy = None
        self._current_week_volume_sell = None
        self._current_week_volume_unknown = None
        self._current_year_high = None
        self._current_year_low = None
        self._current_year_open = None
        self._current_year_quote_volume = None
        self._current_year_quote_volume_buy = None
        self._current_year_quote_volume_sell = None
        self._current_year_quote_volume_unknown = None
        self._current_year_total_trades = None
        self._current_year_total_trades_buy = None
        self._current_year_total_trades_sell = None
        self._current_year_total_trades_unknown = None
        self._current_year_volume = None
        self._current_year_volume_buy = None
        self._current_year_volume_sell = None
        self._current_year_volume_unknown = None
        self._instrument = None
        self._last_processed_trade_ccseq = None
        self._last_processed_trade_price = None
        self._last_processed_trade_quantity = None
        self._last_processed_trade_quote_quantity = None
        self._last_processed_trade_side = None
        self._last_processed_trade_ts = None
        self._last_trade_ccseq = None
        self._last_trade_id = None
        self._last_trade_quantity = None
        self._last_trade_quote_quantity = None
        self._last_trade_side = None
        self._lifetime_first_trade_ts = None
        self._lifetime_high = None
        self._lifetime_high_ts = None
        self._lifetime_low = None
        self._lifetime_low_ts = None
        self._lifetime_open = None
        self._lifetime_quote_volume = None
        self._lifetime_quote_volume_buy = None
        self._lifetime_quote_volume_sell = None
        self._lifetime_quote_volume_unknown = None
        self._lifetime_total_trades = None
        self._lifetime_total_trades_buy = None
        self._lifetime_total_trades_sell = None
        self._lifetime_total_trades_unknown = None
        self._lifetime_volume = None
        self._lifetime_volume_buy = None
        self._lifetime_volume_sell = None
        self._lifetime_volume_unknown = None
        self._mapped_instrument = None
        self._market = None
        self._moving_180_day_high = None
        self._moving_180_day_low = None
        self._moving_180_day_open = None
        self._moving_180_day_quote_volume = None
        self._moving_180_day_quote_volume_buy = None
        self._moving_180_day_quote_volume_sell = None
        self._moving_180_day_quote_volume_unknown = None
        self._moving_180_day_total_trades = None
        self._moving_180_day_total_trades_buy = None
        self._moving_180_day_total_trades_sell = None
        self._moving_180_day_total_trades_unknown = None
        self._moving_180_day_volume = None
        self._moving_180_day_volume_buy = None
        self._moving_180_day_volume_sell = None
        self._moving_180_day_volume_unknown = None
        self._moving_24_hour_high = None
        self._moving_24_hour_low = None
        self._moving_24_hour_open = None
        self._moving_24_hour_quote_volume = None
        self._moving_24_hour_quote_volume_buy = None
        self._moving_24_hour_quote_volume_sell = None
        self._moving_24_hour_quote_volume_unknown = None
        self._moving_24_hour_total_trades = None
        self._moving_24_hour_total_trades_buy = None
        self._moving_24_hour_total_trades_sell = None
        self._moving_24_hour_total_trades_unknown = None
        self._moving_24_hour_volume = None
        self._moving_24_hour_volume_buy = None
        self._moving_24_hour_volume_sell = None
        self._moving_24_hour_volume_unknown = None
        self._moving_30_day_high = None
        self._moving_30_day_low = None
        self._moving_30_day_open = None
        self._moving_30_day_quote_volume = None
        self._moving_30_day_quote_volume_buy = None
        self._moving_30_day_quote_volume_sell = None
        self._moving_30_day_quote_volume_unknown = None
        self._moving_30_day_total_trades = None
        self._moving_30_day_total_trades_buy = None
        self._moving_30_day_total_trades_sell = None
        self._moving_30_day_total_trades_unknown = None
        self._moving_30_day_volume = None
        self._moving_30_day_volume_buy = None
        self._moving_30_day_volume_sell = None
        self._moving_30_day_volume_unknown = None
        self._moving_365_day_high = None
        self._moving_365_day_low = None
        self._moving_365_day_open = None
        self._moving_365_day_quote_volume = None
        self._moving_365_day_quote_volume_buy = None
        self._moving_365_day_quote_volume_sell = None
        self._moving_365_day_quote_volume_unknown = None
        self._moving_365_day_total_trades = None
        self._moving_365_day_total_trades_buy = None
        self._moving_365_day_total_trades_sell = None
        self._moving_365_day_total_trades_unknown = None
        self._moving_365_day_volume = None
        self._moving_365_day_volume_buy = None
        self._moving_365_day_volume_sell = None
        self._moving_365_day_volume_unknown = None
        self._moving_7_day_high = None
        self._moving_7_day_low = None
        self._moving_7_day_open = None
        self._moving_7_day_quote_volume = None
        self._moving_7_day_quote_volume_buy = None
        self._moving_7_day_quote_volume_sell = None
        self._moving_7_day_quote_volume_unknown = None
        self._moving_7_day_total_trades = None
        self._moving_7_day_total_trades_buy = None
        self._moving_7_day_total_trades_sell = None
        self._moving_7_day_total_trades_unknown = None
        self._moving_7_day_volume = None
        self._moving_7_day_volume_buy = None
        self._moving_7_day_volume_sell = None
        self._moving_7_day_volume_unknown = None
        self._moving_90_day_high = None
        self._moving_90_day_low = None
        self._moving_90_day_open = None
        self._moving_90_day_quote_volume = None
        self._moving_90_day_quote_volume_buy = None
        self._moving_90_day_quote_volume_sell = None
        self._moving_90_day_quote_volume_unknown = None
        self._moving_90_day_total_trades = None
        self._moving_90_day_total_trades_buy = None
        self._moving_90_day_total_trades_sell = None
        self._moving_90_day_total_trades_unknown = None
        self._moving_90_day_volume = None
        self._moving_90_day_volume_buy = None
        self._moving_90_day_volume_sell = None
        self._moving_90_day_volume_unknown = None
        self._price = None
        self._price_flag = None
        self._price_last_update_ts = None
        self._quote = None
        self._top_ask_last_update_ts = None
        self._top_ask_price = None
        self._top_ask_quantity = None
        self._top_bid_last_update_ts = None
        self._top_bid_price = None
        self._top_bid_quantity = None
        self._type = None
        self.discriminator = None

        if base is not None:
            self.base = base
        if ccseq is not None:
            self.ccseq = ccseq
        if current_day_high is not None:
            self.current_day_high = current_day_high
        if current_day_low is not None:
            self.current_day_low = current_day_low
        if current_day_open is not None:
            self.current_day_open = current_day_open
        if current_day_quote_volume is not None:
            self.current_day_quote_volume = current_day_quote_volume
        if current_day_quote_volume_buy is not None:
            self.current_day_quote_volume_buy = current_day_quote_volume_buy
        if current_day_quote_volume_sell is not None:
            self.current_day_quote_volume_sell = current_day_quote_volume_sell
        if current_day_quote_volume_unknown is not None:
            self.current_day_quote_volume_unknown = current_day_quote_volume_unknown
        if current_day_total_trades is not None:
            self.current_day_total_trades = current_day_total_trades
        if current_day_total_trades_buy is not None:
            self.current_day_total_trades_buy = current_day_total_trades_buy
        if current_day_total_trades_sell is not None:
            self.current_day_total_trades_sell = current_day_total_trades_sell
        if current_day_total_trades_unknown is not None:
            self.current_day_total_trades_unknown = current_day_total_trades_unknown
        if current_day_volume is not None:
            self.current_day_volume = current_day_volume
        if current_day_volume_buy is not None:
            self.current_day_volume_buy = current_day_volume_buy
        if current_day_volume_sell is not None:
            self.current_day_volume_sell = current_day_volume_sell
        if current_day_volume_unknown is not None:
            self.current_day_volume_unknown = current_day_volume_unknown
        if current_hour_high is not None:
            self.current_hour_high = current_hour_high
        if current_hour_low is not None:
            self.current_hour_low = current_hour_low
        if current_hour_open is not None:
            self.current_hour_open = current_hour_open
        if current_hour_quote_volume is not None:
            self.current_hour_quote_volume = current_hour_quote_volume
        if current_hour_quote_volume_buy is not None:
            self.current_hour_quote_volume_buy = current_hour_quote_volume_buy
        if current_hour_quote_volume_sell is not None:
            self.current_hour_quote_volume_sell = current_hour_quote_volume_sell
        if current_hour_quote_volume_unknown is not None:
            self.current_hour_quote_volume_unknown = current_hour_quote_volume_unknown
        if current_hour_total_trades is not None:
            self.current_hour_total_trades = current_hour_total_trades
        if current_hour_total_trades_buy is not None:
            self.current_hour_total_trades_buy = current_hour_total_trades_buy
        if current_hour_total_trades_sell is not None:
            self.current_hour_total_trades_sell = current_hour_total_trades_sell
        if current_hour_total_trades_unknown is not None:
            self.current_hour_total_trades_unknown = current_hour_total_trades_unknown
        if current_hour_volume is not None:
            self.current_hour_volume = current_hour_volume
        if current_hour_volume_buy is not None:
            self.current_hour_volume_buy = current_hour_volume_buy
        if current_hour_volume_sell is not None:
            self.current_hour_volume_sell = current_hour_volume_sell
        if current_hour_volume_unknown is not None:
            self.current_hour_volume_unknown = current_hour_volume_unknown
        if current_month_high is not None:
            self.current_month_high = current_month_high
        if current_month_low is not None:
            self.current_month_low = current_month_low
        if current_month_open is not None:
            self.current_month_open = current_month_open
        if current_month_quote_volume is not None:
            self.current_month_quote_volume = current_month_quote_volume
        if current_month_quote_volume_buy is not None:
            self.current_month_quote_volume_buy = current_month_quote_volume_buy
        if current_month_quote_volume_sell is not None:
            self.current_month_quote_volume_sell = current_month_quote_volume_sell
        if current_month_quote_volume_unknown is not None:
            self.current_month_quote_volume_unknown = current_month_quote_volume_unknown
        if current_month_total_trades is not None:
            self.current_month_total_trades = current_month_total_trades
        if current_month_total_trades_buy is not None:
            self.current_month_total_trades_buy = current_month_total_trades_buy
        if current_month_total_trades_sell is not None:
            self.current_month_total_trades_sell = current_month_total_trades_sell
        if current_month_total_trades_unknown is not None:
            self.current_month_total_trades_unknown = current_month_total_trades_unknown
        if current_month_volume is not None:
            self.current_month_volume = current_month_volume
        if current_month_volume_buy is not None:
            self.current_month_volume_buy = current_month_volume_buy
        if current_month_volume_sell is not None:
            self.current_month_volume_sell = current_month_volume_sell
        if current_month_volume_unknown is not None:
            self.current_month_volume_unknown = current_month_volume_unknown
        if current_week_high is not None:
            self.current_week_high = current_week_high
        if current_week_low is not None:
            self.current_week_low = current_week_low
        if current_week_open is not None:
            self.current_week_open = current_week_open
        if current_week_quote_volume is not None:
            self.current_week_quote_volume = current_week_quote_volume
        if current_week_quote_volume_buy is not None:
            self.current_week_quote_volume_buy = current_week_quote_volume_buy
        if current_week_quote_volume_sell is not None:
            self.current_week_quote_volume_sell = current_week_quote_volume_sell
        if current_week_quote_volume_unknown is not None:
            self.current_week_quote_volume_unknown = current_week_quote_volume_unknown
        if current_week_total_trades is not None:
            self.current_week_total_trades = current_week_total_trades
        if current_week_total_trades_buy is not None:
            self.current_week_total_trades_buy = current_week_total_trades_buy
        if current_week_total_trades_sell is not None:
            self.current_week_total_trades_sell = current_week_total_trades_sell
        if current_week_total_trades_unknown is not None:
            self.current_week_total_trades_unknown = current_week_total_trades_unknown
        if current_week_volume is not None:
            self.current_week_volume = current_week_volume
        if current_week_volume_buy is not None:
            self.current_week_volume_buy = current_week_volume_buy
        if current_week_volume_sell is not None:
            self.current_week_volume_sell = current_week_volume_sell
        if current_week_volume_unknown is not None:
            self.current_week_volume_unknown = current_week_volume_unknown
        if current_year_high is not None:
            self.current_year_high = current_year_high
        if current_year_low is not None:
            self.current_year_low = current_year_low
        if current_year_open is not None:
            self.current_year_open = current_year_open
        if current_year_quote_volume is not None:
            self.current_year_quote_volume = current_year_quote_volume
        if current_year_quote_volume_buy is not None:
            self.current_year_quote_volume_buy = current_year_quote_volume_buy
        if current_year_quote_volume_sell is not None:
            self.current_year_quote_volume_sell = current_year_quote_volume_sell
        if current_year_quote_volume_unknown is not None:
            self.current_year_quote_volume_unknown = current_year_quote_volume_unknown
        if current_year_total_trades is not None:
            self.current_year_total_trades = current_year_total_trades
        if current_year_total_trades_buy is not None:
            self.current_year_total_trades_buy = current_year_total_trades_buy
        if current_year_total_trades_sell is not None:
            self.current_year_total_trades_sell = current_year_total_trades_sell
        if current_year_total_trades_unknown is not None:
            self.current_year_total_trades_unknown = current_year_total_trades_unknown
        if current_year_volume is not None:
            self.current_year_volume = current_year_volume
        if current_year_volume_buy is not None:
            self.current_year_volume_buy = current_year_volume_buy
        if current_year_volume_sell is not None:
            self.current_year_volume_sell = current_year_volume_sell
        if current_year_volume_unknown is not None:
            self.current_year_volume_unknown = current_year_volume_unknown
        if instrument is not None:
            self.instrument = instrument
        if last_processed_trade_ccseq is not None:
            self.last_processed_trade_ccseq = last_processed_trade_ccseq
        if last_processed_trade_price is not None:
            self.last_processed_trade_price = last_processed_trade_price
        if last_processed_trade_quantity is not None:
            self.last_processed_trade_quantity = last_processed_trade_quantity
        if last_processed_trade_quote_quantity is not None:
            self.last_processed_trade_quote_quantity = last_processed_trade_quote_quantity
        if last_processed_trade_side is not None:
            self.last_processed_trade_side = last_processed_trade_side
        if last_processed_trade_ts is not None:
            self.last_processed_trade_ts = last_processed_trade_ts
        if last_trade_ccseq is not None:
            self.last_trade_ccseq = last_trade_ccseq
        if last_trade_id is not None:
            self.last_trade_id = last_trade_id
        if last_trade_quantity is not None:
            self.last_trade_quantity = last_trade_quantity
        if last_trade_quote_quantity is not None:
            self.last_trade_quote_quantity = last_trade_quote_quantity
        if last_trade_side is not None:
            self.last_trade_side = last_trade_side
        if lifetime_first_trade_ts is not None:
            self.lifetime_first_trade_ts = lifetime_first_trade_ts
        if lifetime_high is not None:
            self.lifetime_high = lifetime_high
        if lifetime_high_ts is not None:
            self.lifetime_high_ts = lifetime_high_ts
        if lifetime_low is not None:
            self.lifetime_low = lifetime_low
        if lifetime_low_ts is not None:
            self.lifetime_low_ts = lifetime_low_ts
        if lifetime_open is not None:
            self.lifetime_open = lifetime_open
        if lifetime_quote_volume is not None:
            self.lifetime_quote_volume = lifetime_quote_volume
        if lifetime_quote_volume_buy is not None:
            self.lifetime_quote_volume_buy = lifetime_quote_volume_buy
        if lifetime_quote_volume_sell is not None:
            self.lifetime_quote_volume_sell = lifetime_quote_volume_sell
        if lifetime_quote_volume_unknown is not None:
            self.lifetime_quote_volume_unknown = lifetime_quote_volume_unknown
        if lifetime_total_trades is not None:
            self.lifetime_total_trades = lifetime_total_trades
        if lifetime_total_trades_buy is not None:
            self.lifetime_total_trades_buy = lifetime_total_trades_buy
        if lifetime_total_trades_sell is not None:
            self.lifetime_total_trades_sell = lifetime_total_trades_sell
        if lifetime_total_trades_unknown is not None:
            self.lifetime_total_trades_unknown = lifetime_total_trades_unknown
        if lifetime_volume is not None:
            self.lifetime_volume = lifetime_volume
        if lifetime_volume_buy is not None:
            self.lifetime_volume_buy = lifetime_volume_buy
        if lifetime_volume_sell is not None:
            self.lifetime_volume_sell = lifetime_volume_sell
        if lifetime_volume_unknown is not None:
            self.lifetime_volume_unknown = lifetime_volume_unknown
        if mapped_instrument is not None:
            self.mapped_instrument = mapped_instrument
        if market is not None:
            self.market = market
        if moving_180_day_high is not None:
            self.moving_180_day_high = moving_180_day_high
        if moving_180_day_low is not None:
            self.moving_180_day_low = moving_180_day_low
        if moving_180_day_open is not None:
            self.moving_180_day_open = moving_180_day_open
        if moving_180_day_quote_volume is not None:
            self.moving_180_day_quote_volume = moving_180_day_quote_volume
        if moving_180_day_quote_volume_buy is not None:
            self.moving_180_day_quote_volume_buy = moving_180_day_quote_volume_buy
        if moving_180_day_quote_volume_sell is not None:
            self.moving_180_day_quote_volume_sell = moving_180_day_quote_volume_sell
        if moving_180_day_quote_volume_unknown is not None:
            self.moving_180_day_quote_volume_unknown = moving_180_day_quote_volume_unknown
        if moving_180_day_total_trades is not None:
            self.moving_180_day_total_trades = moving_180_day_total_trades
        if moving_180_day_total_trades_buy is not None:
            self.moving_180_day_total_trades_buy = moving_180_day_total_trades_buy
        if moving_180_day_total_trades_sell is not None:
            self.moving_180_day_total_trades_sell = moving_180_day_total_trades_sell
        if moving_180_day_total_trades_unknown is not None:
            self.moving_180_day_total_trades_unknown = moving_180_day_total_trades_unknown
        if moving_180_day_volume is not None:
            self.moving_180_day_volume = moving_180_day_volume
        if moving_180_day_volume_buy is not None:
            self.moving_180_day_volume_buy = moving_180_day_volume_buy
        if moving_180_day_volume_sell is not None:
            self.moving_180_day_volume_sell = moving_180_day_volume_sell
        if moving_180_day_volume_unknown is not None:
            self.moving_180_day_volume_unknown = moving_180_day_volume_unknown
        if moving_24_hour_high is not None:
            self.moving_24_hour_high = moving_24_hour_high
        if moving_24_hour_low is not None:
            self.moving_24_hour_low = moving_24_hour_low
        if moving_24_hour_open is not None:
            self.moving_24_hour_open = moving_24_hour_open
        if moving_24_hour_quote_volume is not None:
            self.moving_24_hour_quote_volume = moving_24_hour_quote_volume
        if moving_24_hour_quote_volume_buy is not None:
            self.moving_24_hour_quote_volume_buy = moving_24_hour_quote_volume_buy
        if moving_24_hour_quote_volume_sell is not None:
            self.moving_24_hour_quote_volume_sell = moving_24_hour_quote_volume_sell
        if moving_24_hour_quote_volume_unknown is not None:
            self.moving_24_hour_quote_volume_unknown = moving_24_hour_quote_volume_unknown
        if moving_24_hour_total_trades is not None:
            self.moving_24_hour_total_trades = moving_24_hour_total_trades
        if moving_24_hour_total_trades_buy is not None:
            self.moving_24_hour_total_trades_buy = moving_24_hour_total_trades_buy
        if moving_24_hour_total_trades_sell is not None:
            self.moving_24_hour_total_trades_sell = moving_24_hour_total_trades_sell
        if moving_24_hour_total_trades_unknown is not None:
            self.moving_24_hour_total_trades_unknown = moving_24_hour_total_trades_unknown
        if moving_24_hour_volume is not None:
            self.moving_24_hour_volume = moving_24_hour_volume
        if moving_24_hour_volume_buy is not None:
            self.moving_24_hour_volume_buy = moving_24_hour_volume_buy
        if moving_24_hour_volume_sell is not None:
            self.moving_24_hour_volume_sell = moving_24_hour_volume_sell
        if moving_24_hour_volume_unknown is not None:
            self.moving_24_hour_volume_unknown = moving_24_hour_volume_unknown
        if moving_30_day_high is not None:
            self.moving_30_day_high = moving_30_day_high
        if moving_30_day_low is not None:
            self.moving_30_day_low = moving_30_day_low
        if moving_30_day_open is not None:
            self.moving_30_day_open = moving_30_day_open
        if moving_30_day_quote_volume is not None:
            self.moving_30_day_quote_volume = moving_30_day_quote_volume
        if moving_30_day_quote_volume_buy is not None:
            self.moving_30_day_quote_volume_buy = moving_30_day_quote_volume_buy
        if moving_30_day_quote_volume_sell is not None:
            self.moving_30_day_quote_volume_sell = moving_30_day_quote_volume_sell
        if moving_30_day_quote_volume_unknown is not None:
            self.moving_30_day_quote_volume_unknown = moving_30_day_quote_volume_unknown
        if moving_30_day_total_trades is not None:
            self.moving_30_day_total_trades = moving_30_day_total_trades
        if moving_30_day_total_trades_buy is not None:
            self.moving_30_day_total_trades_buy = moving_30_day_total_trades_buy
        if moving_30_day_total_trades_sell is not None:
            self.moving_30_day_total_trades_sell = moving_30_day_total_trades_sell
        if moving_30_day_total_trades_unknown is not None:
            self.moving_30_day_total_trades_unknown = moving_30_day_total_trades_unknown
        if moving_30_day_volume is not None:
            self.moving_30_day_volume = moving_30_day_volume
        if moving_30_day_volume_buy is not None:
            self.moving_30_day_volume_buy = moving_30_day_volume_buy
        if moving_30_day_volume_sell is not None:
            self.moving_30_day_volume_sell = moving_30_day_volume_sell
        if moving_30_day_volume_unknown is not None:
            self.moving_30_day_volume_unknown = moving_30_day_volume_unknown
        if moving_365_day_high is not None:
            self.moving_365_day_high = moving_365_day_high
        if moving_365_day_low is not None:
            self.moving_365_day_low = moving_365_day_low
        if moving_365_day_open is not None:
            self.moving_365_day_open = moving_365_day_open
        if moving_365_day_quote_volume is not None:
            self.moving_365_day_quote_volume = moving_365_day_quote_volume
        if moving_365_day_quote_volume_buy is not None:
            self.moving_365_day_quote_volume_buy = moving_365_day_quote_volume_buy
        if moving_365_day_quote_volume_sell is not None:
            self.moving_365_day_quote_volume_sell = moving_365_day_quote_volume_sell
        if moving_365_day_quote_volume_unknown is not None:
            self.moving_365_day_quote_volume_unknown = moving_365_day_quote_volume_unknown
        if moving_365_day_total_trades is not None:
            self.moving_365_day_total_trades = moving_365_day_total_trades
        if moving_365_day_total_trades_buy is not None:
            self.moving_365_day_total_trades_buy = moving_365_day_total_trades_buy
        if moving_365_day_total_trades_sell is not None:
            self.moving_365_day_total_trades_sell = moving_365_day_total_trades_sell
        if moving_365_day_total_trades_unknown is not None:
            self.moving_365_day_total_trades_unknown = moving_365_day_total_trades_unknown
        if moving_365_day_volume is not None:
            self.moving_365_day_volume = moving_365_day_volume
        if moving_365_day_volume_buy is not None:
            self.moving_365_day_volume_buy = moving_365_day_volume_buy
        if moving_365_day_volume_sell is not None:
            self.moving_365_day_volume_sell = moving_365_day_volume_sell
        if moving_365_day_volume_unknown is not None:
            self.moving_365_day_volume_unknown = moving_365_day_volume_unknown
        if moving_7_day_high is not None:
            self.moving_7_day_high = moving_7_day_high
        if moving_7_day_low is not None:
            self.moving_7_day_low = moving_7_day_low
        if moving_7_day_open is not None:
            self.moving_7_day_open = moving_7_day_open
        if moving_7_day_quote_volume is not None:
            self.moving_7_day_quote_volume = moving_7_day_quote_volume
        if moving_7_day_quote_volume_buy is not None:
            self.moving_7_day_quote_volume_buy = moving_7_day_quote_volume_buy
        if moving_7_day_quote_volume_sell is not None:
            self.moving_7_day_quote_volume_sell = moving_7_day_quote_volume_sell
        if moving_7_day_quote_volume_unknown is not None:
            self.moving_7_day_quote_volume_unknown = moving_7_day_quote_volume_unknown
        if moving_7_day_total_trades is not None:
            self.moving_7_day_total_trades = moving_7_day_total_trades
        if moving_7_day_total_trades_buy is not None:
            self.moving_7_day_total_trades_buy = moving_7_day_total_trades_buy
        if moving_7_day_total_trades_sell is not None:
            self.moving_7_day_total_trades_sell = moving_7_day_total_trades_sell
        if moving_7_day_total_trades_unknown is not None:
            self.moving_7_day_total_trades_unknown = moving_7_day_total_trades_unknown
        if moving_7_day_volume is not None:
            self.moving_7_day_volume = moving_7_day_volume
        if moving_7_day_volume_buy is not None:
            self.moving_7_day_volume_buy = moving_7_day_volume_buy
        if moving_7_day_volume_sell is not None:
            self.moving_7_day_volume_sell = moving_7_day_volume_sell
        if moving_7_day_volume_unknown is not None:
            self.moving_7_day_volume_unknown = moving_7_day_volume_unknown
        if moving_90_day_high is not None:
            self.moving_90_day_high = moving_90_day_high
        if moving_90_day_low is not None:
            self.moving_90_day_low = moving_90_day_low
        if moving_90_day_open is not None:
            self.moving_90_day_open = moving_90_day_open
        if moving_90_day_quote_volume is not None:
            self.moving_90_day_quote_volume = moving_90_day_quote_volume
        if moving_90_day_quote_volume_buy is not None:
            self.moving_90_day_quote_volume_buy = moving_90_day_quote_volume_buy
        if moving_90_day_quote_volume_sell is not None:
            self.moving_90_day_quote_volume_sell = moving_90_day_quote_volume_sell
        if moving_90_day_quote_volume_unknown is not None:
            self.moving_90_day_quote_volume_unknown = moving_90_day_quote_volume_unknown
        if moving_90_day_total_trades is not None:
            self.moving_90_day_total_trades = moving_90_day_total_trades
        if moving_90_day_total_trades_buy is not None:
            self.moving_90_day_total_trades_buy = moving_90_day_total_trades_buy
        if moving_90_day_total_trades_sell is not None:
            self.moving_90_day_total_trades_sell = moving_90_day_total_trades_sell
        if moving_90_day_total_trades_unknown is not None:
            self.moving_90_day_total_trades_unknown = moving_90_day_total_trades_unknown
        if moving_90_day_volume is not None:
            self.moving_90_day_volume = moving_90_day_volume
        if moving_90_day_volume_buy is not None:
            self.moving_90_day_volume_buy = moving_90_day_volume_buy
        if moving_90_day_volume_sell is not None:
            self.moving_90_day_volume_sell = moving_90_day_volume_sell
        if moving_90_day_volume_unknown is not None:
            self.moving_90_day_volume_unknown = moving_90_day_volume_unknown
        if price is not None:
            self.price = price
        if price_flag is not None:
            self.price_flag = price_flag
        if price_last_update_ts is not None:
            self.price_last_update_ts = price_last_update_ts
        if quote is not None:
            self.quote = quote
        if top_ask_last_update_ts is not None:
            self.top_ask_last_update_ts = top_ask_last_update_ts
        if top_ask_price is not None:
            self.top_ask_price = top_ask_price
        if top_ask_quantity is not None:
            self.top_ask_quantity = top_ask_quantity
        if top_bid_last_update_ts is not None:
            self.top_bid_last_update_ts = top_bid_last_update_ts
        if top_bid_price is not None:
            self.top_bid_price = top_bid_price
        if top_bid_quantity is not None:
            self.top_bid_quantity = top_bid_quantity
        if type is not None:
            self.type = type

    @property
    def base(self):
        """Gets the base of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The mapped from asset (base / symbol/ coin), e.g. BTC. Only available on instruments that have been mapped.  # noqa: E501

        :return: The base of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: str
        """
        return self._base

    @base.setter
    def base(self, base):
        """Sets the base of this SPOTINSTRUMENTMARKETDATA.

        The mapped from asset (base / symbol/ coin), e.g. BTC. Only available on instruments that have been mapped.  # noqa: E501

        :param base: The base of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type base: str
        """

        self._base = base

    @property
    def ccseq(self):
        """Gets the ccseq of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        Our internal sequence number for this tick update. This is unique per market / exchange and trading pair / instrument. It will always be increasing by 1 for each new tick update we send.  # noqa: E501

        :return: The ccseq of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._ccseq

    @ccseq.setter
    def ccseq(self, ccseq):
        """Sets the ccseq of this SPOTINSTRUMENTMARKETDATA.

        Our internal sequence number for this tick update. This is unique per market / exchange and trading pair / instrument. It will always be increasing by 1 for each new tick update we send.  # noqa: E501

        :param ccseq: The ccseq of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type ccseq: int
        """

        self._ccseq = ccseq

    @property
    def current_day_high(self):
        """Gets the current_day_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The highest trade price of the current day (00:00:00 GMT/UTC). If there were no updates in the time period, the open price will be given. Given in the quote asset.  # noqa: E501

        :return: The current_day_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_day_high

    @current_day_high.setter
    def current_day_high(self, current_day_high):
        """Sets the current_day_high of this SPOTINSTRUMENTMARKETDATA.

        The highest trade price of the current day (00:00:00 GMT/UTC). If there were no updates in the time period, the open price will be given. Given in the quote asset.  # noqa: E501

        :param current_day_high: The current_day_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_day_high: int
        """

        self._current_day_high = current_day_high

    @property
    def current_day_low(self):
        """Gets the current_day_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The lowest trade price of the current day (00:00:00 GMT/UTC). If there were no updates in the time period, the open price will be given. Given in the quote asset.  # noqa: E501

        :return: The current_day_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_day_low

    @current_day_low.setter
    def current_day_low(self, current_day_low):
        """Sets the current_day_low of this SPOTINSTRUMENTMARKETDATA.

        The lowest trade price of the current day (00:00:00 GMT/UTC). If there were no updates in the time period, the open price will be given. Given in the quote asset.  # noqa: E501

        :param current_day_low: The current_day_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_day_low: int
        """

        self._current_day_low = current_day_low

    @property
    def current_day_open(self):
        """Gets the current_day_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The open price for the current day, this is based on the closest trade occurring before the start of the current day (00:00:00 GMT/UTC). Given in the quote asset.  # noqa: E501

        :return: The current_day_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_day_open

    @current_day_open.setter
    def current_day_open(self, current_day_open):
        """Sets the current_day_open of this SPOTINSTRUMENTMARKETDATA.

        The open price for the current day, this is based on the closest trade occurring before the start of the current day (00:00:00 GMT/UTC). Given in the quote asset.  # noqa: E501

        :param current_day_open: The current_day_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_day_open: int
        """

        self._current_day_open = current_day_open

    @property
    def current_day_quote_volume(self):
        """Gets the current_day_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset.  # noqa: E501

        :return: The current_day_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_day_quote_volume

    @current_day_quote_volume.setter
    def current_day_quote_volume(self, current_day_quote_volume):
        """Sets the current_day_quote_volume of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset.  # noqa: E501

        :param current_day_quote_volume: The current_day_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_day_quote_volume: int
        """

        self._current_day_quote_volume = current_day_quote_volume

    @property
    def current_day_quote_volume_buy(self):
        """Gets the current_day_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all buy trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset.  # noqa: E501

        :return: The current_day_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_day_quote_volume_buy

    @current_day_quote_volume_buy.setter
    def current_day_quote_volume_buy(self, current_day_quote_volume_buy):
        """Sets the current_day_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.

        The sum of all buy trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset.  # noqa: E501

        :param current_day_quote_volume_buy: The current_day_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_day_quote_volume_buy: int
        """

        self._current_day_quote_volume_buy = current_day_quote_volume_buy

    @property
    def current_day_quote_volume_sell(self):
        """Gets the current_day_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all sell trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset.  # noqa: E501

        :return: The current_day_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_day_quote_volume_sell

    @current_day_quote_volume_sell.setter
    def current_day_quote_volume_sell(self, current_day_quote_volume_sell):
        """Sets the current_day_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.

        The sum of all sell trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset.  # noqa: E501

        :param current_day_quote_volume_sell: The current_day_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_day_quote_volume_sell: int
        """

        self._current_day_quote_volume_sell = current_day_quote_volume_sell

    @property
    def current_day_quote_volume_unknown(self):
        """Gets the current_day_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all unknown trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset.  # noqa: E501

        :return: The current_day_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_day_quote_volume_unknown

    @current_day_quote_volume_unknown.setter
    def current_day_quote_volume_unknown(self, current_day_quote_volume_unknown):
        """Sets the current_day_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.

        The sum of all unknown trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset.  # noqa: E501

        :param current_day_quote_volume_unknown: The current_day_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_day_quote_volume_unknown: int
        """

        self._current_day_quote_volume_unknown = current_day_quote_volume_unknown

    @property
    def current_day_total_trades(self):
        """Gets the current_day_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of trades that have occurred since the start of the current day (00:00:00 GMT/UTC).  # noqa: E501

        :return: The current_day_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_day_total_trades

    @current_day_total_trades.setter
    def current_day_total_trades(self, current_day_total_trades):
        """Sets the current_day_total_trades of this SPOTINSTRUMENTMARKETDATA.

        The total number of trades that have occurred since the start of the current day (00:00:00 GMT/UTC).  # noqa: E501

        :param current_day_total_trades: The current_day_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_day_total_trades: int
        """

        self._current_day_total_trades = current_day_total_trades

    @property
    def current_day_total_trades_buy(self):
        """Gets the current_day_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of buy trades since the start of the current day (00:00:00 GMT/UTC).  # noqa: E501

        :return: The current_day_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_day_total_trades_buy

    @current_day_total_trades_buy.setter
    def current_day_total_trades_buy(self, current_day_total_trades_buy):
        """Sets the current_day_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.

        The total number of buy trades since the start of the current day (00:00:00 GMT/UTC).  # noqa: E501

        :param current_day_total_trades_buy: The current_day_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_day_total_trades_buy: int
        """

        self._current_day_total_trades_buy = current_day_total_trades_buy

    @property
    def current_day_total_trades_sell(self):
        """Gets the current_day_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of sell trades since the start of the current day (00:00:00 GMT/UTC).  # noqa: E501

        :return: The current_day_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_day_total_trades_sell

    @current_day_total_trades_sell.setter
    def current_day_total_trades_sell(self, current_day_total_trades_sell):
        """Sets the current_day_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.

        The total number of sell trades since the start of the current day (00:00:00 GMT/UTC).  # noqa: E501

        :param current_day_total_trades_sell: The current_day_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_day_total_trades_sell: int
        """

        self._current_day_total_trades_sell = current_day_total_trades_sell

    @property
    def current_day_total_trades_unknown(self):
        """Gets the current_day_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of unknown trades since the start of the current day (00:00:00 GMT/UTC).  # noqa: E501

        :return: The current_day_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_day_total_trades_unknown

    @current_day_total_trades_unknown.setter
    def current_day_total_trades_unknown(self, current_day_total_trades_unknown):
        """Sets the current_day_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.

        The total number of unknown trades since the start of the current day (00:00:00 GMT/UTC).  # noqa: E501

        :param current_day_total_trades_unknown: The current_day_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_day_total_trades_unknown: int
        """

        self._current_day_total_trades_unknown = current_day_total_trades_unknown

    @property
    def current_day_volume(self):
        """Gets the current_day_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset.  # noqa: E501

        :return: The current_day_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_day_volume

    @current_day_volume.setter
    def current_day_volume(self, current_day_volume):
        """Sets the current_day_volume of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset.  # noqa: E501

        :param current_day_volume: The current_day_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_day_volume: int
        """

        self._current_day_volume = current_day_volume

    @property
    def current_day_volume_buy(self):
        """Gets the current_day_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all buy trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset.  # noqa: E501

        :return: The current_day_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_day_volume_buy

    @current_day_volume_buy.setter
    def current_day_volume_buy(self, current_day_volume_buy):
        """Sets the current_day_volume_buy of this SPOTINSTRUMENTMARKETDATA.

        The sum of all buy trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset.  # noqa: E501

        :param current_day_volume_buy: The current_day_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_day_volume_buy: int
        """

        self._current_day_volume_buy = current_day_volume_buy

    @property
    def current_day_volume_sell(self):
        """Gets the current_day_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all sell trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset.  # noqa: E501

        :return: The current_day_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_day_volume_sell

    @current_day_volume_sell.setter
    def current_day_volume_sell(self, current_day_volume_sell):
        """Sets the current_day_volume_sell of this SPOTINSTRUMENTMARKETDATA.

        The sum of all sell trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset.  # noqa: E501

        :param current_day_volume_sell: The current_day_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_day_volume_sell: int
        """

        self._current_day_volume_sell = current_day_volume_sell

    @property
    def current_day_volume_unknown(self):
        """Gets the current_day_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all unknown trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset.  # noqa: E501

        :return: The current_day_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_day_volume_unknown

    @current_day_volume_unknown.setter
    def current_day_volume_unknown(self, current_day_volume_unknown):
        """Sets the current_day_volume_unknown of this SPOTINSTRUMENTMARKETDATA.

        The sum of all unknown trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset.  # noqa: E501

        :param current_day_volume_unknown: The current_day_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_day_volume_unknown: int
        """

        self._current_day_volume_unknown = current_day_volume_unknown

    @property
    def current_hour_high(self):
        """Gets the current_hour_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The highest trade price of the current hour. If there were no updates in the time period, the open price will be given. Given in the quote asset.  # noqa: E501

        :return: The current_hour_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_hour_high

    @current_hour_high.setter
    def current_hour_high(self, current_hour_high):
        """Sets the current_hour_high of this SPOTINSTRUMENTMARKETDATA.

        The highest trade price of the current hour. If there were no updates in the time period, the open price will be given. Given in the quote asset.  # noqa: E501

        :param current_hour_high: The current_hour_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_hour_high: int
        """

        self._current_hour_high = current_hour_high

    @property
    def current_hour_low(self):
        """Gets the current_hour_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The lowest trade price of the current hour. If there were no updates in the time period, the open price will be given. Given in the quote asset.  # noqa: E501

        :return: The current_hour_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_hour_low

    @current_hour_low.setter
    def current_hour_low(self, current_hour_low):
        """Sets the current_hour_low of this SPOTINSTRUMENTMARKETDATA.

        The lowest trade price of the current hour. If there were no updates in the time period, the open price will be given. Given in the quote asset.  # noqa: E501

        :param current_hour_low: The current_hour_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_hour_low: int
        """

        self._current_hour_low = current_hour_low

    @property
    def current_hour_open(self):
        """Gets the current_hour_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The open price for the current hour, this is based on the closest trade occurring before the start of the current hour. Given in the quote asset.  # noqa: E501

        :return: The current_hour_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_hour_open

    @current_hour_open.setter
    def current_hour_open(self, current_hour_open):
        """Sets the current_hour_open of this SPOTINSTRUMENTMARKETDATA.

        The open price for the current hour, this is based on the closest trade occurring before the start of the current hour. Given in the quote asset.  # noqa: E501

        :param current_hour_open: The current_hour_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_hour_open: int
        """

        self._current_hour_open = current_hour_open

    @property
    def current_hour_quote_volume(self):
        """Gets the current_hour_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quote quantities from the start of the current hour until now. Given in the quote asset.  # noqa: E501

        :return: The current_hour_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_hour_quote_volume

    @current_hour_quote_volume.setter
    def current_hour_quote_volume(self, current_hour_quote_volume):
        """Sets the current_hour_quote_volume of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quote quantities from the start of the current hour until now. Given in the quote asset.  # noqa: E501

        :param current_hour_quote_volume: The current_hour_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_hour_quote_volume: int
        """

        self._current_hour_quote_volume = current_hour_quote_volume

    @property
    def current_hour_quote_volume_buy(self):
        """Gets the current_hour_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all buy trade quote quantities from the start of the current hour until now. Given in the quote asset.  # noqa: E501

        :return: The current_hour_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_hour_quote_volume_buy

    @current_hour_quote_volume_buy.setter
    def current_hour_quote_volume_buy(self, current_hour_quote_volume_buy):
        """Sets the current_hour_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.

        The sum of all buy trade quote quantities from the start of the current hour until now. Given in the quote asset.  # noqa: E501

        :param current_hour_quote_volume_buy: The current_hour_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_hour_quote_volume_buy: int
        """

        self._current_hour_quote_volume_buy = current_hour_quote_volume_buy

    @property
    def current_hour_quote_volume_sell(self):
        """Gets the current_hour_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all sell trade quote quantities from the start of the current hour until now. Given in the quote asset.  # noqa: E501

        :return: The current_hour_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_hour_quote_volume_sell

    @current_hour_quote_volume_sell.setter
    def current_hour_quote_volume_sell(self, current_hour_quote_volume_sell):
        """Sets the current_hour_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.

        The sum of all sell trade quote quantities from the start of the current hour until now. Given in the quote asset.  # noqa: E501

        :param current_hour_quote_volume_sell: The current_hour_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_hour_quote_volume_sell: int
        """

        self._current_hour_quote_volume_sell = current_hour_quote_volume_sell

    @property
    def current_hour_quote_volume_unknown(self):
        """Gets the current_hour_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all unknown trade quote quantities from the start of the current hour until now. Given in the quote asset.  # noqa: E501

        :return: The current_hour_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_hour_quote_volume_unknown

    @current_hour_quote_volume_unknown.setter
    def current_hour_quote_volume_unknown(self, current_hour_quote_volume_unknown):
        """Sets the current_hour_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.

        The sum of all unknown trade quote quantities from the start of the current hour until now. Given in the quote asset.  # noqa: E501

        :param current_hour_quote_volume_unknown: The current_hour_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_hour_quote_volume_unknown: int
        """

        self._current_hour_quote_volume_unknown = current_hour_quote_volume_unknown

    @property
    def current_hour_total_trades(self):
        """Gets the current_hour_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of trades that have occurred since the start of the current hour.  # noqa: E501

        :return: The current_hour_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_hour_total_trades

    @current_hour_total_trades.setter
    def current_hour_total_trades(self, current_hour_total_trades):
        """Sets the current_hour_total_trades of this SPOTINSTRUMENTMARKETDATA.

        The total number of trades that have occurred since the start of the current hour.  # noqa: E501

        :param current_hour_total_trades: The current_hour_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_hour_total_trades: int
        """

        self._current_hour_total_trades = current_hour_total_trades

    @property
    def current_hour_total_trades_buy(self):
        """Gets the current_hour_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of buy trades since the start of the current hour.  # noqa: E501

        :return: The current_hour_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_hour_total_trades_buy

    @current_hour_total_trades_buy.setter
    def current_hour_total_trades_buy(self, current_hour_total_trades_buy):
        """Sets the current_hour_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.

        The total number of buy trades since the start of the current hour.  # noqa: E501

        :param current_hour_total_trades_buy: The current_hour_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_hour_total_trades_buy: int
        """

        self._current_hour_total_trades_buy = current_hour_total_trades_buy

    @property
    def current_hour_total_trades_sell(self):
        """Gets the current_hour_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of sell trades since the start of the current hour.  # noqa: E501

        :return: The current_hour_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_hour_total_trades_sell

    @current_hour_total_trades_sell.setter
    def current_hour_total_trades_sell(self, current_hour_total_trades_sell):
        """Sets the current_hour_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.

        The total number of sell trades since the start of the current hour.  # noqa: E501

        :param current_hour_total_trades_sell: The current_hour_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_hour_total_trades_sell: int
        """

        self._current_hour_total_trades_sell = current_hour_total_trades_sell

    @property
    def current_hour_total_trades_unknown(self):
        """Gets the current_hour_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of unknown trades since the start of the current hour.  # noqa: E501

        :return: The current_hour_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_hour_total_trades_unknown

    @current_hour_total_trades_unknown.setter
    def current_hour_total_trades_unknown(self, current_hour_total_trades_unknown):
        """Sets the current_hour_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.

        The total number of unknown trades since the start of the current hour.  # noqa: E501

        :param current_hour_total_trades_unknown: The current_hour_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_hour_total_trades_unknown: int
        """

        self._current_hour_total_trades_unknown = current_hour_total_trades_unknown

    @property
    def current_hour_volume(self):
        """Gets the current_hour_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quantities from the start of the current hour until now. Given in the base asset.  # noqa: E501

        :return: The current_hour_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_hour_volume

    @current_hour_volume.setter
    def current_hour_volume(self, current_hour_volume):
        """Sets the current_hour_volume of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quantities from the start of the current hour until now. Given in the base asset.  # noqa: E501

        :param current_hour_volume: The current_hour_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_hour_volume: int
        """

        self._current_hour_volume = current_hour_volume

    @property
    def current_hour_volume_buy(self):
        """Gets the current_hour_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all buy trade quantities from the start of the current hour until now. Given in the base asset.  # noqa: E501

        :return: The current_hour_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_hour_volume_buy

    @current_hour_volume_buy.setter
    def current_hour_volume_buy(self, current_hour_volume_buy):
        """Sets the current_hour_volume_buy of this SPOTINSTRUMENTMARKETDATA.

        The sum of all buy trade quantities from the start of the current hour until now. Given in the base asset.  # noqa: E501

        :param current_hour_volume_buy: The current_hour_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_hour_volume_buy: int
        """

        self._current_hour_volume_buy = current_hour_volume_buy

    @property
    def current_hour_volume_sell(self):
        """Gets the current_hour_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all sell trade quantities from the start of the current hour until now. Given in the base asset.  # noqa: E501

        :return: The current_hour_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_hour_volume_sell

    @current_hour_volume_sell.setter
    def current_hour_volume_sell(self, current_hour_volume_sell):
        """Sets the current_hour_volume_sell of this SPOTINSTRUMENTMARKETDATA.

        The sum of all sell trade quantities from the start of the current hour until now. Given in the base asset.  # noqa: E501

        :param current_hour_volume_sell: The current_hour_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_hour_volume_sell: int
        """

        self._current_hour_volume_sell = current_hour_volume_sell

    @property
    def current_hour_volume_unknown(self):
        """Gets the current_hour_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quote quantities from the start of the current hour until now. Given in the base asset.  # noqa: E501

        :return: The current_hour_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_hour_volume_unknown

    @current_hour_volume_unknown.setter
    def current_hour_volume_unknown(self, current_hour_volume_unknown):
        """Sets the current_hour_volume_unknown of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quote quantities from the start of the current hour until now. Given in the base asset.  # noqa: E501

        :param current_hour_volume_unknown: The current_hour_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_hour_volume_unknown: int
        """

        self._current_hour_volume_unknown = current_hour_volume_unknown

    @property
    def current_month_high(self):
        """Gets the current_month_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The highest traded price of the month excluding the current day. The period will run from the 1st of the month - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the month. If today is the 1st of the month, this value will be CURRENT_MONTH_OPEN. Given in the quote asset.  # noqa: E501

        :return: The current_month_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_month_high

    @current_month_high.setter
    def current_month_high(self, current_month_high):
        """Sets the current_month_high of this SPOTINSTRUMENTMARKETDATA.

        The highest traded price of the month excluding the current day. The period will run from the 1st of the month - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the month. If today is the 1st of the month, this value will be CURRENT_MONTH_OPEN. Given in the quote asset.  # noqa: E501

        :param current_month_high: The current_month_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_month_high: int
        """

        self._current_month_high = current_month_high

    @property
    def current_month_low(self):
        """Gets the current_month_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The lowest traded price of the month excluding the current day. The period will run from the 1st of the month - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the month. If today is the 1st of the month, this value will be CURRENT_MONTH_OPEN. Given in the quote asset.  # noqa: E501

        :return: The current_month_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_month_low

    @current_month_low.setter
    def current_month_low(self, current_month_low):
        """Sets the current_month_low of this SPOTINSTRUMENTMARKETDATA.

        The lowest traded price of the month excluding the current day. The period will run from the 1st of the month - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the month. If today is the 1st of the month, this value will be CURRENT_MONTH_OPEN. Given in the quote asset.  # noqa: E501

        :param current_month_low: The current_month_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_month_low: int
        """

        self._current_month_low = current_month_low

    @property
    def current_month_open(self):
        """Gets the current_month_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The price of the closest trade to the 1st day (00:00:00 GMT/UTC) of this month. In a highly liquid market, this would be the last trade that happened on the previous month at (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full monthly value. Given in the quote asset.  # noqa: E501

        :return: The current_month_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_month_open

    @current_month_open.setter
    def current_month_open(self, current_month_open):
        """Sets the current_month_open of this SPOTINSTRUMENTMARKETDATA.

        The price of the closest trade to the 1st day (00:00:00 GMT/UTC) of this month. In a highly liquid market, this would be the last trade that happened on the previous month at (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full monthly value. Given in the quote asset.  # noqa: E501

        :param current_month_open: The current_month_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_month_open: int
        """

        self._current_month_open = current_month_open

    @property
    def current_month_quote_volume(self):
        """Gets the current_month_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset.  # noqa: E501

        :return: The current_month_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_month_quote_volume

    @current_month_quote_volume.setter
    def current_month_quote_volume(self, current_month_quote_volume):
        """Sets the current_month_quote_volume of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset.  # noqa: E501

        :param current_month_quote_volume: The current_month_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_month_quote_volume: int
        """

        self._current_month_quote_volume = current_month_quote_volume

    @property
    def current_month_quote_volume_buy(self):
        """Gets the current_month_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all buy trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset.  # noqa: E501

        :return: The current_month_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_month_quote_volume_buy

    @current_month_quote_volume_buy.setter
    def current_month_quote_volume_buy(self, current_month_quote_volume_buy):
        """Sets the current_month_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.

        The sum of all buy trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset.  # noqa: E501

        :param current_month_quote_volume_buy: The current_month_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_month_quote_volume_buy: int
        """

        self._current_month_quote_volume_buy = current_month_quote_volume_buy

    @property
    def current_month_quote_volume_sell(self):
        """Gets the current_month_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all sell trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset.  # noqa: E501

        :return: The current_month_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_month_quote_volume_sell

    @current_month_quote_volume_sell.setter
    def current_month_quote_volume_sell(self, current_month_quote_volume_sell):
        """Sets the current_month_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.

        The sum of all sell trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset.  # noqa: E501

        :param current_month_quote_volume_sell: The current_month_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_month_quote_volume_sell: int
        """

        self._current_month_quote_volume_sell = current_month_quote_volume_sell

    @property
    def current_month_quote_volume_unknown(self):
        """Gets the current_month_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all unknown trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset.  # noqa: E501

        :return: The current_month_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_month_quote_volume_unknown

    @current_month_quote_volume_unknown.setter
    def current_month_quote_volume_unknown(self, current_month_quote_volume_unknown):
        """Sets the current_month_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.

        The sum of all unknown trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset.  # noqa: E501

        :param current_month_quote_volume_unknown: The current_month_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_month_quote_volume_unknown: int
        """

        self._current_month_quote_volume_unknown = current_month_quote_volume_unknown

    @property
    def current_month_total_trades(self):
        """Gets the current_month_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0.  # noqa: E501

        :return: The current_month_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_month_total_trades

    @current_month_total_trades.setter
    def current_month_total_trades(self, current_month_total_trades):
        """Sets the current_month_total_trades of this SPOTINSTRUMENTMARKETDATA.

        The total number of trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0.  # noqa: E501

        :param current_month_total_trades: The current_month_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_month_total_trades: int
        """

        self._current_month_total_trades = current_month_total_trades

    @property
    def current_month_total_trades_buy(self):
        """Gets the current_month_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of buy trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0.  # noqa: E501

        :return: The current_month_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_month_total_trades_buy

    @current_month_total_trades_buy.setter
    def current_month_total_trades_buy(self, current_month_total_trades_buy):
        """Sets the current_month_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.

        The total number of buy trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0.  # noqa: E501

        :param current_month_total_trades_buy: The current_month_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_month_total_trades_buy: int
        """

        self._current_month_total_trades_buy = current_month_total_trades_buy

    @property
    def current_month_total_trades_sell(self):
        """Gets the current_month_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of sell trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0.  # noqa: E501

        :return: The current_month_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_month_total_trades_sell

    @current_month_total_trades_sell.setter
    def current_month_total_trades_sell(self, current_month_total_trades_sell):
        """Sets the current_month_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.

        The total number of sell trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0.  # noqa: E501

        :param current_month_total_trades_sell: The current_month_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_month_total_trades_sell: int
        """

        self._current_month_total_trades_sell = current_month_total_trades_sell

    @property
    def current_month_total_trades_unknown(self):
        """Gets the current_month_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of unknown trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0.  # noqa: E501

        :return: The current_month_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_month_total_trades_unknown

    @current_month_total_trades_unknown.setter
    def current_month_total_trades_unknown(self, current_month_total_trades_unknown):
        """Sets the current_month_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.

        The total number of unknown trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0.  # noqa: E501

        :param current_month_total_trades_unknown: The current_month_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_month_total_trades_unknown: int
        """

        self._current_month_total_trades_unknown = current_month_total_trades_unknown

    @property
    def current_month_volume(self):
        """Gets the current_month_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset.  # noqa: E501

        :return: The current_month_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_month_volume

    @current_month_volume.setter
    def current_month_volume(self, current_month_volume):
        """Sets the current_month_volume of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset.  # noqa: E501

        :param current_month_volume: The current_month_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_month_volume: int
        """

        self._current_month_volume = current_month_volume

    @property
    def current_month_volume_buy(self):
        """Gets the current_month_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all buy trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset.  # noqa: E501

        :return: The current_month_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_month_volume_buy

    @current_month_volume_buy.setter
    def current_month_volume_buy(self, current_month_volume_buy):
        """Sets the current_month_volume_buy of this SPOTINSTRUMENTMARKETDATA.

        The sum of all buy trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset.  # noqa: E501

        :param current_month_volume_buy: The current_month_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_month_volume_buy: int
        """

        self._current_month_volume_buy = current_month_volume_buy

    @property
    def current_month_volume_sell(self):
        """Gets the current_month_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all sell trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset.  # noqa: E501

        :return: The current_month_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_month_volume_sell

    @current_month_volume_sell.setter
    def current_month_volume_sell(self, current_month_volume_sell):
        """Sets the current_month_volume_sell of this SPOTINSTRUMENTMARKETDATA.

        The sum of all sell trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset.  # noqa: E501

        :param current_month_volume_sell: The current_month_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_month_volume_sell: int
        """

        self._current_month_volume_sell = current_month_volume_sell

    @property
    def current_month_volume_unknown(self):
        """Gets the current_month_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all unknown trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset.  # noqa: E501

        :return: The current_month_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_month_volume_unknown

    @current_month_volume_unknown.setter
    def current_month_volume_unknown(self, current_month_volume_unknown):
        """Sets the current_month_volume_unknown of this SPOTINSTRUMENTMARKETDATA.

        The sum of all unknown trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset.  # noqa: E501

        :param current_month_volume_unknown: The current_month_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_month_volume_unknown: int
        """

        self._current_month_volume_unknown = current_month_volume_unknown

    @property
    def current_week_high(self):
        """Gets the current_week_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The highest traded price of the week excluding the current day. The period will run from Monday - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the week. If today is Monday, this value will be the same as CURRENT_WEEK_OPEN. Given in the quote asset.  # noqa: E501

        :return: The current_week_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_week_high

    @current_week_high.setter
    def current_week_high(self, current_week_high):
        """Sets the current_week_high of this SPOTINSTRUMENTMARKETDATA.

        The highest traded price of the week excluding the current day. The period will run from Monday - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the week. If today is Monday, this value will be the same as CURRENT_WEEK_OPEN. Given in the quote asset.  # noqa: E501

        :param current_week_high: The current_week_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_week_high: int
        """

        self._current_week_high = current_week_high

    @property
    def current_week_low(self):
        """Gets the current_week_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The lowest traded price of the week excluding the current day. The period will run from Monday - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the week. If today is Monday, this value will be CURRENT_WEEK_LOW. Given in the quote asset.  # noqa: E501

        :return: The current_week_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_week_low

    @current_week_low.setter
    def current_week_low(self, current_week_low):
        """Sets the current_week_low of this SPOTINSTRUMENTMARKETDATA.

        The lowest traded price of the week excluding the current day. The period will run from Monday - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the week. If today is Monday, this value will be CURRENT_WEEK_LOW. Given in the quote asset.  # noqa: E501

        :param current_week_low: The current_week_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_week_low: int
        """

        self._current_week_low = current_week_low

    @property
    def current_week_open(self):
        """Gets the current_week_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The price of the closest trade to Monday (00:00:00 GMT/UTC) of this week. In a highly liquid market, this would be the last trade that happened on the previous Sunday at (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full weekly value. Given in the quote asset.  # noqa: E501

        :return: The current_week_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_week_open

    @current_week_open.setter
    def current_week_open(self, current_week_open):
        """Sets the current_week_open of this SPOTINSTRUMENTMARKETDATA.

        The price of the closest trade to Monday (00:00:00 GMT/UTC) of this week. In a highly liquid market, this would be the last trade that happened on the previous Sunday at (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full weekly value. Given in the quote asset.  # noqa: E501

        :param current_week_open: The current_week_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_week_open: int
        """

        self._current_week_open = current_week_open

    @property
    def current_week_quote_volume(self):
        """Gets the current_week_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset.  # noqa: E501

        :return: The current_week_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_week_quote_volume

    @current_week_quote_volume.setter
    def current_week_quote_volume(self, current_week_quote_volume):
        """Sets the current_week_quote_volume of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset.  # noqa: E501

        :param current_week_quote_volume: The current_week_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_week_quote_volume: int
        """

        self._current_week_quote_volume = current_week_quote_volume

    @property
    def current_week_quote_volume_buy(self):
        """Gets the current_week_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all buy trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset.  # noqa: E501

        :return: The current_week_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_week_quote_volume_buy

    @current_week_quote_volume_buy.setter
    def current_week_quote_volume_buy(self, current_week_quote_volume_buy):
        """Sets the current_week_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.

        The sum of all buy trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset.  # noqa: E501

        :param current_week_quote_volume_buy: The current_week_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_week_quote_volume_buy: int
        """

        self._current_week_quote_volume_buy = current_week_quote_volume_buy

    @property
    def current_week_quote_volume_sell(self):
        """Gets the current_week_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all sell trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset.  # noqa: E501

        :return: The current_week_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_week_quote_volume_sell

    @current_week_quote_volume_sell.setter
    def current_week_quote_volume_sell(self, current_week_quote_volume_sell):
        """Sets the current_week_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.

        The sum of all sell trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset.  # noqa: E501

        :param current_week_quote_volume_sell: The current_week_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_week_quote_volume_sell: int
        """

        self._current_week_quote_volume_sell = current_week_quote_volume_sell

    @property
    def current_week_quote_volume_unknown(self):
        """Gets the current_week_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all unknown trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset.  # noqa: E501

        :return: The current_week_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_week_quote_volume_unknown

    @current_week_quote_volume_unknown.setter
    def current_week_quote_volume_unknown(self, current_week_quote_volume_unknown):
        """Sets the current_week_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.

        The sum of all unknown trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset.  # noqa: E501

        :param current_week_quote_volume_unknown: The current_week_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_week_quote_volume_unknown: int
        """

        self._current_week_quote_volume_unknown = current_week_quote_volume_unknown

    @property
    def current_week_total_trades(self):
        """Gets the current_week_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0.  # noqa: E501

        :return: The current_week_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_week_total_trades

    @current_week_total_trades.setter
    def current_week_total_trades(self, current_week_total_trades):
        """Sets the current_week_total_trades of this SPOTINSTRUMENTMARKETDATA.

        The total number of trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0.  # noqa: E501

        :param current_week_total_trades: The current_week_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_week_total_trades: int
        """

        self._current_week_total_trades = current_week_total_trades

    @property
    def current_week_total_trades_buy(self):
        """Gets the current_week_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of buy trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0.  # noqa: E501

        :return: The current_week_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_week_total_trades_buy

    @current_week_total_trades_buy.setter
    def current_week_total_trades_buy(self, current_week_total_trades_buy):
        """Sets the current_week_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.

        The total number of buy trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0.  # noqa: E501

        :param current_week_total_trades_buy: The current_week_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_week_total_trades_buy: int
        """

        self._current_week_total_trades_buy = current_week_total_trades_buy

    @property
    def current_week_total_trades_sell(self):
        """Gets the current_week_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of sell trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0.  # noqa: E501

        :return: The current_week_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_week_total_trades_sell

    @current_week_total_trades_sell.setter
    def current_week_total_trades_sell(self, current_week_total_trades_sell):
        """Sets the current_week_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.

        The total number of sell trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0.  # noqa: E501

        :param current_week_total_trades_sell: The current_week_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_week_total_trades_sell: int
        """

        self._current_week_total_trades_sell = current_week_total_trades_sell

    @property
    def current_week_total_trades_unknown(self):
        """Gets the current_week_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of unknown trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0.  # noqa: E501

        :return: The current_week_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_week_total_trades_unknown

    @current_week_total_trades_unknown.setter
    def current_week_total_trades_unknown(self, current_week_total_trades_unknown):
        """Sets the current_week_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.

        The total number of unknown trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0.  # noqa: E501

        :param current_week_total_trades_unknown: The current_week_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_week_total_trades_unknown: int
        """

        self._current_week_total_trades_unknown = current_week_total_trades_unknown

    @property
    def current_week_volume(self):
        """Gets the current_week_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset.  # noqa: E501

        :return: The current_week_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_week_volume

    @current_week_volume.setter
    def current_week_volume(self, current_week_volume):
        """Sets the current_week_volume of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset.  # noqa: E501

        :param current_week_volume: The current_week_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_week_volume: int
        """

        self._current_week_volume = current_week_volume

    @property
    def current_week_volume_buy(self):
        """Gets the current_week_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all buy trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset.  # noqa: E501

        :return: The current_week_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_week_volume_buy

    @current_week_volume_buy.setter
    def current_week_volume_buy(self, current_week_volume_buy):
        """Sets the current_week_volume_buy of this SPOTINSTRUMENTMARKETDATA.

        The sum of all buy trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset.  # noqa: E501

        :param current_week_volume_buy: The current_week_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_week_volume_buy: int
        """

        self._current_week_volume_buy = current_week_volume_buy

    @property
    def current_week_volume_sell(self):
        """Gets the current_week_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all sell trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset.  # noqa: E501

        :return: The current_week_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_week_volume_sell

    @current_week_volume_sell.setter
    def current_week_volume_sell(self, current_week_volume_sell):
        """Sets the current_week_volume_sell of this SPOTINSTRUMENTMARKETDATA.

        The sum of all sell trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset.  # noqa: E501

        :param current_week_volume_sell: The current_week_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_week_volume_sell: int
        """

        self._current_week_volume_sell = current_week_volume_sell

    @property
    def current_week_volume_unknown(self):
        """Gets the current_week_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all unknown trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset.  # noqa: E501

        :return: The current_week_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_week_volume_unknown

    @current_week_volume_unknown.setter
    def current_week_volume_unknown(self, current_week_volume_unknown):
        """Sets the current_week_volume_unknown of this SPOTINSTRUMENTMARKETDATA.

        The sum of all unknown trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset.  # noqa: E501

        :param current_week_volume_unknown: The current_week_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_week_volume_unknown: int
        """

        self._current_week_volume_unknown = current_week_volume_unknown

    @property
    def current_year_high(self):
        """Gets the current_year_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The highest traded price of the year excluding the current day. The period runs from the 1st of January - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the year. If today is the 1st of January, this value will be CURRENT_YEAR_OPEN. Given in the quote asset.  # noqa: E501

        :return: The current_year_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_year_high

    @current_year_high.setter
    def current_year_high(self, current_year_high):
        """Sets the current_year_high of this SPOTINSTRUMENTMARKETDATA.

        The highest traded price of the year excluding the current day. The period runs from the 1st of January - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the year. If today is the 1st of January, this value will be CURRENT_YEAR_OPEN. Given in the quote asset.  # noqa: E501

        :param current_year_high: The current_year_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_year_high: int
        """

        self._current_year_high = current_year_high

    @property
    def current_year_low(self):
        """Gets the current_year_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The lowest traded price of the year excluding the current day. The period runs from the 1st of January - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the year. If today is the 1st of January, this value will be CURRENT_YEAR_OPEN. Given in the quote asset.  # noqa: E501

        :return: The current_year_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_year_low

    @current_year_low.setter
    def current_year_low(self, current_year_low):
        """Sets the current_year_low of this SPOTINSTRUMENTMARKETDATA.

        The lowest traded price of the year excluding the current day. The period runs from the 1st of January - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the year. If today is the 1st of January, this value will be CURRENT_YEAR_OPEN. Given in the quote asset.  # noqa: E501

        :param current_year_low: The current_year_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_year_low: int
        """

        self._current_year_low = current_year_low

    @property
    def current_year_open(self):
        """Gets the current_year_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The price of the closest trade to the 1st of January (00:00:00 GMT/UTC) of this year. In a highly liquid market, this would be the last trade that happened on on the 31st of December of the previous year (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full yearly value. Given in the quote asset.  # noqa: E501

        :return: The current_year_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_year_open

    @current_year_open.setter
    def current_year_open(self, current_year_open):
        """Sets the current_year_open of this SPOTINSTRUMENTMARKETDATA.

        The price of the closest trade to the 1st of January (00:00:00 GMT/UTC) of this year. In a highly liquid market, this would be the last trade that happened on on the 31st of December of the previous year (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full yearly value. Given in the quote asset.  # noqa: E501

        :param current_year_open: The current_year_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_year_open: int
        """

        self._current_year_open = current_year_open

    @property
    def current_year_quote_volume(self):
        """Gets the current_year_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset.  # noqa: E501

        :return: The current_year_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_year_quote_volume

    @current_year_quote_volume.setter
    def current_year_quote_volume(self, current_year_quote_volume):
        """Sets the current_year_quote_volume of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset.  # noqa: E501

        :param current_year_quote_volume: The current_year_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_year_quote_volume: int
        """

        self._current_year_quote_volume = current_year_quote_volume

    @property
    def current_year_quote_volume_buy(self):
        """Gets the current_year_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all buy trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset.  # noqa: E501

        :return: The current_year_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_year_quote_volume_buy

    @current_year_quote_volume_buy.setter
    def current_year_quote_volume_buy(self, current_year_quote_volume_buy):
        """Sets the current_year_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.

        The sum of all buy trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset.  # noqa: E501

        :param current_year_quote_volume_buy: The current_year_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_year_quote_volume_buy: int
        """

        self._current_year_quote_volume_buy = current_year_quote_volume_buy

    @property
    def current_year_quote_volume_sell(self):
        """Gets the current_year_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all sell trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset.  # noqa: E501

        :return: The current_year_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_year_quote_volume_sell

    @current_year_quote_volume_sell.setter
    def current_year_quote_volume_sell(self, current_year_quote_volume_sell):
        """Sets the current_year_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.

        The sum of all sell trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset.  # noqa: E501

        :param current_year_quote_volume_sell: The current_year_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_year_quote_volume_sell: int
        """

        self._current_year_quote_volume_sell = current_year_quote_volume_sell

    @property
    def current_year_quote_volume_unknown(self):
        """Gets the current_year_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all unknown trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset.  # noqa: E501

        :return: The current_year_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_year_quote_volume_unknown

    @current_year_quote_volume_unknown.setter
    def current_year_quote_volume_unknown(self, current_year_quote_volume_unknown):
        """Sets the current_year_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.

        The sum of all unknown trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset.  # noqa: E501

        :param current_year_quote_volume_unknown: The current_year_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_year_quote_volume_unknown: int
        """

        self._current_year_quote_volume_unknown = current_year_quote_volume_unknown

    @property
    def current_year_total_trades(self):
        """Gets the current_year_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0.  # noqa: E501

        :return: The current_year_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_year_total_trades

    @current_year_total_trades.setter
    def current_year_total_trades(self, current_year_total_trades):
        """Sets the current_year_total_trades of this SPOTINSTRUMENTMARKETDATA.

        The total number of trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0.  # noqa: E501

        :param current_year_total_trades: The current_year_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_year_total_trades: int
        """

        self._current_year_total_trades = current_year_total_trades

    @property
    def current_year_total_trades_buy(self):
        """Gets the current_year_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of buy trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0.  # noqa: E501

        :return: The current_year_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_year_total_trades_buy

    @current_year_total_trades_buy.setter
    def current_year_total_trades_buy(self, current_year_total_trades_buy):
        """Sets the current_year_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.

        The total number of buy trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0.  # noqa: E501

        :param current_year_total_trades_buy: The current_year_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_year_total_trades_buy: int
        """

        self._current_year_total_trades_buy = current_year_total_trades_buy

    @property
    def current_year_total_trades_sell(self):
        """Gets the current_year_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of sell trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0.  # noqa: E501

        :return: The current_year_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_year_total_trades_sell

    @current_year_total_trades_sell.setter
    def current_year_total_trades_sell(self, current_year_total_trades_sell):
        """Sets the current_year_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.

        The total number of sell trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0.  # noqa: E501

        :param current_year_total_trades_sell: The current_year_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_year_total_trades_sell: int
        """

        self._current_year_total_trades_sell = current_year_total_trades_sell

    @property
    def current_year_total_trades_unknown(self):
        """Gets the current_year_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of unknown trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0.  # noqa: E501

        :return: The current_year_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_year_total_trades_unknown

    @current_year_total_trades_unknown.setter
    def current_year_total_trades_unknown(self, current_year_total_trades_unknown):
        """Sets the current_year_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.

        The total number of unknown trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0.  # noqa: E501

        :param current_year_total_trades_unknown: The current_year_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_year_total_trades_unknown: int
        """

        self._current_year_total_trades_unknown = current_year_total_trades_unknown

    @property
    def current_year_volume(self):
        """Gets the current_year_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset.  # noqa: E501

        :return: The current_year_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_year_volume

    @current_year_volume.setter
    def current_year_volume(self, current_year_volume):
        """Sets the current_year_volume of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset.  # noqa: E501

        :param current_year_volume: The current_year_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_year_volume: int
        """

        self._current_year_volume = current_year_volume

    @property
    def current_year_volume_buy(self):
        """Gets the current_year_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all buy trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset.  # noqa: E501

        :return: The current_year_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_year_volume_buy

    @current_year_volume_buy.setter
    def current_year_volume_buy(self, current_year_volume_buy):
        """Sets the current_year_volume_buy of this SPOTINSTRUMENTMARKETDATA.

        The sum of all buy trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset.  # noqa: E501

        :param current_year_volume_buy: The current_year_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_year_volume_buy: int
        """

        self._current_year_volume_buy = current_year_volume_buy

    @property
    def current_year_volume_sell(self):
        """Gets the current_year_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all sell trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset.  # noqa: E501

        :return: The current_year_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_year_volume_sell

    @current_year_volume_sell.setter
    def current_year_volume_sell(self, current_year_volume_sell):
        """Sets the current_year_volume_sell of this SPOTINSTRUMENTMARKETDATA.

        The sum of all sell trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset.  # noqa: E501

        :param current_year_volume_sell: The current_year_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_year_volume_sell: int
        """

        self._current_year_volume_sell = current_year_volume_sell

    @property
    def current_year_volume_unknown(self):
        """Gets the current_year_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all unknown trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset.  # noqa: E501

        :return: The current_year_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._current_year_volume_unknown

    @current_year_volume_unknown.setter
    def current_year_volume_unknown(self, current_year_volume_unknown):
        """Sets the current_year_volume_unknown of this SPOTINSTRUMENTMARKETDATA.

        The sum of all unknown trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset.  # noqa: E501

        :param current_year_volume_unknown: The current_year_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type current_year_volume_unknown: int
        """

        self._current_year_volume_unknown = current_year_volume_unknown

    @property
    def instrument(self):
        """Gets the instrument of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The unmapped instrument ID  # noqa: E501

        :return: The instrument of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: str
        """
        return self._instrument

    @instrument.setter
    def instrument(self, instrument):
        """Sets the instrument of this SPOTINSTRUMENTMARKETDATA.

        The unmapped instrument ID  # noqa: E501

        :param instrument: The instrument of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type instrument: str
        """

        self._instrument = instrument

    @property
    def last_processed_trade_ccseq(self):
        """Gets the last_processed_trade_ccseq of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The CCSEQ of the latest trade.  # noqa: E501

        :return: The last_processed_trade_ccseq of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: str
        """
        return self._last_processed_trade_ccseq

    @last_processed_trade_ccseq.setter
    def last_processed_trade_ccseq(self, last_processed_trade_ccseq):
        """Sets the last_processed_trade_ccseq of this SPOTINSTRUMENTMARKETDATA.

        The CCSEQ of the latest trade.  # noqa: E501

        :param last_processed_trade_ccseq: The last_processed_trade_ccseq of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type last_processed_trade_ccseq: str
        """

        self._last_processed_trade_ccseq = last_processed_trade_ccseq

    @property
    def last_processed_trade_price(self):
        """Gets the last_processed_trade_price of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The price in the quote asset of the last trade processed, as reported by the market / exchange.  # noqa: E501

        :return: The last_processed_trade_price of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._last_processed_trade_price

    @last_processed_trade_price.setter
    def last_processed_trade_price(self, last_processed_trade_price):
        """Sets the last_processed_trade_price of this SPOTINSTRUMENTMARKETDATA.

        The price in the quote asset of the last trade processed, as reported by the market / exchange.  # noqa: E501

        :param last_processed_trade_price: The last_processed_trade_price of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type last_processed_trade_price: int
        """

        self._last_processed_trade_price = last_processed_trade_price

    @property
    def last_processed_trade_quantity(self):
        """Gets the last_processed_trade_quantity of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The quantity of the last processed trade in the from symbol (base / coin).  # noqa: E501

        :return: The last_processed_trade_quantity of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._last_processed_trade_quantity

    @last_processed_trade_quantity.setter
    def last_processed_trade_quantity(self, last_processed_trade_quantity):
        """Sets the last_processed_trade_quantity of this SPOTINSTRUMENTMARKETDATA.

        The quantity of the last processed trade in the from symbol (base / coin).  # noqa: E501

        :param last_processed_trade_quantity: The last_processed_trade_quantity of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type last_processed_trade_quantity: int
        """

        self._last_processed_trade_quantity = last_processed_trade_quantity

    @property
    def last_processed_trade_quote_quantity(self):
        """Gets the last_processed_trade_quote_quantity of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The  volume of the last processed trade in the to asset / quote.  # noqa: E501

        :return: The last_processed_trade_quote_quantity of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._last_processed_trade_quote_quantity

    @last_processed_trade_quote_quantity.setter
    def last_processed_trade_quote_quantity(self, last_processed_trade_quote_quantity):
        """Sets the last_processed_trade_quote_quantity of this SPOTINSTRUMENTMARKETDATA.

        The  volume of the last processed trade in the to asset / quote.  # noqa: E501

        :param last_processed_trade_quote_quantity: The last_processed_trade_quote_quantity of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type last_processed_trade_quote_quantity: int
        """

        self._last_processed_trade_quote_quantity = last_processed_trade_quote_quantity

    @property
    def last_processed_trade_side(self):
        """Gets the last_processed_trade_side of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The side of the last processed trade.  # noqa: E501

        :return: The last_processed_trade_side of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: str
        """
        return self._last_processed_trade_side

    @last_processed_trade_side.setter
    def last_processed_trade_side(self, last_processed_trade_side):
        """Sets the last_processed_trade_side of this SPOTINSTRUMENTMARKETDATA.

        The side of the last processed trade.  # noqa: E501

        :param last_processed_trade_side: The last_processed_trade_side of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type last_processed_trade_side: str
        """

        self._last_processed_trade_side = last_processed_trade_side

    @property
    def last_processed_trade_ts(self):
        """Gets the last_processed_trade_ts of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The timestamp in seconds that the last trade was processed, as reported by the market / exchange. If the market / exchange does not provide this information, the timestamp that the trade was received will be returned.  # noqa: E501

        :return: The last_processed_trade_ts of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._last_processed_trade_ts

    @last_processed_trade_ts.setter
    def last_processed_trade_ts(self, last_processed_trade_ts):
        """Sets the last_processed_trade_ts of this SPOTINSTRUMENTMARKETDATA.

        The timestamp in seconds that the last trade was processed, as reported by the market / exchange. If the market / exchange does not provide this information, the timestamp that the trade was received will be returned.  # noqa: E501

        :param last_processed_trade_ts: The last_processed_trade_ts of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type last_processed_trade_ts: int
        """

        self._last_processed_trade_ts = last_processed_trade_ts

    @property
    def last_trade_ccseq(self):
        """Gets the last_trade_ccseq of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The CCSEQ of the latest trade.  # noqa: E501

        :return: The last_trade_ccseq of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: str
        """
        return self._last_trade_ccseq

    @last_trade_ccseq.setter
    def last_trade_ccseq(self, last_trade_ccseq):
        """Sets the last_trade_ccseq of this SPOTINSTRUMENTMARKETDATA.

        The CCSEQ of the latest trade.  # noqa: E501

        :param last_trade_ccseq: The last_trade_ccseq of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type last_trade_ccseq: str
        """

        self._last_trade_ccseq = last_trade_ccseq

    @property
    def last_trade_id(self):
        """Gets the last_trade_id of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The ID of the latest trade.  # noqa: E501

        :return: The last_trade_id of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: str
        """
        return self._last_trade_id

    @last_trade_id.setter
    def last_trade_id(self, last_trade_id):
        """Sets the last_trade_id of this SPOTINSTRUMENTMARKETDATA.

        The ID of the latest trade.  # noqa: E501

        :param last_trade_id: The last_trade_id of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type last_trade_id: str
        """

        self._last_trade_id = last_trade_id

    @property
    def last_trade_quantity(self):
        """Gets the last_trade_quantity of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The quantity of the latest trade in the from symbol (base / coin).  # noqa: E501

        :return: The last_trade_quantity of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._last_trade_quantity

    @last_trade_quantity.setter
    def last_trade_quantity(self, last_trade_quantity):
        """Sets the last_trade_quantity of this SPOTINSTRUMENTMARKETDATA.

        The quantity of the latest trade in the from symbol (base / coin).  # noqa: E501

        :param last_trade_quantity: The last_trade_quantity of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type last_trade_quantity: int
        """

        self._last_trade_quantity = last_trade_quantity

    @property
    def last_trade_quote_quantity(self):
        """Gets the last_trade_quote_quantity of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The volume of the latest trade in the to asset / quote.  # noqa: E501

        :return: The last_trade_quote_quantity of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._last_trade_quote_quantity

    @last_trade_quote_quantity.setter
    def last_trade_quote_quantity(self, last_trade_quote_quantity):
        """Sets the last_trade_quote_quantity of this SPOTINSTRUMENTMARKETDATA.

        The volume of the latest trade in the to asset / quote.  # noqa: E501

        :param last_trade_quote_quantity: The last_trade_quote_quantity of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type last_trade_quote_quantity: int
        """

        self._last_trade_quote_quantity = last_trade_quote_quantity

    @property
    def last_trade_side(self):
        """Gets the last_trade_side of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The side of the latest trade.  # noqa: E501

        :return: The last_trade_side of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: str
        """
        return self._last_trade_side

    @last_trade_side.setter
    def last_trade_side(self, last_trade_side):
        """Sets the last_trade_side of this SPOTINSTRUMENTMARKETDATA.

        The side of the latest trade.  # noqa: E501

        :param last_trade_side: The last_trade_side of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type last_trade_side: str
        """

        self._last_trade_side = last_trade_side

    @property
    def lifetime_first_trade_ts(self):
        """Gets the lifetime_first_trade_ts of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The timestamp of the first trade ever recorded for the instrument  # noqa: E501

        :return: The lifetime_first_trade_ts of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._lifetime_first_trade_ts

    @lifetime_first_trade_ts.setter
    def lifetime_first_trade_ts(self, lifetime_first_trade_ts):
        """Sets the lifetime_first_trade_ts of this SPOTINSTRUMENTMARKETDATA.

        The timestamp of the first trade ever recorded for the instrument  # noqa: E501

        :param lifetime_first_trade_ts: The lifetime_first_trade_ts of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type lifetime_first_trade_ts: int
        """

        self._lifetime_first_trade_ts = lifetime_first_trade_ts

    @property
    def lifetime_high(self):
        """Gets the lifetime_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The price of the highest trade ever executed for this instrument. Given in the quote asset.  # noqa: E501

        :return: The lifetime_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._lifetime_high

    @lifetime_high.setter
    def lifetime_high(self, lifetime_high):
        """Sets the lifetime_high of this SPOTINSTRUMENTMARKETDATA.

        The price of the highest trade ever executed for this instrument. Given in the quote asset.  # noqa: E501

        :param lifetime_high: The lifetime_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type lifetime_high: int
        """

        self._lifetime_high = lifetime_high

    @property
    def lifetime_high_ts(self):
        """Gets the lifetime_high_ts of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The the timestamp of the highest trade ever executed for this instrument. Given in the quote asset.  # noqa: E501

        :return: The lifetime_high_ts of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._lifetime_high_ts

    @lifetime_high_ts.setter
    def lifetime_high_ts(self, lifetime_high_ts):
        """Sets the lifetime_high_ts of this SPOTINSTRUMENTMARKETDATA.

        The the timestamp of the highest trade ever executed for this instrument. Given in the quote asset.  # noqa: E501

        :param lifetime_high_ts: The lifetime_high_ts of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type lifetime_high_ts: int
        """

        self._lifetime_high_ts = lifetime_high_ts

    @property
    def lifetime_low(self):
        """Gets the lifetime_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The price of the lowest trade ever executed for this instrument. Given in the quote asset.  # noqa: E501

        :return: The lifetime_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._lifetime_low

    @lifetime_low.setter
    def lifetime_low(self, lifetime_low):
        """Sets the lifetime_low of this SPOTINSTRUMENTMARKETDATA.

        The price of the lowest trade ever executed for this instrument. Given in the quote asset.  # noqa: E501

        :param lifetime_low: The lifetime_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type lifetime_low: int
        """

        self._lifetime_low = lifetime_low

    @property
    def lifetime_low_ts(self):
        """Gets the lifetime_low_ts of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The timestamp of the lowest trade ever executed for this instrument. Given in the quote asset.  # noqa: E501

        :return: The lifetime_low_ts of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._lifetime_low_ts

    @lifetime_low_ts.setter
    def lifetime_low_ts(self, lifetime_low_ts):
        """Sets the lifetime_low_ts of this SPOTINSTRUMENTMARKETDATA.

        The timestamp of the lowest trade ever executed for this instrument. Given in the quote asset.  # noqa: E501

        :param lifetime_low_ts: The lifetime_low_ts of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type lifetime_low_ts: int
        """

        self._lifetime_low_ts = lifetime_low_ts

    @property
    def lifetime_open(self):
        """Gets the lifetime_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The price of the first trade of the instrument. Given in the quote asset.  # noqa: E501

        :return: The lifetime_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._lifetime_open

    @lifetime_open.setter
    def lifetime_open(self, lifetime_open):
        """Sets the lifetime_open of this SPOTINSTRUMENTMARKETDATA.

        The price of the first trade of the instrument. Given in the quote asset.  # noqa: E501

        :param lifetime_open: The lifetime_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type lifetime_open: int
        """

        self._lifetime_open = lifetime_open

    @property
    def lifetime_quote_volume(self):
        """Gets the lifetime_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quote quantities of all the trades of this instrument. Given in the quote asset.  # noqa: E501

        :return: The lifetime_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._lifetime_quote_volume

    @lifetime_quote_volume.setter
    def lifetime_quote_volume(self, lifetime_quote_volume):
        """Sets the lifetime_quote_volume of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quote quantities of all the trades of this instrument. Given in the quote asset.  # noqa: E501

        :param lifetime_quote_volume: The lifetime_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type lifetime_quote_volume: int
        """

        self._lifetime_quote_volume = lifetime_quote_volume

    @property
    def lifetime_quote_volume_buy(self):
        """Gets the lifetime_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all buy trade quote quantities of all the trades of this instrument. Given in the quote asset.  # noqa: E501

        :return: The lifetime_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._lifetime_quote_volume_buy

    @lifetime_quote_volume_buy.setter
    def lifetime_quote_volume_buy(self, lifetime_quote_volume_buy):
        """Sets the lifetime_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.

        The sum of all buy trade quote quantities of all the trades of this instrument. Given in the quote asset.  # noqa: E501

        :param lifetime_quote_volume_buy: The lifetime_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type lifetime_quote_volume_buy: int
        """

        self._lifetime_quote_volume_buy = lifetime_quote_volume_buy

    @property
    def lifetime_quote_volume_sell(self):
        """Gets the lifetime_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all sell trade quote quantities of all the trades of this instrument. Given in the quote asset.  # noqa: E501

        :return: The lifetime_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._lifetime_quote_volume_sell

    @lifetime_quote_volume_sell.setter
    def lifetime_quote_volume_sell(self, lifetime_quote_volume_sell):
        """Sets the lifetime_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.

        The sum of all sell trade quote quantities of all the trades of this instrument. Given in the quote asset.  # noqa: E501

        :param lifetime_quote_volume_sell: The lifetime_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type lifetime_quote_volume_sell: int
        """

        self._lifetime_quote_volume_sell = lifetime_quote_volume_sell

    @property
    def lifetime_quote_volume_unknown(self):
        """Gets the lifetime_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all unknown trade quote quantities of all the trades of this instrument. Given in the quote asset.  # noqa: E501

        :return: The lifetime_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._lifetime_quote_volume_unknown

    @lifetime_quote_volume_unknown.setter
    def lifetime_quote_volume_unknown(self, lifetime_quote_volume_unknown):
        """Sets the lifetime_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.

        The sum of all unknown trade quote quantities of all the trades of this instrument. Given in the quote asset.  # noqa: E501

        :param lifetime_quote_volume_unknown: The lifetime_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type lifetime_quote_volume_unknown: int
        """

        self._lifetime_quote_volume_unknown = lifetime_quote_volume_unknown

    @property
    def lifetime_total_trades(self):
        """Gets the lifetime_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of all trades that have ever been executed for this instrument.  # noqa: E501

        :return: The lifetime_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._lifetime_total_trades

    @lifetime_total_trades.setter
    def lifetime_total_trades(self, lifetime_total_trades):
        """Sets the lifetime_total_trades of this SPOTINSTRUMENTMARKETDATA.

        The total number of all trades that have ever been executed for this instrument.  # noqa: E501

        :param lifetime_total_trades: The lifetime_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type lifetime_total_trades: int
        """

        self._lifetime_total_trades = lifetime_total_trades

    @property
    def lifetime_total_trades_buy(self):
        """Gets the lifetime_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of all buy trades that have ever been executed for this instrument.  # noqa: E501

        :return: The lifetime_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._lifetime_total_trades_buy

    @lifetime_total_trades_buy.setter
    def lifetime_total_trades_buy(self, lifetime_total_trades_buy):
        """Sets the lifetime_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.

        The total number of all buy trades that have ever been executed for this instrument.  # noqa: E501

        :param lifetime_total_trades_buy: The lifetime_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type lifetime_total_trades_buy: int
        """

        self._lifetime_total_trades_buy = lifetime_total_trades_buy

    @property
    def lifetime_total_trades_sell(self):
        """Gets the lifetime_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of all sell trades that have ever been executed for this instrument.  # noqa: E501

        :return: The lifetime_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._lifetime_total_trades_sell

    @lifetime_total_trades_sell.setter
    def lifetime_total_trades_sell(self, lifetime_total_trades_sell):
        """Sets the lifetime_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.

        The total number of all sell trades that have ever been executed for this instrument.  # noqa: E501

        :param lifetime_total_trades_sell: The lifetime_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type lifetime_total_trades_sell: int
        """

        self._lifetime_total_trades_sell = lifetime_total_trades_sell

    @property
    def lifetime_total_trades_unknown(self):
        """Gets the lifetime_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of all unknown trades that have ever been executed for this instrument.  # noqa: E501

        :return: The lifetime_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._lifetime_total_trades_unknown

    @lifetime_total_trades_unknown.setter
    def lifetime_total_trades_unknown(self, lifetime_total_trades_unknown):
        """Sets the lifetime_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.

        The total number of all unknown trades that have ever been executed for this instrument.  # noqa: E501

        :param lifetime_total_trades_unknown: The lifetime_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type lifetime_total_trades_unknown: int
        """

        self._lifetime_total_trades_unknown = lifetime_total_trades_unknown

    @property
    def lifetime_volume(self):
        """Gets the lifetime_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quantities of all the trades of this instrument. Given in the base asset.  # noqa: E501

        :return: The lifetime_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._lifetime_volume

    @lifetime_volume.setter
    def lifetime_volume(self, lifetime_volume):
        """Sets the lifetime_volume of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quantities of all the trades of this instrument. Given in the base asset.  # noqa: E501

        :param lifetime_volume: The lifetime_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type lifetime_volume: int
        """

        self._lifetime_volume = lifetime_volume

    @property
    def lifetime_volume_buy(self):
        """Gets the lifetime_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all buy trade quantities of all the trades of this instrument. Given in the base asset.  # noqa: E501

        :return: The lifetime_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._lifetime_volume_buy

    @lifetime_volume_buy.setter
    def lifetime_volume_buy(self, lifetime_volume_buy):
        """Sets the lifetime_volume_buy of this SPOTINSTRUMENTMARKETDATA.

        The sum of all buy trade quantities of all the trades of this instrument. Given in the base asset.  # noqa: E501

        :param lifetime_volume_buy: The lifetime_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type lifetime_volume_buy: int
        """

        self._lifetime_volume_buy = lifetime_volume_buy

    @property
    def lifetime_volume_sell(self):
        """Gets the lifetime_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all sell trade quantities of all the trades of this instrument. Given in the base asset.  # noqa: E501

        :return: The lifetime_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._lifetime_volume_sell

    @lifetime_volume_sell.setter
    def lifetime_volume_sell(self, lifetime_volume_sell):
        """Sets the lifetime_volume_sell of this SPOTINSTRUMENTMARKETDATA.

        The sum of all sell trade quantities of all the trades of this instrument. Given in the base asset.  # noqa: E501

        :param lifetime_volume_sell: The lifetime_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type lifetime_volume_sell: int
        """

        self._lifetime_volume_sell = lifetime_volume_sell

    @property
    def lifetime_volume_unknown(self):
        """Gets the lifetime_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all unknown trade quantities of all the trades of this instrument. Given in the base asset.  # noqa: E501

        :return: The lifetime_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._lifetime_volume_unknown

    @lifetime_volume_unknown.setter
    def lifetime_volume_unknown(self, lifetime_volume_unknown):
        """Sets the lifetime_volume_unknown of this SPOTINSTRUMENTMARKETDATA.

        The sum of all unknown trade quantities of all the trades of this instrument. Given in the base asset.  # noqa: E501

        :param lifetime_volume_unknown: The lifetime_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type lifetime_volume_unknown: int
        """

        self._lifetime_volume_unknown = lifetime_volume_unknown

    @property
    def mapped_instrument(self):
        """Gets the mapped_instrument of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The mapped instrument ID, derived from our mapping rules. This takes the form: \"BASE-QUOTE\" (e.g. BTC-USD). Only available on instruments that have been mapped.  # noqa: E501

        :return: The mapped_instrument of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: str
        """
        return self._mapped_instrument

    @mapped_instrument.setter
    def mapped_instrument(self, mapped_instrument):
        """Sets the mapped_instrument of this SPOTINSTRUMENTMARKETDATA.

        The mapped instrument ID, derived from our mapping rules. This takes the form: \"BASE-QUOTE\" (e.g. BTC-USD). Only available on instruments that have been mapped.  # noqa: E501

        :param mapped_instrument: The mapped_instrument of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type mapped_instrument: str
        """

        self._mapped_instrument = mapped_instrument

    @property
    def market(self):
        """Gets the market of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The market / exchange under consideration (e.g. coinbase, kraken, etc).  # noqa: E501

        :return: The market of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: str
        """
        return self._market

    @market.setter
    def market(self, market):
        """Sets the market of this SPOTINSTRUMENTMARKETDATA.

        The market / exchange under consideration (e.g. coinbase, kraken, etc).  # noqa: E501

        :param market: The market of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type market: str
        """

        self._market = market

    @property
    def moving_180_day_high(self):
        """Gets the moving_180_day_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The  highest traded price of the period. Here, the period runs from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_180_day_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_180_day_high

    @moving_180_day_high.setter
    def moving_180_day_high(self, moving_180_day_high):
        """Sets the moving_180_day_high of this SPOTINSTRUMENTMARKETDATA.

        The  highest traded price of the period. Here, the period runs from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.  # noqa: E501

        :param moving_180_day_high: The moving_180_day_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_180_day_high: int
        """

        self._moving_180_day_high = moving_180_day_high

    @property
    def moving_180_day_low(self):
        """Gets the moving_180_day_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The lowest traded price of the period. Here, the period runs from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_180_day_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_180_day_low

    @moving_180_day_low.setter
    def moving_180_day_low(self, moving_180_day_low):
        """Sets the moving_180_day_low of this SPOTINSTRUMENTMARKETDATA.

        The lowest traded price of the period. Here, the period runs from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.  # noqa: E501

        :param moving_180_day_low: The moving_180_day_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_180_day_low: int
        """

        self._moving_180_day_low = moving_180_day_low

    @property
    def moving_180_day_open(self):
        """Gets the moving_180_day_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The price of the closest trade to the period start date (179 days + current day - 00:00:00 GMT/UTC to now). This will always be supplied and there is no need to do any calculation to get the full 180 day value. Given in the quote asset.  # noqa: E501

        :return: The moving_180_day_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_180_day_open

    @moving_180_day_open.setter
    def moving_180_day_open(self, moving_180_day_open):
        """Sets the moving_180_day_open of this SPOTINSTRUMENTMARKETDATA.

        The price of the closest trade to the period start date (179 days + current day - 00:00:00 GMT/UTC to now). This will always be supplied and there is no need to do any calculation to get the full 180 day value. Given in the quote asset.  # noqa: E501

        :param moving_180_day_open: The moving_180_day_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_180_day_open: int
        """

        self._moving_180_day_open = moving_180_day_open

    @property
    def moving_180_day_quote_volume(self):
        """Gets the moving_180_day_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_180_day_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_180_day_quote_volume

    @moving_180_day_quote_volume.setter
    def moving_180_day_quote_volume(self, moving_180_day_quote_volume):
        """Sets the moving_180_day_quote_volume of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.  # noqa: E501

        :param moving_180_day_quote_volume: The moving_180_day_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_180_day_quote_volume: int
        """

        self._moving_180_day_quote_volume = moving_180_day_quote_volume

    @property
    def moving_180_day_quote_volume_buy(self):
        """Gets the moving_180_day_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all buy trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_180_day_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_180_day_quote_volume_buy

    @moving_180_day_quote_volume_buy.setter
    def moving_180_day_quote_volume_buy(self, moving_180_day_quote_volume_buy):
        """Sets the moving_180_day_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.

        The sum of all buy trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.  # noqa: E501

        :param moving_180_day_quote_volume_buy: The moving_180_day_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_180_day_quote_volume_buy: int
        """

        self._moving_180_day_quote_volume_buy = moving_180_day_quote_volume_buy

    @property
    def moving_180_day_quote_volume_sell(self):
        """Gets the moving_180_day_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all sell trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_180_day_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_180_day_quote_volume_sell

    @moving_180_day_quote_volume_sell.setter
    def moving_180_day_quote_volume_sell(self, moving_180_day_quote_volume_sell):
        """Sets the moving_180_day_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.

        The sum of all sell trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.  # noqa: E501

        :param moving_180_day_quote_volume_sell: The moving_180_day_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_180_day_quote_volume_sell: int
        """

        self._moving_180_day_quote_volume_sell = moving_180_day_quote_volume_sell

    @property
    def moving_180_day_quote_volume_unknown(self):
        """Gets the moving_180_day_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all unknown trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_180_day_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_180_day_quote_volume_unknown

    @moving_180_day_quote_volume_unknown.setter
    def moving_180_day_quote_volume_unknown(self, moving_180_day_quote_volume_unknown):
        """Sets the moving_180_day_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.

        The sum of all unknown trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.  # noqa: E501

        :param moving_180_day_quote_volume_unknown: The moving_180_day_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_180_day_quote_volume_unknown: int
        """

        self._moving_180_day_quote_volume_unknown = moving_180_day_quote_volume_unknown

    @property
    def moving_180_day_total_trades(self):
        """Gets the moving_180_day_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total).  # noqa: E501

        :return: The moving_180_day_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_180_day_total_trades

    @moving_180_day_total_trades.setter
    def moving_180_day_total_trades(self, moving_180_day_total_trades):
        """Sets the moving_180_day_total_trades of this SPOTINSTRUMENTMARKETDATA.

        The total number of trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total).  # noqa: E501

        :param moving_180_day_total_trades: The moving_180_day_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_180_day_total_trades: int
        """

        self._moving_180_day_total_trades = moving_180_day_total_trades

    @property
    def moving_180_day_total_trades_buy(self):
        """Gets the moving_180_day_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of buy trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total).  # noqa: E501

        :return: The moving_180_day_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_180_day_total_trades_buy

    @moving_180_day_total_trades_buy.setter
    def moving_180_day_total_trades_buy(self, moving_180_day_total_trades_buy):
        """Sets the moving_180_day_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.

        The total number of buy trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total).  # noqa: E501

        :param moving_180_day_total_trades_buy: The moving_180_day_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_180_day_total_trades_buy: int
        """

        self._moving_180_day_total_trades_buy = moving_180_day_total_trades_buy

    @property
    def moving_180_day_total_trades_sell(self):
        """Gets the moving_180_day_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of sell trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total).  # noqa: E501

        :return: The moving_180_day_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_180_day_total_trades_sell

    @moving_180_day_total_trades_sell.setter
    def moving_180_day_total_trades_sell(self, moving_180_day_total_trades_sell):
        """Sets the moving_180_day_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.

        The total number of sell trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total).  # noqa: E501

        :param moving_180_day_total_trades_sell: The moving_180_day_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_180_day_total_trades_sell: int
        """

        self._moving_180_day_total_trades_sell = moving_180_day_total_trades_sell

    @property
    def moving_180_day_total_trades_unknown(self):
        """Gets the moving_180_day_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of unknown trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total).  # noqa: E501

        :return: The moving_180_day_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_180_day_total_trades_unknown

    @moving_180_day_total_trades_unknown.setter
    def moving_180_day_total_trades_unknown(self, moving_180_day_total_trades_unknown):
        """Sets the moving_180_day_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.

        The total number of unknown trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total).  # noqa: E501

        :param moving_180_day_total_trades_unknown: The moving_180_day_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_180_day_total_trades_unknown: int
        """

        self._moving_180_day_total_trades_unknown = moving_180_day_total_trades_unknown

    @property
    def moving_180_day_volume(self):
        """Gets the moving_180_day_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset.  # noqa: E501

        :return: The moving_180_day_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_180_day_volume

    @moving_180_day_volume.setter
    def moving_180_day_volume(self, moving_180_day_volume):
        """Sets the moving_180_day_volume of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset.  # noqa: E501

        :param moving_180_day_volume: The moving_180_day_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_180_day_volume: int
        """

        self._moving_180_day_volume = moving_180_day_volume

    @property
    def moving_180_day_volume_buy(self):
        """Gets the moving_180_day_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset.  # noqa: E501

        :return: The moving_180_day_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_180_day_volume_buy

    @moving_180_day_volume_buy.setter
    def moving_180_day_volume_buy(self, moving_180_day_volume_buy):
        """Sets the moving_180_day_volume_buy of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset.  # noqa: E501

        :param moving_180_day_volume_buy: The moving_180_day_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_180_day_volume_buy: int
        """

        self._moving_180_day_volume_buy = moving_180_day_volume_buy

    @property
    def moving_180_day_volume_sell(self):
        """Gets the moving_180_day_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all sell trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset.  # noqa: E501

        :return: The moving_180_day_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_180_day_volume_sell

    @moving_180_day_volume_sell.setter
    def moving_180_day_volume_sell(self, moving_180_day_volume_sell):
        """Sets the moving_180_day_volume_sell of this SPOTINSTRUMENTMARKETDATA.

        The sum of all sell trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset.  # noqa: E501

        :param moving_180_day_volume_sell: The moving_180_day_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_180_day_volume_sell: int
        """

        self._moving_180_day_volume_sell = moving_180_day_volume_sell

    @property
    def moving_180_day_volume_unknown(self):
        """Gets the moving_180_day_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all unknown trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset.  # noqa: E501

        :return: The moving_180_day_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_180_day_volume_unknown

    @moving_180_day_volume_unknown.setter
    def moving_180_day_volume_unknown(self, moving_180_day_volume_unknown):
        """Sets the moving_180_day_volume_unknown of this SPOTINSTRUMENTMARKETDATA.

        The sum of all unknown trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset.  # noqa: E501

        :param moving_180_day_volume_unknown: The moving_180_day_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_180_day_volume_unknown: int
        """

        self._moving_180_day_volume_unknown = moving_180_day_volume_unknown

    @property
    def moving_24_hour_high(self):
        """Gets the moving_24_hour_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The highest traded price of the period. Here, the period runs from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.  # noqa: E501

        :return: The moving_24_hour_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_24_hour_high

    @moving_24_hour_high.setter
    def moving_24_hour_high(self, moving_24_hour_high):
        """Sets the moving_24_hour_high of this SPOTINSTRUMENTMARKETDATA.

        The highest traded price of the period. Here, the period runs from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.  # noqa: E501

        :param moving_24_hour_high: The moving_24_hour_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_24_hour_high: int
        """

        self._moving_24_hour_high = moving_24_hour_high

    @property
    def moving_24_hour_low(self):
        """Gets the moving_24_hour_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The lowest traded price of the period. Here, the period runs from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.  # noqa: E501

        :return: The moving_24_hour_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_24_hour_low

    @moving_24_hour_low.setter
    def moving_24_hour_low(self, moving_24_hour_low):
        """Sets the moving_24_hour_low of this SPOTINSTRUMENTMARKETDATA.

        The lowest traded price of the period. Here, the period runs from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.  # noqa: E501

        :param moving_24_hour_low: The moving_24_hour_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_24_hour_low: int
        """

        self._moving_24_hour_low = moving_24_hour_low

    @property
    def moving_24_hour_open(self):
        """Gets the moving_24_hour_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The price of the closest trade to the period start date (23 hours + current hour ago). This will always be supplied and there is no need to do any calculation to get the full 24 hour value. Given in the quote asset.  # noqa: E501

        :return: The moving_24_hour_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_24_hour_open

    @moving_24_hour_open.setter
    def moving_24_hour_open(self, moving_24_hour_open):
        """Sets the moving_24_hour_open of this SPOTINSTRUMENTMARKETDATA.

        The price of the closest trade to the period start date (23 hours + current hour ago). This will always be supplied and there is no need to do any calculation to get the full 24 hour value. Given in the quote asset.  # noqa: E501

        :param moving_24_hour_open: The moving_24_hour_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_24_hour_open: int
        """

        self._moving_24_hour_open = moving_24_hour_open

    @property
    def moving_24_hour_quote_volume(self):
        """Gets the moving_24_hour_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.  # noqa: E501

        :return: The moving_24_hour_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_24_hour_quote_volume

    @moving_24_hour_quote_volume.setter
    def moving_24_hour_quote_volume(self, moving_24_hour_quote_volume):
        """Sets the moving_24_hour_quote_volume of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.  # noqa: E501

        :param moving_24_hour_quote_volume: The moving_24_hour_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_24_hour_quote_volume: int
        """

        self._moving_24_hour_quote_volume = moving_24_hour_quote_volume

    @property
    def moving_24_hour_quote_volume_buy(self):
        """Gets the moving_24_hour_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all buy trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.  # noqa: E501

        :return: The moving_24_hour_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_24_hour_quote_volume_buy

    @moving_24_hour_quote_volume_buy.setter
    def moving_24_hour_quote_volume_buy(self, moving_24_hour_quote_volume_buy):
        """Sets the moving_24_hour_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.

        The sum of all buy trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.  # noqa: E501

        :param moving_24_hour_quote_volume_buy: The moving_24_hour_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_24_hour_quote_volume_buy: int
        """

        self._moving_24_hour_quote_volume_buy = moving_24_hour_quote_volume_buy

    @property
    def moving_24_hour_quote_volume_sell(self):
        """Gets the moving_24_hour_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all sell trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.  # noqa: E501

        :return: The moving_24_hour_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_24_hour_quote_volume_sell

    @moving_24_hour_quote_volume_sell.setter
    def moving_24_hour_quote_volume_sell(self, moving_24_hour_quote_volume_sell):
        """Sets the moving_24_hour_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.

        The sum of all sell trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.  # noqa: E501

        :param moving_24_hour_quote_volume_sell: The moving_24_hour_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_24_hour_quote_volume_sell: int
        """

        self._moving_24_hour_quote_volume_sell = moving_24_hour_quote_volume_sell

    @property
    def moving_24_hour_quote_volume_unknown(self):
        """Gets the moving_24_hour_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all unknown trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.  # noqa: E501

        :return: The moving_24_hour_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_24_hour_quote_volume_unknown

    @moving_24_hour_quote_volume_unknown.setter
    def moving_24_hour_quote_volume_unknown(self, moving_24_hour_quote_volume_unknown):
        """Sets the moving_24_hour_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.

        The sum of all unknown trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.  # noqa: E501

        :param moving_24_hour_quote_volume_unknown: The moving_24_hour_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_24_hour_quote_volume_unknown: int
        """

        self._moving_24_hour_quote_volume_unknown = moving_24_hour_quote_volume_unknown

    @property
    def moving_24_hour_total_trades(self):
        """Gets the moving_24_hour_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total).  # noqa: E501

        :return: The moving_24_hour_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_24_hour_total_trades

    @moving_24_hour_total_trades.setter
    def moving_24_hour_total_trades(self, moving_24_hour_total_trades):
        """Sets the moving_24_hour_total_trades of this SPOTINSTRUMENTMARKETDATA.

        The total number of trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total).  # noqa: E501

        :param moving_24_hour_total_trades: The moving_24_hour_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_24_hour_total_trades: int
        """

        self._moving_24_hour_total_trades = moving_24_hour_total_trades

    @property
    def moving_24_hour_total_trades_buy(self):
        """Gets the moving_24_hour_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of buy trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total).  # noqa: E501

        :return: The moving_24_hour_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_24_hour_total_trades_buy

    @moving_24_hour_total_trades_buy.setter
    def moving_24_hour_total_trades_buy(self, moving_24_hour_total_trades_buy):
        """Sets the moving_24_hour_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.

        The total number of buy trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total).  # noqa: E501

        :param moving_24_hour_total_trades_buy: The moving_24_hour_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_24_hour_total_trades_buy: int
        """

        self._moving_24_hour_total_trades_buy = moving_24_hour_total_trades_buy

    @property
    def moving_24_hour_total_trades_sell(self):
        """Gets the moving_24_hour_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of sell trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total).  # noqa: E501

        :return: The moving_24_hour_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_24_hour_total_trades_sell

    @moving_24_hour_total_trades_sell.setter
    def moving_24_hour_total_trades_sell(self, moving_24_hour_total_trades_sell):
        """Sets the moving_24_hour_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.

        The total number of sell trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total).  # noqa: E501

        :param moving_24_hour_total_trades_sell: The moving_24_hour_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_24_hour_total_trades_sell: int
        """

        self._moving_24_hour_total_trades_sell = moving_24_hour_total_trades_sell

    @property
    def moving_24_hour_total_trades_unknown(self):
        """Gets the moving_24_hour_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of unknown trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total).  # noqa: E501

        :return: The moving_24_hour_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_24_hour_total_trades_unknown

    @moving_24_hour_total_trades_unknown.setter
    def moving_24_hour_total_trades_unknown(self, moving_24_hour_total_trades_unknown):
        """Sets the moving_24_hour_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.

        The total number of unknown trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total).  # noqa: E501

        :param moving_24_hour_total_trades_unknown: The moving_24_hour_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_24_hour_total_trades_unknown: int
        """

        self._moving_24_hour_total_trades_unknown = moving_24_hour_total_trades_unknown

    @property
    def moving_24_hour_volume(self):
        """Gets the moving_24_hour_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset.  # noqa: E501

        :return: The moving_24_hour_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_24_hour_volume

    @moving_24_hour_volume.setter
    def moving_24_hour_volume(self, moving_24_hour_volume):
        """Sets the moving_24_hour_volume of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset.  # noqa: E501

        :param moving_24_hour_volume: The moving_24_hour_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_24_hour_volume: int
        """

        self._moving_24_hour_volume = moving_24_hour_volume

    @property
    def moving_24_hour_volume_buy(self):
        """Gets the moving_24_hour_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all buy trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset.  # noqa: E501

        :return: The moving_24_hour_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_24_hour_volume_buy

    @moving_24_hour_volume_buy.setter
    def moving_24_hour_volume_buy(self, moving_24_hour_volume_buy):
        """Sets the moving_24_hour_volume_buy of this SPOTINSTRUMENTMARKETDATA.

        The sum of all buy trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset.  # noqa: E501

        :param moving_24_hour_volume_buy: The moving_24_hour_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_24_hour_volume_buy: int
        """

        self._moving_24_hour_volume_buy = moving_24_hour_volume_buy

    @property
    def moving_24_hour_volume_sell(self):
        """Gets the moving_24_hour_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all sell trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset.  # noqa: E501

        :return: The moving_24_hour_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_24_hour_volume_sell

    @moving_24_hour_volume_sell.setter
    def moving_24_hour_volume_sell(self, moving_24_hour_volume_sell):
        """Sets the moving_24_hour_volume_sell of this SPOTINSTRUMENTMARKETDATA.

        The sum of all sell trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset.  # noqa: E501

        :param moving_24_hour_volume_sell: The moving_24_hour_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_24_hour_volume_sell: int
        """

        self._moving_24_hour_volume_sell = moving_24_hour_volume_sell

    @property
    def moving_24_hour_volume_unknown(self):
        """Gets the moving_24_hour_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all unknown trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset.  # noqa: E501

        :return: The moving_24_hour_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_24_hour_volume_unknown

    @moving_24_hour_volume_unknown.setter
    def moving_24_hour_volume_unknown(self, moving_24_hour_volume_unknown):
        """Sets the moving_24_hour_volume_unknown of this SPOTINSTRUMENTMARKETDATA.

        The sum of all unknown trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset.  # noqa: E501

        :param moving_24_hour_volume_unknown: The moving_24_hour_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_24_hour_volume_unknown: int
        """

        self._moving_24_hour_volume_unknown = moving_24_hour_volume_unknown

    @property
    def moving_30_day_high(self):
        """Gets the moving_30_day_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The highest traded price of the period. Here, the period runs from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_30_day_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_30_day_high

    @moving_30_day_high.setter
    def moving_30_day_high(self, moving_30_day_high):
        """Sets the moving_30_day_high of this SPOTINSTRUMENTMARKETDATA.

        The highest traded price of the period. Here, the period runs from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.  # noqa: E501

        :param moving_30_day_high: The moving_30_day_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_30_day_high: int
        """

        self._moving_30_day_high = moving_30_day_high

    @property
    def moving_30_day_low(self):
        """Gets the moving_30_day_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The lowest traded price of the period. Here, the period runs from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_30_day_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_30_day_low

    @moving_30_day_low.setter
    def moving_30_day_low(self, moving_30_day_low):
        """Sets the moving_30_day_low of this SPOTINSTRUMENTMARKETDATA.

        The lowest traded price of the period. Here, the period runs from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.  # noqa: E501

        :param moving_30_day_low: The moving_30_day_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_30_day_low: int
        """

        self._moving_30_day_low = moving_30_day_low

    @property
    def moving_30_day_open(self):
        """Gets the moving_30_day_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The price of the closest trade to the period start date (29 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 30 day value. Given in the quote asset.  # noqa: E501

        :return: The moving_30_day_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_30_day_open

    @moving_30_day_open.setter
    def moving_30_day_open(self, moving_30_day_open):
        """Sets the moving_30_day_open of this SPOTINSTRUMENTMARKETDATA.

        The price of the closest trade to the period start date (29 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 30 day value. Given in the quote asset.  # noqa: E501

        :param moving_30_day_open: The moving_30_day_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_30_day_open: int
        """

        self._moving_30_day_open = moving_30_day_open

    @property
    def moving_30_day_quote_volume(self):
        """Gets the moving_30_day_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_30_day_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_30_day_quote_volume

    @moving_30_day_quote_volume.setter
    def moving_30_day_quote_volume(self, moving_30_day_quote_volume):
        """Sets the moving_30_day_quote_volume of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.  # noqa: E501

        :param moving_30_day_quote_volume: The moving_30_day_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_30_day_quote_volume: int
        """

        self._moving_30_day_quote_volume = moving_30_day_quote_volume

    @property
    def moving_30_day_quote_volume_buy(self):
        """Gets the moving_30_day_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all buy trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_30_day_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_30_day_quote_volume_buy

    @moving_30_day_quote_volume_buy.setter
    def moving_30_day_quote_volume_buy(self, moving_30_day_quote_volume_buy):
        """Sets the moving_30_day_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.

        The sum of all buy trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.  # noqa: E501

        :param moving_30_day_quote_volume_buy: The moving_30_day_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_30_day_quote_volume_buy: int
        """

        self._moving_30_day_quote_volume_buy = moving_30_day_quote_volume_buy

    @property
    def moving_30_day_quote_volume_sell(self):
        """Gets the moving_30_day_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all sell trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_30_day_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_30_day_quote_volume_sell

    @moving_30_day_quote_volume_sell.setter
    def moving_30_day_quote_volume_sell(self, moving_30_day_quote_volume_sell):
        """Sets the moving_30_day_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.

        The sum of all sell trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.  # noqa: E501

        :param moving_30_day_quote_volume_sell: The moving_30_day_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_30_day_quote_volume_sell: int
        """

        self._moving_30_day_quote_volume_sell = moving_30_day_quote_volume_sell

    @property
    def moving_30_day_quote_volume_unknown(self):
        """Gets the moving_30_day_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all unknown trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_30_day_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_30_day_quote_volume_unknown

    @moving_30_day_quote_volume_unknown.setter
    def moving_30_day_quote_volume_unknown(self, moving_30_day_quote_volume_unknown):
        """Sets the moving_30_day_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.

        The sum of all unknown trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.  # noqa: E501

        :param moving_30_day_quote_volume_unknown: The moving_30_day_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_30_day_quote_volume_unknown: int
        """

        self._moving_30_day_quote_volume_unknown = moving_30_day_quote_volume_unknown

    @property
    def moving_30_day_total_trades(self):
        """Gets the moving_30_day_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total).  # noqa: E501

        :return: The moving_30_day_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_30_day_total_trades

    @moving_30_day_total_trades.setter
    def moving_30_day_total_trades(self, moving_30_day_total_trades):
        """Sets the moving_30_day_total_trades of this SPOTINSTRUMENTMARKETDATA.

        The total number of trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total).  # noqa: E501

        :param moving_30_day_total_trades: The moving_30_day_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_30_day_total_trades: int
        """

        self._moving_30_day_total_trades = moving_30_day_total_trades

    @property
    def moving_30_day_total_trades_buy(self):
        """Gets the moving_30_day_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of buy trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total).  # noqa: E501

        :return: The moving_30_day_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_30_day_total_trades_buy

    @moving_30_day_total_trades_buy.setter
    def moving_30_day_total_trades_buy(self, moving_30_day_total_trades_buy):
        """Sets the moving_30_day_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.

        The total number of buy trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total).  # noqa: E501

        :param moving_30_day_total_trades_buy: The moving_30_day_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_30_day_total_trades_buy: int
        """

        self._moving_30_day_total_trades_buy = moving_30_day_total_trades_buy

    @property
    def moving_30_day_total_trades_sell(self):
        """Gets the moving_30_day_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of sell trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total).  # noqa: E501

        :return: The moving_30_day_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_30_day_total_trades_sell

    @moving_30_day_total_trades_sell.setter
    def moving_30_day_total_trades_sell(self, moving_30_day_total_trades_sell):
        """Sets the moving_30_day_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.

        The total number of sell trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total).  # noqa: E501

        :param moving_30_day_total_trades_sell: The moving_30_day_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_30_day_total_trades_sell: int
        """

        self._moving_30_day_total_trades_sell = moving_30_day_total_trades_sell

    @property
    def moving_30_day_total_trades_unknown(self):
        """Gets the moving_30_day_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of unknown trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total).  # noqa: E501

        :return: The moving_30_day_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_30_day_total_trades_unknown

    @moving_30_day_total_trades_unknown.setter
    def moving_30_day_total_trades_unknown(self, moving_30_day_total_trades_unknown):
        """Sets the moving_30_day_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.

        The total number of unknown trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total).  # noqa: E501

        :param moving_30_day_total_trades_unknown: The moving_30_day_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_30_day_total_trades_unknown: int
        """

        self._moving_30_day_total_trades_unknown = moving_30_day_total_trades_unknown

    @property
    def moving_30_day_volume(self):
        """Gets the moving_30_day_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset.  # noqa: E501

        :return: The moving_30_day_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_30_day_volume

    @moving_30_day_volume.setter
    def moving_30_day_volume(self, moving_30_day_volume):
        """Sets the moving_30_day_volume of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset.  # noqa: E501

        :param moving_30_day_volume: The moving_30_day_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_30_day_volume: int
        """

        self._moving_30_day_volume = moving_30_day_volume

    @property
    def moving_30_day_volume_buy(self):
        """Gets the moving_30_day_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all buy trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset.  # noqa: E501

        :return: The moving_30_day_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_30_day_volume_buy

    @moving_30_day_volume_buy.setter
    def moving_30_day_volume_buy(self, moving_30_day_volume_buy):
        """Sets the moving_30_day_volume_buy of this SPOTINSTRUMENTMARKETDATA.

        The sum of all buy trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset.  # noqa: E501

        :param moving_30_day_volume_buy: The moving_30_day_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_30_day_volume_buy: int
        """

        self._moving_30_day_volume_buy = moving_30_day_volume_buy

    @property
    def moving_30_day_volume_sell(self):
        """Gets the moving_30_day_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all sell trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset.  # noqa: E501

        :return: The moving_30_day_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_30_day_volume_sell

    @moving_30_day_volume_sell.setter
    def moving_30_day_volume_sell(self, moving_30_day_volume_sell):
        """Sets the moving_30_day_volume_sell of this SPOTINSTRUMENTMARKETDATA.

        The sum of all sell trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset.  # noqa: E501

        :param moving_30_day_volume_sell: The moving_30_day_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_30_day_volume_sell: int
        """

        self._moving_30_day_volume_sell = moving_30_day_volume_sell

    @property
    def moving_30_day_volume_unknown(self):
        """Gets the moving_30_day_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all unknown trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset.  # noqa: E501

        :return: The moving_30_day_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_30_day_volume_unknown

    @moving_30_day_volume_unknown.setter
    def moving_30_day_volume_unknown(self, moving_30_day_volume_unknown):
        """Sets the moving_30_day_volume_unknown of this SPOTINSTRUMENTMARKETDATA.

        The sum of all unknown trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset.  # noqa: E501

        :param moving_30_day_volume_unknown: The moving_30_day_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_30_day_volume_unknown: int
        """

        self._moving_30_day_volume_unknown = moving_30_day_volume_unknown

    @property
    def moving_365_day_high(self):
        """Gets the moving_365_day_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The highest price of the period. Here, the period runs from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_365_day_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_365_day_high

    @moving_365_day_high.setter
    def moving_365_day_high(self, moving_365_day_high):
        """Sets the moving_365_day_high of this SPOTINSTRUMENTMARKETDATA.

        The highest price of the period. Here, the period runs from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.  # noqa: E501

        :param moving_365_day_high: The moving_365_day_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_365_day_high: int
        """

        self._moving_365_day_high = moving_365_day_high

    @property
    def moving_365_day_low(self):
        """Gets the moving_365_day_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The lowest traded price of the period. Here, the period runs from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_365_day_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_365_day_low

    @moving_365_day_low.setter
    def moving_365_day_low(self, moving_365_day_low):
        """Sets the moving_365_day_low of this SPOTINSTRUMENTMARKETDATA.

        The lowest traded price of the period. Here, the period runs from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.  # noqa: E501

        :param moving_365_day_low: The moving_365_day_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_365_day_low: int
        """

        self._moving_365_day_low = moving_365_day_low

    @property
    def moving_365_day_open(self):
        """Gets the moving_365_day_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The price of the closest trade to the period start date (364 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 365 day value. Given in the quote asset.  # noqa: E501

        :return: The moving_365_day_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_365_day_open

    @moving_365_day_open.setter
    def moving_365_day_open(self, moving_365_day_open):
        """Sets the moving_365_day_open of this SPOTINSTRUMENTMARKETDATA.

        The price of the closest trade to the period start date (364 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 365 day value. Given in the quote asset.  # noqa: E501

        :param moving_365_day_open: The moving_365_day_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_365_day_open: int
        """

        self._moving_365_day_open = moving_365_day_open

    @property
    def moving_365_day_quote_volume(self):
        """Gets the moving_365_day_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_365_day_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_365_day_quote_volume

    @moving_365_day_quote_volume.setter
    def moving_365_day_quote_volume(self, moving_365_day_quote_volume):
        """Sets the moving_365_day_quote_volume of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.  # noqa: E501

        :param moving_365_day_quote_volume: The moving_365_day_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_365_day_quote_volume: int
        """

        self._moving_365_day_quote_volume = moving_365_day_quote_volume

    @property
    def moving_365_day_quote_volume_buy(self):
        """Gets the moving_365_day_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all buy trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_365_day_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_365_day_quote_volume_buy

    @moving_365_day_quote_volume_buy.setter
    def moving_365_day_quote_volume_buy(self, moving_365_day_quote_volume_buy):
        """Sets the moving_365_day_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.

        The sum of all buy trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.  # noqa: E501

        :param moving_365_day_quote_volume_buy: The moving_365_day_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_365_day_quote_volume_buy: int
        """

        self._moving_365_day_quote_volume_buy = moving_365_day_quote_volume_buy

    @property
    def moving_365_day_quote_volume_sell(self):
        """Gets the moving_365_day_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all sell trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_365_day_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_365_day_quote_volume_sell

    @moving_365_day_quote_volume_sell.setter
    def moving_365_day_quote_volume_sell(self, moving_365_day_quote_volume_sell):
        """Sets the moving_365_day_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.

        The sum of all sell trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.  # noqa: E501

        :param moving_365_day_quote_volume_sell: The moving_365_day_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_365_day_quote_volume_sell: int
        """

        self._moving_365_day_quote_volume_sell = moving_365_day_quote_volume_sell

    @property
    def moving_365_day_quote_volume_unknown(self):
        """Gets the moving_365_day_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all unknown trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_365_day_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_365_day_quote_volume_unknown

    @moving_365_day_quote_volume_unknown.setter
    def moving_365_day_quote_volume_unknown(self, moving_365_day_quote_volume_unknown):
        """Sets the moving_365_day_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.

        The sum of all unknown trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.  # noqa: E501

        :param moving_365_day_quote_volume_unknown: The moving_365_day_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_365_day_quote_volume_unknown: int
        """

        self._moving_365_day_quote_volume_unknown = moving_365_day_quote_volume_unknown

    @property
    def moving_365_day_total_trades(self):
        """Gets the moving_365_day_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total).  # noqa: E501

        :return: The moving_365_day_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_365_day_total_trades

    @moving_365_day_total_trades.setter
    def moving_365_day_total_trades(self, moving_365_day_total_trades):
        """Sets the moving_365_day_total_trades of this SPOTINSTRUMENTMARKETDATA.

        The total number of trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total).  # noqa: E501

        :param moving_365_day_total_trades: The moving_365_day_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_365_day_total_trades: int
        """

        self._moving_365_day_total_trades = moving_365_day_total_trades

    @property
    def moving_365_day_total_trades_buy(self):
        """Gets the moving_365_day_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of buy trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total).  # noqa: E501

        :return: The moving_365_day_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_365_day_total_trades_buy

    @moving_365_day_total_trades_buy.setter
    def moving_365_day_total_trades_buy(self, moving_365_day_total_trades_buy):
        """Sets the moving_365_day_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.

        The total number of buy trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total).  # noqa: E501

        :param moving_365_day_total_trades_buy: The moving_365_day_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_365_day_total_trades_buy: int
        """

        self._moving_365_day_total_trades_buy = moving_365_day_total_trades_buy

    @property
    def moving_365_day_total_trades_sell(self):
        """Gets the moving_365_day_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of sell trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total).  # noqa: E501

        :return: The moving_365_day_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_365_day_total_trades_sell

    @moving_365_day_total_trades_sell.setter
    def moving_365_day_total_trades_sell(self, moving_365_day_total_trades_sell):
        """Sets the moving_365_day_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.

        The total number of sell trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total).  # noqa: E501

        :param moving_365_day_total_trades_sell: The moving_365_day_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_365_day_total_trades_sell: int
        """

        self._moving_365_day_total_trades_sell = moving_365_day_total_trades_sell

    @property
    def moving_365_day_total_trades_unknown(self):
        """Gets the moving_365_day_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of unknown trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total).  # noqa: E501

        :return: The moving_365_day_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_365_day_total_trades_unknown

    @moving_365_day_total_trades_unknown.setter
    def moving_365_day_total_trades_unknown(self, moving_365_day_total_trades_unknown):
        """Sets the moving_365_day_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.

        The total number of unknown trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total).  # noqa: E501

        :param moving_365_day_total_trades_unknown: The moving_365_day_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_365_day_total_trades_unknown: int
        """

        self._moving_365_day_total_trades_unknown = moving_365_day_total_trades_unknown

    @property
    def moving_365_day_volume(self):
        """Gets the moving_365_day_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset.  # noqa: E501

        :return: The moving_365_day_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_365_day_volume

    @moving_365_day_volume.setter
    def moving_365_day_volume(self, moving_365_day_volume):
        """Sets the moving_365_day_volume of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset.  # noqa: E501

        :param moving_365_day_volume: The moving_365_day_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_365_day_volume: int
        """

        self._moving_365_day_volume = moving_365_day_volume

    @property
    def moving_365_day_volume_buy(self):
        """Gets the moving_365_day_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset.  # noqa: E501

        :return: The moving_365_day_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_365_day_volume_buy

    @moving_365_day_volume_buy.setter
    def moving_365_day_volume_buy(self, moving_365_day_volume_buy):
        """Sets the moving_365_day_volume_buy of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset.  # noqa: E501

        :param moving_365_day_volume_buy: The moving_365_day_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_365_day_volume_buy: int
        """

        self._moving_365_day_volume_buy = moving_365_day_volume_buy

    @property
    def moving_365_day_volume_sell(self):
        """Gets the moving_365_day_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all sell trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset.  # noqa: E501

        :return: The moving_365_day_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_365_day_volume_sell

    @moving_365_day_volume_sell.setter
    def moving_365_day_volume_sell(self, moving_365_day_volume_sell):
        """Sets the moving_365_day_volume_sell of this SPOTINSTRUMENTMARKETDATA.

        The sum of all sell trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset.  # noqa: E501

        :param moving_365_day_volume_sell: The moving_365_day_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_365_day_volume_sell: int
        """

        self._moving_365_day_volume_sell = moving_365_day_volume_sell

    @property
    def moving_365_day_volume_unknown(self):
        """Gets the moving_365_day_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all unknown trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset.  # noqa: E501

        :return: The moving_365_day_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_365_day_volume_unknown

    @moving_365_day_volume_unknown.setter
    def moving_365_day_volume_unknown(self, moving_365_day_volume_unknown):
        """Sets the moving_365_day_volume_unknown of this SPOTINSTRUMENTMARKETDATA.

        The sum of all unknown trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset.  # noqa: E501

        :param moving_365_day_volume_unknown: The moving_365_day_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_365_day_volume_unknown: int
        """

        self._moving_365_day_volume_unknown = moving_365_day_volume_unknown

    @property
    def moving_7_day_high(self):
        """Gets the moving_7_day_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The highest traded price of the period. Here, the period runs from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_7_day_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_7_day_high

    @moving_7_day_high.setter
    def moving_7_day_high(self, moving_7_day_high):
        """Sets the moving_7_day_high of this SPOTINSTRUMENTMARKETDATA.

        The highest traded price of the period. Here, the period runs from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.  # noqa: E501

        :param moving_7_day_high: The moving_7_day_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_7_day_high: int
        """

        self._moving_7_day_high = moving_7_day_high

    @property
    def moving_7_day_low(self):
        """Gets the moving_7_day_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The lowest traded price of the period. Here, the period runs from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_7_day_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_7_day_low

    @moving_7_day_low.setter
    def moving_7_day_low(self, moving_7_day_low):
        """Sets the moving_7_day_low of this SPOTINSTRUMENTMARKETDATA.

        The lowest traded price of the period. Here, the period runs from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.  # noqa: E501

        :param moving_7_day_low: The moving_7_day_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_7_day_low: int
        """

        self._moving_7_day_low = moving_7_day_low

    @property
    def moving_7_day_open(self):
        """Gets the moving_7_day_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The price of the closest trade to the period start date (6 days + current day - 00:00:00 GMT/UTC to now). This will always be supplied and there is no need to do any calculation to get the full 7 day value. Given in the quote asset.  # noqa: E501

        :return: The moving_7_day_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_7_day_open

    @moving_7_day_open.setter
    def moving_7_day_open(self, moving_7_day_open):
        """Sets the moving_7_day_open of this SPOTINSTRUMENTMARKETDATA.

        The price of the closest trade to the period start date (6 days + current day - 00:00:00 GMT/UTC to now). This will always be supplied and there is no need to do any calculation to get the full 7 day value. Given in the quote asset.  # noqa: E501

        :param moving_7_day_open: The moving_7_day_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_7_day_open: int
        """

        self._moving_7_day_open = moving_7_day_open

    @property
    def moving_7_day_quote_volume(self):
        """Gets the moving_7_day_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_7_day_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_7_day_quote_volume

    @moving_7_day_quote_volume.setter
    def moving_7_day_quote_volume(self, moving_7_day_quote_volume):
        """Sets the moving_7_day_quote_volume of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.  # noqa: E501

        :param moving_7_day_quote_volume: The moving_7_day_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_7_day_quote_volume: int
        """

        self._moving_7_day_quote_volume = moving_7_day_quote_volume

    @property
    def moving_7_day_quote_volume_buy(self):
        """Gets the moving_7_day_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all buy trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_7_day_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_7_day_quote_volume_buy

    @moving_7_day_quote_volume_buy.setter
    def moving_7_day_quote_volume_buy(self, moving_7_day_quote_volume_buy):
        """Sets the moving_7_day_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.

        The sum of all buy trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.  # noqa: E501

        :param moving_7_day_quote_volume_buy: The moving_7_day_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_7_day_quote_volume_buy: int
        """

        self._moving_7_day_quote_volume_buy = moving_7_day_quote_volume_buy

    @property
    def moving_7_day_quote_volume_sell(self):
        """Gets the moving_7_day_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all sell trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_7_day_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_7_day_quote_volume_sell

    @moving_7_day_quote_volume_sell.setter
    def moving_7_day_quote_volume_sell(self, moving_7_day_quote_volume_sell):
        """Sets the moving_7_day_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.

        The sum of all sell trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.  # noqa: E501

        :param moving_7_day_quote_volume_sell: The moving_7_day_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_7_day_quote_volume_sell: int
        """

        self._moving_7_day_quote_volume_sell = moving_7_day_quote_volume_sell

    @property
    def moving_7_day_quote_volume_unknown(self):
        """Gets the moving_7_day_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all unknown trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_7_day_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_7_day_quote_volume_unknown

    @moving_7_day_quote_volume_unknown.setter
    def moving_7_day_quote_volume_unknown(self, moving_7_day_quote_volume_unknown):
        """Sets the moving_7_day_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.

        The sum of all unknown trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.  # noqa: E501

        :param moving_7_day_quote_volume_unknown: The moving_7_day_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_7_day_quote_volume_unknown: int
        """

        self._moving_7_day_quote_volume_unknown = moving_7_day_quote_volume_unknown

    @property
    def moving_7_day_total_trades(self):
        """Gets the moving_7_day_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total).  # noqa: E501

        :return: The moving_7_day_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_7_day_total_trades

    @moving_7_day_total_trades.setter
    def moving_7_day_total_trades(self, moving_7_day_total_trades):
        """Sets the moving_7_day_total_trades of this SPOTINSTRUMENTMARKETDATA.

        The total number of trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total).  # noqa: E501

        :param moving_7_day_total_trades: The moving_7_day_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_7_day_total_trades: int
        """

        self._moving_7_day_total_trades = moving_7_day_total_trades

    @property
    def moving_7_day_total_trades_buy(self):
        """Gets the moving_7_day_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of buy trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total).  # noqa: E501

        :return: The moving_7_day_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_7_day_total_trades_buy

    @moving_7_day_total_trades_buy.setter
    def moving_7_day_total_trades_buy(self, moving_7_day_total_trades_buy):
        """Sets the moving_7_day_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.

        The total number of buy trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total).  # noqa: E501

        :param moving_7_day_total_trades_buy: The moving_7_day_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_7_day_total_trades_buy: int
        """

        self._moving_7_day_total_trades_buy = moving_7_day_total_trades_buy

    @property
    def moving_7_day_total_trades_sell(self):
        """Gets the moving_7_day_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of sell trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total).  # noqa: E501

        :return: The moving_7_day_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_7_day_total_trades_sell

    @moving_7_day_total_trades_sell.setter
    def moving_7_day_total_trades_sell(self, moving_7_day_total_trades_sell):
        """Sets the moving_7_day_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.

        The total number of sell trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total).  # noqa: E501

        :param moving_7_day_total_trades_sell: The moving_7_day_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_7_day_total_trades_sell: int
        """

        self._moving_7_day_total_trades_sell = moving_7_day_total_trades_sell

    @property
    def moving_7_day_total_trades_unknown(self):
        """Gets the moving_7_day_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of unknown trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total).  # noqa: E501

        :return: The moving_7_day_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_7_day_total_trades_unknown

    @moving_7_day_total_trades_unknown.setter
    def moving_7_day_total_trades_unknown(self, moving_7_day_total_trades_unknown):
        """Sets the moving_7_day_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.

        The total number of unknown trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total).  # noqa: E501

        :param moving_7_day_total_trades_unknown: The moving_7_day_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_7_day_total_trades_unknown: int
        """

        self._moving_7_day_total_trades_unknown = moving_7_day_total_trades_unknown

    @property
    def moving_7_day_volume(self):
        """Gets the moving_7_day_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset.  # noqa: E501

        :return: The moving_7_day_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_7_day_volume

    @moving_7_day_volume.setter
    def moving_7_day_volume(self, moving_7_day_volume):
        """Sets the moving_7_day_volume of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset.  # noqa: E501

        :param moving_7_day_volume: The moving_7_day_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_7_day_volume: int
        """

        self._moving_7_day_volume = moving_7_day_volume

    @property
    def moving_7_day_volume_buy(self):
        """Gets the moving_7_day_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all buy trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset.  # noqa: E501

        :return: The moving_7_day_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_7_day_volume_buy

    @moving_7_day_volume_buy.setter
    def moving_7_day_volume_buy(self, moving_7_day_volume_buy):
        """Sets the moving_7_day_volume_buy of this SPOTINSTRUMENTMARKETDATA.

        The sum of all buy trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset.  # noqa: E501

        :param moving_7_day_volume_buy: The moving_7_day_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_7_day_volume_buy: int
        """

        self._moving_7_day_volume_buy = moving_7_day_volume_buy

    @property
    def moving_7_day_volume_sell(self):
        """Gets the moving_7_day_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all sell trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset.  # noqa: E501

        :return: The moving_7_day_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_7_day_volume_sell

    @moving_7_day_volume_sell.setter
    def moving_7_day_volume_sell(self, moving_7_day_volume_sell):
        """Sets the moving_7_day_volume_sell of this SPOTINSTRUMENTMARKETDATA.

        The sum of all sell trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset.  # noqa: E501

        :param moving_7_day_volume_sell: The moving_7_day_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_7_day_volume_sell: int
        """

        self._moving_7_day_volume_sell = moving_7_day_volume_sell

    @property
    def moving_7_day_volume_unknown(self):
        """Gets the moving_7_day_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all unknown trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset.  # noqa: E501

        :return: The moving_7_day_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_7_day_volume_unknown

    @moving_7_day_volume_unknown.setter
    def moving_7_day_volume_unknown(self, moving_7_day_volume_unknown):
        """Sets the moving_7_day_volume_unknown of this SPOTINSTRUMENTMARKETDATA.

        The sum of all unknown trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset.  # noqa: E501

        :param moving_7_day_volume_unknown: The moving_7_day_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_7_day_volume_unknown: int
        """

        self._moving_7_day_volume_unknown = moving_7_day_volume_unknown

    @property
    def moving_90_day_high(self):
        """Gets the moving_90_day_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The highest value between the MOVING_90_DAY_OPEN and the highest traded price of the period. Here, the period runs from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_90_day_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_90_day_high

    @moving_90_day_high.setter
    def moving_90_day_high(self, moving_90_day_high):
        """Sets the moving_90_day_high of this SPOTINSTRUMENTMARKETDATA.

        The highest value between the MOVING_90_DAY_OPEN and the highest traded price of the period. Here, the period runs from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.  # noqa: E501

        :param moving_90_day_high: The moving_90_day_high of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_90_day_high: int
        """

        self._moving_90_day_high = moving_90_day_high

    @property
    def moving_90_day_low(self):
        """Gets the moving_90_day_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The lowest traded price of the period. Here, the period runs from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_90_day_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_90_day_low

    @moving_90_day_low.setter
    def moving_90_day_low(self, moving_90_day_low):
        """Sets the moving_90_day_low of this SPOTINSTRUMENTMARKETDATA.

        The lowest traded price of the period. Here, the period runs from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.  # noqa: E501

        :param moving_90_day_low: The moving_90_day_low of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_90_day_low: int
        """

        self._moving_90_day_low = moving_90_day_low

    @property
    def moving_90_day_open(self):
        """Gets the moving_90_day_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The price of the closest trade to the period start date (89 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 90 day value. Given in the quote asset.  # noqa: E501

        :return: The moving_90_day_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_90_day_open

    @moving_90_day_open.setter
    def moving_90_day_open(self, moving_90_day_open):
        """Sets the moving_90_day_open of this SPOTINSTRUMENTMARKETDATA.

        The price of the closest trade to the period start date (89 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 90 day value. Given in the quote asset.  # noqa: E501

        :param moving_90_day_open: The moving_90_day_open of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_90_day_open: int
        """

        self._moving_90_day_open = moving_90_day_open

    @property
    def moving_90_day_quote_volume(self):
        """Gets the moving_90_day_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_90_day_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_90_day_quote_volume

    @moving_90_day_quote_volume.setter
    def moving_90_day_quote_volume(self, moving_90_day_quote_volume):
        """Sets the moving_90_day_quote_volume of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.  # noqa: E501

        :param moving_90_day_quote_volume: The moving_90_day_quote_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_90_day_quote_volume: int
        """

        self._moving_90_day_quote_volume = moving_90_day_quote_volume

    @property
    def moving_90_day_quote_volume_buy(self):
        """Gets the moving_90_day_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all buy trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_90_day_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_90_day_quote_volume_buy

    @moving_90_day_quote_volume_buy.setter
    def moving_90_day_quote_volume_buy(self, moving_90_day_quote_volume_buy):
        """Sets the moving_90_day_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.

        The sum of all buy trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.  # noqa: E501

        :param moving_90_day_quote_volume_buy: The moving_90_day_quote_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_90_day_quote_volume_buy: int
        """

        self._moving_90_day_quote_volume_buy = moving_90_day_quote_volume_buy

    @property
    def moving_90_day_quote_volume_sell(self):
        """Gets the moving_90_day_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all sell trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_90_day_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_90_day_quote_volume_sell

    @moving_90_day_quote_volume_sell.setter
    def moving_90_day_quote_volume_sell(self, moving_90_day_quote_volume_sell):
        """Sets the moving_90_day_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.

        The sum of all sell trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.  # noqa: E501

        :param moving_90_day_quote_volume_sell: The moving_90_day_quote_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_90_day_quote_volume_sell: int
        """

        self._moving_90_day_quote_volume_sell = moving_90_day_quote_volume_sell

    @property
    def moving_90_day_quote_volume_unknown(self):
        """Gets the moving_90_day_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all unknown trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.  # noqa: E501

        :return: The moving_90_day_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_90_day_quote_volume_unknown

    @moving_90_day_quote_volume_unknown.setter
    def moving_90_day_quote_volume_unknown(self, moving_90_day_quote_volume_unknown):
        """Sets the moving_90_day_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.

        The sum of all unknown trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.  # noqa: E501

        :param moving_90_day_quote_volume_unknown: The moving_90_day_quote_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_90_day_quote_volume_unknown: int
        """

        self._moving_90_day_quote_volume_unknown = moving_90_day_quote_volume_unknown

    @property
    def moving_90_day_total_trades(self):
        """Gets the moving_90_day_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total).  # noqa: E501

        :return: The moving_90_day_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_90_day_total_trades

    @moving_90_day_total_trades.setter
    def moving_90_day_total_trades(self, moving_90_day_total_trades):
        """Sets the moving_90_day_total_trades of this SPOTINSTRUMENTMARKETDATA.

        The total number of trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total).  # noqa: E501

        :param moving_90_day_total_trades: The moving_90_day_total_trades of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_90_day_total_trades: int
        """

        self._moving_90_day_total_trades = moving_90_day_total_trades

    @property
    def moving_90_day_total_trades_buy(self):
        """Gets the moving_90_day_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of buy trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total).  # noqa: E501

        :return: The moving_90_day_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_90_day_total_trades_buy

    @moving_90_day_total_trades_buy.setter
    def moving_90_day_total_trades_buy(self, moving_90_day_total_trades_buy):
        """Sets the moving_90_day_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.

        The total number of buy trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total).  # noqa: E501

        :param moving_90_day_total_trades_buy: The moving_90_day_total_trades_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_90_day_total_trades_buy: int
        """

        self._moving_90_day_total_trades_buy = moving_90_day_total_trades_buy

    @property
    def moving_90_day_total_trades_sell(self):
        """Gets the moving_90_day_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of sell trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total).  # noqa: E501

        :return: The moving_90_day_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_90_day_total_trades_sell

    @moving_90_day_total_trades_sell.setter
    def moving_90_day_total_trades_sell(self, moving_90_day_total_trades_sell):
        """Sets the moving_90_day_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.

        The total number of sell trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total).  # noqa: E501

        :param moving_90_day_total_trades_sell: The moving_90_day_total_trades_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_90_day_total_trades_sell: int
        """

        self._moving_90_day_total_trades_sell = moving_90_day_total_trades_sell

    @property
    def moving_90_day_total_trades_unknown(self):
        """Gets the moving_90_day_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The total number of unknown trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total).  # noqa: E501

        :return: The moving_90_day_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_90_day_total_trades_unknown

    @moving_90_day_total_trades_unknown.setter
    def moving_90_day_total_trades_unknown(self, moving_90_day_total_trades_unknown):
        """Sets the moving_90_day_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.

        The total number of unknown trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total).  # noqa: E501

        :param moving_90_day_total_trades_unknown: The moving_90_day_total_trades_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_90_day_total_trades_unknown: int
        """

        self._moving_90_day_total_trades_unknown = moving_90_day_total_trades_unknown

    @property
    def moving_90_day_volume(self):
        """Gets the moving_90_day_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset.  # noqa: E501

        :return: The moving_90_day_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_90_day_volume

    @moving_90_day_volume.setter
    def moving_90_day_volume(self, moving_90_day_volume):
        """Sets the moving_90_day_volume of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset.  # noqa: E501

        :param moving_90_day_volume: The moving_90_day_volume of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_90_day_volume: int
        """

        self._moving_90_day_volume = moving_90_day_volume

    @property
    def moving_90_day_volume_buy(self):
        """Gets the moving_90_day_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset.  # noqa: E501

        :return: The moving_90_day_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_90_day_volume_buy

    @moving_90_day_volume_buy.setter
    def moving_90_day_volume_buy(self, moving_90_day_volume_buy):
        """Sets the moving_90_day_volume_buy of this SPOTINSTRUMENTMARKETDATA.

        The sum of all trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset.  # noqa: E501

        :param moving_90_day_volume_buy: The moving_90_day_volume_buy of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_90_day_volume_buy: int
        """

        self._moving_90_day_volume_buy = moving_90_day_volume_buy

    @property
    def moving_90_day_volume_sell(self):
        """Gets the moving_90_day_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all sell trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset.  # noqa: E501

        :return: The moving_90_day_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_90_day_volume_sell

    @moving_90_day_volume_sell.setter
    def moving_90_day_volume_sell(self, moving_90_day_volume_sell):
        """Sets the moving_90_day_volume_sell of this SPOTINSTRUMENTMARKETDATA.

        The sum of all sell trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset.  # noqa: E501

        :param moving_90_day_volume_sell: The moving_90_day_volume_sell of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_90_day_volume_sell: int
        """

        self._moving_90_day_volume_sell = moving_90_day_volume_sell

    @property
    def moving_90_day_volume_unknown(self):
        """Gets the moving_90_day_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The sum of all unknown trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset.  # noqa: E501

        :return: The moving_90_day_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._moving_90_day_volume_unknown

    @moving_90_day_volume_unknown.setter
    def moving_90_day_volume_unknown(self, moving_90_day_volume_unknown):
        """Sets the moving_90_day_volume_unknown of this SPOTINSTRUMENTMARKETDATA.

        The sum of all unknown trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset.  # noqa: E501

        :param moving_90_day_volume_unknown: The moving_90_day_volume_unknown of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type moving_90_day_volume_unknown: int
        """

        self._moving_90_day_volume_unknown = moving_90_day_volume_unknown

    @property
    def price(self):
        """Gets the price of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The price in the to asset (quote / number symbol / coin) of the latest trade. I.e. for a BTC-USD trade, how much was paid for one BTC in USD).  # noqa: E501

        :return: The price of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this SPOTINSTRUMENTMARKETDATA.

        The price in the to asset (quote / number symbol / coin) of the latest trade. I.e. for a BTC-USD trade, how much was paid for one BTC in USD).  # noqa: E501

        :param price: The price of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type price: int
        """

        self._price = price

    @property
    def price_flag(self):
        """Gets the price_flag of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The flag indicating whether the price has increased, decreased, or not changed  # noqa: E501

        :return: The price_flag of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: str
        """
        return self._price_flag

    @price_flag.setter
    def price_flag(self, price_flag):
        """Sets the price_flag of this SPOTINSTRUMENTMARKETDATA.

        The flag indicating whether the price has increased, decreased, or not changed  # noqa: E501

        :param price_flag: The price_flag of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type price_flag: str
        """

        self._price_flag = price_flag

    @property
    def price_last_update_ts(self):
        """Gets the price_last_update_ts of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The timestamp in seconds as reported by the market / exchange. If the market /exchange does not provide this information, the received timestamp will be returned.  # noqa: E501

        :return: The price_last_update_ts of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._price_last_update_ts

    @price_last_update_ts.setter
    def price_last_update_ts(self, price_last_update_ts):
        """Sets the price_last_update_ts of this SPOTINSTRUMENTMARKETDATA.

        The timestamp in seconds as reported by the market / exchange. If the market /exchange does not provide this information, the received timestamp will be returned.  # noqa: E501

        :param price_last_update_ts: The price_last_update_ts of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type price_last_update_ts: int
        """

        self._price_last_update_ts = price_last_update_ts

    @property
    def quote(self):
        """Gets the quote of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The mapped to asset (quote / counter symbol / coin), e.g. USD. Only available on instruments that have been mapped.  # noqa: E501

        :return: The quote of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: str
        """
        return self._quote

    @quote.setter
    def quote(self, quote):
        """Sets the quote of this SPOTINSTRUMENTMARKETDATA.

        The mapped to asset (quote / counter symbol / coin), e.g. USD. Only available on instruments that have been mapped.  # noqa: E501

        :param quote: The quote of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type quote: str
        """

        self._quote = quote

    @property
    def top_ask_last_update_ts(self):
        """Gets the top_ask_last_update_ts of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The timestamp in seconds of the last time the top ask was updated, as reported by the market / exchange. If the market / exchange does not provide this information, the received timestamp will be returned.  # noqa: E501

        :return: The top_ask_last_update_ts of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._top_ask_last_update_ts

    @top_ask_last_update_ts.setter
    def top_ask_last_update_ts(self, top_ask_last_update_ts):
        """Sets the top_ask_last_update_ts of this SPOTINSTRUMENTMARKETDATA.

        The timestamp in seconds of the last time the top ask was updated, as reported by the market / exchange. If the market / exchange does not provide this information, the received timestamp will be returned.  # noqa: E501

        :param top_ask_last_update_ts: The top_ask_last_update_ts of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type top_ask_last_update_ts: int
        """

        self._top_ask_last_update_ts = top_ask_last_update_ts

    @property
    def top_ask_price(self):
        """Gets the top_ask_price of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The price of the top ask in the to asset (quote / numberer symbol / coin). For a BTC-USD order book, this will be the best price someone is willing to sell some BTC in USD, as quoted for 1 full BTC.  # noqa: E501

        :return: The top_ask_price of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._top_ask_price

    @top_ask_price.setter
    def top_ask_price(self, top_ask_price):
        """Sets the top_ask_price of this SPOTINSTRUMENTMARKETDATA.

        The price of the top ask in the to asset (quote / numberer symbol / coin). For a BTC-USD order book, this will be the best price someone is willing to sell some BTC in USD, as quoted for 1 full BTC.  # noqa: E501

        :param top_ask_price: The top_ask_price of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type top_ask_price: int
        """

        self._top_ask_price = top_ask_price

    @property
    def top_ask_quantity(self):
        """Gets the top_ask_quantity of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The quantity of the top ask in the from asset (base / coin). For a BTC-USD order book, this will be the amount of BTC a person is willing to sell at the best price.  # noqa: E501

        :return: The top_ask_quantity of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._top_ask_quantity

    @top_ask_quantity.setter
    def top_ask_quantity(self, top_ask_quantity):
        """Sets the top_ask_quantity of this SPOTINSTRUMENTMARKETDATA.

        The quantity of the top ask in the from asset (base / coin). For a BTC-USD order book, this will be the amount of BTC a person is willing to sell at the best price.  # noqa: E501

        :param top_ask_quantity: The top_ask_quantity of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type top_ask_quantity: int
        """

        self._top_ask_quantity = top_ask_quantity

    @property
    def top_bid_last_update_ts(self):
        """Gets the top_bid_last_update_ts of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The timestamp in seconds of the last time the top bid was updated, as reported by the market / exchange. If the market / exchange does not provide this information, the received timestamp will be returned.  # noqa: E501

        :return: The top_bid_last_update_ts of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._top_bid_last_update_ts

    @top_bid_last_update_ts.setter
    def top_bid_last_update_ts(self, top_bid_last_update_ts):
        """Sets the top_bid_last_update_ts of this SPOTINSTRUMENTMARKETDATA.

        The timestamp in seconds of the last time the top bid was updated, as reported by the market / exchange. If the market / exchange does not provide this information, the received timestamp will be returned.  # noqa: E501

        :param top_bid_last_update_ts: The top_bid_last_update_ts of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type top_bid_last_update_ts: int
        """

        self._top_bid_last_update_ts = top_bid_last_update_ts

    @property
    def top_bid_price(self):
        """Gets the top_bid_price of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The price of the top bid in the to asset (quote / numberer symbol / coin). For a BTC-USD order book, this will be the highest price a person is willing to pay for some BTC in USD, as quoted for 1 full BTC.  # noqa: E501

        :return: The top_bid_price of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._top_bid_price

    @top_bid_price.setter
    def top_bid_price(self, top_bid_price):
        """Sets the top_bid_price of this SPOTINSTRUMENTMARKETDATA.

        The price of the top bid in the to asset (quote / numberer symbol / coin). For a BTC-USD order book, this will be the highest price a person is willing to pay for some BTC in USD, as quoted for 1 full BTC.  # noqa: E501

        :param top_bid_price: The top_bid_price of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type top_bid_price: int
        """

        self._top_bid_price = top_bid_price

    @property
    def top_bid_quantity(self):
        """Gets the top_bid_quantity of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The quantity of the top bid in the from asset (base / coin). For a BTC-USD order book , this will be the amount of BTC someone is willing to buy at the best price.  # noqa: E501

        :return: The top_bid_quantity of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: int
        """
        return self._top_bid_quantity

    @top_bid_quantity.setter
    def top_bid_quantity(self, top_bid_quantity):
        """Sets the top_bid_quantity of this SPOTINSTRUMENTMARKETDATA.

        The quantity of the top bid in the from asset (base / coin). For a BTC-USD order book , this will be the amount of BTC someone is willing to buy at the best price.  # noqa: E501

        :param top_bid_quantity: The top_bid_quantity of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type top_bid_quantity: int
        """

        self._top_bid_quantity = top_bid_quantity

    @property
    def type(self):
        """Gets the type of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501

        The type of the message.  # noqa: E501

        :return: The type of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this SPOTINSTRUMENTMARKETDATA.

        The type of the message.  # noqa: E501

        :param type: The type of this SPOTINSTRUMENTMARKETDATA.  # noqa: E501
        :type type: str
        """

        self._type = type

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SPOTINSTRUMENTMARKETDATA):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, SPOTINSTRUMENTMARKETDATA):
            return True

        return self.to_dict() != other.to_dict()
