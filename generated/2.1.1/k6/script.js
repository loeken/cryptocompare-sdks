/*
 * CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry
 * CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.
 *
 * OpenAPI spec version: 2.1.1
 * Contact: data@cryptocompare.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://github.com/OpenAPITools/openapi-generator
 *
 * OpenAPI generator version: 6.3.0-SNAPSHOT
 */


import http from "k6/http";
import { group, check, sleep } from "k6";

const BASE_URL = "https://data-api.cryptocompare.com";
// Sleep duration between successive requests.
// You might want to edit the value of this variable or remove calls to the sleep function on the script.
const SLEEP_DURATION = 0.1;
// Global variables should be initialized.

export default function() {
    group("/spot/v1/historical/minutes", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let toTs = 'TODO_EDIT_THE_TO_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let fill = 'TODO_EDIT_THE_FILL'; // specify value as there is no example value for this parameter in OpenAPI spec
        let aggregate = 'TODO_EDIT_THE_AGGREGATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/spot/v1/historical/minutes?market=${market}&instrument=${instrument}&groups=${groups}&limit=${limit}&to_ts=${to_ts}&aggregate=${aggregate}&fill=${fill}&mapping_priority=${mapping_priority}&response_format=${response_format}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/futures/v1/historical/open-interest-messages", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let afterTs = 'TODO_EDIT_THE_AFTER_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let lastCcseq = 'TODO_EDIT_THE_LAST_CCSEQ'; // specify value as there is no example value for this parameter in OpenAPI spec
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let return404OnEmptyResponse = 'TODO_EDIT_THE_RETURN_404_ON_EMPTY_RESPONSE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/futures/v1/historical/open-interest-messages?market=${market}&instrument=${instrument}&after_ts=${after_ts}&last_ccseq=${last_ccseq}&limit=${limit}&mapping_priority=${mapping_priority}&response_format=${response_format}&return_404_on_empty_response=${return_404_on_empty_response}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/futures/v1/latest/instrument/metadata", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instruments = 'TODO_EDIT_THE_INSTRUMENTS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/futures/v1/latest/instrument/metadata?market=${market}&instruments=${instruments}&groups=${groups}&mapping_priority=${mapping_priority}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/index/v1/latest/tick", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instruments = 'TODO_EDIT_THE_INSTRUMENTS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/index/v1/latest/tick?market=${market}&instruments=${instruments}&groups=${groups}&mapping_priority=${mapping_priority}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/index/v1/markets/instruments/unmapped", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrumentStatus = 'TODO_EDIT_THE_INSTRUMENT_STATUS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/index/v1/markets/instruments/unmapped?market=${market}&instrument=${instrument}&instrument_status=${instrument_status}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/futures/v1/historical/open-interest-messages/hour", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let hourTs = 'TODO_EDIT_THE_HOUR_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let return404OnEmptyResponse = 'TODO_EDIT_THE_RETURN_404_ON_EMPTY_RESPONSE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/futures/v1/historical/open-interest-messages/hour?market=${market}&instrument=${instrument}&hour_ts=${hour_ts}&mapping_priority=${mapping_priority}&response_format=${response_format}&return_404_on_empty_response=${return_404_on_empty_response}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/index/cc/v1/latest/instrument/metadata", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instruments = 'TODO_EDIT_THE_INSTRUMENTS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/index/cc/v1/latest/instrument/metadata?market=${market}&instruments=${instruments}&groups=${groups}&mapping_priority=${mapping_priority}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/futures/v1/markets", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/futures/v1/markets?market=${market}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/futures/v1/historical/funding-rate/days", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let toTs = 'TODO_EDIT_THE_TO_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let fill = 'TODO_EDIT_THE_FILL'; // specify value as there is no example value for this parameter in OpenAPI spec
        let aggregate = 'TODO_EDIT_THE_AGGREGATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/futures/v1/historical/funding-rate/days?market=${market}&instrument=${instrument}&groups=${groups}&limit=${limit}&to_ts=${to_ts}&aggregate=${aggregate}&fill=${fill}&mapping_priority=${mapping_priority}&response_format=${response_format}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/futures/v1/latest/open-interest/tick", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instruments = 'TODO_EDIT_THE_INSTRUMENTS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/futures/v1/latest/open-interest/tick?market=${market}&instruments=${instruments}&groups=${groups}&mapping_priority=${mapping_priority}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/index/v1/markets/instruments", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrumentStatus = 'TODO_EDIT_THE_INSTRUMENT_STATUS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/index/v1/markets/instruments?market=${market}&instrument=${instrument}&instrument_status=${instrument_status}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/index/cc/v1/markets/instruments", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrumentStatus = 'TODO_EDIT_THE_INSTRUMENT_STATUS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/index/cc/v1/markets/instruments?market=${market}&instrument=${instrument}&instrument_status=${instrument_status}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/futures/v1/historical/funding-rate/minutes", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let toTs = 'TODO_EDIT_THE_TO_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let fill = 'TODO_EDIT_THE_FILL'; // specify value as there is no example value for this parameter in OpenAPI spec
        let aggregate = 'TODO_EDIT_THE_AGGREGATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/futures/v1/historical/funding-rate/minutes?market=${market}&instrument=${instrument}&groups=${groups}&limit=${limit}&to_ts=${to_ts}&aggregate=${aggregate}&fill=${fill}&mapping_priority=${mapping_priority}&response_format=${response_format}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/futures/v1/markets/instruments/unmapped", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrumentStatus = 'TODO_EDIT_THE_INSTRUMENT_STATUS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/futures/v1/markets/instruments/unmapped?market=${market}&instrument=${instrument}&instrument_status=${instrument_status}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/index/v1/markets", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/index/v1/markets?market=${market}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/news/v1/article/list", () => {
        let categories = 'TODO_EDIT_THE_CATEGORIES'; // specify value as there is no example value for this parameter in OpenAPI spec
        let lang = 'TODO_EDIT_THE_LANG'; // specify value as there is no example value for this parameter in OpenAPI spec
        let toTs = 'TODO_EDIT_THE_TO_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let sourceIds = 'TODO_EDIT_THE_SOURCE_IDS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let excludeCategories = 'TODO_EDIT_THE_EXCLUDE_CATEGORIES'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/news/v1/article/list?source_ids=${source_ids}&lang=${lang}&categories=${categories}&exclude_categories=${exclude_categories}&to_ts=${to_ts}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/spot/v1/markets/instruments", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrumentStatus = 'TODO_EDIT_THE_INSTRUMENT_STATUS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/spot/v1/markets/instruments?market=${market}&instrument=${instrument}&instrument_status=${instrument_status}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/futures/v1/historical/days", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let toTs = 'TODO_EDIT_THE_TO_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let fill = 'TODO_EDIT_THE_FILL'; // specify value as there is no example value for this parameter in OpenAPI spec
        let aggregate = 'TODO_EDIT_THE_AGGREGATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/futures/v1/historical/days?market=${market}&instrument=${instrument}&groups=${groups}&limit=${limit}&to_ts=${to_ts}&aggregate=${aggregate}&fill=${fill}&mapping_priority=${mapping_priority}&response_format=${response_format}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/index/cc/v1/historical/messages/hour", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let hourTs = 'TODO_EDIT_THE_HOUR_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let return404OnEmptyResponse = 'TODO_EDIT_THE_RETURN_404_ON_EMPTY_RESPONSE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/index/cc/v1/historical/messages/hour?market=${market}&instrument=${instrument}&hour_ts=${hour_ts}&mapping_priority=${mapping_priority}&response_format=${response_format}&return_404_on_empty_response=${return_404_on_empty_response}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/futures/v1/historical/minutes", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let toTs = 'TODO_EDIT_THE_TO_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let fill = 'TODO_EDIT_THE_FILL'; // specify value as there is no example value for this parameter in OpenAPI spec
        let aggregate = 'TODO_EDIT_THE_AGGREGATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/futures/v1/historical/minutes?market=${market}&instrument=${instrument}&groups=${groups}&limit=${limit}&to_ts=${to_ts}&aggregate=${aggregate}&fill=${fill}&mapping_priority=${mapping_priority}&response_format=${response_format}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/index/v1/historical/days", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let toTs = 'TODO_EDIT_THE_TO_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let fill = 'TODO_EDIT_THE_FILL'; // specify value as there is no example value for this parameter in OpenAPI spec
        let aggregate = 'TODO_EDIT_THE_AGGREGATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/index/v1/historical/days?market=${market}&instrument=${instrument}&groups=${groups}&limit=${limit}&to_ts=${to_ts}&aggregate=${aggregate}&fill=${fill}&mapping_priority=${mapping_priority}&response_format=${response_format}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/asset/v1/data/by/id", () => {
        let assetId = 'TODO_EDIT_THE_ASSET_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/asset/v1/data/by/id?asset_id=${asset_id}&groups=${groups}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/asset/v1/top/list", () => {
        let sortDirection = 'TODO_EDIT_THE_SORT_DIRECTION'; // specify value as there is no example value for this parameter in OpenAPI spec
        let pageSize = 'TODO_EDIT_THE_PAGE_SIZE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let sortBy = 'TODO_EDIT_THE_SORT_BY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let page = 'TODO_EDIT_THE_PAGE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let assetType = 'TODO_EDIT_THE_ASSET_TYPE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/asset/v1/top/list?page=${page}&page_size=${page_size}&asset_type=${asset_type}&sort_by=${sort_by}&sort_direction=${sort_direction}&groups=${groups}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/futures/v1/historical/open-interest/days", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let toTs = 'TODO_EDIT_THE_TO_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let fill = 'TODO_EDIT_THE_FILL'; // specify value as there is no example value for this parameter in OpenAPI spec
        let aggregate = 'TODO_EDIT_THE_AGGREGATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/futures/v1/historical/open-interest/days?market=${market}&instrument=${instrument}&groups=${groups}&limit=${limit}&to_ts=${to_ts}&aggregate=${aggregate}&fill=${fill}&mapping_priority=${mapping_priority}&response_format=${response_format}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/futures/v1/historical/trades", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let afterTs = 'TODO_EDIT_THE_AFTER_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let lastCcseq = 'TODO_EDIT_THE_LAST_CCSEQ'; // specify value as there is no example value for this parameter in OpenAPI spec
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let return404OnEmptyResponse = 'TODO_EDIT_THE_RETURN_404_ON_EMPTY_RESPONSE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/futures/v1/historical/trades?market=${market}&instrument=${instrument}&after_ts=${after_ts}&last_ccseq=${last_ccseq}&limit=${limit}&mapping_priority=${mapping_priority}&response_format=${response_format}&return_404_on_empty_response=${return_404_on_empty_response}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/overview/v1/latest/marketcap/all/tick", () => {
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/overview/v1/latest/marketcap/all/tick?groups=${groups}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/spot/v1/markets", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/spot/v1/markets?market=${market}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/futures/v1/historical/funding-rate-messages", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let afterTs = 'TODO_EDIT_THE_AFTER_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let lastCcseq = 'TODO_EDIT_THE_LAST_CCSEQ'; // specify value as there is no example value for this parameter in OpenAPI spec
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let return404OnEmptyResponse = 'TODO_EDIT_THE_RETURN_404_ON_EMPTY_RESPONSE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/futures/v1/historical/funding-rate-messages?market=${market}&instrument=${instrument}&after_ts=${after_ts}&last_ccseq=${last_ccseq}&limit=${limit}&mapping_priority=${mapping_priority}&response_format=${response_format}&return_404_on_empty_response=${return_404_on_empty_response}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/futures/v1/markets/instruments", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrumentStatus = 'TODO_EDIT_THE_INSTRUMENT_STATUS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/futures/v1/markets/instruments?market=${market}&instrument=${instrument}&instrument_status=${instrument_status}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/asset/v1/data/by/address", () => {
        let address = 'TODO_EDIT_THE_ADDRESS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let chainSymbol = 'TODO_EDIT_THE_CHAIN_SYMBOL'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/asset/v1/data/by/address?address=${address}&chain_symbol=${chain_symbol}&groups=${groups}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/overview/v1/historical/marketcap/all/assets/days", () => {
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let toTs = 'TODO_EDIT_THE_TO_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let fill = 'TODO_EDIT_THE_FILL'; // specify value as there is no example value for this parameter in OpenAPI spec
        let aggregate = 'TODO_EDIT_THE_AGGREGATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/overview/v1/historical/marketcap/all/assets/days?groups=${groups}&limit=${limit}&to_ts=${to_ts}&aggregate=${aggregate}&fill=${fill}&response_format=${response_format}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/index/cc/v1/markets", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/index/cc/v1/markets?market=${market}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/asset/v1/data/by/symbol", () => {
        let assetSymbol = 'TODO_EDIT_THE_ASSET_SYMBOL'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/asset/v1/data/by/symbol?asset_symbol=${asset_symbol}&groups=${groups}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/overview/v1/historical/marketcap/all/assets/hours", () => {
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let toTs = 'TODO_EDIT_THE_TO_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let fill = 'TODO_EDIT_THE_FILL'; // specify value as there is no example value for this parameter in OpenAPI spec
        let aggregate = 'TODO_EDIT_THE_AGGREGATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/overview/v1/historical/marketcap/all/assets/hours?groups=${groups}&limit=${limit}&to_ts=${to_ts}&aggregate=${aggregate}&fill=${fill}&response_format=${response_format}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/index/v1/historical/hours", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let toTs = 'TODO_EDIT_THE_TO_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let fill = 'TODO_EDIT_THE_FILL'; // specify value as there is no example value for this parameter in OpenAPI spec
        let aggregate = 'TODO_EDIT_THE_AGGREGATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/index/v1/historical/hours?market=${market}&instrument=${instrument}&groups=${groups}&limit=${limit}&to_ts=${to_ts}&aggregate=${aggregate}&fill=${fill}&mapping_priority=${mapping_priority}&response_format=${response_format}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/spot/v1/historical/orderbook/l2/snapshot/minute", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let depth = 'TODO_EDIT_THE_DEPTH'; // specify value as there is no example value for this parameter in OpenAPI spec
        let minuteTs = 'TODO_EDIT_THE_MINUTE_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/spot/v1/historical/orderbook/l2/snapshot/minute?market=${market}&instrument=${instrument}&minute_ts=${minute_ts}&depth=${depth}&mapping_priority=${mapping_priority}&response_format=${response_format}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/spot/v1/latest/instrument/metadata", () => {
        let market = 'coinbase'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let instruments = '[\"BTC-USD\",\"ETH-USD\"]'; // extracted from 'example' field defined at the parameter level of OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/spot/v1/latest/instrument/metadata?market=${market}&instruments=${instruments}&groups=${groups}&mapping_priority=${mapping_priority}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/futures/v1/latest/funding-rate/tick", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instruments = 'TODO_EDIT_THE_INSTRUMENTS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/futures/v1/latest/funding-rate/tick?market=${market}&instruments=${instruments}&groups=${groups}&mapping_priority=${mapping_priority}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/news/v1/source/list", () => {
        let lang = 'TODO_EDIT_THE_LANG'; // specify value as there is no example value for this parameter in OpenAPI spec
        let type = 'TODO_EDIT_THE_TYPE'; // specify value as there is no example value for this parameter in OpenAPI spec
        let status = 'TODO_EDIT_THE_STATUS'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/news/v1/source/list?lang=${lang}&type=${type}&status=${status}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/futures/v1/historical/open-interest/hours", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let toTs = 'TODO_EDIT_THE_TO_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let fill = 'TODO_EDIT_THE_FILL'; // specify value as there is no example value for this parameter in OpenAPI spec
        let aggregate = 'TODO_EDIT_THE_AGGREGATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/futures/v1/historical/open-interest/hours?market=${market}&instrument=${instrument}&groups=${groups}&limit=${limit}&to_ts=${to_ts}&aggregate=${aggregate}&fill=${fill}&mapping_priority=${mapping_priority}&response_format=${response_format}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/spot/v1/historical/days", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let toTs = 'TODO_EDIT_THE_TO_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let fill = 'TODO_EDIT_THE_FILL'; // specify value as there is no example value for this parameter in OpenAPI spec
        let aggregate = 'TODO_EDIT_THE_AGGREGATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/spot/v1/historical/days?market=${market}&instrument=${instrument}&groups=${groups}&limit=${limit}&to_ts=${to_ts}&aggregate=${aggregate}&fill=${fill}&mapping_priority=${mapping_priority}&response_format=${response_format}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/futures/v1/latest/tick", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instruments = 'TODO_EDIT_THE_INSTRUMENTS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/futures/v1/latest/tick?market=${market}&instruments=${instruments}&groups=${groups}&mapping_priority=${mapping_priority}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/overview/v1/historical/marketcap/ftw/assets/days", () => {
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let toTs = 'TODO_EDIT_THE_TO_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let fill = 'TODO_EDIT_THE_FILL'; // specify value as there is no example value for this parameter in OpenAPI spec
        let aggregate = 'TODO_EDIT_THE_AGGREGATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/overview/v1/historical/marketcap/ftw/assets/days?groups=${groups}&limit=${limit}&to_ts=${to_ts}&aggregate=${aggregate}&fill=${fill}&response_format=${response_format}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/overview/v1/latest/marketcap/ftw/tick", () => {
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/overview/v1/latest/marketcap/ftw/tick?groups=${groups}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/index/v1/latest/instrument/metadata", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instruments = 'TODO_EDIT_THE_INSTRUMENTS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/index/v1/latest/instrument/metadata?market=${market}&instruments=${instruments}&groups=${groups}&mapping_priority=${mapping_priority}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/index/cc/v1/historical/minutes", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let toTs = 'TODO_EDIT_THE_TO_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let fill = 'TODO_EDIT_THE_FILL'; // specify value as there is no example value for this parameter in OpenAPI spec
        let aggregate = 'TODO_EDIT_THE_AGGREGATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/index/cc/v1/historical/minutes?market=${market}&instrument=${instrument}&groups=${groups}&limit=${limit}&to_ts=${to_ts}&aggregate=${aggregate}&fill=${fill}&mapping_priority=${mapping_priority}&response_format=${response_format}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/futures/v1/historical/hours", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let toTs = 'TODO_EDIT_THE_TO_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let fill = 'TODO_EDIT_THE_FILL'; // specify value as there is no example value for this parameter in OpenAPI spec
        let aggregate = 'TODO_EDIT_THE_AGGREGATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/futures/v1/historical/hours?market=${market}&instrument=${instrument}&groups=${groups}&limit=${limit}&to_ts=${to_ts}&aggregate=${aggregate}&fill=${fill}&mapping_priority=${mapping_priority}&response_format=${response_format}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/news/v1/category/list", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/news/v1/category/list`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/index/v1/historical/minutes", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let toTs = 'TODO_EDIT_THE_TO_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let fill = 'TODO_EDIT_THE_FILL'; // specify value as there is no example value for this parameter in OpenAPI spec
        let aggregate = 'TODO_EDIT_THE_AGGREGATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/index/v1/historical/minutes?market=${market}&instrument=${instrument}&groups=${groups}&limit=${limit}&to_ts=${to_ts}&aggregate=${aggregate}&fill=${fill}&mapping_priority=${mapping_priority}&response_format=${response_format}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/spot/v1/markets/instruments/unmapped", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrumentStatus = 'TODO_EDIT_THE_INSTRUMENT_STATUS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/spot/v1/markets/instruments/unmapped?market=${market}&instrument=${instrument}&instrument_status=${instrument_status}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/futures/v1/historical/funding-rate-messages/hour", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let hourTs = 'TODO_EDIT_THE_HOUR_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let return404OnEmptyResponse = 'TODO_EDIT_THE_RETURN_404_ON_EMPTY_RESPONSE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/futures/v1/historical/funding-rate-messages/hour?market=${market}&instrument=${instrument}&hour_ts=${hour_ts}&mapping_priority=${mapping_priority}&response_format=${response_format}&return_404_on_empty_response=${return_404_on_empty_response}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/spot/v1/historical/trades/hour", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let hourTs = 'TODO_EDIT_THE_HOUR_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let return404OnEmptyResponse = 'TODO_EDIT_THE_RETURN_404_ON_EMPTY_RESPONSE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/spot/v1/historical/trades/hour?market=${market}&instrument=${instrument}&hour_ts=${hour_ts}&mapping_priority=${mapping_priority}&response_format=${response_format}&return_404_on_empty_response=${return_404_on_empty_response}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/spot/v1/historical/trades", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let afterTs = 'TODO_EDIT_THE_AFTER_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let lastCcseq = 'TODO_EDIT_THE_LAST_CCSEQ'; // specify value as there is no example value for this parameter in OpenAPI spec
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let return404OnEmptyResponse = 'TODO_EDIT_THE_RETURN_404_ON_EMPTY_RESPONSE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/spot/v1/historical/trades?market=${market}&instrument=${instrument}&after_ts=${after_ts}&last_ccseq=${last_ccseq}&limit=${limit}&mapping_priority=${mapping_priority}&response_format=${response_format}&return_404_on_empty_response=${return_404_on_empty_response}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/index/cc/v1/latest/tick", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instruments = 'TODO_EDIT_THE_INSTRUMENTS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/index/cc/v1/latest/tick?market=${market}&instruments=${instruments}&groups=${groups}&mapping_priority=${mapping_priority}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/overview/v1/historical/marketcap/ftw/assets/hours", () => {
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let toTs = 'TODO_EDIT_THE_TO_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let fill = 'TODO_EDIT_THE_FILL'; // specify value as there is no example value for this parameter in OpenAPI spec
        let aggregate = 'TODO_EDIT_THE_AGGREGATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/overview/v1/historical/marketcap/ftw/assets/hours?groups=${groups}&limit=${limit}&to_ts=${to_ts}&aggregate=${aggregate}&fill=${fill}&response_format=${response_format}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/index/cc/v1/historical/hours", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let toTs = 'TODO_EDIT_THE_TO_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let fill = 'TODO_EDIT_THE_FILL'; // specify value as there is no example value for this parameter in OpenAPI spec
        let aggregate = 'TODO_EDIT_THE_AGGREGATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/index/cc/v1/historical/hours?market=${market}&instrument=${instrument}&groups=${groups}&limit=${limit}&to_ts=${to_ts}&aggregate=${aggregate}&fill=${fill}&mapping_priority=${mapping_priority}&response_format=${response_format}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/index/v1/historical/messages", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let afterTs = 'TODO_EDIT_THE_AFTER_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let lastCcseq = 'TODO_EDIT_THE_LAST_CCSEQ'; // specify value as there is no example value for this parameter in OpenAPI spec
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let return404OnEmptyResponse = 'TODO_EDIT_THE_RETURN_404_ON_EMPTY_RESPONSE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/index/v1/historical/messages?market=${market}&instrument=${instrument}&after_ts=${after_ts}&last_ccseq=${last_ccseq}&limit=${limit}&mapping_priority=${mapping_priority}&response_format=${response_format}&return_404_on_empty_response=${return_404_on_empty_response}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/index/v1/historical/messages/hour", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let hourTs = 'TODO_EDIT_THE_HOUR_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let return404OnEmptyResponse = 'TODO_EDIT_THE_RETURN_404_ON_EMPTY_RESPONSE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/index/v1/historical/messages/hour?market=${market}&instrument=${instrument}&hour_ts=${hour_ts}&mapping_priority=${mapping_priority}&response_format=${response_format}&return_404_on_empty_response=${return_404_on_empty_response}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/index/cc/v1/historical/days", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let toTs = 'TODO_EDIT_THE_TO_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let fill = 'TODO_EDIT_THE_FILL'; // specify value as there is no example value for this parameter in OpenAPI spec
        let aggregate = 'TODO_EDIT_THE_AGGREGATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/index/cc/v1/historical/days?market=${market}&instrument=${instrument}&groups=${groups}&limit=${limit}&to_ts=${to_ts}&aggregate=${aggregate}&fill=${fill}&mapping_priority=${mapping_priority}&response_format=${response_format}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/index/cc/v1/historical/messages", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let afterTs = 'TODO_EDIT_THE_AFTER_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let lastCcseq = 'TODO_EDIT_THE_LAST_CCSEQ'; // specify value as there is no example value for this parameter in OpenAPI spec
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let return404OnEmptyResponse = 'TODO_EDIT_THE_RETURN_404_ON_EMPTY_RESPONSE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/index/cc/v1/historical/messages?market=${market}&instrument=${instrument}&after_ts=${after_ts}&last_ccseq=${last_ccseq}&mapping_priority=${mapping_priority}&limit=${limit}&response_format=${response_format}&return_404_on_empty_response=${return_404_on_empty_response}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/spot/v1/latest/tick", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instruments = 'TODO_EDIT_THE_INSTRUMENTS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/spot/v1/latest/tick?market=${market}&instruments=${instruments}&groups=${groups}&mapping_priority=${mapping_priority}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/futures/v1/historical/trades/hour", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let hourTs = 'TODO_EDIT_THE_HOUR_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let return404OnEmptyResponse = 'TODO_EDIT_THE_RETURN_404_ON_EMPTY_RESPONSE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/futures/v1/historical/trades/hour?market=${market}&instrument=${instrument}&hour_ts=${hour_ts}&mapping_priority=${mapping_priority}&response_format=${response_format}&return_404_on_empty_response=${return_404_on_empty_response}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/spot/v1/historical/hours", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let toTs = 'TODO_EDIT_THE_TO_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let fill = 'TODO_EDIT_THE_FILL'; // specify value as there is no example value for this parameter in OpenAPI spec
        let aggregate = 'TODO_EDIT_THE_AGGREGATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/spot/v1/historical/hours?market=${market}&instrument=${instrument}&groups=${groups}&limit=${limit}&to_ts=${to_ts}&aggregate=${aggregate}&fill=${fill}&mapping_priority=${mapping_priority}&response_format=${response_format}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/futures/v1/historical/open-interest/minutes", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let toTs = 'TODO_EDIT_THE_TO_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let fill = 'TODO_EDIT_THE_FILL'; // specify value as there is no example value for this parameter in OpenAPI spec
        let aggregate = 'TODO_EDIT_THE_AGGREGATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/futures/v1/historical/open-interest/minutes?market=${market}&instrument=${instrument}&groups=${groups}&limit=${limit}&to_ts=${to_ts}&aggregate=${aggregate}&fill=${fill}&mapping_priority=${mapping_priority}&response_format=${response_format}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/futures/v1/historical/funding-rate/hours", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let groups = 'TODO_EDIT_THE_GROUPS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let mappingPriority = 'TODO_EDIT_THE_MAPPING_PRIORITY'; // specify value as there is no example value for this parameter in OpenAPI spec
        let responseFormat = 'TODO_EDIT_THE_RESPONSE_FORMAT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let toTs = 'TODO_EDIT_THE_TO_TS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let fill = 'TODO_EDIT_THE_FILL'; // specify value as there is no example value for this parameter in OpenAPI spec
        let aggregate = 'TODO_EDIT_THE_AGGREGATE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/futures/v1/historical/funding-rate/hours?market=${market}&instrument=${instrument}&groups=${groups}&limit=${limit}&to_ts=${to_ts}&aggregate=${aggregate}&fill=${fill}&mapping_priority=${mapping_priority}&response_format=${response_format}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

    group("/index/cc/v1/markets/instruments/unmapped", () => {
        let market = 'TODO_EDIT_THE_MARKET'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrumentStatus = 'TODO_EDIT_THE_INSTRUMENT_STATUS'; // specify value as there is no example value for this parameter in OpenAPI spec
        let instrument = 'TODO_EDIT_THE_INSTRUMENT'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/index/cc/v1/markets/instruments/unmapped?market=${market}&instrument=${instrument}&instrument_status=${instrument_status}`;
            let request = http.get(url);

            check(request, {
                "Success response from the API.": (r) => r.status === 200
            });
        }
    });

}
