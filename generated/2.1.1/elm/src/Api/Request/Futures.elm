{-
   CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry
   CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.

   The version of the OpenAPI document: 2.1.1
   Contact: data@cryptocompare.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.Futures exposing
    ( futuresV1HistoricalDays, MappingPriority(..), mappingPriorityVariants, ResponseFormat(..), responseFormatVariants
    , futuresV1HistoricalFundingRateDays, MappingPriority(..), mappingPriorityVariants, ResponseFormat(..), responseFormatVariants
    , futuresV1HistoricalFundingRateHours, MappingPriority(..), mappingPriorityVariants, ResponseFormat(..), responseFormatVariants
    , futuresV1HistoricalFundingRateMessages, MappingPriority(..), mappingPriorityVariants, ResponseFormat(..), responseFormatVariants
    , futuresV1HistoricalFundingRateMessagesHour, MappingPriority(..), mappingPriorityVariants, ResponseFormat(..), responseFormatVariants
    , futuresV1HistoricalFundingRateMinutes, MappingPriority(..), mappingPriorityVariants, ResponseFormat(..), responseFormatVariants
    , futuresV1HistoricalHours, MappingPriority(..), mappingPriorityVariants, ResponseFormat(..), responseFormatVariants
    , futuresV1HistoricalMinutes, MappingPriority(..), mappingPriorityVariants, ResponseFormat(..), responseFormatVariants
    , futuresV1HistoricalOpenInterestDays, MappingPriority(..), mappingPriorityVariants, ResponseFormat(..), responseFormatVariants
    , futuresV1HistoricalOpenInterestHours, MappingPriority(..), mappingPriorityVariants, ResponseFormat(..), responseFormatVariants
    , futuresV1HistoricalOpenInterestMessages, MappingPriority(..), mappingPriorityVariants, ResponseFormat(..), responseFormatVariants
    , futuresV1HistoricalOpenInterestMessagesHour, MappingPriority(..), mappingPriorityVariants, ResponseFormat(..), responseFormatVariants
    , futuresV1HistoricalOpenInterestMinutes, MappingPriority(..), mappingPriorityVariants, ResponseFormat(..), responseFormatVariants
    , futuresV1HistoricalTrades, MappingPriority(..), mappingPriorityVariants, ResponseFormat(..), responseFormatVariants
    , futuresV1HistoricalTradesHour, MappingPriority(..), mappingPriorityVariants, ResponseFormat(..), responseFormatVariants
    , futuresV1LatestFundingRateTick, MappingPriority(..), mappingPriorityVariants
    , futuresV1LatestInstrumentMetadata, MappingPriority(..), mappingPriorityVariants
    , futuresV1LatestOpenInterestTick, MappingPriority(..), mappingPriorityVariants
    , futuresV1LatestTick, MappingPriority(..), mappingPriorityVariants
    , futuresV1Markets
    , futuresV1MarketsInstruments, InstrumentStatus(..), instrumentStatusVariants
    , futuresV1MarketsInstrumentsUnmapped, InstrumentStatus(..), instrumentStatusVariants
    , indexV1HistoricalDays, MappingPriority(..), mappingPriorityVariants, ResponseFormat(..), responseFormatVariants
    , indexV1HistoricalHours, MappingPriority(..), mappingPriorityVariants, ResponseFormat(..), responseFormatVariants
    , indexV1HistoricalMessages, MappingPriority(..), mappingPriorityVariants, ResponseFormat(..), responseFormatVariants
    , indexV1HistoricalMessagesHour, MappingPriority(..), mappingPriorityVariants, ResponseFormat(..), responseFormatVariants
    , indexV1HistoricalMinutes, MappingPriority(..), mappingPriorityVariants, ResponseFormat(..), responseFormatVariants
    , indexV1LatestInstrumentMetadata, MappingPriority(..), mappingPriorityVariants
    , indexV1LatestTick, MappingPriority(..), mappingPriorityVariants
    , indexV1Markets
    , indexV1MarketsInstruments, InstrumentStatus(..), instrumentStatusVariants
    , indexV1MarketsInstrumentsUnmapped, InstrumentStatus(..), instrumentStatusVariants
    )

import Api
import Api.Data
import Dict
import Http
import Json.Decode
import Json.Encode


type MappingPriority
    = MappingPriorityMAPPEDFIRST
    | MappingPriorityUNMAPPEDFIRST


mappingPriorityVariants : List MappingPriority
mappingPriorityVariants =
    [ MappingPriorityMAPPEDFIRST
    , MappingPriorityUNMAPPEDFIRST
    ]


stringFromMappingPriority : MappingPriority -> String
stringFromMappingPriority model =
    case model of
        MappingPriorityMAPPEDFIRST ->
            "CHECK_MAPPED_FIRST"

        MappingPriorityUNMAPPEDFIRST ->
            "CHECK_UNMAPPED_FIRST"




type ResponseFormat
    = ResponseFormatJSON
    | ResponseFormatCSV


responseFormatVariants : List ResponseFormat
responseFormatVariants =
    [ ResponseFormatJSON
    , ResponseFormatCSV
    ]


stringFromResponseFormat : ResponseFormat -> String
stringFromResponseFormat model =
    case model of
        ResponseFormatJSON ->
            "JSON"

        ResponseFormatCSV ->
            "CSV"




type MappingPriority
    = MappingPriorityMAPPEDFIRST
    | MappingPriorityUNMAPPEDFIRST


mappingPriorityVariants : List MappingPriority
mappingPriorityVariants =
    [ MappingPriorityMAPPEDFIRST
    , MappingPriorityUNMAPPEDFIRST
    ]


stringFromMappingPriority : MappingPriority -> String
stringFromMappingPriority model =
    case model of
        MappingPriorityMAPPEDFIRST ->
            "CHECK_MAPPED_FIRST"

        MappingPriorityUNMAPPEDFIRST ->
            "CHECK_UNMAPPED_FIRST"




type ResponseFormat
    = ResponseFormatJSON
    | ResponseFormatCSV


responseFormatVariants : List ResponseFormat
responseFormatVariants =
    [ ResponseFormatJSON
    , ResponseFormatCSV
    ]


stringFromResponseFormat : ResponseFormat -> String
stringFromResponseFormat model =
    case model of
        ResponseFormatJSON ->
            "JSON"

        ResponseFormatCSV ->
            "CSV"




type MappingPriority
    = MappingPriorityMAPPEDFIRST
    | MappingPriorityUNMAPPEDFIRST


mappingPriorityVariants : List MappingPriority
mappingPriorityVariants =
    [ MappingPriorityMAPPEDFIRST
    , MappingPriorityUNMAPPEDFIRST
    ]


stringFromMappingPriority : MappingPriority -> String
stringFromMappingPriority model =
    case model of
        MappingPriorityMAPPEDFIRST ->
            "CHECK_MAPPED_FIRST"

        MappingPriorityUNMAPPEDFIRST ->
            "CHECK_UNMAPPED_FIRST"




type ResponseFormat
    = ResponseFormatJSON
    | ResponseFormatCSV


responseFormatVariants : List ResponseFormat
responseFormatVariants =
    [ ResponseFormatJSON
    , ResponseFormatCSV
    ]


stringFromResponseFormat : ResponseFormat -> String
stringFromResponseFormat model =
    case model of
        ResponseFormatJSON ->
            "JSON"

        ResponseFormatCSV ->
            "CSV"




type MappingPriority
    = MappingPriorityMAPPEDFIRST
    | MappingPriorityUNMAPPEDFIRST


mappingPriorityVariants : List MappingPriority
mappingPriorityVariants =
    [ MappingPriorityMAPPEDFIRST
    , MappingPriorityUNMAPPEDFIRST
    ]


stringFromMappingPriority : MappingPriority -> String
stringFromMappingPriority model =
    case model of
        MappingPriorityMAPPEDFIRST ->
            "CHECK_MAPPED_FIRST"

        MappingPriorityUNMAPPEDFIRST ->
            "CHECK_UNMAPPED_FIRST"




type ResponseFormat
    = ResponseFormatJSON
    | ResponseFormatCSV


responseFormatVariants : List ResponseFormat
responseFormatVariants =
    [ ResponseFormatJSON
    , ResponseFormatCSV
    ]


stringFromResponseFormat : ResponseFormat -> String
stringFromResponseFormat model =
    case model of
        ResponseFormatJSON ->
            "JSON"

        ResponseFormatCSV ->
            "CSV"




type MappingPriority
    = MappingPriorityMAPPEDFIRST
    | MappingPriorityUNMAPPEDFIRST


mappingPriorityVariants : List MappingPriority
mappingPriorityVariants =
    [ MappingPriorityMAPPEDFIRST
    , MappingPriorityUNMAPPEDFIRST
    ]


stringFromMappingPriority : MappingPriority -> String
stringFromMappingPriority model =
    case model of
        MappingPriorityMAPPEDFIRST ->
            "CHECK_MAPPED_FIRST"

        MappingPriorityUNMAPPEDFIRST ->
            "CHECK_UNMAPPED_FIRST"




type ResponseFormat
    = ResponseFormatJSON
    | ResponseFormatCSV


responseFormatVariants : List ResponseFormat
responseFormatVariants =
    [ ResponseFormatJSON
    , ResponseFormatCSV
    ]


stringFromResponseFormat : ResponseFormat -> String
stringFromResponseFormat model =
    case model of
        ResponseFormatJSON ->
            "JSON"

        ResponseFormatCSV ->
            "CSV"




type MappingPriority
    = MappingPriorityMAPPEDFIRST
    | MappingPriorityUNMAPPEDFIRST


mappingPriorityVariants : List MappingPriority
mappingPriorityVariants =
    [ MappingPriorityMAPPEDFIRST
    , MappingPriorityUNMAPPEDFIRST
    ]


stringFromMappingPriority : MappingPriority -> String
stringFromMappingPriority model =
    case model of
        MappingPriorityMAPPEDFIRST ->
            "CHECK_MAPPED_FIRST"

        MappingPriorityUNMAPPEDFIRST ->
            "CHECK_UNMAPPED_FIRST"




type ResponseFormat
    = ResponseFormatJSON
    | ResponseFormatCSV


responseFormatVariants : List ResponseFormat
responseFormatVariants =
    [ ResponseFormatJSON
    , ResponseFormatCSV
    ]


stringFromResponseFormat : ResponseFormat -> String
stringFromResponseFormat model =
    case model of
        ResponseFormatJSON ->
            "JSON"

        ResponseFormatCSV ->
            "CSV"




type MappingPriority
    = MappingPriorityMAPPEDFIRST
    | MappingPriorityUNMAPPEDFIRST


mappingPriorityVariants : List MappingPriority
mappingPriorityVariants =
    [ MappingPriorityMAPPEDFIRST
    , MappingPriorityUNMAPPEDFIRST
    ]


stringFromMappingPriority : MappingPriority -> String
stringFromMappingPriority model =
    case model of
        MappingPriorityMAPPEDFIRST ->
            "CHECK_MAPPED_FIRST"

        MappingPriorityUNMAPPEDFIRST ->
            "CHECK_UNMAPPED_FIRST"




type ResponseFormat
    = ResponseFormatJSON
    | ResponseFormatCSV


responseFormatVariants : List ResponseFormat
responseFormatVariants =
    [ ResponseFormatJSON
    , ResponseFormatCSV
    ]


stringFromResponseFormat : ResponseFormat -> String
stringFromResponseFormat model =
    case model of
        ResponseFormatJSON ->
            "JSON"

        ResponseFormatCSV ->
            "CSV"




type MappingPriority
    = MappingPriorityMAPPEDFIRST
    | MappingPriorityUNMAPPEDFIRST


mappingPriorityVariants : List MappingPriority
mappingPriorityVariants =
    [ MappingPriorityMAPPEDFIRST
    , MappingPriorityUNMAPPEDFIRST
    ]


stringFromMappingPriority : MappingPriority -> String
stringFromMappingPriority model =
    case model of
        MappingPriorityMAPPEDFIRST ->
            "CHECK_MAPPED_FIRST"

        MappingPriorityUNMAPPEDFIRST ->
            "CHECK_UNMAPPED_FIRST"




type ResponseFormat
    = ResponseFormatJSON
    | ResponseFormatCSV


responseFormatVariants : List ResponseFormat
responseFormatVariants =
    [ ResponseFormatJSON
    , ResponseFormatCSV
    ]


stringFromResponseFormat : ResponseFormat -> String
stringFromResponseFormat model =
    case model of
        ResponseFormatJSON ->
            "JSON"

        ResponseFormatCSV ->
            "CSV"




type MappingPriority
    = MappingPriorityMAPPEDFIRST
    | MappingPriorityUNMAPPEDFIRST


mappingPriorityVariants : List MappingPriority
mappingPriorityVariants =
    [ MappingPriorityMAPPEDFIRST
    , MappingPriorityUNMAPPEDFIRST
    ]


stringFromMappingPriority : MappingPriority -> String
stringFromMappingPriority model =
    case model of
        MappingPriorityMAPPEDFIRST ->
            "CHECK_MAPPED_FIRST"

        MappingPriorityUNMAPPEDFIRST ->
            "CHECK_UNMAPPED_FIRST"




type ResponseFormat
    = ResponseFormatJSON
    | ResponseFormatCSV


responseFormatVariants : List ResponseFormat
responseFormatVariants =
    [ ResponseFormatJSON
    , ResponseFormatCSV
    ]


stringFromResponseFormat : ResponseFormat -> String
stringFromResponseFormat model =
    case model of
        ResponseFormatJSON ->
            "JSON"

        ResponseFormatCSV ->
            "CSV"




type MappingPriority
    = MappingPriorityMAPPEDFIRST
    | MappingPriorityUNMAPPEDFIRST


mappingPriorityVariants : List MappingPriority
mappingPriorityVariants =
    [ MappingPriorityMAPPEDFIRST
    , MappingPriorityUNMAPPEDFIRST
    ]


stringFromMappingPriority : MappingPriority -> String
stringFromMappingPriority model =
    case model of
        MappingPriorityMAPPEDFIRST ->
            "CHECK_MAPPED_FIRST"

        MappingPriorityUNMAPPEDFIRST ->
            "CHECK_UNMAPPED_FIRST"




type ResponseFormat
    = ResponseFormatJSON
    | ResponseFormatCSV


responseFormatVariants : List ResponseFormat
responseFormatVariants =
    [ ResponseFormatJSON
    , ResponseFormatCSV
    ]


stringFromResponseFormat : ResponseFormat -> String
stringFromResponseFormat model =
    case model of
        ResponseFormatJSON ->
            "JSON"

        ResponseFormatCSV ->
            "CSV"




type MappingPriority
    = MappingPriorityMAPPEDFIRST
    | MappingPriorityUNMAPPEDFIRST


mappingPriorityVariants : List MappingPriority
mappingPriorityVariants =
    [ MappingPriorityMAPPEDFIRST
    , MappingPriorityUNMAPPEDFIRST
    ]


stringFromMappingPriority : MappingPriority -> String
stringFromMappingPriority model =
    case model of
        MappingPriorityMAPPEDFIRST ->
            "CHECK_MAPPED_FIRST"

        MappingPriorityUNMAPPEDFIRST ->
            "CHECK_UNMAPPED_FIRST"




type ResponseFormat
    = ResponseFormatJSON
    | ResponseFormatCSV


responseFormatVariants : List ResponseFormat
responseFormatVariants =
    [ ResponseFormatJSON
    , ResponseFormatCSV
    ]


stringFromResponseFormat : ResponseFormat -> String
stringFromResponseFormat model =
    case model of
        ResponseFormatJSON ->
            "JSON"

        ResponseFormatCSV ->
            "CSV"




type MappingPriority
    = MappingPriorityMAPPEDFIRST
    | MappingPriorityUNMAPPEDFIRST


mappingPriorityVariants : List MappingPriority
mappingPriorityVariants =
    [ MappingPriorityMAPPEDFIRST
    , MappingPriorityUNMAPPEDFIRST
    ]


stringFromMappingPriority : MappingPriority -> String
stringFromMappingPriority model =
    case model of
        MappingPriorityMAPPEDFIRST ->
            "CHECK_MAPPED_FIRST"

        MappingPriorityUNMAPPEDFIRST ->
            "CHECK_UNMAPPED_FIRST"




type ResponseFormat
    = ResponseFormatJSON
    | ResponseFormatCSV


responseFormatVariants : List ResponseFormat
responseFormatVariants =
    [ ResponseFormatJSON
    , ResponseFormatCSV
    ]


stringFromResponseFormat : ResponseFormat -> String
stringFromResponseFormat model =
    case model of
        ResponseFormatJSON ->
            "JSON"

        ResponseFormatCSV ->
            "CSV"




type MappingPriority
    = MappingPriorityMAPPEDFIRST
    | MappingPriorityUNMAPPEDFIRST


mappingPriorityVariants : List MappingPriority
mappingPriorityVariants =
    [ MappingPriorityMAPPEDFIRST
    , MappingPriorityUNMAPPEDFIRST
    ]


stringFromMappingPriority : MappingPriority -> String
stringFromMappingPriority model =
    case model of
        MappingPriorityMAPPEDFIRST ->
            "CHECK_MAPPED_FIRST"

        MappingPriorityUNMAPPEDFIRST ->
            "CHECK_UNMAPPED_FIRST"




type ResponseFormat
    = ResponseFormatJSON
    | ResponseFormatCSV


responseFormatVariants : List ResponseFormat
responseFormatVariants =
    [ ResponseFormatJSON
    , ResponseFormatCSV
    ]


stringFromResponseFormat : ResponseFormat -> String
stringFromResponseFormat model =
    case model of
        ResponseFormatJSON ->
            "JSON"

        ResponseFormatCSV ->
            "CSV"




type MappingPriority
    = MappingPriorityMAPPEDFIRST
    | MappingPriorityUNMAPPEDFIRST


mappingPriorityVariants : List MappingPriority
mappingPriorityVariants =
    [ MappingPriorityMAPPEDFIRST
    , MappingPriorityUNMAPPEDFIRST
    ]


stringFromMappingPriority : MappingPriority -> String
stringFromMappingPriority model =
    case model of
        MappingPriorityMAPPEDFIRST ->
            "CHECK_MAPPED_FIRST"

        MappingPriorityUNMAPPEDFIRST ->
            "CHECK_UNMAPPED_FIRST"




type ResponseFormat
    = ResponseFormatJSON
    | ResponseFormatCSV


responseFormatVariants : List ResponseFormat
responseFormatVariants =
    [ ResponseFormatJSON
    , ResponseFormatCSV
    ]


stringFromResponseFormat : ResponseFormat -> String
stringFromResponseFormat model =
    case model of
        ResponseFormatJSON ->
            "JSON"

        ResponseFormatCSV ->
            "CSV"




type MappingPriority
    = MappingPriorityMAPPEDFIRST
    | MappingPriorityUNMAPPEDFIRST


mappingPriorityVariants : List MappingPriority
mappingPriorityVariants =
    [ MappingPriorityMAPPEDFIRST
    , MappingPriorityUNMAPPEDFIRST
    ]


stringFromMappingPriority : MappingPriority -> String
stringFromMappingPriority model =
    case model of
        MappingPriorityMAPPEDFIRST ->
            "CHECK_MAPPED_FIRST"

        MappingPriorityUNMAPPEDFIRST ->
            "CHECK_UNMAPPED_FIRST"




type ResponseFormat
    = ResponseFormatJSON
    | ResponseFormatCSV


responseFormatVariants : List ResponseFormat
responseFormatVariants =
    [ ResponseFormatJSON
    , ResponseFormatCSV
    ]


stringFromResponseFormat : ResponseFormat -> String
stringFromResponseFormat model =
    case model of
        ResponseFormatJSON ->
            "JSON"

        ResponseFormatCSV ->
            "CSV"




type MappingPriority
    = MappingPriorityMAPPEDFIRST
    | MappingPriorityUNMAPPEDFIRST


mappingPriorityVariants : List MappingPriority
mappingPriorityVariants =
    [ MappingPriorityMAPPEDFIRST
    , MappingPriorityUNMAPPEDFIRST
    ]


stringFromMappingPriority : MappingPriority -> String
stringFromMappingPriority model =
    case model of
        MappingPriorityMAPPEDFIRST ->
            "CHECK_MAPPED_FIRST"

        MappingPriorityUNMAPPEDFIRST ->
            "CHECK_UNMAPPED_FIRST"




type MappingPriority
    = MappingPriorityMAPPEDFIRST
    | MappingPriorityUNMAPPEDFIRST


mappingPriorityVariants : List MappingPriority
mappingPriorityVariants =
    [ MappingPriorityMAPPEDFIRST
    , MappingPriorityUNMAPPEDFIRST
    ]


stringFromMappingPriority : MappingPriority -> String
stringFromMappingPriority model =
    case model of
        MappingPriorityMAPPEDFIRST ->
            "CHECK_MAPPED_FIRST"

        MappingPriorityUNMAPPEDFIRST ->
            "CHECK_UNMAPPED_FIRST"




type MappingPriority
    = MappingPriorityMAPPEDFIRST
    | MappingPriorityUNMAPPEDFIRST


mappingPriorityVariants : List MappingPriority
mappingPriorityVariants =
    [ MappingPriorityMAPPEDFIRST
    , MappingPriorityUNMAPPEDFIRST
    ]


stringFromMappingPriority : MappingPriority -> String
stringFromMappingPriority model =
    case model of
        MappingPriorityMAPPEDFIRST ->
            "CHECK_MAPPED_FIRST"

        MappingPriorityUNMAPPEDFIRST ->
            "CHECK_UNMAPPED_FIRST"




type MappingPriority
    = MappingPriorityMAPPEDFIRST
    | MappingPriorityUNMAPPEDFIRST


mappingPriorityVariants : List MappingPriority
mappingPriorityVariants =
    [ MappingPriorityMAPPEDFIRST
    , MappingPriorityUNMAPPEDFIRST
    ]


stringFromMappingPriority : MappingPriority -> String
stringFromMappingPriority model =
    case model of
        MappingPriorityMAPPEDFIRST ->
            "CHECK_MAPPED_FIRST"

        MappingPriorityUNMAPPEDFIRST ->
            "CHECK_UNMAPPED_FIRST"




type InstrumentStatus
    = InstrumentStatusACTIVE
    | InstrumentStatusIGNORED
    | InstrumentStatusRETIRED
    | InstrumentStatusEXPIRED


instrumentStatusVariants : List InstrumentStatus
instrumentStatusVariants =
    [ InstrumentStatusACTIVE
    , InstrumentStatusIGNORED
    , InstrumentStatusRETIRED
    , InstrumentStatusEXPIRED
    ]


stringFromInstrumentStatus : InstrumentStatus -> String
stringFromInstrumentStatus model =
    case model of
        InstrumentStatusACTIVE ->
            "ACTIVE"

        InstrumentStatusIGNORED ->
            "IGNORED"

        InstrumentStatusRETIRED ->
            "RETIRED"

        InstrumentStatusEXPIRED ->
            "EXPIRED"




type InstrumentStatus
    = InstrumentStatusACTIVE
    | InstrumentStatusIGNORED
    | InstrumentStatusRETIRED
    | InstrumentStatusEXPIRED


instrumentStatusVariants : List InstrumentStatus
instrumentStatusVariants =
    [ InstrumentStatusACTIVE
    , InstrumentStatusIGNORED
    , InstrumentStatusRETIRED
    , InstrumentStatusEXPIRED
    ]


stringFromInstrumentStatus : InstrumentStatus -> String
stringFromInstrumentStatus model =
    case model of
        InstrumentStatusACTIVE ->
            "ACTIVE"

        InstrumentStatusIGNORED ->
            "IGNORED"

        InstrumentStatusRETIRED ->
            "RETIRED"

        InstrumentStatusEXPIRED ->
            "EXPIRED"




type MappingPriority
    = MappingPriorityMAPPEDFIRST
    | MappingPriorityUNMAPPEDFIRST


mappingPriorityVariants : List MappingPriority
mappingPriorityVariants =
    [ MappingPriorityMAPPEDFIRST
    , MappingPriorityUNMAPPEDFIRST
    ]


stringFromMappingPriority : MappingPriority -> String
stringFromMappingPriority model =
    case model of
        MappingPriorityMAPPEDFIRST ->
            "CHECK_MAPPED_FIRST"

        MappingPriorityUNMAPPEDFIRST ->
            "CHECK_UNMAPPED_FIRST"




type ResponseFormat
    = ResponseFormatJSON
    | ResponseFormatCSV


responseFormatVariants : List ResponseFormat
responseFormatVariants =
    [ ResponseFormatJSON
    , ResponseFormatCSV
    ]


stringFromResponseFormat : ResponseFormat -> String
stringFromResponseFormat model =
    case model of
        ResponseFormatJSON ->
            "JSON"

        ResponseFormatCSV ->
            "CSV"




type MappingPriority
    = MappingPriorityMAPPEDFIRST
    | MappingPriorityUNMAPPEDFIRST


mappingPriorityVariants : List MappingPriority
mappingPriorityVariants =
    [ MappingPriorityMAPPEDFIRST
    , MappingPriorityUNMAPPEDFIRST
    ]


stringFromMappingPriority : MappingPriority -> String
stringFromMappingPriority model =
    case model of
        MappingPriorityMAPPEDFIRST ->
            "CHECK_MAPPED_FIRST"

        MappingPriorityUNMAPPEDFIRST ->
            "CHECK_UNMAPPED_FIRST"




type ResponseFormat
    = ResponseFormatJSON
    | ResponseFormatCSV


responseFormatVariants : List ResponseFormat
responseFormatVariants =
    [ ResponseFormatJSON
    , ResponseFormatCSV
    ]


stringFromResponseFormat : ResponseFormat -> String
stringFromResponseFormat model =
    case model of
        ResponseFormatJSON ->
            "JSON"

        ResponseFormatCSV ->
            "CSV"




type MappingPriority
    = MappingPriorityMAPPEDFIRST
    | MappingPriorityUNMAPPEDFIRST


mappingPriorityVariants : List MappingPriority
mappingPriorityVariants =
    [ MappingPriorityMAPPEDFIRST
    , MappingPriorityUNMAPPEDFIRST
    ]


stringFromMappingPriority : MappingPriority -> String
stringFromMappingPriority model =
    case model of
        MappingPriorityMAPPEDFIRST ->
            "CHECK_MAPPED_FIRST"

        MappingPriorityUNMAPPEDFIRST ->
            "CHECK_UNMAPPED_FIRST"




type ResponseFormat
    = ResponseFormatJSON
    | ResponseFormatCSV


responseFormatVariants : List ResponseFormat
responseFormatVariants =
    [ ResponseFormatJSON
    , ResponseFormatCSV
    ]


stringFromResponseFormat : ResponseFormat -> String
stringFromResponseFormat model =
    case model of
        ResponseFormatJSON ->
            "JSON"

        ResponseFormatCSV ->
            "CSV"




type MappingPriority
    = MappingPriorityMAPPEDFIRST
    | MappingPriorityUNMAPPEDFIRST


mappingPriorityVariants : List MappingPriority
mappingPriorityVariants =
    [ MappingPriorityMAPPEDFIRST
    , MappingPriorityUNMAPPEDFIRST
    ]


stringFromMappingPriority : MappingPriority -> String
stringFromMappingPriority model =
    case model of
        MappingPriorityMAPPEDFIRST ->
            "CHECK_MAPPED_FIRST"

        MappingPriorityUNMAPPEDFIRST ->
            "CHECK_UNMAPPED_FIRST"




type ResponseFormat
    = ResponseFormatJSON
    | ResponseFormatCSV


responseFormatVariants : List ResponseFormat
responseFormatVariants =
    [ ResponseFormatJSON
    , ResponseFormatCSV
    ]


stringFromResponseFormat : ResponseFormat -> String
stringFromResponseFormat model =
    case model of
        ResponseFormatJSON ->
            "JSON"

        ResponseFormatCSV ->
            "CSV"




type MappingPriority
    = MappingPriorityMAPPEDFIRST
    | MappingPriorityUNMAPPEDFIRST


mappingPriorityVariants : List MappingPriority
mappingPriorityVariants =
    [ MappingPriorityMAPPEDFIRST
    , MappingPriorityUNMAPPEDFIRST
    ]


stringFromMappingPriority : MappingPriority -> String
stringFromMappingPriority model =
    case model of
        MappingPriorityMAPPEDFIRST ->
            "CHECK_MAPPED_FIRST"

        MappingPriorityUNMAPPEDFIRST ->
            "CHECK_UNMAPPED_FIRST"




type ResponseFormat
    = ResponseFormatJSON
    | ResponseFormatCSV


responseFormatVariants : List ResponseFormat
responseFormatVariants =
    [ ResponseFormatJSON
    , ResponseFormatCSV
    ]


stringFromResponseFormat : ResponseFormat -> String
stringFromResponseFormat model =
    case model of
        ResponseFormatJSON ->
            "JSON"

        ResponseFormatCSV ->
            "CSV"




type MappingPriority
    = MappingPriorityMAPPEDFIRST
    | MappingPriorityUNMAPPEDFIRST


mappingPriorityVariants : List MappingPriority
mappingPriorityVariants =
    [ MappingPriorityMAPPEDFIRST
    , MappingPriorityUNMAPPEDFIRST
    ]


stringFromMappingPriority : MappingPriority -> String
stringFromMappingPriority model =
    case model of
        MappingPriorityMAPPEDFIRST ->
            "CHECK_MAPPED_FIRST"

        MappingPriorityUNMAPPEDFIRST ->
            "CHECK_UNMAPPED_FIRST"




type MappingPriority
    = MappingPriorityMAPPEDFIRST
    | MappingPriorityUNMAPPEDFIRST


mappingPriorityVariants : List MappingPriority
mappingPriorityVariants =
    [ MappingPriorityMAPPEDFIRST
    , MappingPriorityUNMAPPEDFIRST
    ]


stringFromMappingPriority : MappingPriority -> String
stringFromMappingPriority model =
    case model of
        MappingPriorityMAPPEDFIRST ->
            "CHECK_MAPPED_FIRST"

        MappingPriorityUNMAPPEDFIRST ->
            "CHECK_UNMAPPED_FIRST"




type InstrumentStatus
    = InstrumentStatusACTIVE
    | InstrumentStatusIGNORED
    | InstrumentStatusRETIRED
    | InstrumentStatusEXPIRED


instrumentStatusVariants : List InstrumentStatus
instrumentStatusVariants =
    [ InstrumentStatusACTIVE
    , InstrumentStatusIGNORED
    , InstrumentStatusRETIRED
    , InstrumentStatusEXPIRED
    ]


stringFromInstrumentStatus : InstrumentStatus -> String
stringFromInstrumentStatus model =
    case model of
        InstrumentStatusACTIVE ->
            "ACTIVE"

        InstrumentStatusIGNORED ->
            "IGNORED"

        InstrumentStatusRETIRED ->
            "RETIRED"

        InstrumentStatusEXPIRED ->
            "EXPIRED"




type InstrumentStatus
    = InstrumentStatusACTIVE
    | InstrumentStatusIGNORED
    | InstrumentStatusRETIRED
    | InstrumentStatusEXPIRED


instrumentStatusVariants : List InstrumentStatus
instrumentStatusVariants =
    [ InstrumentStatusACTIVE
    , InstrumentStatusIGNORED
    , InstrumentStatusRETIRED
    , InstrumentStatusEXPIRED
    ]


stringFromInstrumentStatus : InstrumentStatus -> String
stringFromInstrumentStatus model =
    case model of
        InstrumentStatusACTIVE ->
            "ACTIVE"

        InstrumentStatusIGNORED ->
            "IGNORED"

        InstrumentStatusRETIRED ->
            "RETIRED"

        InstrumentStatusEXPIRED ->
            "EXPIRED"





futuresV1HistoricalDays : String -> String -> Maybe List String -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Bool -> Maybe MappingPriority -> Maybe ResponseFormat -> Api.Request Api.Data.GENERICRESPONSE
futuresV1HistoricalDays market_query instrument_query groups_query limit_query toTs_query aggregate_query fill_query mappingPriority_query responseFormat_query =
    Api.request
        "GET"
        "/futures/v1/historical/days"
        []
        [ ( "market", Just <| identity market_query ), ( "instrument", Just <| identity instrument_query ), ( "groups", Maybe.map String.join "," << List.map identity groups_query ), ( "limit", Maybe.map String.fromInt limit_query ), ( "to_ts", Maybe.map String.fromInt toTs_query ), ( "aggregate", Maybe.map String.fromInt aggregate_query ), ( "fill", Maybe.map (\val -> if val then "true" else "false") fill_query ), ( "mapping_priority", Maybe.map stringFromMappingPriority mappingPriority_query ), ( "response_format", Maybe.map stringFromResponseFormat responseFormat_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



futuresV1HistoricalFundingRateDays : String -> String -> Maybe List String -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Bool -> Maybe MappingPriority -> Maybe ResponseFormat -> Api.Request Api.Data.GENERICRESPONSE
futuresV1HistoricalFundingRateDays market_query instrument_query groups_query limit_query toTs_query aggregate_query fill_query mappingPriority_query responseFormat_query =
    Api.request
        "GET"
        "/futures/v1/historical/funding-rate/days"
        []
        [ ( "market", Just <| identity market_query ), ( "instrument", Just <| identity instrument_query ), ( "groups", Maybe.map String.join "," << List.map identity groups_query ), ( "limit", Maybe.map String.fromInt limit_query ), ( "to_ts", Maybe.map String.fromInt toTs_query ), ( "aggregate", Maybe.map String.fromInt aggregate_query ), ( "fill", Maybe.map (\val -> if val then "true" else "false") fill_query ), ( "mapping_priority", Maybe.map stringFromMappingPriority mappingPriority_query ), ( "response_format", Maybe.map stringFromResponseFormat responseFormat_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



futuresV1HistoricalFundingRateHours : String -> String -> Maybe List String -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Bool -> Maybe MappingPriority -> Maybe ResponseFormat -> Api.Request Api.Data.GENERICRESPONSE
futuresV1HistoricalFundingRateHours market_query instrument_query groups_query limit_query toTs_query aggregate_query fill_query mappingPriority_query responseFormat_query =
    Api.request
        "GET"
        "/futures/v1/historical/funding-rate/hours"
        []
        [ ( "market", Just <| identity market_query ), ( "instrument", Just <| identity instrument_query ), ( "groups", Maybe.map String.join "," << List.map identity groups_query ), ( "limit", Maybe.map String.fromInt limit_query ), ( "to_ts", Maybe.map String.fromInt toTs_query ), ( "aggregate", Maybe.map String.fromInt aggregate_query ), ( "fill", Maybe.map (\val -> if val then "true" else "false") fill_query ), ( "mapping_priority", Maybe.map stringFromMappingPriority mappingPriority_query ), ( "response_format", Maybe.map stringFromResponseFormat responseFormat_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



futuresV1HistoricalFundingRateMessages : String -> String -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe MappingPriority -> Maybe ResponseFormat -> Maybe Bool -> Api.Request Api.Data.GENERICRESPONSE
futuresV1HistoricalFundingRateMessages market_query instrument_query afterTs_query lastCcseq_query limit_query mappingPriority_query responseFormat_query return404OnEmptyResponse_query =
    Api.request
        "GET"
        "/futures/v1/historical/funding-rate-messages"
        []
        [ ( "market", Just <| identity market_query ), ( "instrument", Just <| identity instrument_query ), ( "after_ts", Maybe.map String.fromInt afterTs_query ), ( "last_ccseq", Maybe.map String.fromInt lastCcseq_query ), ( "limit", Maybe.map String.fromInt limit_query ), ( "mapping_priority", Maybe.map stringFromMappingPriority mappingPriority_query ), ( "response_format", Maybe.map stringFromResponseFormat responseFormat_query ), ( "return_404_on_empty_response", Maybe.map (\val -> if val then "true" else "false") return404OnEmptyResponse_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



futuresV1HistoricalFundingRateMessagesHour : String -> String -> Maybe Int -> Maybe MappingPriority -> Maybe ResponseFormat -> Maybe Bool -> Api.Request Api.Data.GENERICRESPONSE
futuresV1HistoricalFundingRateMessagesHour market_query instrument_query hourTs_query mappingPriority_query responseFormat_query return404OnEmptyResponse_query =
    Api.request
        "GET"
        "/futures/v1/historical/funding-rate-messages/hour"
        []
        [ ( "market", Just <| identity market_query ), ( "instrument", Just <| identity instrument_query ), ( "hour_ts", Maybe.map String.fromInt hourTs_query ), ( "mapping_priority", Maybe.map stringFromMappingPriority mappingPriority_query ), ( "response_format", Maybe.map stringFromResponseFormat responseFormat_query ), ( "return_404_on_empty_response", Maybe.map (\val -> if val then "true" else "false") return404OnEmptyResponse_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



futuresV1HistoricalFundingRateMinutes : String -> String -> Maybe List String -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Bool -> Maybe MappingPriority -> Maybe ResponseFormat -> Api.Request Api.Data.GENERICRESPONSE
futuresV1HistoricalFundingRateMinutes market_query instrument_query groups_query limit_query toTs_query aggregate_query fill_query mappingPriority_query responseFormat_query =
    Api.request
        "GET"
        "/futures/v1/historical/funding-rate/minutes"
        []
        [ ( "market", Just <| identity market_query ), ( "instrument", Just <| identity instrument_query ), ( "groups", Maybe.map String.join "," << List.map identity groups_query ), ( "limit", Maybe.map String.fromInt limit_query ), ( "to_ts", Maybe.map String.fromInt toTs_query ), ( "aggregate", Maybe.map String.fromInt aggregate_query ), ( "fill", Maybe.map (\val -> if val then "true" else "false") fill_query ), ( "mapping_priority", Maybe.map stringFromMappingPriority mappingPriority_query ), ( "response_format", Maybe.map stringFromResponseFormat responseFormat_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



futuresV1HistoricalHours : String -> String -> Maybe List String -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Bool -> Maybe MappingPriority -> Maybe ResponseFormat -> Api.Request Api.Data.GENERICRESPONSE
futuresV1HistoricalHours market_query instrument_query groups_query limit_query toTs_query aggregate_query fill_query mappingPriority_query responseFormat_query =
    Api.request
        "GET"
        "/futures/v1/historical/hours"
        []
        [ ( "market", Just <| identity market_query ), ( "instrument", Just <| identity instrument_query ), ( "groups", Maybe.map String.join "," << List.map identity groups_query ), ( "limit", Maybe.map String.fromInt limit_query ), ( "to_ts", Maybe.map String.fromInt toTs_query ), ( "aggregate", Maybe.map String.fromInt aggregate_query ), ( "fill", Maybe.map (\val -> if val then "true" else "false") fill_query ), ( "mapping_priority", Maybe.map stringFromMappingPriority mappingPriority_query ), ( "response_format", Maybe.map stringFromResponseFormat responseFormat_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



futuresV1HistoricalMinutes : String -> String -> Maybe List String -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Bool -> Maybe MappingPriority -> Maybe ResponseFormat -> Api.Request Api.Data.GENERICRESPONSE
futuresV1HistoricalMinutes market_query instrument_query groups_query limit_query toTs_query aggregate_query fill_query mappingPriority_query responseFormat_query =
    Api.request
        "GET"
        "/futures/v1/historical/minutes"
        []
        [ ( "market", Just <| identity market_query ), ( "instrument", Just <| identity instrument_query ), ( "groups", Maybe.map String.join "," << List.map identity groups_query ), ( "limit", Maybe.map String.fromInt limit_query ), ( "to_ts", Maybe.map String.fromInt toTs_query ), ( "aggregate", Maybe.map String.fromInt aggregate_query ), ( "fill", Maybe.map (\val -> if val then "true" else "false") fill_query ), ( "mapping_priority", Maybe.map stringFromMappingPriority mappingPriority_query ), ( "response_format", Maybe.map stringFromResponseFormat responseFormat_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



futuresV1HistoricalOpenInterestDays : String -> String -> Maybe List String -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Bool -> Maybe MappingPriority -> Maybe ResponseFormat -> Api.Request Api.Data.GENERICRESPONSE
futuresV1HistoricalOpenInterestDays market_query instrument_query groups_query limit_query toTs_query aggregate_query fill_query mappingPriority_query responseFormat_query =
    Api.request
        "GET"
        "/futures/v1/historical/open-interest/days"
        []
        [ ( "market", Just <| identity market_query ), ( "instrument", Just <| identity instrument_query ), ( "groups", Maybe.map String.join "," << List.map identity groups_query ), ( "limit", Maybe.map String.fromInt limit_query ), ( "to_ts", Maybe.map String.fromInt toTs_query ), ( "aggregate", Maybe.map String.fromInt aggregate_query ), ( "fill", Maybe.map (\val -> if val then "true" else "false") fill_query ), ( "mapping_priority", Maybe.map stringFromMappingPriority mappingPriority_query ), ( "response_format", Maybe.map stringFromResponseFormat responseFormat_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



futuresV1HistoricalOpenInterestHours : String -> String -> Maybe List String -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Bool -> Maybe MappingPriority -> Maybe ResponseFormat -> Api.Request Api.Data.GENERICRESPONSE
futuresV1HistoricalOpenInterestHours market_query instrument_query groups_query limit_query toTs_query aggregate_query fill_query mappingPriority_query responseFormat_query =
    Api.request
        "GET"
        "/futures/v1/historical/open-interest/hours"
        []
        [ ( "market", Just <| identity market_query ), ( "instrument", Just <| identity instrument_query ), ( "groups", Maybe.map String.join "," << List.map identity groups_query ), ( "limit", Maybe.map String.fromInt limit_query ), ( "to_ts", Maybe.map String.fromInt toTs_query ), ( "aggregate", Maybe.map String.fromInt aggregate_query ), ( "fill", Maybe.map (\val -> if val then "true" else "false") fill_query ), ( "mapping_priority", Maybe.map stringFromMappingPriority mappingPriority_query ), ( "response_format", Maybe.map stringFromResponseFormat responseFormat_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



futuresV1HistoricalOpenInterestMessages : String -> String -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe MappingPriority -> Maybe ResponseFormat -> Maybe Bool -> Api.Request Api.Data.GENERICRESPONSE
futuresV1HistoricalOpenInterestMessages market_query instrument_query afterTs_query lastCcseq_query limit_query mappingPriority_query responseFormat_query return404OnEmptyResponse_query =
    Api.request
        "GET"
        "/futures/v1/historical/open-interest-messages"
        []
        [ ( "market", Just <| identity market_query ), ( "instrument", Just <| identity instrument_query ), ( "after_ts", Maybe.map String.fromInt afterTs_query ), ( "last_ccseq", Maybe.map String.fromInt lastCcseq_query ), ( "limit", Maybe.map String.fromInt limit_query ), ( "mapping_priority", Maybe.map stringFromMappingPriority mappingPriority_query ), ( "response_format", Maybe.map stringFromResponseFormat responseFormat_query ), ( "return_404_on_empty_response", Maybe.map (\val -> if val then "true" else "false") return404OnEmptyResponse_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



futuresV1HistoricalOpenInterestMessagesHour : String -> String -> Maybe Int -> Maybe MappingPriority -> Maybe ResponseFormat -> Maybe Bool -> Api.Request Api.Data.GENERICRESPONSE
futuresV1HistoricalOpenInterestMessagesHour market_query instrument_query hourTs_query mappingPriority_query responseFormat_query return404OnEmptyResponse_query =
    Api.request
        "GET"
        "/futures/v1/historical/open-interest-messages/hour"
        []
        [ ( "market", Just <| identity market_query ), ( "instrument", Just <| identity instrument_query ), ( "hour_ts", Maybe.map String.fromInt hourTs_query ), ( "mapping_priority", Maybe.map stringFromMappingPriority mappingPriority_query ), ( "response_format", Maybe.map stringFromResponseFormat responseFormat_query ), ( "return_404_on_empty_response", Maybe.map (\val -> if val then "true" else "false") return404OnEmptyResponse_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



futuresV1HistoricalOpenInterestMinutes : String -> String -> Maybe List String -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Bool -> Maybe MappingPriority -> Maybe ResponseFormat -> Api.Request Api.Data.GENERICRESPONSE
futuresV1HistoricalOpenInterestMinutes market_query instrument_query groups_query limit_query toTs_query aggregate_query fill_query mappingPriority_query responseFormat_query =
    Api.request
        "GET"
        "/futures/v1/historical/open-interest/minutes"
        []
        [ ( "market", Just <| identity market_query ), ( "instrument", Just <| identity instrument_query ), ( "groups", Maybe.map String.join "," << List.map identity groups_query ), ( "limit", Maybe.map String.fromInt limit_query ), ( "to_ts", Maybe.map String.fromInt toTs_query ), ( "aggregate", Maybe.map String.fromInt aggregate_query ), ( "fill", Maybe.map (\val -> if val then "true" else "false") fill_query ), ( "mapping_priority", Maybe.map stringFromMappingPriority mappingPriority_query ), ( "response_format", Maybe.map stringFromResponseFormat responseFormat_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



futuresV1HistoricalTrades : String -> String -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe MappingPriority -> Maybe ResponseFormat -> Maybe Bool -> Api.Request Api.Data.GENERICRESPONSE
futuresV1HistoricalTrades market_query instrument_query afterTs_query lastCcseq_query limit_query mappingPriority_query responseFormat_query return404OnEmptyResponse_query =
    Api.request
        "GET"
        "/futures/v1/historical/trades"
        []
        [ ( "market", Just <| identity market_query ), ( "instrument", Just <| identity instrument_query ), ( "after_ts", Maybe.map String.fromInt afterTs_query ), ( "last_ccseq", Maybe.map String.fromInt lastCcseq_query ), ( "limit", Maybe.map String.fromInt limit_query ), ( "mapping_priority", Maybe.map stringFromMappingPriority mappingPriority_query ), ( "response_format", Maybe.map stringFromResponseFormat responseFormat_query ), ( "return_404_on_empty_response", Maybe.map (\val -> if val then "true" else "false") return404OnEmptyResponse_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



futuresV1HistoricalTradesHour : String -> String -> Maybe Int -> Maybe MappingPriority -> Maybe ResponseFormat -> Maybe Bool -> Api.Request Api.Data.GENERICRESPONSE
futuresV1HistoricalTradesHour market_query instrument_query hourTs_query mappingPriority_query responseFormat_query return404OnEmptyResponse_query =
    Api.request
        "GET"
        "/futures/v1/historical/trades/hour"
        []
        [ ( "market", Just <| identity market_query ), ( "instrument", Just <| identity instrument_query ), ( "hour_ts", Maybe.map String.fromInt hourTs_query ), ( "mapping_priority", Maybe.map stringFromMappingPriority mappingPriority_query ), ( "response_format", Maybe.map stringFromResponseFormat responseFormat_query ), ( "return_404_on_empty_response", Maybe.map (\val -> if val then "true" else "false") return404OnEmptyResponse_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



futuresV1LatestFundingRateTick : String -> List String -> Maybe List String -> Maybe MappingPriority -> Api.Request Api.Data.GENERICRESPONSE
futuresV1LatestFundingRateTick market_query instruments_query groups_query mappingPriority_query =
    Api.request
        "GET"
        "/futures/v1/latest/funding-rate/tick"
        []
        [ ( "market", Just <| identity market_query ), ( "instruments", Just <| String.join "," << List.map identity instruments_query ), ( "groups", Maybe.map String.join "," << List.map identity groups_query ), ( "mapping_priority", Maybe.map stringFromMappingPriority mappingPriority_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



futuresV1LatestInstrumentMetadata : String -> List String -> Maybe List String -> Maybe MappingPriority -> Api.Request Api.Data.GENERICRESPONSE
futuresV1LatestInstrumentMetadata market_query instruments_query groups_query mappingPriority_query =
    Api.request
        "GET"
        "/futures/v1/latest/instrument/metadata"
        []
        [ ( "market", Just <| identity market_query ), ( "instruments", Just <| String.join "," << List.map identity instruments_query ), ( "groups", Maybe.map String.join "," << List.map identity groups_query ), ( "mapping_priority", Maybe.map stringFromMappingPriority mappingPriority_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



futuresV1LatestOpenInterestTick : String -> List String -> Maybe List String -> Maybe MappingPriority -> Api.Request Api.Data.GENERICRESPONSE
futuresV1LatestOpenInterestTick market_query instruments_query groups_query mappingPriority_query =
    Api.request
        "GET"
        "/futures/v1/latest/open-interest/tick"
        []
        [ ( "market", Just <| identity market_query ), ( "instruments", Just <| String.join "," << List.map identity instruments_query ), ( "groups", Maybe.map String.join "," << List.map identity groups_query ), ( "mapping_priority", Maybe.map stringFromMappingPriority mappingPriority_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



futuresV1LatestTick : String -> List String -> Maybe List String -> Maybe MappingPriority -> Api.Request Api.Data.GENERICRESPONSE
futuresV1LatestTick market_query instruments_query groups_query mappingPriority_query =
    Api.request
        "GET"
        "/futures/v1/latest/tick"
        []
        [ ( "market", Just <| identity market_query ), ( "instruments", Just <| String.join "," << List.map identity instruments_query ), ( "groups", Maybe.map String.join "," << List.map identity groups_query ), ( "mapping_priority", Maybe.map stringFromMappingPriority mappingPriority_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



futuresV1Markets : Maybe String -> Api.Request Api.Data.GENERICRESPONSE
futuresV1Markets market_query =
    Api.request
        "GET"
        "/futures/v1/markets"
        []
        [ ( "market", Maybe.map identity market_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



futuresV1MarketsInstruments : Maybe String -> Maybe String -> Maybe List InstrumentStatus -> Api.Request Api.Data.GENERICRESPONSE
futuresV1MarketsInstruments market_query instrument_query instrumentStatus_query =
    Api.request
        "GET"
        "/futures/v1/markets/instruments"
        []
        [ ( "market", Maybe.map identity market_query ), ( "instrument", Maybe.map identity instrument_query ), ( "instrument_status", Maybe.map String.join "," << List.map stringFromInstrumentStatus instrumentStatus_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



futuresV1MarketsInstrumentsUnmapped : Maybe String -> Maybe String -> Maybe List InstrumentStatus -> Api.Request Api.Data.GENERICRESPONSE
futuresV1MarketsInstrumentsUnmapped market_query instrument_query instrumentStatus_query =
    Api.request
        "GET"
        "/futures/v1/markets/instruments/unmapped"
        []
        [ ( "market", Maybe.map identity market_query ), ( "instrument", Maybe.map identity instrument_query ), ( "instrument_status", Maybe.map String.join "," << List.map stringFromInstrumentStatus instrumentStatus_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



indexV1HistoricalDays : String -> String -> Maybe List String -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Bool -> Maybe MappingPriority -> Maybe ResponseFormat -> Api.Request Api.Data.GENERICRESPONSE
indexV1HistoricalDays market_query instrument_query groups_query limit_query toTs_query aggregate_query fill_query mappingPriority_query responseFormat_query =
    Api.request
        "GET"
        "/index/v1/historical/days"
        []
        [ ( "market", Just <| identity market_query ), ( "instrument", Just <| identity instrument_query ), ( "groups", Maybe.map String.join "," << List.map identity groups_query ), ( "limit", Maybe.map String.fromInt limit_query ), ( "to_ts", Maybe.map String.fromInt toTs_query ), ( "aggregate", Maybe.map String.fromInt aggregate_query ), ( "fill", Maybe.map (\val -> if val then "true" else "false") fill_query ), ( "mapping_priority", Maybe.map stringFromMappingPriority mappingPriority_query ), ( "response_format", Maybe.map stringFromResponseFormat responseFormat_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



indexV1HistoricalHours : String -> String -> Maybe List String -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Bool -> Maybe MappingPriority -> Maybe ResponseFormat -> Api.Request Api.Data.GENERICRESPONSE
indexV1HistoricalHours market_query instrument_query groups_query limit_query toTs_query aggregate_query fill_query mappingPriority_query responseFormat_query =
    Api.request
        "GET"
        "/index/v1/historical/hours"
        []
        [ ( "market", Just <| identity market_query ), ( "instrument", Just <| identity instrument_query ), ( "groups", Maybe.map String.join "," << List.map identity groups_query ), ( "limit", Maybe.map String.fromInt limit_query ), ( "to_ts", Maybe.map String.fromInt toTs_query ), ( "aggregate", Maybe.map String.fromInt aggregate_query ), ( "fill", Maybe.map (\val -> if val then "true" else "false") fill_query ), ( "mapping_priority", Maybe.map stringFromMappingPriority mappingPriority_query ), ( "response_format", Maybe.map stringFromResponseFormat responseFormat_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



indexV1HistoricalMessages : String -> String -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe MappingPriority -> Maybe ResponseFormat -> Maybe Bool -> Api.Request Api.Data.GENERICRESPONSE
indexV1HistoricalMessages market_query instrument_query afterTs_query lastCcseq_query limit_query mappingPriority_query responseFormat_query return404OnEmptyResponse_query =
    Api.request
        "GET"
        "/index/v1/historical/messages"
        []
        [ ( "market", Just <| identity market_query ), ( "instrument", Just <| identity instrument_query ), ( "after_ts", Maybe.map String.fromInt afterTs_query ), ( "last_ccseq", Maybe.map String.fromInt lastCcseq_query ), ( "limit", Maybe.map String.fromInt limit_query ), ( "mapping_priority", Maybe.map stringFromMappingPriority mappingPriority_query ), ( "response_format", Maybe.map stringFromResponseFormat responseFormat_query ), ( "return_404_on_empty_response", Maybe.map (\val -> if val then "true" else "false") return404OnEmptyResponse_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



indexV1HistoricalMessagesHour : String -> String -> Maybe Int -> Maybe MappingPriority -> Maybe ResponseFormat -> Maybe Bool -> Api.Request Api.Data.GENERICRESPONSE
indexV1HistoricalMessagesHour market_query instrument_query hourTs_query mappingPriority_query responseFormat_query return404OnEmptyResponse_query =
    Api.request
        "GET"
        "/index/v1/historical/messages/hour"
        []
        [ ( "market", Just <| identity market_query ), ( "instrument", Just <| identity instrument_query ), ( "hour_ts", Maybe.map String.fromInt hourTs_query ), ( "mapping_priority", Maybe.map stringFromMappingPriority mappingPriority_query ), ( "response_format", Maybe.map stringFromResponseFormat responseFormat_query ), ( "return_404_on_empty_response", Maybe.map (\val -> if val then "true" else "false") return404OnEmptyResponse_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



indexV1HistoricalMinutes : String -> String -> Maybe List String -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Bool -> Maybe MappingPriority -> Maybe ResponseFormat -> Api.Request Api.Data.GENERICRESPONSE
indexV1HistoricalMinutes market_query instrument_query groups_query limit_query toTs_query aggregate_query fill_query mappingPriority_query responseFormat_query =
    Api.request
        "GET"
        "/index/v1/historical/minutes"
        []
        [ ( "market", Just <| identity market_query ), ( "instrument", Just <| identity instrument_query ), ( "groups", Maybe.map String.join "," << List.map identity groups_query ), ( "limit", Maybe.map String.fromInt limit_query ), ( "to_ts", Maybe.map String.fromInt toTs_query ), ( "aggregate", Maybe.map String.fromInt aggregate_query ), ( "fill", Maybe.map (\val -> if val then "true" else "false") fill_query ), ( "mapping_priority", Maybe.map stringFromMappingPriority mappingPriority_query ), ( "response_format", Maybe.map stringFromResponseFormat responseFormat_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



indexV1LatestInstrumentMetadata : String -> List String -> Maybe List String -> Maybe MappingPriority -> Api.Request Api.Data.GENERICRESPONSE
indexV1LatestInstrumentMetadata market_query instruments_query groups_query mappingPriority_query =
    Api.request
        "GET"
        "/index/v1/latest/instrument/metadata"
        []
        [ ( "market", Just <| identity market_query ), ( "instruments", Just <| String.join "," << List.map identity instruments_query ), ( "groups", Maybe.map String.join "," << List.map identity groups_query ), ( "mapping_priority", Maybe.map stringFromMappingPriority mappingPriority_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



indexV1LatestTick : String -> List String -> Maybe List String -> Maybe MappingPriority -> Api.Request Api.Data.GENERICRESPONSE
indexV1LatestTick market_query instruments_query groups_query mappingPriority_query =
    Api.request
        "GET"
        "/index/v1/latest/tick"
        []
        [ ( "market", Just <| identity market_query ), ( "instruments", Just <| String.join "," << List.map identity instruments_query ), ( "groups", Maybe.map String.join "," << List.map identity groups_query ), ( "mapping_priority", Maybe.map stringFromMappingPriority mappingPriority_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



indexV1Markets : Maybe String -> Api.Request Api.Data.GENERICRESPONSE
indexV1Markets market_query =
    Api.request
        "GET"
        "/index/v1/markets"
        []
        [ ( "market", Maybe.map identity market_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



indexV1MarketsInstruments : Maybe String -> Maybe String -> Maybe List InstrumentStatus -> Api.Request Api.Data.GENERICRESPONSE
indexV1MarketsInstruments market_query instrument_query instrumentStatus_query =
    Api.request
        "GET"
        "/index/v1/markets/instruments"
        []
        [ ( "market", Maybe.map identity market_query ), ( "instrument", Maybe.map identity instrument_query ), ( "instrument_status", Maybe.map String.join "," << List.map stringFromInstrumentStatus instrumentStatus_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



indexV1MarketsInstrumentsUnmapped : Maybe String -> Maybe String -> Maybe List InstrumentStatus -> Api.Request Api.Data.GENERICRESPONSE
indexV1MarketsInstrumentsUnmapped market_query instrument_query instrumentStatus_query =
    Api.request
        "GET"
        "/index/v1/markets/instruments/unmapped"
        []
        [ ( "market", Maybe.map identity market_query ), ( "instrument", Maybe.map identity instrument_query ), ( "instrument_status", Maybe.map String.join "," << List.map stringFromInstrumentStatus instrumentStatus_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder
