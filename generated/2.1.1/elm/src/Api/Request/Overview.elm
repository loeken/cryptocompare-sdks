{-
   CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry
   CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.

   The version of the OpenAPI document: 2.1.1
   Contact: data@cryptocompare.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.Overview exposing
    ( overviewV1HistoricalMarketcapAllAssetsDays, ResponseFormat(..), responseFormatVariants
    , overviewV1HistoricalMarketcapAllAssetsHours, ResponseFormat(..), responseFormatVariants
    , overviewV1HistoricalMarketcapFtwAssetsDays, ResponseFormat(..), responseFormatVariants
    , overviewV1HistoricalMarketcapFtwAssetsHours, ResponseFormat(..), responseFormatVariants
    , overviewV1LatestMarketcapAllTick
    , overviewV1LatestMarketcapFtwTick
    )

import Api
import Api.Data
import Dict
import Http
import Json.Decode
import Json.Encode


type ResponseFormat
    = ResponseFormatJSON
    | ResponseFormatCSV


responseFormatVariants : List ResponseFormat
responseFormatVariants =
    [ ResponseFormatJSON
    , ResponseFormatCSV
    ]


stringFromResponseFormat : ResponseFormat -> String
stringFromResponseFormat model =
    case model of
        ResponseFormatJSON ->
            "JSON"

        ResponseFormatCSV ->
            "CSV"




type ResponseFormat
    = ResponseFormatJSON
    | ResponseFormatCSV


responseFormatVariants : List ResponseFormat
responseFormatVariants =
    [ ResponseFormatJSON
    , ResponseFormatCSV
    ]


stringFromResponseFormat : ResponseFormat -> String
stringFromResponseFormat model =
    case model of
        ResponseFormatJSON ->
            "JSON"

        ResponseFormatCSV ->
            "CSV"




type ResponseFormat
    = ResponseFormatJSON
    | ResponseFormatCSV


responseFormatVariants : List ResponseFormat
responseFormatVariants =
    [ ResponseFormatJSON
    , ResponseFormatCSV
    ]


stringFromResponseFormat : ResponseFormat -> String
stringFromResponseFormat model =
    case model of
        ResponseFormatJSON ->
            "JSON"

        ResponseFormatCSV ->
            "CSV"




type ResponseFormat
    = ResponseFormatJSON
    | ResponseFormatCSV


responseFormatVariants : List ResponseFormat
responseFormatVariants =
    [ ResponseFormatJSON
    , ResponseFormatCSV
    ]


stringFromResponseFormat : ResponseFormat -> String
stringFromResponseFormat model =
    case model of
        ResponseFormatJSON ->
            "JSON"

        ResponseFormatCSV ->
            "CSV"





overviewV1HistoricalMarketcapAllAssetsDays : Maybe List String -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Bool -> Maybe ResponseFormat -> Api.Request Api.Data.GENERICRESPONSE
overviewV1HistoricalMarketcapAllAssetsDays groups_query limit_query toTs_query aggregate_query fill_query responseFormat_query =
    Api.request
        "GET"
        "/overview/v1/historical/marketcap/all/assets/days"
        []
        [ ( "groups", Maybe.map String.join "," << List.map identity groups_query ), ( "limit", Maybe.map String.fromInt limit_query ), ( "to_ts", Maybe.map String.fromInt toTs_query ), ( "aggregate", Maybe.map String.fromInt aggregate_query ), ( "fill", Maybe.map (\val -> if val then "true" else "false") fill_query ), ( "response_format", Maybe.map stringFromResponseFormat responseFormat_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



overviewV1HistoricalMarketcapAllAssetsHours : Maybe List String -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Bool -> Maybe ResponseFormat -> Api.Request Api.Data.GENERICRESPONSE
overviewV1HistoricalMarketcapAllAssetsHours groups_query limit_query toTs_query aggregate_query fill_query responseFormat_query =
    Api.request
        "GET"
        "/overview/v1/historical/marketcap/all/assets/hours"
        []
        [ ( "groups", Maybe.map String.join "," << List.map identity groups_query ), ( "limit", Maybe.map String.fromInt limit_query ), ( "to_ts", Maybe.map String.fromInt toTs_query ), ( "aggregate", Maybe.map String.fromInt aggregate_query ), ( "fill", Maybe.map (\val -> if val then "true" else "false") fill_query ), ( "response_format", Maybe.map stringFromResponseFormat responseFormat_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



overviewV1HistoricalMarketcapFtwAssetsDays : Maybe List String -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Bool -> Maybe ResponseFormat -> Api.Request Api.Data.GENERICRESPONSE
overviewV1HistoricalMarketcapFtwAssetsDays groups_query limit_query toTs_query aggregate_query fill_query responseFormat_query =
    Api.request
        "GET"
        "/overview/v1/historical/marketcap/ftw/assets/days"
        []
        [ ( "groups", Maybe.map String.join "," << List.map identity groups_query ), ( "limit", Maybe.map String.fromInt limit_query ), ( "to_ts", Maybe.map String.fromInt toTs_query ), ( "aggregate", Maybe.map String.fromInt aggregate_query ), ( "fill", Maybe.map (\val -> if val then "true" else "false") fill_query ), ( "response_format", Maybe.map stringFromResponseFormat responseFormat_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



overviewV1HistoricalMarketcapFtwAssetsHours : Maybe List String -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Bool -> Maybe ResponseFormat -> Api.Request Api.Data.GENERICRESPONSE
overviewV1HistoricalMarketcapFtwAssetsHours groups_query limit_query toTs_query aggregate_query fill_query responseFormat_query =
    Api.request
        "GET"
        "/overview/v1/historical/marketcap/ftw/assets/hours"
        []
        [ ( "groups", Maybe.map String.join "," << List.map identity groups_query ), ( "limit", Maybe.map String.fromInt limit_query ), ( "to_ts", Maybe.map String.fromInt toTs_query ), ( "aggregate", Maybe.map String.fromInt aggregate_query ), ( "fill", Maybe.map (\val -> if val then "true" else "false") fill_query ), ( "response_format", Maybe.map stringFromResponseFormat responseFormat_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



overviewV1LatestMarketcapAllTick : Maybe List String -> Api.Request Api.Data.GENERICRESPONSE
overviewV1LatestMarketcapAllTick groups_query =
    Api.request
        "GET"
        "/overview/v1/latest/marketcap/all/tick"
        []
        [ ( "groups", Maybe.map String.join "," << List.map identity groups_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder



overviewV1LatestMarketcapFtwTick : Maybe List String -> Api.Request Api.Data.GENERICRESPONSE
overviewV1LatestMarketcapFtwTick groups_query =
    Api.request
        "GET"
        "/overview/v1/latest/marketcap/ftw/tick"
        []
        [ ( "groups", Maybe.map String.join "," << List.map identity groups_query ) ]
        []
        Nothing
        Api.Data.gENERICRESPONSEDecoder
