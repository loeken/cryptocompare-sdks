/*
 * CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry
 *
 * CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: data@cryptocompare.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing ErrorErrOtherInfo
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ErrorErrOtherInfoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ErrorErrOtherInfo
        //private ErrorErrOtherInfo instance;

        public ErrorErrOtherInfoTests()
        {
            // TODO uncomment below to create an instance of ErrorErrOtherInfo
            //instance = new ErrorErrOtherInfo();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ErrorErrOtherInfo
        /// </summary>
        [Fact]
        public void ErrorErrOtherInfoInstanceTest()
        {
            // TODO uncomment below to test "IsType" ErrorErrOtherInfo
            //Assert.IsType<ErrorErrOtherInfo>(instance);
        }


        /// <summary>
        /// Test the property 'Param'
        /// </summary>
        [Fact]
        public void ParamTest()
        {
            // TODO unit test for the property 'Param'
        }
        /// <summary>
        /// Test the property 'Values'
        /// </summary>
        [Fact]
        public void ValuesTest()
        {
            // TODO unit test for the property 'Values'
        }

    }

}
