/*
 * CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry
 *
 * CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: data@cryptocompare.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing SPOTINSTRUMENTHISTODATA
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SPOTINSTRUMENTHISTODATATests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SPOTINSTRUMENTHISTODATA
        //private SPOTINSTRUMENTHISTODATA instance;

        public SPOTINSTRUMENTHISTODATATests()
        {
            // TODO uncomment below to create an instance of SPOTINSTRUMENTHISTODATA
            //instance = new SPOTINSTRUMENTHISTODATA();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SPOTINSTRUMENTHISTODATA
        /// </summary>
        [Fact]
        public void SPOTINSTRUMENTHISTODATAInstanceTest()
        {
            // TODO uncomment below to test "IsType" SPOTINSTRUMENTHISTODATA
            //Assert.IsType<SPOTINSTRUMENTHISTODATA>(instance);
        }


        /// <summary>
        /// Test the property 'BASE'
        /// </summary>
        [Fact]
        public void BASETest()
        {
            // TODO unit test for the property 'BASE'
        }
        /// <summary>
        /// Test the property 'CLOSE'
        /// </summary>
        [Fact]
        public void CLOSETest()
        {
            // TODO unit test for the property 'CLOSE'
        }
        /// <summary>
        /// Test the property 'FIRST_TRADE_PRICE'
        /// </summary>
        [Fact]
        public void FIRST_TRADE_PRICETest()
        {
            // TODO unit test for the property 'FIRST_TRADE_PRICE'
        }
        /// <summary>
        /// Test the property 'FIRST_TRADE_TIMESTAMP'
        /// </summary>
        [Fact]
        public void FIRST_TRADE_TIMESTAMPTest()
        {
            // TODO unit test for the property 'FIRST_TRADE_TIMESTAMP'
        }
        /// <summary>
        /// Test the property 'HIGH'
        /// </summary>
        [Fact]
        public void HIGHTest()
        {
            // TODO unit test for the property 'HIGH'
        }
        /// <summary>
        /// Test the property 'HIGH_TRADE_PRICE'
        /// </summary>
        [Fact]
        public void HIGH_TRADE_PRICETest()
        {
            // TODO unit test for the property 'HIGH_TRADE_PRICE'
        }
        /// <summary>
        /// Test the property 'HIGH_TRADE_TIMESTAMP'
        /// </summary>
        [Fact]
        public void HIGH_TRADE_TIMESTAMPTest()
        {
            // TODO unit test for the property 'HIGH_TRADE_TIMESTAMP'
        }
        /// <summary>
        /// Test the property 'INSTRUMENT'
        /// </summary>
        [Fact]
        public void INSTRUMENTTest()
        {
            // TODO unit test for the property 'INSTRUMENT'
        }
        /// <summary>
        /// Test the property 'LAST_TRADE_PRICE'
        /// </summary>
        [Fact]
        public void LAST_TRADE_PRICETest()
        {
            // TODO unit test for the property 'LAST_TRADE_PRICE'
        }
        /// <summary>
        /// Test the property 'LAST_TRADE_TIMESTAMP'
        /// </summary>
        [Fact]
        public void LAST_TRADE_TIMESTAMPTest()
        {
            // TODO unit test for the property 'LAST_TRADE_TIMESTAMP'
        }
        /// <summary>
        /// Test the property 'LOW'
        /// </summary>
        [Fact]
        public void LOWTest()
        {
            // TODO unit test for the property 'LOW'
        }
        /// <summary>
        /// Test the property 'LOW_TRADE_PRICE'
        /// </summary>
        [Fact]
        public void LOW_TRADE_PRICETest()
        {
            // TODO unit test for the property 'LOW_TRADE_PRICE'
        }
        /// <summary>
        /// Test the property 'LOW_TRADE_TIMESTAMP'
        /// </summary>
        [Fact]
        public void LOW_TRADE_TIMESTAMPTest()
        {
            // TODO unit test for the property 'LOW_TRADE_TIMESTAMP'
        }
        /// <summary>
        /// Test the property 'MAPPED_INSTRUMENT'
        /// </summary>
        [Fact]
        public void MAPPED_INSTRUMENTTest()
        {
            // TODO unit test for the property 'MAPPED_INSTRUMENT'
        }
        /// <summary>
        /// Test the property 'MARKET'
        /// </summary>
        [Fact]
        public void MARKETTest()
        {
            // TODO unit test for the property 'MARKET'
        }
        /// <summary>
        /// Test the property 'OPEN'
        /// </summary>
        [Fact]
        public void OPENTest()
        {
            // TODO unit test for the property 'OPEN'
        }
        /// <summary>
        /// Test the property 'QUOTE'
        /// </summary>
        [Fact]
        public void QUOTETest()
        {
            // TODO unit test for the property 'QUOTE'
        }
        /// <summary>
        /// Test the property 'QUOTE_VOLUME'
        /// </summary>
        [Fact]
        public void QUOTE_VOLUMETest()
        {
            // TODO unit test for the property 'QUOTE_VOLUME'
        }
        /// <summary>
        /// Test the property 'QUOTE_VOLUME_BUY'
        /// </summary>
        [Fact]
        public void QUOTE_VOLUME_BUYTest()
        {
            // TODO unit test for the property 'QUOTE_VOLUME_BUY'
        }
        /// <summary>
        /// Test the property 'QUOTE_VOLUME_SELL'
        /// </summary>
        [Fact]
        public void QUOTE_VOLUME_SELLTest()
        {
            // TODO unit test for the property 'QUOTE_VOLUME_SELL'
        }
        /// <summary>
        /// Test the property 'QUOTE_VOLUME_UNKNOWN'
        /// </summary>
        [Fact]
        public void QUOTE_VOLUME_UNKNOWNTest()
        {
            // TODO unit test for the property 'QUOTE_VOLUME_UNKNOWN'
        }
        /// <summary>
        /// Test the property 'TIMESTAMP'
        /// </summary>
        [Fact]
        public void TIMESTAMPTest()
        {
            // TODO unit test for the property 'TIMESTAMP'
        }
        /// <summary>
        /// Test the property 'TOTAL_TRADES'
        /// </summary>
        [Fact]
        public void TOTAL_TRADESTest()
        {
            // TODO unit test for the property 'TOTAL_TRADES'
        }
        /// <summary>
        /// Test the property 'TOTAL_TRADES_BUY'
        /// </summary>
        [Fact]
        public void TOTAL_TRADES_BUYTest()
        {
            // TODO unit test for the property 'TOTAL_TRADES_BUY'
        }
        /// <summary>
        /// Test the property 'TOTAL_TRADES_SELL'
        /// </summary>
        [Fact]
        public void TOTAL_TRADES_SELLTest()
        {
            // TODO unit test for the property 'TOTAL_TRADES_SELL'
        }
        /// <summary>
        /// Test the property 'TOTAL_TRADES_UNKNOWN'
        /// </summary>
        [Fact]
        public void TOTAL_TRADES_UNKNOWNTest()
        {
            // TODO unit test for the property 'TOTAL_TRADES_UNKNOWN'
        }
        /// <summary>
        /// Test the property 'TYPE'
        /// </summary>
        [Fact]
        public void TYPETest()
        {
            // TODO unit test for the property 'TYPE'
        }
        /// <summary>
        /// Test the property 'UNIT'
        /// </summary>
        [Fact]
        public void UNITTest()
        {
            // TODO unit test for the property 'UNIT'
        }
        /// <summary>
        /// Test the property 'VOLUME'
        /// </summary>
        [Fact]
        public void VOLUMETest()
        {
            // TODO unit test for the property 'VOLUME'
        }
        /// <summary>
        /// Test the property 'VOLUME_BUY'
        /// </summary>
        [Fact]
        public void VOLUME_BUYTest()
        {
            // TODO unit test for the property 'VOLUME_BUY'
        }
        /// <summary>
        /// Test the property 'VOLUME_SELL'
        /// </summary>
        [Fact]
        public void VOLUME_SELLTest()
        {
            // TODO unit test for the property 'VOLUME_SELL'
        }
        /// <summary>
        /// Test the property 'VOLUME_UNKNOWN'
        /// </summary>
        [Fact]
        public void VOLUME_UNKNOWNTest()
        {
            // TODO unit test for the property 'VOLUME_UNKNOWN'
        }

    }

}
