(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

type t = {
    (* This is the first time instrument was seen on instrumentListSourceType BLOB. *)
    first_seen_on_blob_ts: int32 option [@default None];
    (* This is the first time instrument was seen on instrumentListSourceType FIX. *)
    first_seen_on_fix_ts: int32 option [@default None];
    (* This is the first time instrument was seen on instrumentListSourceType HARDCODED. *)
    first_seen_on_hardcoded_ts: int32 option [@default None];
    (* This is the first time instrument was seen on instrumentListSourceType INDEX_COMPOSITION. *)
    first_seen_on_index_composition_ts: int32 option [@default None];
    (* This is the first time instrument was seen on instrumentListSourceType NSQ. *)
    first_seen_on_nsq_ts: int32 option [@default None];
    (* This is the first time instrument was seen on instrumentListSourceType POLLING. *)
    first_seen_on_polling_ts: int32 option [@default None];
    (* This is the first time instrument was seen on instrumentListSourceType STREAMING. *)
    first_seen_on_streaming_ts: int32 option [@default None];
    (* This is the first TRADE_SPOT that we have seen on the specific source type in internal format. *)
    first_trade_spot_from_backfill: Yojson.Safe.t option [@default None];
    (* This is the first TRADE_SPOT that we have seen on the specific source type in external format. *)
    first_trade_spot_from_backfill_external: Yojson.Safe.t option [@default None];
    (* This is the first TRADE_SPOT that we have seen on the specific source type in internal format. *)
    first_trade_spot_from_blob: Yojson.Safe.t option [@default None];
    (* This is the first TRADE_SPOT that we have seen on the specific source type in external format. *)
    first_trade_spot_from_blob_external: Yojson.Safe.t option [@default None];
    (* This is the first TRADE_SPOT that we have seen on the specific source type in internal format. *)
    first_trade_spot_from_calculated: Yojson.Safe.t option [@default None];
    (* This is the first TRADE_SPOT that we have seen on the specific source type in external format. *)
    first_trade_spot_from_calculated_external: Yojson.Safe.t option [@default None];
    (* This is the first TRADE_SPOT that we have seen on the specific source type in internal format. *)
    first_trade_spot_from_fix: Yojson.Safe.t option [@default None];
    (* This is the first TRADE_SPOT that we have seen on the specific source type in external format. *)
    first_trade_spot_from_fix_external: Yojson.Safe.t option [@default None];
    (* This is the first TRADE_SPOT that we have seen on the specific source type in internal format. *)
    first_trade_spot_from_go: Yojson.Safe.t option [@default None];
    (* This is the first TRADE_SPOT that we have seen on the specific source type in external format. *)
    first_trade_spot_from_go_external: Yojson.Safe.t option [@default None];
    (* This is the first TRADE_SPOT that we have seen on the specific source type in internal format. *)
    first_trade_spot_from_polling: Yojson.Safe.t option [@default None];
    (* This is the first TRADE_SPOT that we have seen on the specific source type in external format. *)
    first_trade_spot_from_polling_external: Yojson.Safe.t option [@default None];
    (* This is the first TRADE_SPOT that we have seen on the specific source type in internal format. *)
    first_trade_spot_from_streaming: Yojson.Safe.t option [@default None];
    (* This is the first TRADE_SPOT that we have seen on the specific source type in external format. *)
    first_trade_spot_from_streaming_external: Yojson.Safe.t option [@default None];
    (* The migration destination vm hostname. *)
    host_migration_destination: string option [@default None];
    (* The migration source vm hostname. *)
    host_migration_source: string option [@default None];
    (* The migration status of the symbol, we only poll / stream / connect empty or SETTLED *)
    host_migration_status: string option [@default None];
    (* The instrument ID as it is on the exchange with small modifications - we do not allow the following characters inside isntrument ids: ,/&? *)
    instrument: string option [@default None];
    (* The full data we get from the polling endpoint for this specific instrument. This is a JSON stringified object with different properties per exchange. *)
    instrument_external_data: string option [@default None];
    (* The current mapping information for this instrument *)
    instrument_mapping: Yojson.Safe.t option [@default None];
    (* Historical mapping information for this instrument *)
    instrument_mapping_history: string list;
    (* Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from. *)
    instrument_source_backfill: string option [@default None];
    (* Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from. *)
    instrument_source_blob: string option [@default None];
    (* Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from. *)
    instrument_source_calculated: string option [@default None];
    (* Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from. *)
    instrument_source_fix: string option [@default None];
    (* Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from. *)
    instrument_source_go: string option [@default None];
    (* Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from. *)
    instrument_source_polling: string option [@default None];
    (* Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from. *)
    instrument_source_streaming: string option [@default None];
    (* The status of the symbol, we only poll / stream / connect to the ACTIVE ones, for the RETIRED / IGNORED / EXPIRED  one we no longer query for data. *)
    instrument_status: string option [@default None];
    (* The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument. *)
    instrument_trade_spot_from_backfill_last_proxied_rest_request: Yojson.Safe.t option [@default None];
    (* The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument. *)
    instrument_trade_spot_from_backfill_rest_uri_last_request_ts: int32 option [@default None];
    (* The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument. *)
    instrument_trade_spot_from_backfill_rest_uri_last_response_ts: int32 option [@default None];
    (* The next time we expect to make a request for TRADE_SPOT on this instrument. *)
    instrument_trade_spot_from_backfill_rest_uri_next_request_ts: int32 option [@default None];
    (* The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument. *)
    instrument_trade_spot_from_blob_last_proxied_rest_request: Yojson.Safe.t option [@default None];
    (* The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument. *)
    instrument_trade_spot_from_blob_rest_uri_last_request_ts: int32 option [@default None];
    (* The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument. *)
    instrument_trade_spot_from_blob_rest_uri_last_response_ts: int32 option [@default None];
    (* The next time we expect to make a request for TRADE_SPOT on this instrument. *)
    instrument_trade_spot_from_blob_rest_uri_next_request_ts: int32 option [@default None];
    (* The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument. *)
    instrument_trade_spot_from_calculated_last_proxied_rest_request: Yojson.Safe.t option [@default None];
    (* The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument. *)
    instrument_trade_spot_from_calculated_rest_uri_last_request_ts: int32 option [@default None];
    (* The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument. *)
    instrument_trade_spot_from_calculated_rest_uri_last_response_ts: int32 option [@default None];
    (* The next time we expect to make a request for TRADE_SPOT on this instrument. *)
    instrument_trade_spot_from_calculated_rest_uri_next_request_ts: int32 option [@default None];
    (* The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument. *)
    instrument_trade_spot_from_fix_last_proxied_rest_request: Yojson.Safe.t option [@default None];
    (* The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument. *)
    instrument_trade_spot_from_fix_rest_uri_last_request_ts: int32 option [@default None];
    (* The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument. *)
    instrument_trade_spot_from_fix_rest_uri_last_response_ts: int32 option [@default None];
    (* The next time we expect to make a request for TRADE_SPOT on this instrument. *)
    instrument_trade_spot_from_fix_rest_uri_next_request_ts: int32 option [@default None];
    (* The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument. *)
    instrument_trade_spot_from_go_last_proxied_rest_request: Yojson.Safe.t option [@default None];
    (* The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument. *)
    instrument_trade_spot_from_go_rest_uri_last_request_ts: int32 option [@default None];
    (* The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument. *)
    instrument_trade_spot_from_go_rest_uri_last_response_ts: int32 option [@default None];
    (* The next time we expect to make a request for TRADE_SPOT on this instrument. *)
    instrument_trade_spot_from_go_rest_uri_next_request_ts: int32 option [@default None];
    (* The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument. *)
    instrument_trade_spot_from_polling_last_proxied_rest_request: Yojson.Safe.t option [@default None];
    (* The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument. *)
    instrument_trade_spot_from_polling_rest_uri_last_request_ts: int32 option [@default None];
    (* The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument. *)
    instrument_trade_spot_from_polling_rest_uri_last_response_ts: int32 option [@default None];
    (* The next time we expect to make a request for TRADE_SPOT on this instrument. *)
    instrument_trade_spot_from_polling_rest_uri_next_request_ts: int32 option [@default None];
    (* The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument. *)
    instrument_trade_spot_from_streaming_last_proxied_rest_request: Yojson.Safe.t option [@default None];
    (* The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument. *)
    instrument_trade_spot_from_streaming_rest_uri_last_request_ts: int32 option [@default None];
    (* The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument. *)
    instrument_trade_spot_from_streaming_rest_uri_last_response_ts: int32 option [@default None];
    (* The next time we expect to make a request for TRADE_SPOT on this instrument. *)
    instrument_trade_spot_from_streaming_rest_uri_next_request_ts: int32 option [@default None];
    (* This flags the exchange instrument as in ready to consume TRADE_SPOT via a streaming integration. *)
    instrument_trade_spot_is_ready_for_streaming_integration: bool option [@default None];
    (* This is used to build up the request in some cases, this is where we put the id we use when querying for TRADE_SPOT. *)
    instrument_trade_spot_rest_uri: string option [@default None];
    (* The URL we send to the proxy swarm to get TRADE_SPOT for the instrument. *)
    instrument_trade_spot_rest_url: string option [@default None];
    (* This is used to build up the subscription in some cases, this is where we put the id we use when subscribing for TRADE_SPOT on this instrument. *)
    instrument_trade_spot_streaming_subscription: string option [@default None];
    (* The timestamp last encountered where the batch of trades from TRADES_SPOT all occured at the same time. This is an issue when making the next request that requires polling by timestamp as a start/from parameter *)
    last_concurrent_batch_of_trades_spot_ms: int32 option [@default None];
    (* This is the last time instrument was seen on instrumentListSourceType BLOB. *)
    last_seen_on_blob_ts: int32 option [@default None];
    (* This is the last time instrument was seen on instrumentListSourceType FIX. *)
    last_seen_on_fix_ts: int32 option [@default None];
    (* This is the last time instrument was seen on instrumentListSourceType HARDCODED. *)
    last_seen_on_hardcoded_ts: int32 option [@default None];
    (* This is the last time instrument was seen on instrumentListSourceType INDEX_COMPOSITION. *)
    last_seen_on_index_composition_ts: int32 option [@default None];
    (* This is the last time instrument was seen on instrumentListSourceType NSQ. *)
    last_seen_on_nsq_ts: int32 option [@default None];
    (* This is the last time instrument was seen on instrumentListSourceType POLLING. *)
    last_seen_on_polling_ts: int32 option [@default None];
    (* This is the last time instrument was seen on instrumentListSourceType STREAMING. *)
    last_seen_on_streaming_ts: int32 option [@default None];
    (* This is the last TRADE_SPOT that we have seen on the specific source type in internal format. *)
    last_trade_spot_from_backfill: Yojson.Safe.t option [@default None];
    (* This is the last TRADE_SPOT that we have seen on the specific trade source in external format. *)
    last_trade_spot_from_backfill_external: Yojson.Safe.t option [@default None];
    (* This is the last TRADE_SPOT that we have seen on the specific source type in internal format. *)
    last_trade_spot_from_blob: Yojson.Safe.t option [@default None];
    (* This is the last TRADE_SPOT that we have seen on the specific trade source in external format. *)
    last_trade_spot_from_blob_external: Yojson.Safe.t option [@default None];
    (* This is the last TRADE_SPOT that we have seen on the specific source type in internal format. *)
    last_trade_spot_from_calculated: Yojson.Safe.t option [@default None];
    (* This is the last TRADE_SPOT that we have seen on the specific trade source in external format. *)
    last_trade_spot_from_calculated_external: Yojson.Safe.t option [@default None];
    (* This is the last TRADE_SPOT that we have seen on the specific source type in internal format. *)
    last_trade_spot_from_fix: Yojson.Safe.t option [@default None];
    (* This is the last TRADE_SPOT that we have seen on the specific trade source in external format. *)
    last_trade_spot_from_fix_external: Yojson.Safe.t option [@default None];
    (* This is the last TRADE_SPOT that we have seen on the specific source type in internal format. *)
    last_trade_spot_from_go: Yojson.Safe.t option [@default None];
    (* This is the last TRADE_SPOT that we have seen on the specific trade source in external format. *)
    last_trade_spot_from_go_external: Yojson.Safe.t option [@default None];
    (* This is the last TRADE_SPOT that we have seen on the specific source type in internal format. *)
    last_trade_spot_from_polling: Yojson.Safe.t option [@default None];
    (* This is the last TRADE_SPOT that we have seen on the specific trade source in external format. *)
    last_trade_spot_from_polling_external: Yojson.Safe.t option [@default None];
    (* This is the last TRADE_SPOT that we have seen on the specific source type in internal format. *)
    last_trade_spot_from_streaming: Yojson.Safe.t option [@default None];
    (* This is the last TRADE_SPOT that we have seen on the specific trade source in external format. *)
    last_trade_spot_from_streaming_external: Yojson.Safe.t option [@default None];
    (* The version of metadata, used for version conversions/migrates. *)
    metadata_version: int32 option [@default None];
    (* This states the status of blob migration for this intrument on this exchange. *)
    processing_trades_from_blob_status: string option [@default None];
    (* This is both the CCSEQ and the total TRADES_SPOT we have processed on this instrument *)
    total_trades_spot: int32 option [@default None];
    (* This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service. *)
    unstructured_trade_spot_from_backfill_internal_data: Yojson.Safe.t option [@default None];
    (* This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service. *)
    unstructured_trade_spot_from_blob_internal_data: Yojson.Safe.t option [@default None];
    (* This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service. *)
    unstructured_trade_spot_from_calculated_internal_data: Yojson.Safe.t option [@default None];
    (* This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service. *)
    unstructured_trade_spot_from_fix_internal_data: Yojson.Safe.t option [@default None];
    (* This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service. *)
    unstructured_trade_spot_from_go_internal_data: Yojson.Safe.t option [@default None];
    (* This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service. *)
    unstructured_trade_spot_from_polling_internal_data: Yojson.Safe.t option [@default None];
    (* This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service. *)
    unstructured_trade_spot_from_streaming_internal_data: Yojson.Safe.t option [@default None];
} [@@deriving yojson { strict = false }, show ];;

let create () : t = {
    first_seen_on_blob_ts = None;
    first_seen_on_fix_ts = None;
    first_seen_on_hardcoded_ts = None;
    first_seen_on_index_composition_ts = None;
    first_seen_on_nsq_ts = None;
    first_seen_on_polling_ts = None;
    first_seen_on_streaming_ts = None;
    first_trade_spot_from_backfill = None;
    first_trade_spot_from_backfill_external = None;
    first_trade_spot_from_blob = None;
    first_trade_spot_from_blob_external = None;
    first_trade_spot_from_calculated = None;
    first_trade_spot_from_calculated_external = None;
    first_trade_spot_from_fix = None;
    first_trade_spot_from_fix_external = None;
    first_trade_spot_from_go = None;
    first_trade_spot_from_go_external = None;
    first_trade_spot_from_polling = None;
    first_trade_spot_from_polling_external = None;
    first_trade_spot_from_streaming = None;
    first_trade_spot_from_streaming_external = None;
    host_migration_destination = None;
    host_migration_source = None;
    host_migration_status = None;
    instrument = None;
    instrument_external_data = None;
    instrument_mapping = None;
    instrument_mapping_history = [];
    instrument_source_backfill = None;
    instrument_source_blob = None;
    instrument_source_calculated = None;
    instrument_source_fix = None;
    instrument_source_go = None;
    instrument_source_polling = None;
    instrument_source_streaming = None;
    instrument_status = None;
    instrument_trade_spot_from_backfill_last_proxied_rest_request = None;
    instrument_trade_spot_from_backfill_rest_uri_last_request_ts = None;
    instrument_trade_spot_from_backfill_rest_uri_last_response_ts = None;
    instrument_trade_spot_from_backfill_rest_uri_next_request_ts = None;
    instrument_trade_spot_from_blob_last_proxied_rest_request = None;
    instrument_trade_spot_from_blob_rest_uri_last_request_ts = None;
    instrument_trade_spot_from_blob_rest_uri_last_response_ts = None;
    instrument_trade_spot_from_blob_rest_uri_next_request_ts = None;
    instrument_trade_spot_from_calculated_last_proxied_rest_request = None;
    instrument_trade_spot_from_calculated_rest_uri_last_request_ts = None;
    instrument_trade_spot_from_calculated_rest_uri_last_response_ts = None;
    instrument_trade_spot_from_calculated_rest_uri_next_request_ts = None;
    instrument_trade_spot_from_fix_last_proxied_rest_request = None;
    instrument_trade_spot_from_fix_rest_uri_last_request_ts = None;
    instrument_trade_spot_from_fix_rest_uri_last_response_ts = None;
    instrument_trade_spot_from_fix_rest_uri_next_request_ts = None;
    instrument_trade_spot_from_go_last_proxied_rest_request = None;
    instrument_trade_spot_from_go_rest_uri_last_request_ts = None;
    instrument_trade_spot_from_go_rest_uri_last_response_ts = None;
    instrument_trade_spot_from_go_rest_uri_next_request_ts = None;
    instrument_trade_spot_from_polling_last_proxied_rest_request = None;
    instrument_trade_spot_from_polling_rest_uri_last_request_ts = None;
    instrument_trade_spot_from_polling_rest_uri_last_response_ts = None;
    instrument_trade_spot_from_polling_rest_uri_next_request_ts = None;
    instrument_trade_spot_from_streaming_last_proxied_rest_request = None;
    instrument_trade_spot_from_streaming_rest_uri_last_request_ts = None;
    instrument_trade_spot_from_streaming_rest_uri_last_response_ts = None;
    instrument_trade_spot_from_streaming_rest_uri_next_request_ts = None;
    instrument_trade_spot_is_ready_for_streaming_integration = None;
    instrument_trade_spot_rest_uri = None;
    instrument_trade_spot_rest_url = None;
    instrument_trade_spot_streaming_subscription = None;
    last_concurrent_batch_of_trades_spot_ms = None;
    last_seen_on_blob_ts = None;
    last_seen_on_fix_ts = None;
    last_seen_on_hardcoded_ts = None;
    last_seen_on_index_composition_ts = None;
    last_seen_on_nsq_ts = None;
    last_seen_on_polling_ts = None;
    last_seen_on_streaming_ts = None;
    last_trade_spot_from_backfill = None;
    last_trade_spot_from_backfill_external = None;
    last_trade_spot_from_blob = None;
    last_trade_spot_from_blob_external = None;
    last_trade_spot_from_calculated = None;
    last_trade_spot_from_calculated_external = None;
    last_trade_spot_from_fix = None;
    last_trade_spot_from_fix_external = None;
    last_trade_spot_from_go = None;
    last_trade_spot_from_go_external = None;
    last_trade_spot_from_polling = None;
    last_trade_spot_from_polling_external = None;
    last_trade_spot_from_streaming = None;
    last_trade_spot_from_streaming_external = None;
    metadata_version = None;
    processing_trades_from_blob_status = None;
    total_trades_spot = None;
    unstructured_trade_spot_from_backfill_internal_data = None;
    unstructured_trade_spot_from_blob_internal_data = None;
    unstructured_trade_spot_from_calculated_internal_data = None;
    unstructured_trade_spot_from_fix_internal_data = None;
    unstructured_trade_spot_from_go_internal_data = None;
    unstructured_trade_spot_from_polling_internal_data = None;
    unstructured_trade_spot_from_streaming_internal_data = None;
}

