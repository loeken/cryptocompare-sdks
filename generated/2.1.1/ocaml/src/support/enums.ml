(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

type categories = [
| `_1INCH [@printer fun fmt _ -> Format.pp_print_string fmt "1INCH"] [@name "1INCH"]
| `AAVE [@printer fun fmt _ -> Format.pp_print_string fmt "AAVE"] [@name "AAVE"]
| `ADA [@printer fun fmt _ -> Format.pp_print_string fmt "ADA"] [@name "ADA"]
| `ALGO [@printer fun fmt _ -> Format.pp_print_string fmt "ALGO"] [@name "ALGO"]
| `ALTCOIN [@printer fun fmt _ -> Format.pp_print_string fmt "ALTCOIN"] [@name "ALTCOIN"]
| `ASIA [@printer fun fmt _ -> Format.pp_print_string fmt "ASIA"] [@name "ASIA"]
| `ATOM [@printer fun fmt _ -> Format.pp_print_string fmt "ATOM"] [@name "ATOM"]
| `AVAX [@printer fun fmt _ -> Format.pp_print_string fmt "AVAX"] [@name "AVAX"]
| `AXS [@printer fun fmt _ -> Format.pp_print_string fmt "AXS"] [@name "AXS"]
| `BAL [@printer fun fmt _ -> Format.pp_print_string fmt "BAL"] [@name "BAL"]
| `BAT [@printer fun fmt _ -> Format.pp_print_string fmt "BAT"] [@name "BAT"]
| `BCH [@printer fun fmt _ -> Format.pp_print_string fmt "BCH"] [@name "BCH"]
| `BLOCKCHAIN [@printer fun fmt _ -> Format.pp_print_string fmt "BLOCKCHAIN"] [@name "BLOCKCHAIN"]
| `BTC [@printer fun fmt _ -> Format.pp_print_string fmt "BTC"] [@name "BTC"]
| `BUSINESS [@printer fun fmt _ -> Format.pp_print_string fmt "BUSINESS"] [@name "BUSINESS"]
| `COMMODITY [@printer fun fmt _ -> Format.pp_print_string fmt "COMMODITY"] [@name "COMMODITY"]
| `COMP [@printer fun fmt _ -> Format.pp_print_string fmt "COMP"] [@name "COMP"]
| `CRV [@printer fun fmt _ -> Format.pp_print_string fmt "CRV"] [@name "CRV"]
| `DASH [@printer fun fmt _ -> Format.pp_print_string fmt "DASH"] [@name "DASH"]
| `DOGE [@printer fun fmt _ -> Format.pp_print_string fmt "DOGE"] [@name "DOGE"]
| `DOT [@printer fun fmt _ -> Format.pp_print_string fmt "DOT"] [@name "DOT"]
| `ENJ [@printer fun fmt _ -> Format.pp_print_string fmt "ENJ"] [@name "ENJ"]
| `ETC [@printer fun fmt _ -> Format.pp_print_string fmt "ETC"] [@name "ETC"]
| `ETH [@printer fun fmt _ -> Format.pp_print_string fmt "ETH"] [@name "ETH"]
| `EXCHANGE [@printer fun fmt _ -> Format.pp_print_string fmt "EXCHANGE"] [@name "EXCHANGE"]
| `FIAT [@printer fun fmt _ -> Format.pp_print_string fmt "FIAT"] [@name "FIAT"]
| `FIL [@printer fun fmt _ -> Format.pp_print_string fmt "FIL"] [@name "FIL"]
| `FTM [@printer fun fmt _ -> Format.pp_print_string fmt "FTM"] [@name "FTM"]
| `ICO [@printer fun fmt _ -> Format.pp_print_string fmt "ICO"] [@name "ICO"]
| `KNC [@printer fun fmt _ -> Format.pp_print_string fmt "KNC"] [@name "KNC"]
| `LINK [@printer fun fmt _ -> Format.pp_print_string fmt "LINK"] [@name "LINK"]
| `LRC [@printer fun fmt _ -> Format.pp_print_string fmt "LRC"] [@name "LRC"]
| `LTC [@printer fun fmt _ -> Format.pp_print_string fmt "LTC"] [@name "LTC"]
| `LUNA [@printer fun fmt _ -> Format.pp_print_string fmt "LUNA"] [@name "LUNA"]
| `LUNC [@printer fun fmt _ -> Format.pp_print_string fmt "LUNC"] [@name "LUNC"]
| `MANA [@printer fun fmt _ -> Format.pp_print_string fmt "MANA"] [@name "MANA"]
| `MARKET [@printer fun fmt _ -> Format.pp_print_string fmt "MARKET"] [@name "MARKET"]
| `MATIC [@printer fun fmt _ -> Format.pp_print_string fmt "MATIC"] [@name "MATIC"]
| `MINING [@printer fun fmt _ -> Format.pp_print_string fmt "MINING"] [@name "MINING"]
| `MKR [@printer fun fmt _ -> Format.pp_print_string fmt "MKR"] [@name "MKR"]
| `REGULATION [@printer fun fmt _ -> Format.pp_print_string fmt "REGULATION"] [@name "REGULATION"]
| `REN [@printer fun fmt _ -> Format.pp_print_string fmt "REN"] [@name "REN"]
| `SAND [@printer fun fmt _ -> Format.pp_print_string fmt "SAND"] [@name "SAND"]
| `SHIB [@printer fun fmt _ -> Format.pp_print_string fmt "SHIB"] [@name "SHIB"]
| `SNX [@printer fun fmt _ -> Format.pp_print_string fmt "SNX"] [@name "SNX"]
| `SOL [@printer fun fmt _ -> Format.pp_print_string fmt "SOL"] [@name "SOL"]
| `SPONSORED [@printer fun fmt _ -> Format.pp_print_string fmt "SPONSORED"] [@name "SPONSORED"]
| `SUSHI [@printer fun fmt _ -> Format.pp_print_string fmt "SUSHI"] [@name "SUSHI"]
| `TECHNOLOGY [@printer fun fmt _ -> Format.pp_print_string fmt "TECHNOLOGY"] [@name "TECHNOLOGY"]
| `TRADING [@printer fun fmt _ -> Format.pp_print_string fmt "TRADING"] [@name "TRADING"]
| `TRX [@printer fun fmt _ -> Format.pp_print_string fmt "TRX"] [@name "TRX"]
| `UMA [@printer fun fmt _ -> Format.pp_print_string fmt "UMA"] [@name "UMA"]
| `UNI [@printer fun fmt _ -> Format.pp_print_string fmt "UNI"] [@name "UNI"]
| `USDT [@printer fun fmt _ -> Format.pp_print_string fmt "USDT"] [@name "USDT"]
| `WALLET [@printer fun fmt _ -> Format.pp_print_string fmt "WALLET"] [@name "WALLET"]
| `XLM [@printer fun fmt _ -> Format.pp_print_string fmt "XLM"] [@name "XLM"]
| `XMR [@printer fun fmt _ -> Format.pp_print_string fmt "XMR"] [@name "XMR"]
| `XRP [@printer fun fmt _ -> Format.pp_print_string fmt "XRP"] [@name "XRP"]
| `XTZ [@printer fun fmt _ -> Format.pp_print_string fmt "XTZ"] [@name "XTZ"]
| `YFI [@printer fun fmt _ -> Format.pp_print_string fmt "YFI"] [@name "YFI"]
| `ZEC [@printer fun fmt _ -> Format.pp_print_string fmt "ZEC"] [@name "ZEC"]
| `ZRX [@printer fun fmt _ -> Format.pp_print_string fmt "ZRX"] [@name "ZRX"]
] [@@deriving yojson, show { with_path = false }];;

let categories_of_yojson json = categories_of_yojson (`List [json])
let categories_to_yojson e =
    match categories_to_yojson e with
    | `List [json] -> json
    | json -> json

type instrument_status = [
| `ACTIVE [@printer fun fmt _ -> Format.pp_print_string fmt "ACTIVE"] [@name "ACTIVE"]
| `IGNORED [@printer fun fmt _ -> Format.pp_print_string fmt "IGNORED"] [@name "IGNORED"]
| `RETIRED [@printer fun fmt _ -> Format.pp_print_string fmt "RETIRED"] [@name "RETIRED"]
| `EXPIRED [@printer fun fmt _ -> Format.pp_print_string fmt "EXPIRED"] [@name "EXPIRED"]
] [@@deriving yojson, show { with_path = false }];;

let instrument_status_of_yojson json = instrument_status_of_yojson (`List [json])
let instrument_status_to_yojson e =
    match instrument_status_to_yojson e with
    | `List [json] -> json
    | json -> json

type sort_direction = [
| `DESC [@printer fun fmt _ -> Format.pp_print_string fmt "DESC"] [@name "DESC"]
| `ASC [@printer fun fmt _ -> Format.pp_print_string fmt "ASC"] [@name "ASC"]
] [@@deriving yojson, show { with_path = false }];;

let sort_direction_of_yojson json = sort_direction_of_yojson (`List [json])
let sort_direction_to_yojson e =
    match sort_direction_to_yojson e with
    | `List [json] -> json
    | json -> json

type sort_by = [
| `CREATED_ON [@printer fun fmt _ -> Format.pp_print_string fmt "CREATED_ON"] [@name "CREATED_ON"]
| `UPDATED_ON [@printer fun fmt _ -> Format.pp_print_string fmt "UPDATED_ON"] [@name "UPDATED_ON"]
| `SYMBOL [@printer fun fmt _ -> Format.pp_print_string fmt "SYMBOL"] [@name "SYMBOL"]
] [@@deriving yojson, show { with_path = false }];;

let sort_by_of_yojson json = sort_by_of_yojson (`List [json])
let sort_by_to_yojson e =
    match sort_by_to_yojson e with
    | `List [json] -> json
    | json -> json

type response_format = [
| `JSON [@printer fun fmt _ -> Format.pp_print_string fmt "JSON"] [@name "JSON"]
| `CSV [@printer fun fmt _ -> Format.pp_print_string fmt "CSV"] [@name "CSV"]
] [@@deriving yojson, show { with_path = false }];;

let response_format_of_yojson json = response_format_of_yojson (`List [json])
let response_format_to_yojson e =
    match response_format_to_yojson e with
    | `List [json] -> json
    | json -> json

type lang = [
| `EN [@printer fun fmt _ -> Format.pp_print_string fmt "EN"] [@name "EN"]
| `ES [@printer fun fmt _ -> Format.pp_print_string fmt "ES"] [@name "ES"]
| `PT [@printer fun fmt _ -> Format.pp_print_string fmt "PT"] [@name "PT"]
] [@@deriving yojson, show { with_path = false }];;

let lang_of_yojson json = lang_of_yojson (`List [json])
let lang_to_yojson e =
    match lang_to_yojson e with
    | `List [json] -> json
    | json -> json

type mapping_priority = [
| `CHECK_MAPPED_FIRST [@printer fun fmt _ -> Format.pp_print_string fmt "CHECK_MAPPED_FIRST"] [@name "CHECK_MAPPED_FIRST"]
| `CHECK_UNMAPPED_FIRST [@printer fun fmt _ -> Format.pp_print_string fmt "CHECK_UNMAPPED_FIRST"] [@name "CHECK_UNMAPPED_FIRST"]
] [@@deriving yojson, show { with_path = false }];;

let mapping_priority_of_yojson json = mapping_priority_of_yojson (`List [json])
let mapping_priority_to_yojson e =
    match mapping_priority_to_yojson e with
    | `List [json] -> json
    | json -> json

type status = [
| `ACTIVE [@printer fun fmt _ -> Format.pp_print_string fmt "ACTIVE"] [@name "ACTIVE"]
| `INACTIVE [@printer fun fmt _ -> Format.pp_print_string fmt "INACTIVE"] [@name "INACTIVE"]
] [@@deriving yojson, show { with_path = false }];;

let status_of_yojson json = status_of_yojson (`List [json])
let status_to_yojson e =
    match status_to_yojson e with
    | `List [json] -> json
    | json -> json

type type_0 = [
| `RSS [@printer fun fmt _ -> Format.pp_print_string fmt "RSS"] [@name "RSS"]
| `API [@printer fun fmt _ -> Format.pp_print_string fmt "API"] [@name "API"]
| `TWITTER [@printer fun fmt _ -> Format.pp_print_string fmt "TWITTER"] [@name "TWITTER"]
] [@@deriving yojson, show { with_path = false }];;

let type_0_of_yojson json = type_0_of_yojson (`List [json])
let type_0_to_yojson e =
    match type_0_to_yojson e with
    | `List [json] -> json
    | json -> json
