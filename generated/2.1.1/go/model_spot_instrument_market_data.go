/*
CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry

CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.

API version: 2.1.1
Contact: data@cryptocompare.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SPOTINSTRUMENTMARKETDATA type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SPOTINSTRUMENTMARKETDATA{}

// SPOTINSTRUMENTMARKETDATA struct for SPOTINSTRUMENTMARKETDATA
type SPOTINSTRUMENTMARKETDATA struct {
	// The mapped from asset (base / symbol/ coin), e.g. BTC. Only available on instruments that have been mapped.
	BASE *string `json:"BASE,omitempty"`
	// Our internal sequence number for this tick update. This is unique per market / exchange and trading pair / instrument. It will always be increasing by 1 for each new tick update we send.
	CCSEQ *int32 `json:"CCSEQ,omitempty"`
	// The highest trade price of the current day (00:00:00 GMT/UTC). If there were no updates in the time period, the open price will be given. Given in the quote asset.
	CURRENT_DAY_HIGH *int32 `json:"CURRENT_DAY_HIGH,omitempty"`
	// The lowest trade price of the current day (00:00:00 GMT/UTC). If there were no updates in the time period, the open price will be given. Given in the quote asset.
	CURRENT_DAY_LOW *int32 `json:"CURRENT_DAY_LOW,omitempty"`
	// The open price for the current day, this is based on the closest trade occurring before the start of the current day (00:00:00 GMT/UTC). Given in the quote asset.
	CURRENT_DAY_OPEN *int32 `json:"CURRENT_DAY_OPEN,omitempty"`
	// The sum of all trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset.
	CURRENT_DAY_QUOTE_VOLUME *int32 `json:"CURRENT_DAY_QUOTE_VOLUME,omitempty"`
	// The sum of all buy trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset.
	CURRENT_DAY_QUOTE_VOLUME_BUY *int32 `json:"CURRENT_DAY_QUOTE_VOLUME_BUY,omitempty"`
	// The sum of all sell trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset.
	CURRENT_DAY_QUOTE_VOLUME_SELL *int32 `json:"CURRENT_DAY_QUOTE_VOLUME_SELL,omitempty"`
	// The sum of all unknown trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset.
	CURRENT_DAY_QUOTE_VOLUME_UNKNOWN *int32 `json:"CURRENT_DAY_QUOTE_VOLUME_UNKNOWN,omitempty"`
	// The total number of trades that have occurred since the start of the current day (00:00:00 GMT/UTC).
	CURRENT_DAY_TOTAL_TRADES *int32 `json:"CURRENT_DAY_TOTAL_TRADES,omitempty"`
	// The total number of buy trades since the start of the current day (00:00:00 GMT/UTC).
	CURRENT_DAY_TOTAL_TRADES_BUY *int32 `json:"CURRENT_DAY_TOTAL_TRADES_BUY,omitempty"`
	// The total number of sell trades since the start of the current day (00:00:00 GMT/UTC).
	CURRENT_DAY_TOTAL_TRADES_SELL *int32 `json:"CURRENT_DAY_TOTAL_TRADES_SELL,omitempty"`
	// The total number of unknown trades since the start of the current day (00:00:00 GMT/UTC).
	CURRENT_DAY_TOTAL_TRADES_UNKNOWN *int32 `json:"CURRENT_DAY_TOTAL_TRADES_UNKNOWN,omitempty"`
	// The sum of all trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset.
	CURRENT_DAY_VOLUME *int32 `json:"CURRENT_DAY_VOLUME,omitempty"`
	// The sum of all buy trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset.
	CURRENT_DAY_VOLUME_BUY *int32 `json:"CURRENT_DAY_VOLUME_BUY,omitempty"`
	// The sum of all sell trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset.
	CURRENT_DAY_VOLUME_SELL *int32 `json:"CURRENT_DAY_VOLUME_SELL,omitempty"`
	// The sum of all unknown trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset.
	CURRENT_DAY_VOLUME_UNKNOWN *int32 `json:"CURRENT_DAY_VOLUME_UNKNOWN,omitempty"`
	// The highest trade price of the current hour. If there were no updates in the time period, the open price will be given. Given in the quote asset.
	CURRENT_HOUR_HIGH *int32 `json:"CURRENT_HOUR_HIGH,omitempty"`
	// The lowest trade price of the current hour. If there were no updates in the time period, the open price will be given. Given in the quote asset.
	CURRENT_HOUR_LOW *int32 `json:"CURRENT_HOUR_LOW,omitempty"`
	// The open price for the current hour, this is based on the closest trade occurring before the start of the current hour. Given in the quote asset.
	CURRENT_HOUR_OPEN *int32 `json:"CURRENT_HOUR_OPEN,omitempty"`
	// The sum of all trade quote quantities from the start of the current hour until now. Given in the quote asset.
	CURRENT_HOUR_QUOTE_VOLUME *int32 `json:"CURRENT_HOUR_QUOTE_VOLUME,omitempty"`
	// The sum of all buy trade quote quantities from the start of the current hour until now. Given in the quote asset.
	CURRENT_HOUR_QUOTE_VOLUME_BUY *int32 `json:"CURRENT_HOUR_QUOTE_VOLUME_BUY,omitempty"`
	// The sum of all sell trade quote quantities from the start of the current hour until now. Given in the quote asset.
	CURRENT_HOUR_QUOTE_VOLUME_SELL *int32 `json:"CURRENT_HOUR_QUOTE_VOLUME_SELL,omitempty"`
	// The sum of all unknown trade quote quantities from the start of the current hour until now. Given in the quote asset.
	CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN *int32 `json:"CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN,omitempty"`
	// The total number of trades that have occurred since the start of the current hour.
	CURRENT_HOUR_TOTAL_TRADES *int32 `json:"CURRENT_HOUR_TOTAL_TRADES,omitempty"`
	// The total number of buy trades since the start of the current hour.
	CURRENT_HOUR_TOTAL_TRADES_BUY *int32 `json:"CURRENT_HOUR_TOTAL_TRADES_BUY,omitempty"`
	// The total number of sell trades since the start of the current hour.
	CURRENT_HOUR_TOTAL_TRADES_SELL *int32 `json:"CURRENT_HOUR_TOTAL_TRADES_SELL,omitempty"`
	// The total number of unknown trades since the start of the current hour.
	CURRENT_HOUR_TOTAL_TRADES_UNKNOWN *int32 `json:"CURRENT_HOUR_TOTAL_TRADES_UNKNOWN,omitempty"`
	// The sum of all trade quantities from the start of the current hour until now. Given in the base asset.
	CURRENT_HOUR_VOLUME *int32 `json:"CURRENT_HOUR_VOLUME,omitempty"`
	// The sum of all buy trade quantities from the start of the current hour until now. Given in the base asset.
	CURRENT_HOUR_VOLUME_BUY *int32 `json:"CURRENT_HOUR_VOLUME_BUY,omitempty"`
	// The sum of all sell trade quantities from the start of the current hour until now. Given in the base asset.
	CURRENT_HOUR_VOLUME_SELL *int32 `json:"CURRENT_HOUR_VOLUME_SELL,omitempty"`
	// The sum of all trade quote quantities from the start of the current hour until now. Given in the base asset.
	CURRENT_HOUR_VOLUME_UNKNOWN *int32 `json:"CURRENT_HOUR_VOLUME_UNKNOWN,omitempty"`
	// The highest traded price of the month excluding the current day. The period will run from the 1st of the month - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the month. If today is the 1st of the month, this value will be CURRENT_MONTH_OPEN. Given in the quote asset.
	CURRENT_MONTH_HIGH *int32 `json:"CURRENT_MONTH_HIGH,omitempty"`
	// The lowest traded price of the month excluding the current day. The period will run from the 1st of the month - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the month. If today is the 1st of the month, this value will be CURRENT_MONTH_OPEN. Given in the quote asset.
	CURRENT_MONTH_LOW *int32 `json:"CURRENT_MONTH_LOW,omitempty"`
	// The price of the closest trade to the 1st day (00:00:00 GMT/UTC) of this month. In a highly liquid market, this would be the last trade that happened on the previous month at (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full monthly value. Given in the quote asset.
	CURRENT_MONTH_OPEN *int32 `json:"CURRENT_MONTH_OPEN,omitempty"`
	// The sum of all trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset.
	CURRENT_MONTH_QUOTE_VOLUME *int32 `json:"CURRENT_MONTH_QUOTE_VOLUME,omitempty"`
	// The sum of all buy trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset.
	CURRENT_MONTH_QUOTE_VOLUME_BUY *int32 `json:"CURRENT_MONTH_QUOTE_VOLUME_BUY,omitempty"`
	// The sum of all sell trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset.
	CURRENT_MONTH_QUOTE_VOLUME_SELL *int32 `json:"CURRENT_MONTH_QUOTE_VOLUME_SELL,omitempty"`
	// The sum of all unknown trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset.
	CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN *int32 `json:"CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN,omitempty"`
	// The total number of trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0.
	CURRENT_MONTH_TOTAL_TRADES *int32 `json:"CURRENT_MONTH_TOTAL_TRADES,omitempty"`
	// The total number of buy trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0.
	CURRENT_MONTH_TOTAL_TRADES_BUY *int32 `json:"CURRENT_MONTH_TOTAL_TRADES_BUY,omitempty"`
	// The total number of sell trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0.
	CURRENT_MONTH_TOTAL_TRADES_SELL *int32 `json:"CURRENT_MONTH_TOTAL_TRADES_SELL,omitempty"`
	// The total number of unknown trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0.
	CURRENT_MONTH_TOTAL_TRADES_UNKNOWN *int32 `json:"CURRENT_MONTH_TOTAL_TRADES_UNKNOWN,omitempty"`
	// The sum of all trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset.
	CURRENT_MONTH_VOLUME *int32 `json:"CURRENT_MONTH_VOLUME,omitempty"`
	// The sum of all buy trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset.
	CURRENT_MONTH_VOLUME_BUY *int32 `json:"CURRENT_MONTH_VOLUME_BUY,omitempty"`
	// The sum of all sell trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset.
	CURRENT_MONTH_VOLUME_SELL *int32 `json:"CURRENT_MONTH_VOLUME_SELL,omitempty"`
	// The sum of all unknown trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset.
	CURRENT_MONTH_VOLUME_UNKNOWN *int32 `json:"CURRENT_MONTH_VOLUME_UNKNOWN,omitempty"`
	// The highest traded price of the week excluding the current day. The period will run from Monday - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the week. If today is Monday, this value will be the same as CURRENT_WEEK_OPEN. Given in the quote asset.
	CURRENT_WEEK_HIGH *int32 `json:"CURRENT_WEEK_HIGH,omitempty"`
	// The lowest traded price of the week excluding the current day. The period will run from Monday - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the week. If today is Monday, this value will be CURRENT_WEEK_LOW. Given in the quote asset.
	CURRENT_WEEK_LOW *int32 `json:"CURRENT_WEEK_LOW,omitempty"`
	// The price of the closest trade to Monday (00:00:00 GMT/UTC) of this week. In a highly liquid market, this would be the last trade that happened on the previous Sunday at (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full weekly value. Given in the quote asset.
	CURRENT_WEEK_OPEN *int32 `json:"CURRENT_WEEK_OPEN,omitempty"`
	// The sum of all trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset.
	CURRENT_WEEK_QUOTE_VOLUME *int32 `json:"CURRENT_WEEK_QUOTE_VOLUME,omitempty"`
	// The sum of all buy trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset.
	CURRENT_WEEK_QUOTE_VOLUME_BUY *int32 `json:"CURRENT_WEEK_QUOTE_VOLUME_BUY,omitempty"`
	// The sum of all sell trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset.
	CURRENT_WEEK_QUOTE_VOLUME_SELL *int32 `json:"CURRENT_WEEK_QUOTE_VOLUME_SELL,omitempty"`
	// The sum of all unknown trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset.
	CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN *int32 `json:"CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN,omitempty"`
	// The total number of trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0.
	CURRENT_WEEK_TOTAL_TRADES *int32 `json:"CURRENT_WEEK_TOTAL_TRADES,omitempty"`
	// The total number of buy trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0.
	CURRENT_WEEK_TOTAL_TRADES_BUY *int32 `json:"CURRENT_WEEK_TOTAL_TRADES_BUY,omitempty"`
	// The total number of sell trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0.
	CURRENT_WEEK_TOTAL_TRADES_SELL *int32 `json:"CURRENT_WEEK_TOTAL_TRADES_SELL,omitempty"`
	// The total number of unknown trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0.
	CURRENT_WEEK_TOTAL_TRADES_UNKNOWN *int32 `json:"CURRENT_WEEK_TOTAL_TRADES_UNKNOWN,omitempty"`
	// The sum of all trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset.
	CURRENT_WEEK_VOLUME *int32 `json:"CURRENT_WEEK_VOLUME,omitempty"`
	// The sum of all buy trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset.
	CURRENT_WEEK_VOLUME_BUY *int32 `json:"CURRENT_WEEK_VOLUME_BUY,omitempty"`
	// The sum of all sell trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset.
	CURRENT_WEEK_VOLUME_SELL *int32 `json:"CURRENT_WEEK_VOLUME_SELL,omitempty"`
	// The sum of all unknown trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset.
	CURRENT_WEEK_VOLUME_UNKNOWN *int32 `json:"CURRENT_WEEK_VOLUME_UNKNOWN,omitempty"`
	// The highest traded price of the year excluding the current day. The period runs from the 1st of January - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the year. If today is the 1st of January, this value will be CURRENT_YEAR_OPEN. Given in the quote asset.
	CURRENT_YEAR_HIGH *int32 `json:"CURRENT_YEAR_HIGH,omitempty"`
	// The lowest traded price of the year excluding the current day. The period runs from the 1st of January - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the year. If today is the 1st of January, this value will be CURRENT_YEAR_OPEN. Given in the quote asset.
	CURRENT_YEAR_LOW *int32 `json:"CURRENT_YEAR_LOW,omitempty"`
	// The price of the closest trade to the 1st of January (00:00:00 GMT/UTC) of this year. In a highly liquid market, this would be the last trade that happened on on the 31st of December of the previous year (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full yearly value. Given in the quote asset.
	CURRENT_YEAR_OPEN *int32 `json:"CURRENT_YEAR_OPEN,omitempty"`
	// The sum of all trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset.
	CURRENT_YEAR_QUOTE_VOLUME *int32 `json:"CURRENT_YEAR_QUOTE_VOLUME,omitempty"`
	// The sum of all buy trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset.
	CURRENT_YEAR_QUOTE_VOLUME_BUY *int32 `json:"CURRENT_YEAR_QUOTE_VOLUME_BUY,omitempty"`
	// The sum of all sell trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset.
	CURRENT_YEAR_QUOTE_VOLUME_SELL *int32 `json:"CURRENT_YEAR_QUOTE_VOLUME_SELL,omitempty"`
	// The sum of all unknown trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset.
	CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN *int32 `json:"CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN,omitempty"`
	// The total number of trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0.
	CURRENT_YEAR_TOTAL_TRADES *int32 `json:"CURRENT_YEAR_TOTAL_TRADES,omitempty"`
	// The total number of buy trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0.
	CURRENT_YEAR_TOTAL_TRADES_BUY *int32 `json:"CURRENT_YEAR_TOTAL_TRADES_BUY,omitempty"`
	// The total number of sell trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0.
	CURRENT_YEAR_TOTAL_TRADES_SELL *int32 `json:"CURRENT_YEAR_TOTAL_TRADES_SELL,omitempty"`
	// The total number of unknown trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0.
	CURRENT_YEAR_TOTAL_TRADES_UNKNOWN *int32 `json:"CURRENT_YEAR_TOTAL_TRADES_UNKNOWN,omitempty"`
	// The sum of all trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset.
	CURRENT_YEAR_VOLUME *int32 `json:"CURRENT_YEAR_VOLUME,omitempty"`
	// The sum of all buy trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset.
	CURRENT_YEAR_VOLUME_BUY *int32 `json:"CURRENT_YEAR_VOLUME_BUY,omitempty"`
	// The sum of all sell trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset.
	CURRENT_YEAR_VOLUME_SELL *int32 `json:"CURRENT_YEAR_VOLUME_SELL,omitempty"`
	// The sum of all unknown trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset.
	CURRENT_YEAR_VOLUME_UNKNOWN *int32 `json:"CURRENT_YEAR_VOLUME_UNKNOWN,omitempty"`
	// The unmapped instrument ID
	INSTRUMENT *string `json:"INSTRUMENT,omitempty"`
	// The CCSEQ of the latest trade.
	LAST_PROCESSED_TRADE_CCSEQ *string `json:"LAST_PROCESSED_TRADE_CCSEQ,omitempty"`
	// The price in the quote asset of the last trade processed, as reported by the market / exchange.
	LAST_PROCESSED_TRADE_PRICE *int32 `json:"LAST_PROCESSED_TRADE_PRICE,omitempty"`
	// The quantity of the last processed trade in the from symbol (base / coin).
	LAST_PROCESSED_TRADE_QUANTITY *int32 `json:"LAST_PROCESSED_TRADE_QUANTITY,omitempty"`
	// The  volume of the last processed trade in the to asset / quote.
	LAST_PROCESSED_TRADE_QUOTE_QUANTITY *int32 `json:"LAST_PROCESSED_TRADE_QUOTE_QUANTITY,omitempty"`
	// The side of the last processed trade.
	LAST_PROCESSED_TRADE_SIDE *string `json:"LAST_PROCESSED_TRADE_SIDE,omitempty"`
	// The timestamp in seconds that the last trade was processed, as reported by the market / exchange. If the market / exchange does not provide this information, the timestamp that the trade was received will be returned.
	LAST_PROCESSED_TRADE_TS *int32 `json:"LAST_PROCESSED_TRADE_TS,omitempty"`
	// The CCSEQ of the latest trade.
	LAST_TRADE_CCSEQ *string `json:"LAST_TRADE_CCSEQ,omitempty"`
	// The ID of the latest trade.
	LAST_TRADE_ID *string `json:"LAST_TRADE_ID,omitempty"`
	// The quantity of the latest trade in the from symbol (base / coin).
	LAST_TRADE_QUANTITY *int32 `json:"LAST_TRADE_QUANTITY,omitempty"`
	// The volume of the latest trade in the to asset / quote.
	LAST_TRADE_QUOTE_QUANTITY *int32 `json:"LAST_TRADE_QUOTE_QUANTITY,omitempty"`
	// The side of the latest trade.
	LAST_TRADE_SIDE *string `json:"LAST_TRADE_SIDE,omitempty"`
	// The timestamp of the first trade ever recorded for the instrument
	LIFETIME_FIRST_TRADE_TS *int32 `json:"LIFETIME_FIRST_TRADE_TS,omitempty"`
	// The price of the highest trade ever executed for this instrument. Given in the quote asset.
	LIFETIME_HIGH *int32 `json:"LIFETIME_HIGH,omitempty"`
	// The the timestamp of the highest trade ever executed for this instrument. Given in the quote asset.
	LIFETIME_HIGH_TS *int32 `json:"LIFETIME_HIGH_TS,omitempty"`
	// The price of the lowest trade ever executed for this instrument. Given in the quote asset.
	LIFETIME_LOW *int32 `json:"LIFETIME_LOW,omitempty"`
	// The timestamp of the lowest trade ever executed for this instrument. Given in the quote asset.
	LIFETIME_LOW_TS *int32 `json:"LIFETIME_LOW_TS,omitempty"`
	// The price of the first trade of the instrument. Given in the quote asset.
	LIFETIME_OPEN *int32 `json:"LIFETIME_OPEN,omitempty"`
	// The sum of all trade quote quantities of all the trades of this instrument. Given in the quote asset.
	LIFETIME_QUOTE_VOLUME *int32 `json:"LIFETIME_QUOTE_VOLUME,omitempty"`
	// The sum of all buy trade quote quantities of all the trades of this instrument. Given in the quote asset.
	LIFETIME_QUOTE_VOLUME_BUY *int32 `json:"LIFETIME_QUOTE_VOLUME_BUY,omitempty"`
	// The sum of all sell trade quote quantities of all the trades of this instrument. Given in the quote asset.
	LIFETIME_QUOTE_VOLUME_SELL *int32 `json:"LIFETIME_QUOTE_VOLUME_SELL,omitempty"`
	// The sum of all unknown trade quote quantities of all the trades of this instrument. Given in the quote asset.
	LIFETIME_QUOTE_VOLUME_UNKNOWN *int32 `json:"LIFETIME_QUOTE_VOLUME_UNKNOWN,omitempty"`
	// The total number of all trades that have ever been executed for this instrument.
	LIFETIME_TOTAL_TRADES *int32 `json:"LIFETIME_TOTAL_TRADES,omitempty"`
	// The total number of all buy trades that have ever been executed for this instrument.
	LIFETIME_TOTAL_TRADES_BUY *int32 `json:"LIFETIME_TOTAL_TRADES_BUY,omitempty"`
	// The total number of all sell trades that have ever been executed for this instrument.
	LIFETIME_TOTAL_TRADES_SELL *int32 `json:"LIFETIME_TOTAL_TRADES_SELL,omitempty"`
	// The total number of all unknown trades that have ever been executed for this instrument.
	LIFETIME_TOTAL_TRADES_UNKNOWN *int32 `json:"LIFETIME_TOTAL_TRADES_UNKNOWN,omitempty"`
	// The sum of all trade quantities of all the trades of this instrument. Given in the base asset.
	LIFETIME_VOLUME *int32 `json:"LIFETIME_VOLUME,omitempty"`
	// The sum of all buy trade quantities of all the trades of this instrument. Given in the base asset.
	LIFETIME_VOLUME_BUY *int32 `json:"LIFETIME_VOLUME_BUY,omitempty"`
	// The sum of all sell trade quantities of all the trades of this instrument. Given in the base asset.
	LIFETIME_VOLUME_SELL *int32 `json:"LIFETIME_VOLUME_SELL,omitempty"`
	// The sum of all unknown trade quantities of all the trades of this instrument. Given in the base asset.
	LIFETIME_VOLUME_UNKNOWN *int32 `json:"LIFETIME_VOLUME_UNKNOWN,omitempty"`
	// The mapped instrument ID, derived from our mapping rules. This takes the form: \"BASE-QUOTE\" (e.g. BTC-USD). Only available on instruments that have been mapped.
	MAPPED_INSTRUMENT *string `json:"MAPPED_INSTRUMENT,omitempty"`
	// The market / exchange under consideration (e.g. coinbase, kraken, etc).
	MARKET *string `json:"MARKET,omitempty"`
	// The  highest traded price of the period. Here, the period runs from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.
	MOVING180DAYHIGH *int32 `json:"MOVING_180_DAY_HIGH,omitempty"`
	// The lowest traded price of the period. Here, the period runs from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.
	MOVING180DAYLOW *int32 `json:"MOVING_180_DAY_LOW,omitempty"`
	// The price of the closest trade to the period start date (179 days + current day - 00:00:00 GMT/UTC to now). This will always be supplied and there is no need to do any calculation to get the full 180 day value. Given in the quote asset.
	MOVING180DAYOPEN *int32 `json:"MOVING_180_DAY_OPEN,omitempty"`
	// The sum of all trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.
	MOVING180DAYQUOTEVOLUME *int32 `json:"MOVING_180_DAY_QUOTE_VOLUME,omitempty"`
	// The sum of all buy trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.
	MOVING180DAYQUOTEVOLUMEBUY *int32 `json:"MOVING_180_DAY_QUOTE_VOLUME_BUY,omitempty"`
	// The sum of all sell trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.
	MOVING180DAYQUOTEVOLUMESELL *int32 `json:"MOVING_180_DAY_QUOTE_VOLUME_SELL,omitempty"`
	// The sum of all unknown trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.
	MOVING180DAYQUOTEVOLUMEUNKNOWN *int32 `json:"MOVING_180_DAY_QUOTE_VOLUME_UNKNOWN,omitempty"`
	// The total number of trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total).
	MOVING180DAYTOTALTRADES *int32 `json:"MOVING_180_DAY_TOTAL_TRADES,omitempty"`
	// The total number of buy trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total).
	MOVING180DAYTOTALTRADESBUY *int32 `json:"MOVING_180_DAY_TOTAL_TRADES_BUY,omitempty"`
	// The total number of sell trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total).
	MOVING180DAYTOTALTRADESSELL *int32 `json:"MOVING_180_DAY_TOTAL_TRADES_SELL,omitempty"`
	// The total number of unknown trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total).
	MOVING180DAYTOTALTRADESUNKNOWN *int32 `json:"MOVING_180_DAY_TOTAL_TRADES_UNKNOWN,omitempty"`
	// The sum of all trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset.
	MOVING180DAYVOLUME *int32 `json:"MOVING_180_DAY_VOLUME,omitempty"`
	// The sum of all trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset.
	MOVING180DAYVOLUMEBUY *int32 `json:"MOVING_180_DAY_VOLUME_BUY,omitempty"`
	// The sum of all sell trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset.
	MOVING180DAYVOLUMESELL *int32 `json:"MOVING_180_DAY_VOLUME_SELL,omitempty"`
	// The sum of all unknown trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset.
	MOVING180DAYVOLUMEUNKNOWN *int32 `json:"MOVING_180_DAY_VOLUME_UNKNOWN,omitempty"`
	// The highest traded price of the period. Here, the period runs from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.
	MOVING24HOURHIGH *int32 `json:"MOVING_24_HOUR_HIGH,omitempty"`
	// The lowest traded price of the period. Here, the period runs from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.
	MOVING24HOURLOW *int32 `json:"MOVING_24_HOUR_LOW,omitempty"`
	// The price of the closest trade to the period start date (23 hours + current hour ago). This will always be supplied and there is no need to do any calculation to get the full 24 hour value. Given in the quote asset.
	MOVING24HOUROPEN *int32 `json:"MOVING_24_HOUR_OPEN,omitempty"`
	// The sum of all trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.
	MOVING24HOURQUOTEVOLUME *int32 `json:"MOVING_24_HOUR_QUOTE_VOLUME,omitempty"`
	// The sum of all buy trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.
	MOVING24HOURQUOTEVOLUMEBUY *int32 `json:"MOVING_24_HOUR_QUOTE_VOLUME_BUY,omitempty"`
	// The sum of all sell trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.
	MOVING24HOURQUOTEVOLUMESELL *int32 `json:"MOVING_24_HOUR_QUOTE_VOLUME_SELL,omitempty"`
	// The sum of all unknown trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.
	MOVING24HOURQUOTEVOLUMEUNKNOWN *int32 `json:"MOVING_24_HOUR_QUOTE_VOLUME_UNKNOWN,omitempty"`
	// The total number of trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total).
	MOVING24HOURTOTALTRADES *int32 `json:"MOVING_24_HOUR_TOTAL_TRADES,omitempty"`
	// The total number of buy trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total).
	MOVING24HOURTOTALTRADESBUY *int32 `json:"MOVING_24_HOUR_TOTAL_TRADES_BUY,omitempty"`
	// The total number of sell trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total).
	MOVING24HOURTOTALTRADESSELL *int32 `json:"MOVING_24_HOUR_TOTAL_TRADES_SELL,omitempty"`
	// The total number of unknown trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total).
	MOVING24HOURTOTALTRADESUNKNOWN *int32 `json:"MOVING_24_HOUR_TOTAL_TRADES_UNKNOWN,omitempty"`
	// The sum of all trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset.
	MOVING24HOURVOLUME *int32 `json:"MOVING_24_HOUR_VOLUME,omitempty"`
	// The sum of all buy trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset.
	MOVING24HOURVOLUMEBUY *int32 `json:"MOVING_24_HOUR_VOLUME_BUY,omitempty"`
	// The sum of all sell trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset.
	MOVING24HOURVOLUMESELL *int32 `json:"MOVING_24_HOUR_VOLUME_SELL,omitempty"`
	// The sum of all unknown trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset.
	MOVING24HOURVOLUMEUNKNOWN *int32 `json:"MOVING_24_HOUR_VOLUME_UNKNOWN,omitempty"`
	// The highest traded price of the period. Here, the period runs from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.
	MOVING30DAYHIGH *int32 `json:"MOVING_30_DAY_HIGH,omitempty"`
	// The lowest traded price of the period. Here, the period runs from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.
	MOVING30DAYLOW *int32 `json:"MOVING_30_DAY_LOW,omitempty"`
	// The price of the closest trade to the period start date (29 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 30 day value. Given in the quote asset.
	MOVING30DAYOPEN *int32 `json:"MOVING_30_DAY_OPEN,omitempty"`
	// The sum of all trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.
	MOVING30DAYQUOTEVOLUME *int32 `json:"MOVING_30_DAY_QUOTE_VOLUME,omitempty"`
	// The sum of all buy trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.
	MOVING30DAYQUOTEVOLUMEBUY *int32 `json:"MOVING_30_DAY_QUOTE_VOLUME_BUY,omitempty"`
	// The sum of all sell trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.
	MOVING30DAYQUOTEVOLUMESELL *int32 `json:"MOVING_30_DAY_QUOTE_VOLUME_SELL,omitempty"`
	// The sum of all unknown trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.
	MOVING30DAYQUOTEVOLUMEUNKNOWN *int32 `json:"MOVING_30_DAY_QUOTE_VOLUME_UNKNOWN,omitempty"`
	// The total number of trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total).
	MOVING30DAYTOTALTRADES *int32 `json:"MOVING_30_DAY_TOTAL_TRADES,omitempty"`
	// The total number of buy trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total).
	MOVING30DAYTOTALTRADESBUY *int32 `json:"MOVING_30_DAY_TOTAL_TRADES_BUY,omitempty"`
	// The total number of sell trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total).
	MOVING30DAYTOTALTRADESSELL *int32 `json:"MOVING_30_DAY_TOTAL_TRADES_SELL,omitempty"`
	// The total number of unknown trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total).
	MOVING30DAYTOTALTRADESUNKNOWN *int32 `json:"MOVING_30_DAY_TOTAL_TRADES_UNKNOWN,omitempty"`
	// The sum of all trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset.
	MOVING30DAYVOLUME *int32 `json:"MOVING_30_DAY_VOLUME,omitempty"`
	// The sum of all buy trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset.
	MOVING30DAYVOLUMEBUY *int32 `json:"MOVING_30_DAY_VOLUME_BUY,omitempty"`
	// The sum of all sell trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset.
	MOVING30DAYVOLUMESELL *int32 `json:"MOVING_30_DAY_VOLUME_SELL,omitempty"`
	// The sum of all unknown trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset.
	MOVING30DAYVOLUMEUNKNOWN *int32 `json:"MOVING_30_DAY_VOLUME_UNKNOWN,omitempty"`
	// The highest price of the period. Here, the period runs from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.
	MOVING365DAYHIGH *int32 `json:"MOVING_365_DAY_HIGH,omitempty"`
	// The lowest traded price of the period. Here, the period runs from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.
	MOVING365DAYLOW *int32 `json:"MOVING_365_DAY_LOW,omitempty"`
	// The price of the closest trade to the period start date (364 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 365 day value. Given in the quote asset.
	MOVING365DAYOPEN *int32 `json:"MOVING_365_DAY_OPEN,omitempty"`
	// The sum of all trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.
	MOVING365DAYQUOTEVOLUME *int32 `json:"MOVING_365_DAY_QUOTE_VOLUME,omitempty"`
	// The sum of all buy trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.
	MOVING365DAYQUOTEVOLUMEBUY *int32 `json:"MOVING_365_DAY_QUOTE_VOLUME_BUY,omitempty"`
	// The sum of all sell trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.
	MOVING365DAYQUOTEVOLUMESELL *int32 `json:"MOVING_365_DAY_QUOTE_VOLUME_SELL,omitempty"`
	// The sum of all unknown trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.
	MOVING365DAYQUOTEVOLUMEUNKNOWN *int32 `json:"MOVING_365_DAY_QUOTE_VOLUME_UNKNOWN,omitempty"`
	// The total number of trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total).
	MOVING365DAYTOTALTRADES *int32 `json:"MOVING_365_DAY_TOTAL_TRADES,omitempty"`
	// The total number of buy trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total).
	MOVING365DAYTOTALTRADESBUY *int32 `json:"MOVING_365_DAY_TOTAL_TRADES_BUY,omitempty"`
	// The total number of sell trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total).
	MOVING365DAYTOTALTRADESSELL *int32 `json:"MOVING_365_DAY_TOTAL_TRADES_SELL,omitempty"`
	// The total number of unknown trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total).
	MOVING365DAYTOTALTRADESUNKNOWN *int32 `json:"MOVING_365_DAY_TOTAL_TRADES_UNKNOWN,omitempty"`
	// The sum of all trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset.
	MOVING365DAYVOLUME *int32 `json:"MOVING_365_DAY_VOLUME,omitempty"`
	// The sum of all trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset.
	MOVING365DAYVOLUMEBUY *int32 `json:"MOVING_365_DAY_VOLUME_BUY,omitempty"`
	// The sum of all sell trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset.
	MOVING365DAYVOLUMESELL *int32 `json:"MOVING_365_DAY_VOLUME_SELL,omitempty"`
	// The sum of all unknown trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset.
	MOVING365DAYVOLUMEUNKNOWN *int32 `json:"MOVING_365_DAY_VOLUME_UNKNOWN,omitempty"`
	// The highest traded price of the period. Here, the period runs from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.
	MOVING7DAYHIGH *int32 `json:"MOVING_7_DAY_HIGH,omitempty"`
	// The lowest traded price of the period. Here, the period runs from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.
	MOVING7DAYLOW *int32 `json:"MOVING_7_DAY_LOW,omitempty"`
	// The price of the closest trade to the period start date (6 days + current day - 00:00:00 GMT/UTC to now). This will always be supplied and there is no need to do any calculation to get the full 7 day value. Given in the quote asset.
	MOVING7DAYOPEN *int32 `json:"MOVING_7_DAY_OPEN,omitempty"`
	// The sum of all trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.
	MOVING7DAYQUOTEVOLUME *int32 `json:"MOVING_7_DAY_QUOTE_VOLUME,omitempty"`
	// The sum of all buy trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.
	MOVING7DAYQUOTEVOLUMEBUY *int32 `json:"MOVING_7_DAY_QUOTE_VOLUME_BUY,omitempty"`
	// The sum of all sell trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.
	MOVING7DAYQUOTEVOLUMESELL *int32 `json:"MOVING_7_DAY_QUOTE_VOLUME_SELL,omitempty"`
	// The sum of all unknown trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.
	MOVING7DAYQUOTEVOLUMEUNKNOWN *int32 `json:"MOVING_7_DAY_QUOTE_VOLUME_UNKNOWN,omitempty"`
	// The total number of trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total).
	MOVING7DAYTOTALTRADES *int32 `json:"MOVING_7_DAY_TOTAL_TRADES,omitempty"`
	// The total number of buy trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total).
	MOVING7DAYTOTALTRADESBUY *int32 `json:"MOVING_7_DAY_TOTAL_TRADES_BUY,omitempty"`
	// The total number of sell trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total).
	MOVING7DAYTOTALTRADESSELL *int32 `json:"MOVING_7_DAY_TOTAL_TRADES_SELL,omitempty"`
	// The total number of unknown trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total).
	MOVING7DAYTOTALTRADESUNKNOWN *int32 `json:"MOVING_7_DAY_TOTAL_TRADES_UNKNOWN,omitempty"`
	// The sum of all trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset.
	MOVING7DAYVOLUME *int32 `json:"MOVING_7_DAY_VOLUME,omitempty"`
	// The sum of all buy trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset.
	MOVING7DAYVOLUMEBUY *int32 `json:"MOVING_7_DAY_VOLUME_BUY,omitempty"`
	// The sum of all sell trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset.
	MOVING7DAYVOLUMESELL *int32 `json:"MOVING_7_DAY_VOLUME_SELL,omitempty"`
	// The sum of all unknown trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset.
	MOVING7DAYVOLUMEUNKNOWN *int32 `json:"MOVING_7_DAY_VOLUME_UNKNOWN,omitempty"`
	// The highest value between the MOVING_90_DAY_OPEN and the highest traded price of the period. Here, the period runs from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.
	MOVING90DAYHIGH *int32 `json:"MOVING_90_DAY_HIGH,omitempty"`
	// The lowest traded price of the period. Here, the period runs from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.
	MOVING90DAYLOW *int32 `json:"MOVING_90_DAY_LOW,omitempty"`
	// The price of the closest trade to the period start date (89 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 90 day value. Given in the quote asset.
	MOVING90DAYOPEN *int32 `json:"MOVING_90_DAY_OPEN,omitempty"`
	// The sum of all trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.
	MOVING90DAYQUOTEVOLUME *int32 `json:"MOVING_90_DAY_QUOTE_VOLUME,omitempty"`
	// The sum of all buy trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.
	MOVING90DAYQUOTEVOLUMEBUY *int32 `json:"MOVING_90_DAY_QUOTE_VOLUME_BUY,omitempty"`
	// The sum of all sell trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.
	MOVING90DAYQUOTEVOLUMESELL *int32 `json:"MOVING_90_DAY_QUOTE_VOLUME_SELL,omitempty"`
	// The sum of all unknown trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.
	MOVING90DAYQUOTEVOLUMEUNKNOWN *int32 `json:"MOVING_90_DAY_QUOTE_VOLUME_UNKNOWN,omitempty"`
	// The total number of trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total).
	MOVING90DAYTOTALTRADES *int32 `json:"MOVING_90_DAY_TOTAL_TRADES,omitempty"`
	// The total number of buy trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total).
	MOVING90DAYTOTALTRADESBUY *int32 `json:"MOVING_90_DAY_TOTAL_TRADES_BUY,omitempty"`
	// The total number of sell trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total).
	MOVING90DAYTOTALTRADESSELL *int32 `json:"MOVING_90_DAY_TOTAL_TRADES_SELL,omitempty"`
	// The total number of unknown trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total).
	MOVING90DAYTOTALTRADESUNKNOWN *int32 `json:"MOVING_90_DAY_TOTAL_TRADES_UNKNOWN,omitempty"`
	// The sum of all trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset.
	MOVING90DAYVOLUME *int32 `json:"MOVING_90_DAY_VOLUME,omitempty"`
	// The sum of all trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset.
	MOVING90DAYVOLUMEBUY *int32 `json:"MOVING_90_DAY_VOLUME_BUY,omitempty"`
	// The sum of all sell trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset.
	MOVING90DAYVOLUMESELL *int32 `json:"MOVING_90_DAY_VOLUME_SELL,omitempty"`
	// The sum of all unknown trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset.
	MOVING90DAYVOLUMEUNKNOWN *int32 `json:"MOVING_90_DAY_VOLUME_UNKNOWN,omitempty"`
	// The price in the to asset (quote / number symbol / coin) of the latest trade. I.e. for a BTC-USD trade, how much was paid for one BTC in USD).
	PRICE *int32 `json:"PRICE,omitempty"`
	// The flag indicating whether the price has increased, decreased, or not changed
	PRICE_FLAG *string `json:"PRICE_FLAG,omitempty"`
	// The timestamp in seconds as reported by the market / exchange. If the market /exchange does not provide this information, the received timestamp will be returned.
	PRICE_LAST_UPDATE_TS *int32 `json:"PRICE_LAST_UPDATE_TS,omitempty"`
	// The mapped to asset (quote / counter symbol / coin), e.g. USD. Only available on instruments that have been mapped.
	QUOTE *string `json:"QUOTE,omitempty"`
	// The timestamp in seconds of the last time the top ask was updated, as reported by the market / exchange. If the market / exchange does not provide this information, the received timestamp will be returned.
	TOP_ASK_LAST_UPDATE_TS *int32 `json:"TOP_ASK_LAST_UPDATE_TS,omitempty"`
	// The price of the top ask in the to asset (quote / numberer symbol / coin). For a BTC-USD order book, this will be the best price someone is willing to sell some BTC in USD, as quoted for 1 full BTC.
	TOP_ASK_PRICE *int32 `json:"TOP_ASK_PRICE,omitempty"`
	// The quantity of the top ask in the from asset (base / coin). For a BTC-USD order book, this will be the amount of BTC a person is willing to sell at the best price.
	TOP_ASK_QUANTITY *int32 `json:"TOP_ASK_QUANTITY,omitempty"`
	// The timestamp in seconds of the last time the top bid was updated, as reported by the market / exchange. If the market / exchange does not provide this information, the received timestamp will be returned.
	TOP_BID_LAST_UPDATE_TS *int32 `json:"TOP_BID_LAST_UPDATE_TS,omitempty"`
	// The price of the top bid in the to asset (quote / numberer symbol / coin). For a BTC-USD order book, this will be the highest price a person is willing to pay for some BTC in USD, as quoted for 1 full BTC.
	TOP_BID_PRICE *int32 `json:"TOP_BID_PRICE,omitempty"`
	// The quantity of the top bid in the from asset (base / coin). For a BTC-USD order book , this will be the amount of BTC someone is willing to buy at the best price.
	TOP_BID_QUANTITY *int32 `json:"TOP_BID_QUANTITY,omitempty"`
	// The type of the message.
	TYPE *string `json:"TYPE,omitempty"`
}

// NewSPOTINSTRUMENTMARKETDATA instantiates a new SPOTINSTRUMENTMARKETDATA object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSPOTINSTRUMENTMARKETDATA() *SPOTINSTRUMENTMARKETDATA {
	this := SPOTINSTRUMENTMARKETDATA{}
	return &this
}

// NewSPOTINSTRUMENTMARKETDATAWithDefaults instantiates a new SPOTINSTRUMENTMARKETDATA object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSPOTINSTRUMENTMARKETDATAWithDefaults() *SPOTINSTRUMENTMARKETDATA {
	this := SPOTINSTRUMENTMARKETDATA{}
	return &this
}

// GetBASE returns the BASE field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetBASE() string {
	if o == nil || isNil(o.BASE) {
		var ret string
		return ret
	}
	return *o.BASE
}

// GetBASEOk returns a tuple with the BASE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetBASEOk() (*string, bool) {
	if o == nil || isNil(o.BASE) {
		return nil, false
	}
	return o.BASE, true
}

// HasBASE returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasBASE() bool {
	if o != nil && !isNil(o.BASE) {
		return true
	}

	return false
}

// SetBASE gets a reference to the given string and assigns it to the BASE field.
func (o *SPOTINSTRUMENTMARKETDATA) SetBASE(v string) {
	o.BASE = &v
}

// GetCCSEQ returns the CCSEQ field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCCSEQ() int32 {
	if o == nil || isNil(o.CCSEQ) {
		var ret int32
		return ret
	}
	return *o.CCSEQ
}

// GetCCSEQOk returns a tuple with the CCSEQ field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCCSEQOk() (*int32, bool) {
	if o == nil || isNil(o.CCSEQ) {
		return nil, false
	}
	return o.CCSEQ, true
}

// HasCCSEQ returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCCSEQ() bool {
	if o != nil && !isNil(o.CCSEQ) {
		return true
	}

	return false
}

// SetCCSEQ gets a reference to the given int32 and assigns it to the CCSEQ field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCCSEQ(v int32) {
	o.CCSEQ = &v
}

// GetCURRENT_DAY_HIGH returns the CURRENT_DAY_HIGH field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_HIGH() int32 {
	if o == nil || isNil(o.CURRENT_DAY_HIGH) {
		var ret int32
		return ret
	}
	return *o.CURRENT_DAY_HIGH
}

// GetCURRENT_DAY_HIGHOk returns a tuple with the CURRENT_DAY_HIGH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_HIGHOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_DAY_HIGH) {
		return nil, false
	}
	return o.CURRENT_DAY_HIGH, true
}

// HasCURRENT_DAY_HIGH returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_DAY_HIGH() bool {
	if o != nil && !isNil(o.CURRENT_DAY_HIGH) {
		return true
	}

	return false
}

// SetCURRENT_DAY_HIGH gets a reference to the given int32 and assigns it to the CURRENT_DAY_HIGH field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_DAY_HIGH(v int32) {
	o.CURRENT_DAY_HIGH = &v
}

// GetCURRENT_DAY_LOW returns the CURRENT_DAY_LOW field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_LOW() int32 {
	if o == nil || isNil(o.CURRENT_DAY_LOW) {
		var ret int32
		return ret
	}
	return *o.CURRENT_DAY_LOW
}

// GetCURRENT_DAY_LOWOk returns a tuple with the CURRENT_DAY_LOW field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_LOWOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_DAY_LOW) {
		return nil, false
	}
	return o.CURRENT_DAY_LOW, true
}

// HasCURRENT_DAY_LOW returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_DAY_LOW() bool {
	if o != nil && !isNil(o.CURRENT_DAY_LOW) {
		return true
	}

	return false
}

// SetCURRENT_DAY_LOW gets a reference to the given int32 and assigns it to the CURRENT_DAY_LOW field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_DAY_LOW(v int32) {
	o.CURRENT_DAY_LOW = &v
}

// GetCURRENT_DAY_OPEN returns the CURRENT_DAY_OPEN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_OPEN() int32 {
	if o == nil || isNil(o.CURRENT_DAY_OPEN) {
		var ret int32
		return ret
	}
	return *o.CURRENT_DAY_OPEN
}

// GetCURRENT_DAY_OPENOk returns a tuple with the CURRENT_DAY_OPEN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_OPENOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_DAY_OPEN) {
		return nil, false
	}
	return o.CURRENT_DAY_OPEN, true
}

// HasCURRENT_DAY_OPEN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_DAY_OPEN() bool {
	if o != nil && !isNil(o.CURRENT_DAY_OPEN) {
		return true
	}

	return false
}

// SetCURRENT_DAY_OPEN gets a reference to the given int32 and assigns it to the CURRENT_DAY_OPEN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_DAY_OPEN(v int32) {
	o.CURRENT_DAY_OPEN = &v
}

// GetCURRENT_DAY_QUOTE_VOLUME returns the CURRENT_DAY_QUOTE_VOLUME field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_QUOTE_VOLUME() int32 {
	if o == nil || isNil(o.CURRENT_DAY_QUOTE_VOLUME) {
		var ret int32
		return ret
	}
	return *o.CURRENT_DAY_QUOTE_VOLUME
}

// GetCURRENT_DAY_QUOTE_VOLUMEOk returns a tuple with the CURRENT_DAY_QUOTE_VOLUME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_QUOTE_VOLUMEOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_DAY_QUOTE_VOLUME) {
		return nil, false
	}
	return o.CURRENT_DAY_QUOTE_VOLUME, true
}

// HasCURRENT_DAY_QUOTE_VOLUME returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_DAY_QUOTE_VOLUME() bool {
	if o != nil && !isNil(o.CURRENT_DAY_QUOTE_VOLUME) {
		return true
	}

	return false
}

// SetCURRENT_DAY_QUOTE_VOLUME gets a reference to the given int32 and assigns it to the CURRENT_DAY_QUOTE_VOLUME field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_DAY_QUOTE_VOLUME(v int32) {
	o.CURRENT_DAY_QUOTE_VOLUME = &v
}

// GetCURRENT_DAY_QUOTE_VOLUME_BUY returns the CURRENT_DAY_QUOTE_VOLUME_BUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_QUOTE_VOLUME_BUY() int32 {
	if o == nil || isNil(o.CURRENT_DAY_QUOTE_VOLUME_BUY) {
		var ret int32
		return ret
	}
	return *o.CURRENT_DAY_QUOTE_VOLUME_BUY
}

// GetCURRENT_DAY_QUOTE_VOLUME_BUYOk returns a tuple with the CURRENT_DAY_QUOTE_VOLUME_BUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_QUOTE_VOLUME_BUYOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_DAY_QUOTE_VOLUME_BUY) {
		return nil, false
	}
	return o.CURRENT_DAY_QUOTE_VOLUME_BUY, true
}

// HasCURRENT_DAY_QUOTE_VOLUME_BUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_DAY_QUOTE_VOLUME_BUY() bool {
	if o != nil && !isNil(o.CURRENT_DAY_QUOTE_VOLUME_BUY) {
		return true
	}

	return false
}

// SetCURRENT_DAY_QUOTE_VOLUME_BUY gets a reference to the given int32 and assigns it to the CURRENT_DAY_QUOTE_VOLUME_BUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_DAY_QUOTE_VOLUME_BUY(v int32) {
	o.CURRENT_DAY_QUOTE_VOLUME_BUY = &v
}

// GetCURRENT_DAY_QUOTE_VOLUME_SELL returns the CURRENT_DAY_QUOTE_VOLUME_SELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_QUOTE_VOLUME_SELL() int32 {
	if o == nil || isNil(o.CURRENT_DAY_QUOTE_VOLUME_SELL) {
		var ret int32
		return ret
	}
	return *o.CURRENT_DAY_QUOTE_VOLUME_SELL
}

// GetCURRENT_DAY_QUOTE_VOLUME_SELLOk returns a tuple with the CURRENT_DAY_QUOTE_VOLUME_SELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_QUOTE_VOLUME_SELLOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_DAY_QUOTE_VOLUME_SELL) {
		return nil, false
	}
	return o.CURRENT_DAY_QUOTE_VOLUME_SELL, true
}

// HasCURRENT_DAY_QUOTE_VOLUME_SELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_DAY_QUOTE_VOLUME_SELL() bool {
	if o != nil && !isNil(o.CURRENT_DAY_QUOTE_VOLUME_SELL) {
		return true
	}

	return false
}

// SetCURRENT_DAY_QUOTE_VOLUME_SELL gets a reference to the given int32 and assigns it to the CURRENT_DAY_QUOTE_VOLUME_SELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_DAY_QUOTE_VOLUME_SELL(v int32) {
	o.CURRENT_DAY_QUOTE_VOLUME_SELL = &v
}

// GetCURRENT_DAY_QUOTE_VOLUME_UNKNOWN returns the CURRENT_DAY_QUOTE_VOLUME_UNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_QUOTE_VOLUME_UNKNOWN() int32 {
	if o == nil || isNil(o.CURRENT_DAY_QUOTE_VOLUME_UNKNOWN) {
		var ret int32
		return ret
	}
	return *o.CURRENT_DAY_QUOTE_VOLUME_UNKNOWN
}

// GetCURRENT_DAY_QUOTE_VOLUME_UNKNOWNOk returns a tuple with the CURRENT_DAY_QUOTE_VOLUME_UNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_QUOTE_VOLUME_UNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_DAY_QUOTE_VOLUME_UNKNOWN) {
		return nil, false
	}
	return o.CURRENT_DAY_QUOTE_VOLUME_UNKNOWN, true
}

// HasCURRENT_DAY_QUOTE_VOLUME_UNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_DAY_QUOTE_VOLUME_UNKNOWN() bool {
	if o != nil && !isNil(o.CURRENT_DAY_QUOTE_VOLUME_UNKNOWN) {
		return true
	}

	return false
}

// SetCURRENT_DAY_QUOTE_VOLUME_UNKNOWN gets a reference to the given int32 and assigns it to the CURRENT_DAY_QUOTE_VOLUME_UNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_DAY_QUOTE_VOLUME_UNKNOWN(v int32) {
	o.CURRENT_DAY_QUOTE_VOLUME_UNKNOWN = &v
}

// GetCURRENT_DAY_TOTAL_TRADES returns the CURRENT_DAY_TOTAL_TRADES field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_TOTAL_TRADES() int32 {
	if o == nil || isNil(o.CURRENT_DAY_TOTAL_TRADES) {
		var ret int32
		return ret
	}
	return *o.CURRENT_DAY_TOTAL_TRADES
}

// GetCURRENT_DAY_TOTAL_TRADESOk returns a tuple with the CURRENT_DAY_TOTAL_TRADES field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_TOTAL_TRADESOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_DAY_TOTAL_TRADES) {
		return nil, false
	}
	return o.CURRENT_DAY_TOTAL_TRADES, true
}

// HasCURRENT_DAY_TOTAL_TRADES returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_DAY_TOTAL_TRADES() bool {
	if o != nil && !isNil(o.CURRENT_DAY_TOTAL_TRADES) {
		return true
	}

	return false
}

// SetCURRENT_DAY_TOTAL_TRADES gets a reference to the given int32 and assigns it to the CURRENT_DAY_TOTAL_TRADES field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_DAY_TOTAL_TRADES(v int32) {
	o.CURRENT_DAY_TOTAL_TRADES = &v
}

// GetCURRENT_DAY_TOTAL_TRADES_BUY returns the CURRENT_DAY_TOTAL_TRADES_BUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_TOTAL_TRADES_BUY() int32 {
	if o == nil || isNil(o.CURRENT_DAY_TOTAL_TRADES_BUY) {
		var ret int32
		return ret
	}
	return *o.CURRENT_DAY_TOTAL_TRADES_BUY
}

// GetCURRENT_DAY_TOTAL_TRADES_BUYOk returns a tuple with the CURRENT_DAY_TOTAL_TRADES_BUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_TOTAL_TRADES_BUYOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_DAY_TOTAL_TRADES_BUY) {
		return nil, false
	}
	return o.CURRENT_DAY_TOTAL_TRADES_BUY, true
}

// HasCURRENT_DAY_TOTAL_TRADES_BUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_DAY_TOTAL_TRADES_BUY() bool {
	if o != nil && !isNil(o.CURRENT_DAY_TOTAL_TRADES_BUY) {
		return true
	}

	return false
}

// SetCURRENT_DAY_TOTAL_TRADES_BUY gets a reference to the given int32 and assigns it to the CURRENT_DAY_TOTAL_TRADES_BUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_DAY_TOTAL_TRADES_BUY(v int32) {
	o.CURRENT_DAY_TOTAL_TRADES_BUY = &v
}

// GetCURRENT_DAY_TOTAL_TRADES_SELL returns the CURRENT_DAY_TOTAL_TRADES_SELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_TOTAL_TRADES_SELL() int32 {
	if o == nil || isNil(o.CURRENT_DAY_TOTAL_TRADES_SELL) {
		var ret int32
		return ret
	}
	return *o.CURRENT_DAY_TOTAL_TRADES_SELL
}

// GetCURRENT_DAY_TOTAL_TRADES_SELLOk returns a tuple with the CURRENT_DAY_TOTAL_TRADES_SELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_TOTAL_TRADES_SELLOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_DAY_TOTAL_TRADES_SELL) {
		return nil, false
	}
	return o.CURRENT_DAY_TOTAL_TRADES_SELL, true
}

// HasCURRENT_DAY_TOTAL_TRADES_SELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_DAY_TOTAL_TRADES_SELL() bool {
	if o != nil && !isNil(o.CURRENT_DAY_TOTAL_TRADES_SELL) {
		return true
	}

	return false
}

// SetCURRENT_DAY_TOTAL_TRADES_SELL gets a reference to the given int32 and assigns it to the CURRENT_DAY_TOTAL_TRADES_SELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_DAY_TOTAL_TRADES_SELL(v int32) {
	o.CURRENT_DAY_TOTAL_TRADES_SELL = &v
}

// GetCURRENT_DAY_TOTAL_TRADES_UNKNOWN returns the CURRENT_DAY_TOTAL_TRADES_UNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_TOTAL_TRADES_UNKNOWN() int32 {
	if o == nil || isNil(o.CURRENT_DAY_TOTAL_TRADES_UNKNOWN) {
		var ret int32
		return ret
	}
	return *o.CURRENT_DAY_TOTAL_TRADES_UNKNOWN
}

// GetCURRENT_DAY_TOTAL_TRADES_UNKNOWNOk returns a tuple with the CURRENT_DAY_TOTAL_TRADES_UNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_TOTAL_TRADES_UNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_DAY_TOTAL_TRADES_UNKNOWN) {
		return nil, false
	}
	return o.CURRENT_DAY_TOTAL_TRADES_UNKNOWN, true
}

// HasCURRENT_DAY_TOTAL_TRADES_UNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_DAY_TOTAL_TRADES_UNKNOWN() bool {
	if o != nil && !isNil(o.CURRENT_DAY_TOTAL_TRADES_UNKNOWN) {
		return true
	}

	return false
}

// SetCURRENT_DAY_TOTAL_TRADES_UNKNOWN gets a reference to the given int32 and assigns it to the CURRENT_DAY_TOTAL_TRADES_UNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_DAY_TOTAL_TRADES_UNKNOWN(v int32) {
	o.CURRENT_DAY_TOTAL_TRADES_UNKNOWN = &v
}

// GetCURRENT_DAY_VOLUME returns the CURRENT_DAY_VOLUME field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_VOLUME() int32 {
	if o == nil || isNil(o.CURRENT_DAY_VOLUME) {
		var ret int32
		return ret
	}
	return *o.CURRENT_DAY_VOLUME
}

// GetCURRENT_DAY_VOLUMEOk returns a tuple with the CURRENT_DAY_VOLUME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_VOLUMEOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_DAY_VOLUME) {
		return nil, false
	}
	return o.CURRENT_DAY_VOLUME, true
}

// HasCURRENT_DAY_VOLUME returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_DAY_VOLUME() bool {
	if o != nil && !isNil(o.CURRENT_DAY_VOLUME) {
		return true
	}

	return false
}

// SetCURRENT_DAY_VOLUME gets a reference to the given int32 and assigns it to the CURRENT_DAY_VOLUME field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_DAY_VOLUME(v int32) {
	o.CURRENT_DAY_VOLUME = &v
}

// GetCURRENT_DAY_VOLUME_BUY returns the CURRENT_DAY_VOLUME_BUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_VOLUME_BUY() int32 {
	if o == nil || isNil(o.CURRENT_DAY_VOLUME_BUY) {
		var ret int32
		return ret
	}
	return *o.CURRENT_DAY_VOLUME_BUY
}

// GetCURRENT_DAY_VOLUME_BUYOk returns a tuple with the CURRENT_DAY_VOLUME_BUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_VOLUME_BUYOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_DAY_VOLUME_BUY) {
		return nil, false
	}
	return o.CURRENT_DAY_VOLUME_BUY, true
}

// HasCURRENT_DAY_VOLUME_BUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_DAY_VOLUME_BUY() bool {
	if o != nil && !isNil(o.CURRENT_DAY_VOLUME_BUY) {
		return true
	}

	return false
}

// SetCURRENT_DAY_VOLUME_BUY gets a reference to the given int32 and assigns it to the CURRENT_DAY_VOLUME_BUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_DAY_VOLUME_BUY(v int32) {
	o.CURRENT_DAY_VOLUME_BUY = &v
}

// GetCURRENT_DAY_VOLUME_SELL returns the CURRENT_DAY_VOLUME_SELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_VOLUME_SELL() int32 {
	if o == nil || isNil(o.CURRENT_DAY_VOLUME_SELL) {
		var ret int32
		return ret
	}
	return *o.CURRENT_DAY_VOLUME_SELL
}

// GetCURRENT_DAY_VOLUME_SELLOk returns a tuple with the CURRENT_DAY_VOLUME_SELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_VOLUME_SELLOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_DAY_VOLUME_SELL) {
		return nil, false
	}
	return o.CURRENT_DAY_VOLUME_SELL, true
}

// HasCURRENT_DAY_VOLUME_SELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_DAY_VOLUME_SELL() bool {
	if o != nil && !isNil(o.CURRENT_DAY_VOLUME_SELL) {
		return true
	}

	return false
}

// SetCURRENT_DAY_VOLUME_SELL gets a reference to the given int32 and assigns it to the CURRENT_DAY_VOLUME_SELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_DAY_VOLUME_SELL(v int32) {
	o.CURRENT_DAY_VOLUME_SELL = &v
}

// GetCURRENT_DAY_VOLUME_UNKNOWN returns the CURRENT_DAY_VOLUME_UNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_VOLUME_UNKNOWN() int32 {
	if o == nil || isNil(o.CURRENT_DAY_VOLUME_UNKNOWN) {
		var ret int32
		return ret
	}
	return *o.CURRENT_DAY_VOLUME_UNKNOWN
}

// GetCURRENT_DAY_VOLUME_UNKNOWNOk returns a tuple with the CURRENT_DAY_VOLUME_UNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_DAY_VOLUME_UNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_DAY_VOLUME_UNKNOWN) {
		return nil, false
	}
	return o.CURRENT_DAY_VOLUME_UNKNOWN, true
}

// HasCURRENT_DAY_VOLUME_UNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_DAY_VOLUME_UNKNOWN() bool {
	if o != nil && !isNil(o.CURRENT_DAY_VOLUME_UNKNOWN) {
		return true
	}

	return false
}

// SetCURRENT_DAY_VOLUME_UNKNOWN gets a reference to the given int32 and assigns it to the CURRENT_DAY_VOLUME_UNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_DAY_VOLUME_UNKNOWN(v int32) {
	o.CURRENT_DAY_VOLUME_UNKNOWN = &v
}

// GetCURRENT_HOUR_HIGH returns the CURRENT_HOUR_HIGH field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_HIGH() int32 {
	if o == nil || isNil(o.CURRENT_HOUR_HIGH) {
		var ret int32
		return ret
	}
	return *o.CURRENT_HOUR_HIGH
}

// GetCURRENT_HOUR_HIGHOk returns a tuple with the CURRENT_HOUR_HIGH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_HIGHOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_HOUR_HIGH) {
		return nil, false
	}
	return o.CURRENT_HOUR_HIGH, true
}

// HasCURRENT_HOUR_HIGH returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_HOUR_HIGH() bool {
	if o != nil && !isNil(o.CURRENT_HOUR_HIGH) {
		return true
	}

	return false
}

// SetCURRENT_HOUR_HIGH gets a reference to the given int32 and assigns it to the CURRENT_HOUR_HIGH field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_HOUR_HIGH(v int32) {
	o.CURRENT_HOUR_HIGH = &v
}

// GetCURRENT_HOUR_LOW returns the CURRENT_HOUR_LOW field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_LOW() int32 {
	if o == nil || isNil(o.CURRENT_HOUR_LOW) {
		var ret int32
		return ret
	}
	return *o.CURRENT_HOUR_LOW
}

// GetCURRENT_HOUR_LOWOk returns a tuple with the CURRENT_HOUR_LOW field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_LOWOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_HOUR_LOW) {
		return nil, false
	}
	return o.CURRENT_HOUR_LOW, true
}

// HasCURRENT_HOUR_LOW returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_HOUR_LOW() bool {
	if o != nil && !isNil(o.CURRENT_HOUR_LOW) {
		return true
	}

	return false
}

// SetCURRENT_HOUR_LOW gets a reference to the given int32 and assigns it to the CURRENT_HOUR_LOW field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_HOUR_LOW(v int32) {
	o.CURRENT_HOUR_LOW = &v
}

// GetCURRENT_HOUR_OPEN returns the CURRENT_HOUR_OPEN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_OPEN() int32 {
	if o == nil || isNil(o.CURRENT_HOUR_OPEN) {
		var ret int32
		return ret
	}
	return *o.CURRENT_HOUR_OPEN
}

// GetCURRENT_HOUR_OPENOk returns a tuple with the CURRENT_HOUR_OPEN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_OPENOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_HOUR_OPEN) {
		return nil, false
	}
	return o.CURRENT_HOUR_OPEN, true
}

// HasCURRENT_HOUR_OPEN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_HOUR_OPEN() bool {
	if o != nil && !isNil(o.CURRENT_HOUR_OPEN) {
		return true
	}

	return false
}

// SetCURRENT_HOUR_OPEN gets a reference to the given int32 and assigns it to the CURRENT_HOUR_OPEN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_HOUR_OPEN(v int32) {
	o.CURRENT_HOUR_OPEN = &v
}

// GetCURRENT_HOUR_QUOTE_VOLUME returns the CURRENT_HOUR_QUOTE_VOLUME field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_QUOTE_VOLUME() int32 {
	if o == nil || isNil(o.CURRENT_HOUR_QUOTE_VOLUME) {
		var ret int32
		return ret
	}
	return *o.CURRENT_HOUR_QUOTE_VOLUME
}

// GetCURRENT_HOUR_QUOTE_VOLUMEOk returns a tuple with the CURRENT_HOUR_QUOTE_VOLUME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_QUOTE_VOLUMEOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_HOUR_QUOTE_VOLUME) {
		return nil, false
	}
	return o.CURRENT_HOUR_QUOTE_VOLUME, true
}

// HasCURRENT_HOUR_QUOTE_VOLUME returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_HOUR_QUOTE_VOLUME() bool {
	if o != nil && !isNil(o.CURRENT_HOUR_QUOTE_VOLUME) {
		return true
	}

	return false
}

// SetCURRENT_HOUR_QUOTE_VOLUME gets a reference to the given int32 and assigns it to the CURRENT_HOUR_QUOTE_VOLUME field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_HOUR_QUOTE_VOLUME(v int32) {
	o.CURRENT_HOUR_QUOTE_VOLUME = &v
}

// GetCURRENT_HOUR_QUOTE_VOLUME_BUY returns the CURRENT_HOUR_QUOTE_VOLUME_BUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_QUOTE_VOLUME_BUY() int32 {
	if o == nil || isNil(o.CURRENT_HOUR_QUOTE_VOLUME_BUY) {
		var ret int32
		return ret
	}
	return *o.CURRENT_HOUR_QUOTE_VOLUME_BUY
}

// GetCURRENT_HOUR_QUOTE_VOLUME_BUYOk returns a tuple with the CURRENT_HOUR_QUOTE_VOLUME_BUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_QUOTE_VOLUME_BUYOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_HOUR_QUOTE_VOLUME_BUY) {
		return nil, false
	}
	return o.CURRENT_HOUR_QUOTE_VOLUME_BUY, true
}

// HasCURRENT_HOUR_QUOTE_VOLUME_BUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_HOUR_QUOTE_VOLUME_BUY() bool {
	if o != nil && !isNil(o.CURRENT_HOUR_QUOTE_VOLUME_BUY) {
		return true
	}

	return false
}

// SetCURRENT_HOUR_QUOTE_VOLUME_BUY gets a reference to the given int32 and assigns it to the CURRENT_HOUR_QUOTE_VOLUME_BUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_HOUR_QUOTE_VOLUME_BUY(v int32) {
	o.CURRENT_HOUR_QUOTE_VOLUME_BUY = &v
}

// GetCURRENT_HOUR_QUOTE_VOLUME_SELL returns the CURRENT_HOUR_QUOTE_VOLUME_SELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_QUOTE_VOLUME_SELL() int32 {
	if o == nil || isNil(o.CURRENT_HOUR_QUOTE_VOLUME_SELL) {
		var ret int32
		return ret
	}
	return *o.CURRENT_HOUR_QUOTE_VOLUME_SELL
}

// GetCURRENT_HOUR_QUOTE_VOLUME_SELLOk returns a tuple with the CURRENT_HOUR_QUOTE_VOLUME_SELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_QUOTE_VOLUME_SELLOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_HOUR_QUOTE_VOLUME_SELL) {
		return nil, false
	}
	return o.CURRENT_HOUR_QUOTE_VOLUME_SELL, true
}

// HasCURRENT_HOUR_QUOTE_VOLUME_SELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_HOUR_QUOTE_VOLUME_SELL() bool {
	if o != nil && !isNil(o.CURRENT_HOUR_QUOTE_VOLUME_SELL) {
		return true
	}

	return false
}

// SetCURRENT_HOUR_QUOTE_VOLUME_SELL gets a reference to the given int32 and assigns it to the CURRENT_HOUR_QUOTE_VOLUME_SELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_HOUR_QUOTE_VOLUME_SELL(v int32) {
	o.CURRENT_HOUR_QUOTE_VOLUME_SELL = &v
}

// GetCURRENT_HOUR_QUOTE_VOLUME_UNKNOWN returns the CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_QUOTE_VOLUME_UNKNOWN() int32 {
	if o == nil || isNil(o.CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN) {
		var ret int32
		return ret
	}
	return *o.CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN
}

// GetCURRENT_HOUR_QUOTE_VOLUME_UNKNOWNOk returns a tuple with the CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_QUOTE_VOLUME_UNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN) {
		return nil, false
	}
	return o.CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN, true
}

// HasCURRENT_HOUR_QUOTE_VOLUME_UNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_HOUR_QUOTE_VOLUME_UNKNOWN() bool {
	if o != nil && !isNil(o.CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN) {
		return true
	}

	return false
}

// SetCURRENT_HOUR_QUOTE_VOLUME_UNKNOWN gets a reference to the given int32 and assigns it to the CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_HOUR_QUOTE_VOLUME_UNKNOWN(v int32) {
	o.CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN = &v
}

// GetCURRENT_HOUR_TOTAL_TRADES returns the CURRENT_HOUR_TOTAL_TRADES field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_TOTAL_TRADES() int32 {
	if o == nil || isNil(o.CURRENT_HOUR_TOTAL_TRADES) {
		var ret int32
		return ret
	}
	return *o.CURRENT_HOUR_TOTAL_TRADES
}

// GetCURRENT_HOUR_TOTAL_TRADESOk returns a tuple with the CURRENT_HOUR_TOTAL_TRADES field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_TOTAL_TRADESOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_HOUR_TOTAL_TRADES) {
		return nil, false
	}
	return o.CURRENT_HOUR_TOTAL_TRADES, true
}

// HasCURRENT_HOUR_TOTAL_TRADES returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_HOUR_TOTAL_TRADES() bool {
	if o != nil && !isNil(o.CURRENT_HOUR_TOTAL_TRADES) {
		return true
	}

	return false
}

// SetCURRENT_HOUR_TOTAL_TRADES gets a reference to the given int32 and assigns it to the CURRENT_HOUR_TOTAL_TRADES field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_HOUR_TOTAL_TRADES(v int32) {
	o.CURRENT_HOUR_TOTAL_TRADES = &v
}

// GetCURRENT_HOUR_TOTAL_TRADES_BUY returns the CURRENT_HOUR_TOTAL_TRADES_BUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_TOTAL_TRADES_BUY() int32 {
	if o == nil || isNil(o.CURRENT_HOUR_TOTAL_TRADES_BUY) {
		var ret int32
		return ret
	}
	return *o.CURRENT_HOUR_TOTAL_TRADES_BUY
}

// GetCURRENT_HOUR_TOTAL_TRADES_BUYOk returns a tuple with the CURRENT_HOUR_TOTAL_TRADES_BUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_TOTAL_TRADES_BUYOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_HOUR_TOTAL_TRADES_BUY) {
		return nil, false
	}
	return o.CURRENT_HOUR_TOTAL_TRADES_BUY, true
}

// HasCURRENT_HOUR_TOTAL_TRADES_BUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_HOUR_TOTAL_TRADES_BUY() bool {
	if o != nil && !isNil(o.CURRENT_HOUR_TOTAL_TRADES_BUY) {
		return true
	}

	return false
}

// SetCURRENT_HOUR_TOTAL_TRADES_BUY gets a reference to the given int32 and assigns it to the CURRENT_HOUR_TOTAL_TRADES_BUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_HOUR_TOTAL_TRADES_BUY(v int32) {
	o.CURRENT_HOUR_TOTAL_TRADES_BUY = &v
}

// GetCURRENT_HOUR_TOTAL_TRADES_SELL returns the CURRENT_HOUR_TOTAL_TRADES_SELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_TOTAL_TRADES_SELL() int32 {
	if o == nil || isNil(o.CURRENT_HOUR_TOTAL_TRADES_SELL) {
		var ret int32
		return ret
	}
	return *o.CURRENT_HOUR_TOTAL_TRADES_SELL
}

// GetCURRENT_HOUR_TOTAL_TRADES_SELLOk returns a tuple with the CURRENT_HOUR_TOTAL_TRADES_SELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_TOTAL_TRADES_SELLOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_HOUR_TOTAL_TRADES_SELL) {
		return nil, false
	}
	return o.CURRENT_HOUR_TOTAL_TRADES_SELL, true
}

// HasCURRENT_HOUR_TOTAL_TRADES_SELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_HOUR_TOTAL_TRADES_SELL() bool {
	if o != nil && !isNil(o.CURRENT_HOUR_TOTAL_TRADES_SELL) {
		return true
	}

	return false
}

// SetCURRENT_HOUR_TOTAL_TRADES_SELL gets a reference to the given int32 and assigns it to the CURRENT_HOUR_TOTAL_TRADES_SELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_HOUR_TOTAL_TRADES_SELL(v int32) {
	o.CURRENT_HOUR_TOTAL_TRADES_SELL = &v
}

// GetCURRENT_HOUR_TOTAL_TRADES_UNKNOWN returns the CURRENT_HOUR_TOTAL_TRADES_UNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_TOTAL_TRADES_UNKNOWN() int32 {
	if o == nil || isNil(o.CURRENT_HOUR_TOTAL_TRADES_UNKNOWN) {
		var ret int32
		return ret
	}
	return *o.CURRENT_HOUR_TOTAL_TRADES_UNKNOWN
}

// GetCURRENT_HOUR_TOTAL_TRADES_UNKNOWNOk returns a tuple with the CURRENT_HOUR_TOTAL_TRADES_UNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_TOTAL_TRADES_UNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_HOUR_TOTAL_TRADES_UNKNOWN) {
		return nil, false
	}
	return o.CURRENT_HOUR_TOTAL_TRADES_UNKNOWN, true
}

// HasCURRENT_HOUR_TOTAL_TRADES_UNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_HOUR_TOTAL_TRADES_UNKNOWN() bool {
	if o != nil && !isNil(o.CURRENT_HOUR_TOTAL_TRADES_UNKNOWN) {
		return true
	}

	return false
}

// SetCURRENT_HOUR_TOTAL_TRADES_UNKNOWN gets a reference to the given int32 and assigns it to the CURRENT_HOUR_TOTAL_TRADES_UNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_HOUR_TOTAL_TRADES_UNKNOWN(v int32) {
	o.CURRENT_HOUR_TOTAL_TRADES_UNKNOWN = &v
}

// GetCURRENT_HOUR_VOLUME returns the CURRENT_HOUR_VOLUME field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_VOLUME() int32 {
	if o == nil || isNil(o.CURRENT_HOUR_VOLUME) {
		var ret int32
		return ret
	}
	return *o.CURRENT_HOUR_VOLUME
}

// GetCURRENT_HOUR_VOLUMEOk returns a tuple with the CURRENT_HOUR_VOLUME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_VOLUMEOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_HOUR_VOLUME) {
		return nil, false
	}
	return o.CURRENT_HOUR_VOLUME, true
}

// HasCURRENT_HOUR_VOLUME returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_HOUR_VOLUME() bool {
	if o != nil && !isNil(o.CURRENT_HOUR_VOLUME) {
		return true
	}

	return false
}

// SetCURRENT_HOUR_VOLUME gets a reference to the given int32 and assigns it to the CURRENT_HOUR_VOLUME field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_HOUR_VOLUME(v int32) {
	o.CURRENT_HOUR_VOLUME = &v
}

// GetCURRENT_HOUR_VOLUME_BUY returns the CURRENT_HOUR_VOLUME_BUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_VOLUME_BUY() int32 {
	if o == nil || isNil(o.CURRENT_HOUR_VOLUME_BUY) {
		var ret int32
		return ret
	}
	return *o.CURRENT_HOUR_VOLUME_BUY
}

// GetCURRENT_HOUR_VOLUME_BUYOk returns a tuple with the CURRENT_HOUR_VOLUME_BUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_VOLUME_BUYOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_HOUR_VOLUME_BUY) {
		return nil, false
	}
	return o.CURRENT_HOUR_VOLUME_BUY, true
}

// HasCURRENT_HOUR_VOLUME_BUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_HOUR_VOLUME_BUY() bool {
	if o != nil && !isNil(o.CURRENT_HOUR_VOLUME_BUY) {
		return true
	}

	return false
}

// SetCURRENT_HOUR_VOLUME_BUY gets a reference to the given int32 and assigns it to the CURRENT_HOUR_VOLUME_BUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_HOUR_VOLUME_BUY(v int32) {
	o.CURRENT_HOUR_VOLUME_BUY = &v
}

// GetCURRENT_HOUR_VOLUME_SELL returns the CURRENT_HOUR_VOLUME_SELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_VOLUME_SELL() int32 {
	if o == nil || isNil(o.CURRENT_HOUR_VOLUME_SELL) {
		var ret int32
		return ret
	}
	return *o.CURRENT_HOUR_VOLUME_SELL
}

// GetCURRENT_HOUR_VOLUME_SELLOk returns a tuple with the CURRENT_HOUR_VOLUME_SELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_VOLUME_SELLOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_HOUR_VOLUME_SELL) {
		return nil, false
	}
	return o.CURRENT_HOUR_VOLUME_SELL, true
}

// HasCURRENT_HOUR_VOLUME_SELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_HOUR_VOLUME_SELL() bool {
	if o != nil && !isNil(o.CURRENT_HOUR_VOLUME_SELL) {
		return true
	}

	return false
}

// SetCURRENT_HOUR_VOLUME_SELL gets a reference to the given int32 and assigns it to the CURRENT_HOUR_VOLUME_SELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_HOUR_VOLUME_SELL(v int32) {
	o.CURRENT_HOUR_VOLUME_SELL = &v
}

// GetCURRENT_HOUR_VOLUME_UNKNOWN returns the CURRENT_HOUR_VOLUME_UNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_VOLUME_UNKNOWN() int32 {
	if o == nil || isNil(o.CURRENT_HOUR_VOLUME_UNKNOWN) {
		var ret int32
		return ret
	}
	return *o.CURRENT_HOUR_VOLUME_UNKNOWN
}

// GetCURRENT_HOUR_VOLUME_UNKNOWNOk returns a tuple with the CURRENT_HOUR_VOLUME_UNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_HOUR_VOLUME_UNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_HOUR_VOLUME_UNKNOWN) {
		return nil, false
	}
	return o.CURRENT_HOUR_VOLUME_UNKNOWN, true
}

// HasCURRENT_HOUR_VOLUME_UNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_HOUR_VOLUME_UNKNOWN() bool {
	if o != nil && !isNil(o.CURRENT_HOUR_VOLUME_UNKNOWN) {
		return true
	}

	return false
}

// SetCURRENT_HOUR_VOLUME_UNKNOWN gets a reference to the given int32 and assigns it to the CURRENT_HOUR_VOLUME_UNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_HOUR_VOLUME_UNKNOWN(v int32) {
	o.CURRENT_HOUR_VOLUME_UNKNOWN = &v
}

// GetCURRENT_MONTH_HIGH returns the CURRENT_MONTH_HIGH field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_HIGH() int32 {
	if o == nil || isNil(o.CURRENT_MONTH_HIGH) {
		var ret int32
		return ret
	}
	return *o.CURRENT_MONTH_HIGH
}

// GetCURRENT_MONTH_HIGHOk returns a tuple with the CURRENT_MONTH_HIGH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_HIGHOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_MONTH_HIGH) {
		return nil, false
	}
	return o.CURRENT_MONTH_HIGH, true
}

// HasCURRENT_MONTH_HIGH returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_MONTH_HIGH() bool {
	if o != nil && !isNil(o.CURRENT_MONTH_HIGH) {
		return true
	}

	return false
}

// SetCURRENT_MONTH_HIGH gets a reference to the given int32 and assigns it to the CURRENT_MONTH_HIGH field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_MONTH_HIGH(v int32) {
	o.CURRENT_MONTH_HIGH = &v
}

// GetCURRENT_MONTH_LOW returns the CURRENT_MONTH_LOW field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_LOW() int32 {
	if o == nil || isNil(o.CURRENT_MONTH_LOW) {
		var ret int32
		return ret
	}
	return *o.CURRENT_MONTH_LOW
}

// GetCURRENT_MONTH_LOWOk returns a tuple with the CURRENT_MONTH_LOW field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_LOWOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_MONTH_LOW) {
		return nil, false
	}
	return o.CURRENT_MONTH_LOW, true
}

// HasCURRENT_MONTH_LOW returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_MONTH_LOW() bool {
	if o != nil && !isNil(o.CURRENT_MONTH_LOW) {
		return true
	}

	return false
}

// SetCURRENT_MONTH_LOW gets a reference to the given int32 and assigns it to the CURRENT_MONTH_LOW field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_MONTH_LOW(v int32) {
	o.CURRENT_MONTH_LOW = &v
}

// GetCURRENT_MONTH_OPEN returns the CURRENT_MONTH_OPEN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_OPEN() int32 {
	if o == nil || isNil(o.CURRENT_MONTH_OPEN) {
		var ret int32
		return ret
	}
	return *o.CURRENT_MONTH_OPEN
}

// GetCURRENT_MONTH_OPENOk returns a tuple with the CURRENT_MONTH_OPEN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_OPENOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_MONTH_OPEN) {
		return nil, false
	}
	return o.CURRENT_MONTH_OPEN, true
}

// HasCURRENT_MONTH_OPEN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_MONTH_OPEN() bool {
	if o != nil && !isNil(o.CURRENT_MONTH_OPEN) {
		return true
	}

	return false
}

// SetCURRENT_MONTH_OPEN gets a reference to the given int32 and assigns it to the CURRENT_MONTH_OPEN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_MONTH_OPEN(v int32) {
	o.CURRENT_MONTH_OPEN = &v
}

// GetCURRENT_MONTH_QUOTE_VOLUME returns the CURRENT_MONTH_QUOTE_VOLUME field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_QUOTE_VOLUME() int32 {
	if o == nil || isNil(o.CURRENT_MONTH_QUOTE_VOLUME) {
		var ret int32
		return ret
	}
	return *o.CURRENT_MONTH_QUOTE_VOLUME
}

// GetCURRENT_MONTH_QUOTE_VOLUMEOk returns a tuple with the CURRENT_MONTH_QUOTE_VOLUME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_QUOTE_VOLUMEOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_MONTH_QUOTE_VOLUME) {
		return nil, false
	}
	return o.CURRENT_MONTH_QUOTE_VOLUME, true
}

// HasCURRENT_MONTH_QUOTE_VOLUME returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_MONTH_QUOTE_VOLUME() bool {
	if o != nil && !isNil(o.CURRENT_MONTH_QUOTE_VOLUME) {
		return true
	}

	return false
}

// SetCURRENT_MONTH_QUOTE_VOLUME gets a reference to the given int32 and assigns it to the CURRENT_MONTH_QUOTE_VOLUME field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_MONTH_QUOTE_VOLUME(v int32) {
	o.CURRENT_MONTH_QUOTE_VOLUME = &v
}

// GetCURRENT_MONTH_QUOTE_VOLUME_BUY returns the CURRENT_MONTH_QUOTE_VOLUME_BUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_QUOTE_VOLUME_BUY() int32 {
	if o == nil || isNil(o.CURRENT_MONTH_QUOTE_VOLUME_BUY) {
		var ret int32
		return ret
	}
	return *o.CURRENT_MONTH_QUOTE_VOLUME_BUY
}

// GetCURRENT_MONTH_QUOTE_VOLUME_BUYOk returns a tuple with the CURRENT_MONTH_QUOTE_VOLUME_BUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_QUOTE_VOLUME_BUYOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_MONTH_QUOTE_VOLUME_BUY) {
		return nil, false
	}
	return o.CURRENT_MONTH_QUOTE_VOLUME_BUY, true
}

// HasCURRENT_MONTH_QUOTE_VOLUME_BUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_MONTH_QUOTE_VOLUME_BUY() bool {
	if o != nil && !isNil(o.CURRENT_MONTH_QUOTE_VOLUME_BUY) {
		return true
	}

	return false
}

// SetCURRENT_MONTH_QUOTE_VOLUME_BUY gets a reference to the given int32 and assigns it to the CURRENT_MONTH_QUOTE_VOLUME_BUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_MONTH_QUOTE_VOLUME_BUY(v int32) {
	o.CURRENT_MONTH_QUOTE_VOLUME_BUY = &v
}

// GetCURRENT_MONTH_QUOTE_VOLUME_SELL returns the CURRENT_MONTH_QUOTE_VOLUME_SELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_QUOTE_VOLUME_SELL() int32 {
	if o == nil || isNil(o.CURRENT_MONTH_QUOTE_VOLUME_SELL) {
		var ret int32
		return ret
	}
	return *o.CURRENT_MONTH_QUOTE_VOLUME_SELL
}

// GetCURRENT_MONTH_QUOTE_VOLUME_SELLOk returns a tuple with the CURRENT_MONTH_QUOTE_VOLUME_SELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_QUOTE_VOLUME_SELLOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_MONTH_QUOTE_VOLUME_SELL) {
		return nil, false
	}
	return o.CURRENT_MONTH_QUOTE_VOLUME_SELL, true
}

// HasCURRENT_MONTH_QUOTE_VOLUME_SELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_MONTH_QUOTE_VOLUME_SELL() bool {
	if o != nil && !isNil(o.CURRENT_MONTH_QUOTE_VOLUME_SELL) {
		return true
	}

	return false
}

// SetCURRENT_MONTH_QUOTE_VOLUME_SELL gets a reference to the given int32 and assigns it to the CURRENT_MONTH_QUOTE_VOLUME_SELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_MONTH_QUOTE_VOLUME_SELL(v int32) {
	o.CURRENT_MONTH_QUOTE_VOLUME_SELL = &v
}

// GetCURRENT_MONTH_QUOTE_VOLUME_UNKNOWN returns the CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_QUOTE_VOLUME_UNKNOWN() int32 {
	if o == nil || isNil(o.CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN) {
		var ret int32
		return ret
	}
	return *o.CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN
}

// GetCURRENT_MONTH_QUOTE_VOLUME_UNKNOWNOk returns a tuple with the CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_QUOTE_VOLUME_UNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN) {
		return nil, false
	}
	return o.CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN, true
}

// HasCURRENT_MONTH_QUOTE_VOLUME_UNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_MONTH_QUOTE_VOLUME_UNKNOWN() bool {
	if o != nil && !isNil(o.CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN) {
		return true
	}

	return false
}

// SetCURRENT_MONTH_QUOTE_VOLUME_UNKNOWN gets a reference to the given int32 and assigns it to the CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_MONTH_QUOTE_VOLUME_UNKNOWN(v int32) {
	o.CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN = &v
}

// GetCURRENT_MONTH_TOTAL_TRADES returns the CURRENT_MONTH_TOTAL_TRADES field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_TOTAL_TRADES() int32 {
	if o == nil || isNil(o.CURRENT_MONTH_TOTAL_TRADES) {
		var ret int32
		return ret
	}
	return *o.CURRENT_MONTH_TOTAL_TRADES
}

// GetCURRENT_MONTH_TOTAL_TRADESOk returns a tuple with the CURRENT_MONTH_TOTAL_TRADES field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_TOTAL_TRADESOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_MONTH_TOTAL_TRADES) {
		return nil, false
	}
	return o.CURRENT_MONTH_TOTAL_TRADES, true
}

// HasCURRENT_MONTH_TOTAL_TRADES returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_MONTH_TOTAL_TRADES() bool {
	if o != nil && !isNil(o.CURRENT_MONTH_TOTAL_TRADES) {
		return true
	}

	return false
}

// SetCURRENT_MONTH_TOTAL_TRADES gets a reference to the given int32 and assigns it to the CURRENT_MONTH_TOTAL_TRADES field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_MONTH_TOTAL_TRADES(v int32) {
	o.CURRENT_MONTH_TOTAL_TRADES = &v
}

// GetCURRENT_MONTH_TOTAL_TRADES_BUY returns the CURRENT_MONTH_TOTAL_TRADES_BUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_TOTAL_TRADES_BUY() int32 {
	if o == nil || isNil(o.CURRENT_MONTH_TOTAL_TRADES_BUY) {
		var ret int32
		return ret
	}
	return *o.CURRENT_MONTH_TOTAL_TRADES_BUY
}

// GetCURRENT_MONTH_TOTAL_TRADES_BUYOk returns a tuple with the CURRENT_MONTH_TOTAL_TRADES_BUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_TOTAL_TRADES_BUYOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_MONTH_TOTAL_TRADES_BUY) {
		return nil, false
	}
	return o.CURRENT_MONTH_TOTAL_TRADES_BUY, true
}

// HasCURRENT_MONTH_TOTAL_TRADES_BUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_MONTH_TOTAL_TRADES_BUY() bool {
	if o != nil && !isNil(o.CURRENT_MONTH_TOTAL_TRADES_BUY) {
		return true
	}

	return false
}

// SetCURRENT_MONTH_TOTAL_TRADES_BUY gets a reference to the given int32 and assigns it to the CURRENT_MONTH_TOTAL_TRADES_BUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_MONTH_TOTAL_TRADES_BUY(v int32) {
	o.CURRENT_MONTH_TOTAL_TRADES_BUY = &v
}

// GetCURRENT_MONTH_TOTAL_TRADES_SELL returns the CURRENT_MONTH_TOTAL_TRADES_SELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_TOTAL_TRADES_SELL() int32 {
	if o == nil || isNil(o.CURRENT_MONTH_TOTAL_TRADES_SELL) {
		var ret int32
		return ret
	}
	return *o.CURRENT_MONTH_TOTAL_TRADES_SELL
}

// GetCURRENT_MONTH_TOTAL_TRADES_SELLOk returns a tuple with the CURRENT_MONTH_TOTAL_TRADES_SELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_TOTAL_TRADES_SELLOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_MONTH_TOTAL_TRADES_SELL) {
		return nil, false
	}
	return o.CURRENT_MONTH_TOTAL_TRADES_SELL, true
}

// HasCURRENT_MONTH_TOTAL_TRADES_SELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_MONTH_TOTAL_TRADES_SELL() bool {
	if o != nil && !isNil(o.CURRENT_MONTH_TOTAL_TRADES_SELL) {
		return true
	}

	return false
}

// SetCURRENT_MONTH_TOTAL_TRADES_SELL gets a reference to the given int32 and assigns it to the CURRENT_MONTH_TOTAL_TRADES_SELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_MONTH_TOTAL_TRADES_SELL(v int32) {
	o.CURRENT_MONTH_TOTAL_TRADES_SELL = &v
}

// GetCURRENT_MONTH_TOTAL_TRADES_UNKNOWN returns the CURRENT_MONTH_TOTAL_TRADES_UNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_TOTAL_TRADES_UNKNOWN() int32 {
	if o == nil || isNil(o.CURRENT_MONTH_TOTAL_TRADES_UNKNOWN) {
		var ret int32
		return ret
	}
	return *o.CURRENT_MONTH_TOTAL_TRADES_UNKNOWN
}

// GetCURRENT_MONTH_TOTAL_TRADES_UNKNOWNOk returns a tuple with the CURRENT_MONTH_TOTAL_TRADES_UNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_TOTAL_TRADES_UNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_MONTH_TOTAL_TRADES_UNKNOWN) {
		return nil, false
	}
	return o.CURRENT_MONTH_TOTAL_TRADES_UNKNOWN, true
}

// HasCURRENT_MONTH_TOTAL_TRADES_UNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_MONTH_TOTAL_TRADES_UNKNOWN() bool {
	if o != nil && !isNil(o.CURRENT_MONTH_TOTAL_TRADES_UNKNOWN) {
		return true
	}

	return false
}

// SetCURRENT_MONTH_TOTAL_TRADES_UNKNOWN gets a reference to the given int32 and assigns it to the CURRENT_MONTH_TOTAL_TRADES_UNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_MONTH_TOTAL_TRADES_UNKNOWN(v int32) {
	o.CURRENT_MONTH_TOTAL_TRADES_UNKNOWN = &v
}

// GetCURRENT_MONTH_VOLUME returns the CURRENT_MONTH_VOLUME field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_VOLUME() int32 {
	if o == nil || isNil(o.CURRENT_MONTH_VOLUME) {
		var ret int32
		return ret
	}
	return *o.CURRENT_MONTH_VOLUME
}

// GetCURRENT_MONTH_VOLUMEOk returns a tuple with the CURRENT_MONTH_VOLUME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_VOLUMEOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_MONTH_VOLUME) {
		return nil, false
	}
	return o.CURRENT_MONTH_VOLUME, true
}

// HasCURRENT_MONTH_VOLUME returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_MONTH_VOLUME() bool {
	if o != nil && !isNil(o.CURRENT_MONTH_VOLUME) {
		return true
	}

	return false
}

// SetCURRENT_MONTH_VOLUME gets a reference to the given int32 and assigns it to the CURRENT_MONTH_VOLUME field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_MONTH_VOLUME(v int32) {
	o.CURRENT_MONTH_VOLUME = &v
}

// GetCURRENT_MONTH_VOLUME_BUY returns the CURRENT_MONTH_VOLUME_BUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_VOLUME_BUY() int32 {
	if o == nil || isNil(o.CURRENT_MONTH_VOLUME_BUY) {
		var ret int32
		return ret
	}
	return *o.CURRENT_MONTH_VOLUME_BUY
}

// GetCURRENT_MONTH_VOLUME_BUYOk returns a tuple with the CURRENT_MONTH_VOLUME_BUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_VOLUME_BUYOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_MONTH_VOLUME_BUY) {
		return nil, false
	}
	return o.CURRENT_MONTH_VOLUME_BUY, true
}

// HasCURRENT_MONTH_VOLUME_BUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_MONTH_VOLUME_BUY() bool {
	if o != nil && !isNil(o.CURRENT_MONTH_VOLUME_BUY) {
		return true
	}

	return false
}

// SetCURRENT_MONTH_VOLUME_BUY gets a reference to the given int32 and assigns it to the CURRENT_MONTH_VOLUME_BUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_MONTH_VOLUME_BUY(v int32) {
	o.CURRENT_MONTH_VOLUME_BUY = &v
}

// GetCURRENT_MONTH_VOLUME_SELL returns the CURRENT_MONTH_VOLUME_SELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_VOLUME_SELL() int32 {
	if o == nil || isNil(o.CURRENT_MONTH_VOLUME_SELL) {
		var ret int32
		return ret
	}
	return *o.CURRENT_MONTH_VOLUME_SELL
}

// GetCURRENT_MONTH_VOLUME_SELLOk returns a tuple with the CURRENT_MONTH_VOLUME_SELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_VOLUME_SELLOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_MONTH_VOLUME_SELL) {
		return nil, false
	}
	return o.CURRENT_MONTH_VOLUME_SELL, true
}

// HasCURRENT_MONTH_VOLUME_SELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_MONTH_VOLUME_SELL() bool {
	if o != nil && !isNil(o.CURRENT_MONTH_VOLUME_SELL) {
		return true
	}

	return false
}

// SetCURRENT_MONTH_VOLUME_SELL gets a reference to the given int32 and assigns it to the CURRENT_MONTH_VOLUME_SELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_MONTH_VOLUME_SELL(v int32) {
	o.CURRENT_MONTH_VOLUME_SELL = &v
}

// GetCURRENT_MONTH_VOLUME_UNKNOWN returns the CURRENT_MONTH_VOLUME_UNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_VOLUME_UNKNOWN() int32 {
	if o == nil || isNil(o.CURRENT_MONTH_VOLUME_UNKNOWN) {
		var ret int32
		return ret
	}
	return *o.CURRENT_MONTH_VOLUME_UNKNOWN
}

// GetCURRENT_MONTH_VOLUME_UNKNOWNOk returns a tuple with the CURRENT_MONTH_VOLUME_UNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_MONTH_VOLUME_UNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_MONTH_VOLUME_UNKNOWN) {
		return nil, false
	}
	return o.CURRENT_MONTH_VOLUME_UNKNOWN, true
}

// HasCURRENT_MONTH_VOLUME_UNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_MONTH_VOLUME_UNKNOWN() bool {
	if o != nil && !isNil(o.CURRENT_MONTH_VOLUME_UNKNOWN) {
		return true
	}

	return false
}

// SetCURRENT_MONTH_VOLUME_UNKNOWN gets a reference to the given int32 and assigns it to the CURRENT_MONTH_VOLUME_UNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_MONTH_VOLUME_UNKNOWN(v int32) {
	o.CURRENT_MONTH_VOLUME_UNKNOWN = &v
}

// GetCURRENT_WEEK_HIGH returns the CURRENT_WEEK_HIGH field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_HIGH() int32 {
	if o == nil || isNil(o.CURRENT_WEEK_HIGH) {
		var ret int32
		return ret
	}
	return *o.CURRENT_WEEK_HIGH
}

// GetCURRENT_WEEK_HIGHOk returns a tuple with the CURRENT_WEEK_HIGH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_HIGHOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_WEEK_HIGH) {
		return nil, false
	}
	return o.CURRENT_WEEK_HIGH, true
}

// HasCURRENT_WEEK_HIGH returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_WEEK_HIGH() bool {
	if o != nil && !isNil(o.CURRENT_WEEK_HIGH) {
		return true
	}

	return false
}

// SetCURRENT_WEEK_HIGH gets a reference to the given int32 and assigns it to the CURRENT_WEEK_HIGH field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_WEEK_HIGH(v int32) {
	o.CURRENT_WEEK_HIGH = &v
}

// GetCURRENT_WEEK_LOW returns the CURRENT_WEEK_LOW field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_LOW() int32 {
	if o == nil || isNil(o.CURRENT_WEEK_LOW) {
		var ret int32
		return ret
	}
	return *o.CURRENT_WEEK_LOW
}

// GetCURRENT_WEEK_LOWOk returns a tuple with the CURRENT_WEEK_LOW field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_LOWOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_WEEK_LOW) {
		return nil, false
	}
	return o.CURRENT_WEEK_LOW, true
}

// HasCURRENT_WEEK_LOW returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_WEEK_LOW() bool {
	if o != nil && !isNil(o.CURRENT_WEEK_LOW) {
		return true
	}

	return false
}

// SetCURRENT_WEEK_LOW gets a reference to the given int32 and assigns it to the CURRENT_WEEK_LOW field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_WEEK_LOW(v int32) {
	o.CURRENT_WEEK_LOW = &v
}

// GetCURRENT_WEEK_OPEN returns the CURRENT_WEEK_OPEN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_OPEN() int32 {
	if o == nil || isNil(o.CURRENT_WEEK_OPEN) {
		var ret int32
		return ret
	}
	return *o.CURRENT_WEEK_OPEN
}

// GetCURRENT_WEEK_OPENOk returns a tuple with the CURRENT_WEEK_OPEN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_OPENOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_WEEK_OPEN) {
		return nil, false
	}
	return o.CURRENT_WEEK_OPEN, true
}

// HasCURRENT_WEEK_OPEN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_WEEK_OPEN() bool {
	if o != nil && !isNil(o.CURRENT_WEEK_OPEN) {
		return true
	}

	return false
}

// SetCURRENT_WEEK_OPEN gets a reference to the given int32 and assigns it to the CURRENT_WEEK_OPEN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_WEEK_OPEN(v int32) {
	o.CURRENT_WEEK_OPEN = &v
}

// GetCURRENT_WEEK_QUOTE_VOLUME returns the CURRENT_WEEK_QUOTE_VOLUME field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_QUOTE_VOLUME() int32 {
	if o == nil || isNil(o.CURRENT_WEEK_QUOTE_VOLUME) {
		var ret int32
		return ret
	}
	return *o.CURRENT_WEEK_QUOTE_VOLUME
}

// GetCURRENT_WEEK_QUOTE_VOLUMEOk returns a tuple with the CURRENT_WEEK_QUOTE_VOLUME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_QUOTE_VOLUMEOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_WEEK_QUOTE_VOLUME) {
		return nil, false
	}
	return o.CURRENT_WEEK_QUOTE_VOLUME, true
}

// HasCURRENT_WEEK_QUOTE_VOLUME returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_WEEK_QUOTE_VOLUME() bool {
	if o != nil && !isNil(o.CURRENT_WEEK_QUOTE_VOLUME) {
		return true
	}

	return false
}

// SetCURRENT_WEEK_QUOTE_VOLUME gets a reference to the given int32 and assigns it to the CURRENT_WEEK_QUOTE_VOLUME field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_WEEK_QUOTE_VOLUME(v int32) {
	o.CURRENT_WEEK_QUOTE_VOLUME = &v
}

// GetCURRENT_WEEK_QUOTE_VOLUME_BUY returns the CURRENT_WEEK_QUOTE_VOLUME_BUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_QUOTE_VOLUME_BUY() int32 {
	if o == nil || isNil(o.CURRENT_WEEK_QUOTE_VOLUME_BUY) {
		var ret int32
		return ret
	}
	return *o.CURRENT_WEEK_QUOTE_VOLUME_BUY
}

// GetCURRENT_WEEK_QUOTE_VOLUME_BUYOk returns a tuple with the CURRENT_WEEK_QUOTE_VOLUME_BUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_QUOTE_VOLUME_BUYOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_WEEK_QUOTE_VOLUME_BUY) {
		return nil, false
	}
	return o.CURRENT_WEEK_QUOTE_VOLUME_BUY, true
}

// HasCURRENT_WEEK_QUOTE_VOLUME_BUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_WEEK_QUOTE_VOLUME_BUY() bool {
	if o != nil && !isNil(o.CURRENT_WEEK_QUOTE_VOLUME_BUY) {
		return true
	}

	return false
}

// SetCURRENT_WEEK_QUOTE_VOLUME_BUY gets a reference to the given int32 and assigns it to the CURRENT_WEEK_QUOTE_VOLUME_BUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_WEEK_QUOTE_VOLUME_BUY(v int32) {
	o.CURRENT_WEEK_QUOTE_VOLUME_BUY = &v
}

// GetCURRENT_WEEK_QUOTE_VOLUME_SELL returns the CURRENT_WEEK_QUOTE_VOLUME_SELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_QUOTE_VOLUME_SELL() int32 {
	if o == nil || isNil(o.CURRENT_WEEK_QUOTE_VOLUME_SELL) {
		var ret int32
		return ret
	}
	return *o.CURRENT_WEEK_QUOTE_VOLUME_SELL
}

// GetCURRENT_WEEK_QUOTE_VOLUME_SELLOk returns a tuple with the CURRENT_WEEK_QUOTE_VOLUME_SELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_QUOTE_VOLUME_SELLOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_WEEK_QUOTE_VOLUME_SELL) {
		return nil, false
	}
	return o.CURRENT_WEEK_QUOTE_VOLUME_SELL, true
}

// HasCURRENT_WEEK_QUOTE_VOLUME_SELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_WEEK_QUOTE_VOLUME_SELL() bool {
	if o != nil && !isNil(o.CURRENT_WEEK_QUOTE_VOLUME_SELL) {
		return true
	}

	return false
}

// SetCURRENT_WEEK_QUOTE_VOLUME_SELL gets a reference to the given int32 and assigns it to the CURRENT_WEEK_QUOTE_VOLUME_SELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_WEEK_QUOTE_VOLUME_SELL(v int32) {
	o.CURRENT_WEEK_QUOTE_VOLUME_SELL = &v
}

// GetCURRENT_WEEK_QUOTE_VOLUME_UNKNOWN returns the CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_QUOTE_VOLUME_UNKNOWN() int32 {
	if o == nil || isNil(o.CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN) {
		var ret int32
		return ret
	}
	return *o.CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN
}

// GetCURRENT_WEEK_QUOTE_VOLUME_UNKNOWNOk returns a tuple with the CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_QUOTE_VOLUME_UNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN) {
		return nil, false
	}
	return o.CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN, true
}

// HasCURRENT_WEEK_QUOTE_VOLUME_UNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_WEEK_QUOTE_VOLUME_UNKNOWN() bool {
	if o != nil && !isNil(o.CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN) {
		return true
	}

	return false
}

// SetCURRENT_WEEK_QUOTE_VOLUME_UNKNOWN gets a reference to the given int32 and assigns it to the CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_WEEK_QUOTE_VOLUME_UNKNOWN(v int32) {
	o.CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN = &v
}

// GetCURRENT_WEEK_TOTAL_TRADES returns the CURRENT_WEEK_TOTAL_TRADES field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_TOTAL_TRADES() int32 {
	if o == nil || isNil(o.CURRENT_WEEK_TOTAL_TRADES) {
		var ret int32
		return ret
	}
	return *o.CURRENT_WEEK_TOTAL_TRADES
}

// GetCURRENT_WEEK_TOTAL_TRADESOk returns a tuple with the CURRENT_WEEK_TOTAL_TRADES field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_TOTAL_TRADESOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_WEEK_TOTAL_TRADES) {
		return nil, false
	}
	return o.CURRENT_WEEK_TOTAL_TRADES, true
}

// HasCURRENT_WEEK_TOTAL_TRADES returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_WEEK_TOTAL_TRADES() bool {
	if o != nil && !isNil(o.CURRENT_WEEK_TOTAL_TRADES) {
		return true
	}

	return false
}

// SetCURRENT_WEEK_TOTAL_TRADES gets a reference to the given int32 and assigns it to the CURRENT_WEEK_TOTAL_TRADES field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_WEEK_TOTAL_TRADES(v int32) {
	o.CURRENT_WEEK_TOTAL_TRADES = &v
}

// GetCURRENT_WEEK_TOTAL_TRADES_BUY returns the CURRENT_WEEK_TOTAL_TRADES_BUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_TOTAL_TRADES_BUY() int32 {
	if o == nil || isNil(o.CURRENT_WEEK_TOTAL_TRADES_BUY) {
		var ret int32
		return ret
	}
	return *o.CURRENT_WEEK_TOTAL_TRADES_BUY
}

// GetCURRENT_WEEK_TOTAL_TRADES_BUYOk returns a tuple with the CURRENT_WEEK_TOTAL_TRADES_BUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_TOTAL_TRADES_BUYOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_WEEK_TOTAL_TRADES_BUY) {
		return nil, false
	}
	return o.CURRENT_WEEK_TOTAL_TRADES_BUY, true
}

// HasCURRENT_WEEK_TOTAL_TRADES_BUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_WEEK_TOTAL_TRADES_BUY() bool {
	if o != nil && !isNil(o.CURRENT_WEEK_TOTAL_TRADES_BUY) {
		return true
	}

	return false
}

// SetCURRENT_WEEK_TOTAL_TRADES_BUY gets a reference to the given int32 and assigns it to the CURRENT_WEEK_TOTAL_TRADES_BUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_WEEK_TOTAL_TRADES_BUY(v int32) {
	o.CURRENT_WEEK_TOTAL_TRADES_BUY = &v
}

// GetCURRENT_WEEK_TOTAL_TRADES_SELL returns the CURRENT_WEEK_TOTAL_TRADES_SELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_TOTAL_TRADES_SELL() int32 {
	if o == nil || isNil(o.CURRENT_WEEK_TOTAL_TRADES_SELL) {
		var ret int32
		return ret
	}
	return *o.CURRENT_WEEK_TOTAL_TRADES_SELL
}

// GetCURRENT_WEEK_TOTAL_TRADES_SELLOk returns a tuple with the CURRENT_WEEK_TOTAL_TRADES_SELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_TOTAL_TRADES_SELLOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_WEEK_TOTAL_TRADES_SELL) {
		return nil, false
	}
	return o.CURRENT_WEEK_TOTAL_TRADES_SELL, true
}

// HasCURRENT_WEEK_TOTAL_TRADES_SELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_WEEK_TOTAL_TRADES_SELL() bool {
	if o != nil && !isNil(o.CURRENT_WEEK_TOTAL_TRADES_SELL) {
		return true
	}

	return false
}

// SetCURRENT_WEEK_TOTAL_TRADES_SELL gets a reference to the given int32 and assigns it to the CURRENT_WEEK_TOTAL_TRADES_SELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_WEEK_TOTAL_TRADES_SELL(v int32) {
	o.CURRENT_WEEK_TOTAL_TRADES_SELL = &v
}

// GetCURRENT_WEEK_TOTAL_TRADES_UNKNOWN returns the CURRENT_WEEK_TOTAL_TRADES_UNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_TOTAL_TRADES_UNKNOWN() int32 {
	if o == nil || isNil(o.CURRENT_WEEK_TOTAL_TRADES_UNKNOWN) {
		var ret int32
		return ret
	}
	return *o.CURRENT_WEEK_TOTAL_TRADES_UNKNOWN
}

// GetCURRENT_WEEK_TOTAL_TRADES_UNKNOWNOk returns a tuple with the CURRENT_WEEK_TOTAL_TRADES_UNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_TOTAL_TRADES_UNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_WEEK_TOTAL_TRADES_UNKNOWN) {
		return nil, false
	}
	return o.CURRENT_WEEK_TOTAL_TRADES_UNKNOWN, true
}

// HasCURRENT_WEEK_TOTAL_TRADES_UNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_WEEK_TOTAL_TRADES_UNKNOWN() bool {
	if o != nil && !isNil(o.CURRENT_WEEK_TOTAL_TRADES_UNKNOWN) {
		return true
	}

	return false
}

// SetCURRENT_WEEK_TOTAL_TRADES_UNKNOWN gets a reference to the given int32 and assigns it to the CURRENT_WEEK_TOTAL_TRADES_UNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_WEEK_TOTAL_TRADES_UNKNOWN(v int32) {
	o.CURRENT_WEEK_TOTAL_TRADES_UNKNOWN = &v
}

// GetCURRENT_WEEK_VOLUME returns the CURRENT_WEEK_VOLUME field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_VOLUME() int32 {
	if o == nil || isNil(o.CURRENT_WEEK_VOLUME) {
		var ret int32
		return ret
	}
	return *o.CURRENT_WEEK_VOLUME
}

// GetCURRENT_WEEK_VOLUMEOk returns a tuple with the CURRENT_WEEK_VOLUME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_VOLUMEOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_WEEK_VOLUME) {
		return nil, false
	}
	return o.CURRENT_WEEK_VOLUME, true
}

// HasCURRENT_WEEK_VOLUME returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_WEEK_VOLUME() bool {
	if o != nil && !isNil(o.CURRENT_WEEK_VOLUME) {
		return true
	}

	return false
}

// SetCURRENT_WEEK_VOLUME gets a reference to the given int32 and assigns it to the CURRENT_WEEK_VOLUME field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_WEEK_VOLUME(v int32) {
	o.CURRENT_WEEK_VOLUME = &v
}

// GetCURRENT_WEEK_VOLUME_BUY returns the CURRENT_WEEK_VOLUME_BUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_VOLUME_BUY() int32 {
	if o == nil || isNil(o.CURRENT_WEEK_VOLUME_BUY) {
		var ret int32
		return ret
	}
	return *o.CURRENT_WEEK_VOLUME_BUY
}

// GetCURRENT_WEEK_VOLUME_BUYOk returns a tuple with the CURRENT_WEEK_VOLUME_BUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_VOLUME_BUYOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_WEEK_VOLUME_BUY) {
		return nil, false
	}
	return o.CURRENT_WEEK_VOLUME_BUY, true
}

// HasCURRENT_WEEK_VOLUME_BUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_WEEK_VOLUME_BUY() bool {
	if o != nil && !isNil(o.CURRENT_WEEK_VOLUME_BUY) {
		return true
	}

	return false
}

// SetCURRENT_WEEK_VOLUME_BUY gets a reference to the given int32 and assigns it to the CURRENT_WEEK_VOLUME_BUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_WEEK_VOLUME_BUY(v int32) {
	o.CURRENT_WEEK_VOLUME_BUY = &v
}

// GetCURRENT_WEEK_VOLUME_SELL returns the CURRENT_WEEK_VOLUME_SELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_VOLUME_SELL() int32 {
	if o == nil || isNil(o.CURRENT_WEEK_VOLUME_SELL) {
		var ret int32
		return ret
	}
	return *o.CURRENT_WEEK_VOLUME_SELL
}

// GetCURRENT_WEEK_VOLUME_SELLOk returns a tuple with the CURRENT_WEEK_VOLUME_SELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_VOLUME_SELLOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_WEEK_VOLUME_SELL) {
		return nil, false
	}
	return o.CURRENT_WEEK_VOLUME_SELL, true
}

// HasCURRENT_WEEK_VOLUME_SELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_WEEK_VOLUME_SELL() bool {
	if o != nil && !isNil(o.CURRENT_WEEK_VOLUME_SELL) {
		return true
	}

	return false
}

// SetCURRENT_WEEK_VOLUME_SELL gets a reference to the given int32 and assigns it to the CURRENT_WEEK_VOLUME_SELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_WEEK_VOLUME_SELL(v int32) {
	o.CURRENT_WEEK_VOLUME_SELL = &v
}

// GetCURRENT_WEEK_VOLUME_UNKNOWN returns the CURRENT_WEEK_VOLUME_UNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_VOLUME_UNKNOWN() int32 {
	if o == nil || isNil(o.CURRENT_WEEK_VOLUME_UNKNOWN) {
		var ret int32
		return ret
	}
	return *o.CURRENT_WEEK_VOLUME_UNKNOWN
}

// GetCURRENT_WEEK_VOLUME_UNKNOWNOk returns a tuple with the CURRENT_WEEK_VOLUME_UNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_WEEK_VOLUME_UNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_WEEK_VOLUME_UNKNOWN) {
		return nil, false
	}
	return o.CURRENT_WEEK_VOLUME_UNKNOWN, true
}

// HasCURRENT_WEEK_VOLUME_UNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_WEEK_VOLUME_UNKNOWN() bool {
	if o != nil && !isNil(o.CURRENT_WEEK_VOLUME_UNKNOWN) {
		return true
	}

	return false
}

// SetCURRENT_WEEK_VOLUME_UNKNOWN gets a reference to the given int32 and assigns it to the CURRENT_WEEK_VOLUME_UNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_WEEK_VOLUME_UNKNOWN(v int32) {
	o.CURRENT_WEEK_VOLUME_UNKNOWN = &v
}

// GetCURRENT_YEAR_HIGH returns the CURRENT_YEAR_HIGH field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_HIGH() int32 {
	if o == nil || isNil(o.CURRENT_YEAR_HIGH) {
		var ret int32
		return ret
	}
	return *o.CURRENT_YEAR_HIGH
}

// GetCURRENT_YEAR_HIGHOk returns a tuple with the CURRENT_YEAR_HIGH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_HIGHOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_YEAR_HIGH) {
		return nil, false
	}
	return o.CURRENT_YEAR_HIGH, true
}

// HasCURRENT_YEAR_HIGH returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_YEAR_HIGH() bool {
	if o != nil && !isNil(o.CURRENT_YEAR_HIGH) {
		return true
	}

	return false
}

// SetCURRENT_YEAR_HIGH gets a reference to the given int32 and assigns it to the CURRENT_YEAR_HIGH field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_YEAR_HIGH(v int32) {
	o.CURRENT_YEAR_HIGH = &v
}

// GetCURRENT_YEAR_LOW returns the CURRENT_YEAR_LOW field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_LOW() int32 {
	if o == nil || isNil(o.CURRENT_YEAR_LOW) {
		var ret int32
		return ret
	}
	return *o.CURRENT_YEAR_LOW
}

// GetCURRENT_YEAR_LOWOk returns a tuple with the CURRENT_YEAR_LOW field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_LOWOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_YEAR_LOW) {
		return nil, false
	}
	return o.CURRENT_YEAR_LOW, true
}

// HasCURRENT_YEAR_LOW returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_YEAR_LOW() bool {
	if o != nil && !isNil(o.CURRENT_YEAR_LOW) {
		return true
	}

	return false
}

// SetCURRENT_YEAR_LOW gets a reference to the given int32 and assigns it to the CURRENT_YEAR_LOW field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_YEAR_LOW(v int32) {
	o.CURRENT_YEAR_LOW = &v
}

// GetCURRENT_YEAR_OPEN returns the CURRENT_YEAR_OPEN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_OPEN() int32 {
	if o == nil || isNil(o.CURRENT_YEAR_OPEN) {
		var ret int32
		return ret
	}
	return *o.CURRENT_YEAR_OPEN
}

// GetCURRENT_YEAR_OPENOk returns a tuple with the CURRENT_YEAR_OPEN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_OPENOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_YEAR_OPEN) {
		return nil, false
	}
	return o.CURRENT_YEAR_OPEN, true
}

// HasCURRENT_YEAR_OPEN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_YEAR_OPEN() bool {
	if o != nil && !isNil(o.CURRENT_YEAR_OPEN) {
		return true
	}

	return false
}

// SetCURRENT_YEAR_OPEN gets a reference to the given int32 and assigns it to the CURRENT_YEAR_OPEN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_YEAR_OPEN(v int32) {
	o.CURRENT_YEAR_OPEN = &v
}

// GetCURRENT_YEAR_QUOTE_VOLUME returns the CURRENT_YEAR_QUOTE_VOLUME field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_QUOTE_VOLUME() int32 {
	if o == nil || isNil(o.CURRENT_YEAR_QUOTE_VOLUME) {
		var ret int32
		return ret
	}
	return *o.CURRENT_YEAR_QUOTE_VOLUME
}

// GetCURRENT_YEAR_QUOTE_VOLUMEOk returns a tuple with the CURRENT_YEAR_QUOTE_VOLUME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_QUOTE_VOLUMEOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_YEAR_QUOTE_VOLUME) {
		return nil, false
	}
	return o.CURRENT_YEAR_QUOTE_VOLUME, true
}

// HasCURRENT_YEAR_QUOTE_VOLUME returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_YEAR_QUOTE_VOLUME() bool {
	if o != nil && !isNil(o.CURRENT_YEAR_QUOTE_VOLUME) {
		return true
	}

	return false
}

// SetCURRENT_YEAR_QUOTE_VOLUME gets a reference to the given int32 and assigns it to the CURRENT_YEAR_QUOTE_VOLUME field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_YEAR_QUOTE_VOLUME(v int32) {
	o.CURRENT_YEAR_QUOTE_VOLUME = &v
}

// GetCURRENT_YEAR_QUOTE_VOLUME_BUY returns the CURRENT_YEAR_QUOTE_VOLUME_BUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_QUOTE_VOLUME_BUY() int32 {
	if o == nil || isNil(o.CURRENT_YEAR_QUOTE_VOLUME_BUY) {
		var ret int32
		return ret
	}
	return *o.CURRENT_YEAR_QUOTE_VOLUME_BUY
}

// GetCURRENT_YEAR_QUOTE_VOLUME_BUYOk returns a tuple with the CURRENT_YEAR_QUOTE_VOLUME_BUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_QUOTE_VOLUME_BUYOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_YEAR_QUOTE_VOLUME_BUY) {
		return nil, false
	}
	return o.CURRENT_YEAR_QUOTE_VOLUME_BUY, true
}

// HasCURRENT_YEAR_QUOTE_VOLUME_BUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_YEAR_QUOTE_VOLUME_BUY() bool {
	if o != nil && !isNil(o.CURRENT_YEAR_QUOTE_VOLUME_BUY) {
		return true
	}

	return false
}

// SetCURRENT_YEAR_QUOTE_VOLUME_BUY gets a reference to the given int32 and assigns it to the CURRENT_YEAR_QUOTE_VOLUME_BUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_YEAR_QUOTE_VOLUME_BUY(v int32) {
	o.CURRENT_YEAR_QUOTE_VOLUME_BUY = &v
}

// GetCURRENT_YEAR_QUOTE_VOLUME_SELL returns the CURRENT_YEAR_QUOTE_VOLUME_SELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_QUOTE_VOLUME_SELL() int32 {
	if o == nil || isNil(o.CURRENT_YEAR_QUOTE_VOLUME_SELL) {
		var ret int32
		return ret
	}
	return *o.CURRENT_YEAR_QUOTE_VOLUME_SELL
}

// GetCURRENT_YEAR_QUOTE_VOLUME_SELLOk returns a tuple with the CURRENT_YEAR_QUOTE_VOLUME_SELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_QUOTE_VOLUME_SELLOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_YEAR_QUOTE_VOLUME_SELL) {
		return nil, false
	}
	return o.CURRENT_YEAR_QUOTE_VOLUME_SELL, true
}

// HasCURRENT_YEAR_QUOTE_VOLUME_SELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_YEAR_QUOTE_VOLUME_SELL() bool {
	if o != nil && !isNil(o.CURRENT_YEAR_QUOTE_VOLUME_SELL) {
		return true
	}

	return false
}

// SetCURRENT_YEAR_QUOTE_VOLUME_SELL gets a reference to the given int32 and assigns it to the CURRENT_YEAR_QUOTE_VOLUME_SELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_YEAR_QUOTE_VOLUME_SELL(v int32) {
	o.CURRENT_YEAR_QUOTE_VOLUME_SELL = &v
}

// GetCURRENT_YEAR_QUOTE_VOLUME_UNKNOWN returns the CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_QUOTE_VOLUME_UNKNOWN() int32 {
	if o == nil || isNil(o.CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN) {
		var ret int32
		return ret
	}
	return *o.CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN
}

// GetCURRENT_YEAR_QUOTE_VOLUME_UNKNOWNOk returns a tuple with the CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_QUOTE_VOLUME_UNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN) {
		return nil, false
	}
	return o.CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN, true
}

// HasCURRENT_YEAR_QUOTE_VOLUME_UNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_YEAR_QUOTE_VOLUME_UNKNOWN() bool {
	if o != nil && !isNil(o.CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN) {
		return true
	}

	return false
}

// SetCURRENT_YEAR_QUOTE_VOLUME_UNKNOWN gets a reference to the given int32 and assigns it to the CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_YEAR_QUOTE_VOLUME_UNKNOWN(v int32) {
	o.CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN = &v
}

// GetCURRENT_YEAR_TOTAL_TRADES returns the CURRENT_YEAR_TOTAL_TRADES field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_TOTAL_TRADES() int32 {
	if o == nil || isNil(o.CURRENT_YEAR_TOTAL_TRADES) {
		var ret int32
		return ret
	}
	return *o.CURRENT_YEAR_TOTAL_TRADES
}

// GetCURRENT_YEAR_TOTAL_TRADESOk returns a tuple with the CURRENT_YEAR_TOTAL_TRADES field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_TOTAL_TRADESOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_YEAR_TOTAL_TRADES) {
		return nil, false
	}
	return o.CURRENT_YEAR_TOTAL_TRADES, true
}

// HasCURRENT_YEAR_TOTAL_TRADES returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_YEAR_TOTAL_TRADES() bool {
	if o != nil && !isNil(o.CURRENT_YEAR_TOTAL_TRADES) {
		return true
	}

	return false
}

// SetCURRENT_YEAR_TOTAL_TRADES gets a reference to the given int32 and assigns it to the CURRENT_YEAR_TOTAL_TRADES field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_YEAR_TOTAL_TRADES(v int32) {
	o.CURRENT_YEAR_TOTAL_TRADES = &v
}

// GetCURRENT_YEAR_TOTAL_TRADES_BUY returns the CURRENT_YEAR_TOTAL_TRADES_BUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_TOTAL_TRADES_BUY() int32 {
	if o == nil || isNil(o.CURRENT_YEAR_TOTAL_TRADES_BUY) {
		var ret int32
		return ret
	}
	return *o.CURRENT_YEAR_TOTAL_TRADES_BUY
}

// GetCURRENT_YEAR_TOTAL_TRADES_BUYOk returns a tuple with the CURRENT_YEAR_TOTAL_TRADES_BUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_TOTAL_TRADES_BUYOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_YEAR_TOTAL_TRADES_BUY) {
		return nil, false
	}
	return o.CURRENT_YEAR_TOTAL_TRADES_BUY, true
}

// HasCURRENT_YEAR_TOTAL_TRADES_BUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_YEAR_TOTAL_TRADES_BUY() bool {
	if o != nil && !isNil(o.CURRENT_YEAR_TOTAL_TRADES_BUY) {
		return true
	}

	return false
}

// SetCURRENT_YEAR_TOTAL_TRADES_BUY gets a reference to the given int32 and assigns it to the CURRENT_YEAR_TOTAL_TRADES_BUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_YEAR_TOTAL_TRADES_BUY(v int32) {
	o.CURRENT_YEAR_TOTAL_TRADES_BUY = &v
}

// GetCURRENT_YEAR_TOTAL_TRADES_SELL returns the CURRENT_YEAR_TOTAL_TRADES_SELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_TOTAL_TRADES_SELL() int32 {
	if o == nil || isNil(o.CURRENT_YEAR_TOTAL_TRADES_SELL) {
		var ret int32
		return ret
	}
	return *o.CURRENT_YEAR_TOTAL_TRADES_SELL
}

// GetCURRENT_YEAR_TOTAL_TRADES_SELLOk returns a tuple with the CURRENT_YEAR_TOTAL_TRADES_SELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_TOTAL_TRADES_SELLOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_YEAR_TOTAL_TRADES_SELL) {
		return nil, false
	}
	return o.CURRENT_YEAR_TOTAL_TRADES_SELL, true
}

// HasCURRENT_YEAR_TOTAL_TRADES_SELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_YEAR_TOTAL_TRADES_SELL() bool {
	if o != nil && !isNil(o.CURRENT_YEAR_TOTAL_TRADES_SELL) {
		return true
	}

	return false
}

// SetCURRENT_YEAR_TOTAL_TRADES_SELL gets a reference to the given int32 and assigns it to the CURRENT_YEAR_TOTAL_TRADES_SELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_YEAR_TOTAL_TRADES_SELL(v int32) {
	o.CURRENT_YEAR_TOTAL_TRADES_SELL = &v
}

// GetCURRENT_YEAR_TOTAL_TRADES_UNKNOWN returns the CURRENT_YEAR_TOTAL_TRADES_UNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_TOTAL_TRADES_UNKNOWN() int32 {
	if o == nil || isNil(o.CURRENT_YEAR_TOTAL_TRADES_UNKNOWN) {
		var ret int32
		return ret
	}
	return *o.CURRENT_YEAR_TOTAL_TRADES_UNKNOWN
}

// GetCURRENT_YEAR_TOTAL_TRADES_UNKNOWNOk returns a tuple with the CURRENT_YEAR_TOTAL_TRADES_UNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_TOTAL_TRADES_UNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_YEAR_TOTAL_TRADES_UNKNOWN) {
		return nil, false
	}
	return o.CURRENT_YEAR_TOTAL_TRADES_UNKNOWN, true
}

// HasCURRENT_YEAR_TOTAL_TRADES_UNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_YEAR_TOTAL_TRADES_UNKNOWN() bool {
	if o != nil && !isNil(o.CURRENT_YEAR_TOTAL_TRADES_UNKNOWN) {
		return true
	}

	return false
}

// SetCURRENT_YEAR_TOTAL_TRADES_UNKNOWN gets a reference to the given int32 and assigns it to the CURRENT_YEAR_TOTAL_TRADES_UNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_YEAR_TOTAL_TRADES_UNKNOWN(v int32) {
	o.CURRENT_YEAR_TOTAL_TRADES_UNKNOWN = &v
}

// GetCURRENT_YEAR_VOLUME returns the CURRENT_YEAR_VOLUME field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_VOLUME() int32 {
	if o == nil || isNil(o.CURRENT_YEAR_VOLUME) {
		var ret int32
		return ret
	}
	return *o.CURRENT_YEAR_VOLUME
}

// GetCURRENT_YEAR_VOLUMEOk returns a tuple with the CURRENT_YEAR_VOLUME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_VOLUMEOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_YEAR_VOLUME) {
		return nil, false
	}
	return o.CURRENT_YEAR_VOLUME, true
}

// HasCURRENT_YEAR_VOLUME returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_YEAR_VOLUME() bool {
	if o != nil && !isNil(o.CURRENT_YEAR_VOLUME) {
		return true
	}

	return false
}

// SetCURRENT_YEAR_VOLUME gets a reference to the given int32 and assigns it to the CURRENT_YEAR_VOLUME field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_YEAR_VOLUME(v int32) {
	o.CURRENT_YEAR_VOLUME = &v
}

// GetCURRENT_YEAR_VOLUME_BUY returns the CURRENT_YEAR_VOLUME_BUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_VOLUME_BUY() int32 {
	if o == nil || isNil(o.CURRENT_YEAR_VOLUME_BUY) {
		var ret int32
		return ret
	}
	return *o.CURRENT_YEAR_VOLUME_BUY
}

// GetCURRENT_YEAR_VOLUME_BUYOk returns a tuple with the CURRENT_YEAR_VOLUME_BUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_VOLUME_BUYOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_YEAR_VOLUME_BUY) {
		return nil, false
	}
	return o.CURRENT_YEAR_VOLUME_BUY, true
}

// HasCURRENT_YEAR_VOLUME_BUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_YEAR_VOLUME_BUY() bool {
	if o != nil && !isNil(o.CURRENT_YEAR_VOLUME_BUY) {
		return true
	}

	return false
}

// SetCURRENT_YEAR_VOLUME_BUY gets a reference to the given int32 and assigns it to the CURRENT_YEAR_VOLUME_BUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_YEAR_VOLUME_BUY(v int32) {
	o.CURRENT_YEAR_VOLUME_BUY = &v
}

// GetCURRENT_YEAR_VOLUME_SELL returns the CURRENT_YEAR_VOLUME_SELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_VOLUME_SELL() int32 {
	if o == nil || isNil(o.CURRENT_YEAR_VOLUME_SELL) {
		var ret int32
		return ret
	}
	return *o.CURRENT_YEAR_VOLUME_SELL
}

// GetCURRENT_YEAR_VOLUME_SELLOk returns a tuple with the CURRENT_YEAR_VOLUME_SELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_VOLUME_SELLOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_YEAR_VOLUME_SELL) {
		return nil, false
	}
	return o.CURRENT_YEAR_VOLUME_SELL, true
}

// HasCURRENT_YEAR_VOLUME_SELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_YEAR_VOLUME_SELL() bool {
	if o != nil && !isNil(o.CURRENT_YEAR_VOLUME_SELL) {
		return true
	}

	return false
}

// SetCURRENT_YEAR_VOLUME_SELL gets a reference to the given int32 and assigns it to the CURRENT_YEAR_VOLUME_SELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_YEAR_VOLUME_SELL(v int32) {
	o.CURRENT_YEAR_VOLUME_SELL = &v
}

// GetCURRENT_YEAR_VOLUME_UNKNOWN returns the CURRENT_YEAR_VOLUME_UNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_VOLUME_UNKNOWN() int32 {
	if o == nil || isNil(o.CURRENT_YEAR_VOLUME_UNKNOWN) {
		var ret int32
		return ret
	}
	return *o.CURRENT_YEAR_VOLUME_UNKNOWN
}

// GetCURRENT_YEAR_VOLUME_UNKNOWNOk returns a tuple with the CURRENT_YEAR_VOLUME_UNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetCURRENT_YEAR_VOLUME_UNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.CURRENT_YEAR_VOLUME_UNKNOWN) {
		return nil, false
	}
	return o.CURRENT_YEAR_VOLUME_UNKNOWN, true
}

// HasCURRENT_YEAR_VOLUME_UNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasCURRENT_YEAR_VOLUME_UNKNOWN() bool {
	if o != nil && !isNil(o.CURRENT_YEAR_VOLUME_UNKNOWN) {
		return true
	}

	return false
}

// SetCURRENT_YEAR_VOLUME_UNKNOWN gets a reference to the given int32 and assigns it to the CURRENT_YEAR_VOLUME_UNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetCURRENT_YEAR_VOLUME_UNKNOWN(v int32) {
	o.CURRENT_YEAR_VOLUME_UNKNOWN = &v
}

// GetINSTRUMENT returns the INSTRUMENT field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetINSTRUMENT() string {
	if o == nil || isNil(o.INSTRUMENT) {
		var ret string
		return ret
	}
	return *o.INSTRUMENT
}

// GetINSTRUMENTOk returns a tuple with the INSTRUMENT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetINSTRUMENTOk() (*string, bool) {
	if o == nil || isNil(o.INSTRUMENT) {
		return nil, false
	}
	return o.INSTRUMENT, true
}

// HasINSTRUMENT returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasINSTRUMENT() bool {
	if o != nil && !isNil(o.INSTRUMENT) {
		return true
	}

	return false
}

// SetINSTRUMENT gets a reference to the given string and assigns it to the INSTRUMENT field.
func (o *SPOTINSTRUMENTMARKETDATA) SetINSTRUMENT(v string) {
	o.INSTRUMENT = &v
}

// GetLAST_PROCESSED_TRADE_CCSEQ returns the LAST_PROCESSED_TRADE_CCSEQ field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLAST_PROCESSED_TRADE_CCSEQ() string {
	if o == nil || isNil(o.LAST_PROCESSED_TRADE_CCSEQ) {
		var ret string
		return ret
	}
	return *o.LAST_PROCESSED_TRADE_CCSEQ
}

// GetLAST_PROCESSED_TRADE_CCSEQOk returns a tuple with the LAST_PROCESSED_TRADE_CCSEQ field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLAST_PROCESSED_TRADE_CCSEQOk() (*string, bool) {
	if o == nil || isNil(o.LAST_PROCESSED_TRADE_CCSEQ) {
		return nil, false
	}
	return o.LAST_PROCESSED_TRADE_CCSEQ, true
}

// HasLAST_PROCESSED_TRADE_CCSEQ returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLAST_PROCESSED_TRADE_CCSEQ() bool {
	if o != nil && !isNil(o.LAST_PROCESSED_TRADE_CCSEQ) {
		return true
	}

	return false
}

// SetLAST_PROCESSED_TRADE_CCSEQ gets a reference to the given string and assigns it to the LAST_PROCESSED_TRADE_CCSEQ field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLAST_PROCESSED_TRADE_CCSEQ(v string) {
	o.LAST_PROCESSED_TRADE_CCSEQ = &v
}

// GetLAST_PROCESSED_TRADE_PRICE returns the LAST_PROCESSED_TRADE_PRICE field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLAST_PROCESSED_TRADE_PRICE() int32 {
	if o == nil || isNil(o.LAST_PROCESSED_TRADE_PRICE) {
		var ret int32
		return ret
	}
	return *o.LAST_PROCESSED_TRADE_PRICE
}

// GetLAST_PROCESSED_TRADE_PRICEOk returns a tuple with the LAST_PROCESSED_TRADE_PRICE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLAST_PROCESSED_TRADE_PRICEOk() (*int32, bool) {
	if o == nil || isNil(o.LAST_PROCESSED_TRADE_PRICE) {
		return nil, false
	}
	return o.LAST_PROCESSED_TRADE_PRICE, true
}

// HasLAST_PROCESSED_TRADE_PRICE returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLAST_PROCESSED_TRADE_PRICE() bool {
	if o != nil && !isNil(o.LAST_PROCESSED_TRADE_PRICE) {
		return true
	}

	return false
}

// SetLAST_PROCESSED_TRADE_PRICE gets a reference to the given int32 and assigns it to the LAST_PROCESSED_TRADE_PRICE field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLAST_PROCESSED_TRADE_PRICE(v int32) {
	o.LAST_PROCESSED_TRADE_PRICE = &v
}

// GetLAST_PROCESSED_TRADE_QUANTITY returns the LAST_PROCESSED_TRADE_QUANTITY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLAST_PROCESSED_TRADE_QUANTITY() int32 {
	if o == nil || isNil(o.LAST_PROCESSED_TRADE_QUANTITY) {
		var ret int32
		return ret
	}
	return *o.LAST_PROCESSED_TRADE_QUANTITY
}

// GetLAST_PROCESSED_TRADE_QUANTITYOk returns a tuple with the LAST_PROCESSED_TRADE_QUANTITY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLAST_PROCESSED_TRADE_QUANTITYOk() (*int32, bool) {
	if o == nil || isNil(o.LAST_PROCESSED_TRADE_QUANTITY) {
		return nil, false
	}
	return o.LAST_PROCESSED_TRADE_QUANTITY, true
}

// HasLAST_PROCESSED_TRADE_QUANTITY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLAST_PROCESSED_TRADE_QUANTITY() bool {
	if o != nil && !isNil(o.LAST_PROCESSED_TRADE_QUANTITY) {
		return true
	}

	return false
}

// SetLAST_PROCESSED_TRADE_QUANTITY gets a reference to the given int32 and assigns it to the LAST_PROCESSED_TRADE_QUANTITY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLAST_PROCESSED_TRADE_QUANTITY(v int32) {
	o.LAST_PROCESSED_TRADE_QUANTITY = &v
}

// GetLAST_PROCESSED_TRADE_QUOTE_QUANTITY returns the LAST_PROCESSED_TRADE_QUOTE_QUANTITY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLAST_PROCESSED_TRADE_QUOTE_QUANTITY() int32 {
	if o == nil || isNil(o.LAST_PROCESSED_TRADE_QUOTE_QUANTITY) {
		var ret int32
		return ret
	}
	return *o.LAST_PROCESSED_TRADE_QUOTE_QUANTITY
}

// GetLAST_PROCESSED_TRADE_QUOTE_QUANTITYOk returns a tuple with the LAST_PROCESSED_TRADE_QUOTE_QUANTITY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLAST_PROCESSED_TRADE_QUOTE_QUANTITYOk() (*int32, bool) {
	if o == nil || isNil(o.LAST_PROCESSED_TRADE_QUOTE_QUANTITY) {
		return nil, false
	}
	return o.LAST_PROCESSED_TRADE_QUOTE_QUANTITY, true
}

// HasLAST_PROCESSED_TRADE_QUOTE_QUANTITY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLAST_PROCESSED_TRADE_QUOTE_QUANTITY() bool {
	if o != nil && !isNil(o.LAST_PROCESSED_TRADE_QUOTE_QUANTITY) {
		return true
	}

	return false
}

// SetLAST_PROCESSED_TRADE_QUOTE_QUANTITY gets a reference to the given int32 and assigns it to the LAST_PROCESSED_TRADE_QUOTE_QUANTITY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLAST_PROCESSED_TRADE_QUOTE_QUANTITY(v int32) {
	o.LAST_PROCESSED_TRADE_QUOTE_QUANTITY = &v
}

// GetLAST_PROCESSED_TRADE_SIDE returns the LAST_PROCESSED_TRADE_SIDE field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLAST_PROCESSED_TRADE_SIDE() string {
	if o == nil || isNil(o.LAST_PROCESSED_TRADE_SIDE) {
		var ret string
		return ret
	}
	return *o.LAST_PROCESSED_TRADE_SIDE
}

// GetLAST_PROCESSED_TRADE_SIDEOk returns a tuple with the LAST_PROCESSED_TRADE_SIDE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLAST_PROCESSED_TRADE_SIDEOk() (*string, bool) {
	if o == nil || isNil(o.LAST_PROCESSED_TRADE_SIDE) {
		return nil, false
	}
	return o.LAST_PROCESSED_TRADE_SIDE, true
}

// HasLAST_PROCESSED_TRADE_SIDE returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLAST_PROCESSED_TRADE_SIDE() bool {
	if o != nil && !isNil(o.LAST_PROCESSED_TRADE_SIDE) {
		return true
	}

	return false
}

// SetLAST_PROCESSED_TRADE_SIDE gets a reference to the given string and assigns it to the LAST_PROCESSED_TRADE_SIDE field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLAST_PROCESSED_TRADE_SIDE(v string) {
	o.LAST_PROCESSED_TRADE_SIDE = &v
}

// GetLAST_PROCESSED_TRADE_TS returns the LAST_PROCESSED_TRADE_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLAST_PROCESSED_TRADE_TS() int32 {
	if o == nil || isNil(o.LAST_PROCESSED_TRADE_TS) {
		var ret int32
		return ret
	}
	return *o.LAST_PROCESSED_TRADE_TS
}

// GetLAST_PROCESSED_TRADE_TSOk returns a tuple with the LAST_PROCESSED_TRADE_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLAST_PROCESSED_TRADE_TSOk() (*int32, bool) {
	if o == nil || isNil(o.LAST_PROCESSED_TRADE_TS) {
		return nil, false
	}
	return o.LAST_PROCESSED_TRADE_TS, true
}

// HasLAST_PROCESSED_TRADE_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLAST_PROCESSED_TRADE_TS() bool {
	if o != nil && !isNil(o.LAST_PROCESSED_TRADE_TS) {
		return true
	}

	return false
}

// SetLAST_PROCESSED_TRADE_TS gets a reference to the given int32 and assigns it to the LAST_PROCESSED_TRADE_TS field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLAST_PROCESSED_TRADE_TS(v int32) {
	o.LAST_PROCESSED_TRADE_TS = &v
}

// GetLAST_TRADE_CCSEQ returns the LAST_TRADE_CCSEQ field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLAST_TRADE_CCSEQ() string {
	if o == nil || isNil(o.LAST_TRADE_CCSEQ) {
		var ret string
		return ret
	}
	return *o.LAST_TRADE_CCSEQ
}

// GetLAST_TRADE_CCSEQOk returns a tuple with the LAST_TRADE_CCSEQ field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLAST_TRADE_CCSEQOk() (*string, bool) {
	if o == nil || isNil(o.LAST_TRADE_CCSEQ) {
		return nil, false
	}
	return o.LAST_TRADE_CCSEQ, true
}

// HasLAST_TRADE_CCSEQ returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLAST_TRADE_CCSEQ() bool {
	if o != nil && !isNil(o.LAST_TRADE_CCSEQ) {
		return true
	}

	return false
}

// SetLAST_TRADE_CCSEQ gets a reference to the given string and assigns it to the LAST_TRADE_CCSEQ field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLAST_TRADE_CCSEQ(v string) {
	o.LAST_TRADE_CCSEQ = &v
}

// GetLAST_TRADE_ID returns the LAST_TRADE_ID field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLAST_TRADE_ID() string {
	if o == nil || isNil(o.LAST_TRADE_ID) {
		var ret string
		return ret
	}
	return *o.LAST_TRADE_ID
}

// GetLAST_TRADE_IDOk returns a tuple with the LAST_TRADE_ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLAST_TRADE_IDOk() (*string, bool) {
	if o == nil || isNil(o.LAST_TRADE_ID) {
		return nil, false
	}
	return o.LAST_TRADE_ID, true
}

// HasLAST_TRADE_ID returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLAST_TRADE_ID() bool {
	if o != nil && !isNil(o.LAST_TRADE_ID) {
		return true
	}

	return false
}

// SetLAST_TRADE_ID gets a reference to the given string and assigns it to the LAST_TRADE_ID field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLAST_TRADE_ID(v string) {
	o.LAST_TRADE_ID = &v
}

// GetLAST_TRADE_QUANTITY returns the LAST_TRADE_QUANTITY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLAST_TRADE_QUANTITY() int32 {
	if o == nil || isNil(o.LAST_TRADE_QUANTITY) {
		var ret int32
		return ret
	}
	return *o.LAST_TRADE_QUANTITY
}

// GetLAST_TRADE_QUANTITYOk returns a tuple with the LAST_TRADE_QUANTITY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLAST_TRADE_QUANTITYOk() (*int32, bool) {
	if o == nil || isNil(o.LAST_TRADE_QUANTITY) {
		return nil, false
	}
	return o.LAST_TRADE_QUANTITY, true
}

// HasLAST_TRADE_QUANTITY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLAST_TRADE_QUANTITY() bool {
	if o != nil && !isNil(o.LAST_TRADE_QUANTITY) {
		return true
	}

	return false
}

// SetLAST_TRADE_QUANTITY gets a reference to the given int32 and assigns it to the LAST_TRADE_QUANTITY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLAST_TRADE_QUANTITY(v int32) {
	o.LAST_TRADE_QUANTITY = &v
}

// GetLAST_TRADE_QUOTE_QUANTITY returns the LAST_TRADE_QUOTE_QUANTITY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLAST_TRADE_QUOTE_QUANTITY() int32 {
	if o == nil || isNil(o.LAST_TRADE_QUOTE_QUANTITY) {
		var ret int32
		return ret
	}
	return *o.LAST_TRADE_QUOTE_QUANTITY
}

// GetLAST_TRADE_QUOTE_QUANTITYOk returns a tuple with the LAST_TRADE_QUOTE_QUANTITY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLAST_TRADE_QUOTE_QUANTITYOk() (*int32, bool) {
	if o == nil || isNil(o.LAST_TRADE_QUOTE_QUANTITY) {
		return nil, false
	}
	return o.LAST_TRADE_QUOTE_QUANTITY, true
}

// HasLAST_TRADE_QUOTE_QUANTITY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLAST_TRADE_QUOTE_QUANTITY() bool {
	if o != nil && !isNil(o.LAST_TRADE_QUOTE_QUANTITY) {
		return true
	}

	return false
}

// SetLAST_TRADE_QUOTE_QUANTITY gets a reference to the given int32 and assigns it to the LAST_TRADE_QUOTE_QUANTITY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLAST_TRADE_QUOTE_QUANTITY(v int32) {
	o.LAST_TRADE_QUOTE_QUANTITY = &v
}

// GetLAST_TRADE_SIDE returns the LAST_TRADE_SIDE field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLAST_TRADE_SIDE() string {
	if o == nil || isNil(o.LAST_TRADE_SIDE) {
		var ret string
		return ret
	}
	return *o.LAST_TRADE_SIDE
}

// GetLAST_TRADE_SIDEOk returns a tuple with the LAST_TRADE_SIDE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLAST_TRADE_SIDEOk() (*string, bool) {
	if o == nil || isNil(o.LAST_TRADE_SIDE) {
		return nil, false
	}
	return o.LAST_TRADE_SIDE, true
}

// HasLAST_TRADE_SIDE returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLAST_TRADE_SIDE() bool {
	if o != nil && !isNil(o.LAST_TRADE_SIDE) {
		return true
	}

	return false
}

// SetLAST_TRADE_SIDE gets a reference to the given string and assigns it to the LAST_TRADE_SIDE field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLAST_TRADE_SIDE(v string) {
	o.LAST_TRADE_SIDE = &v
}

// GetLIFETIME_FIRST_TRADE_TS returns the LIFETIME_FIRST_TRADE_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_FIRST_TRADE_TS() int32 {
	if o == nil || isNil(o.LIFETIME_FIRST_TRADE_TS) {
		var ret int32
		return ret
	}
	return *o.LIFETIME_FIRST_TRADE_TS
}

// GetLIFETIME_FIRST_TRADE_TSOk returns a tuple with the LIFETIME_FIRST_TRADE_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_FIRST_TRADE_TSOk() (*int32, bool) {
	if o == nil || isNil(o.LIFETIME_FIRST_TRADE_TS) {
		return nil, false
	}
	return o.LIFETIME_FIRST_TRADE_TS, true
}

// HasLIFETIME_FIRST_TRADE_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLIFETIME_FIRST_TRADE_TS() bool {
	if o != nil && !isNil(o.LIFETIME_FIRST_TRADE_TS) {
		return true
	}

	return false
}

// SetLIFETIME_FIRST_TRADE_TS gets a reference to the given int32 and assigns it to the LIFETIME_FIRST_TRADE_TS field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLIFETIME_FIRST_TRADE_TS(v int32) {
	o.LIFETIME_FIRST_TRADE_TS = &v
}

// GetLIFETIME_HIGH returns the LIFETIME_HIGH field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_HIGH() int32 {
	if o == nil || isNil(o.LIFETIME_HIGH) {
		var ret int32
		return ret
	}
	return *o.LIFETIME_HIGH
}

// GetLIFETIME_HIGHOk returns a tuple with the LIFETIME_HIGH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_HIGHOk() (*int32, bool) {
	if o == nil || isNil(o.LIFETIME_HIGH) {
		return nil, false
	}
	return o.LIFETIME_HIGH, true
}

// HasLIFETIME_HIGH returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLIFETIME_HIGH() bool {
	if o != nil && !isNil(o.LIFETIME_HIGH) {
		return true
	}

	return false
}

// SetLIFETIME_HIGH gets a reference to the given int32 and assigns it to the LIFETIME_HIGH field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLIFETIME_HIGH(v int32) {
	o.LIFETIME_HIGH = &v
}

// GetLIFETIME_HIGH_TS returns the LIFETIME_HIGH_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_HIGH_TS() int32 {
	if o == nil || isNil(o.LIFETIME_HIGH_TS) {
		var ret int32
		return ret
	}
	return *o.LIFETIME_HIGH_TS
}

// GetLIFETIME_HIGH_TSOk returns a tuple with the LIFETIME_HIGH_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_HIGH_TSOk() (*int32, bool) {
	if o == nil || isNil(o.LIFETIME_HIGH_TS) {
		return nil, false
	}
	return o.LIFETIME_HIGH_TS, true
}

// HasLIFETIME_HIGH_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLIFETIME_HIGH_TS() bool {
	if o != nil && !isNil(o.LIFETIME_HIGH_TS) {
		return true
	}

	return false
}

// SetLIFETIME_HIGH_TS gets a reference to the given int32 and assigns it to the LIFETIME_HIGH_TS field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLIFETIME_HIGH_TS(v int32) {
	o.LIFETIME_HIGH_TS = &v
}

// GetLIFETIME_LOW returns the LIFETIME_LOW field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_LOW() int32 {
	if o == nil || isNil(o.LIFETIME_LOW) {
		var ret int32
		return ret
	}
	return *o.LIFETIME_LOW
}

// GetLIFETIME_LOWOk returns a tuple with the LIFETIME_LOW field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_LOWOk() (*int32, bool) {
	if o == nil || isNil(o.LIFETIME_LOW) {
		return nil, false
	}
	return o.LIFETIME_LOW, true
}

// HasLIFETIME_LOW returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLIFETIME_LOW() bool {
	if o != nil && !isNil(o.LIFETIME_LOW) {
		return true
	}

	return false
}

// SetLIFETIME_LOW gets a reference to the given int32 and assigns it to the LIFETIME_LOW field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLIFETIME_LOW(v int32) {
	o.LIFETIME_LOW = &v
}

// GetLIFETIME_LOW_TS returns the LIFETIME_LOW_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_LOW_TS() int32 {
	if o == nil || isNil(o.LIFETIME_LOW_TS) {
		var ret int32
		return ret
	}
	return *o.LIFETIME_LOW_TS
}

// GetLIFETIME_LOW_TSOk returns a tuple with the LIFETIME_LOW_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_LOW_TSOk() (*int32, bool) {
	if o == nil || isNil(o.LIFETIME_LOW_TS) {
		return nil, false
	}
	return o.LIFETIME_LOW_TS, true
}

// HasLIFETIME_LOW_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLIFETIME_LOW_TS() bool {
	if o != nil && !isNil(o.LIFETIME_LOW_TS) {
		return true
	}

	return false
}

// SetLIFETIME_LOW_TS gets a reference to the given int32 and assigns it to the LIFETIME_LOW_TS field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLIFETIME_LOW_TS(v int32) {
	o.LIFETIME_LOW_TS = &v
}

// GetLIFETIME_OPEN returns the LIFETIME_OPEN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_OPEN() int32 {
	if o == nil || isNil(o.LIFETIME_OPEN) {
		var ret int32
		return ret
	}
	return *o.LIFETIME_OPEN
}

// GetLIFETIME_OPENOk returns a tuple with the LIFETIME_OPEN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_OPENOk() (*int32, bool) {
	if o == nil || isNil(o.LIFETIME_OPEN) {
		return nil, false
	}
	return o.LIFETIME_OPEN, true
}

// HasLIFETIME_OPEN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLIFETIME_OPEN() bool {
	if o != nil && !isNil(o.LIFETIME_OPEN) {
		return true
	}

	return false
}

// SetLIFETIME_OPEN gets a reference to the given int32 and assigns it to the LIFETIME_OPEN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLIFETIME_OPEN(v int32) {
	o.LIFETIME_OPEN = &v
}

// GetLIFETIME_QUOTE_VOLUME returns the LIFETIME_QUOTE_VOLUME field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_QUOTE_VOLUME() int32 {
	if o == nil || isNil(o.LIFETIME_QUOTE_VOLUME) {
		var ret int32
		return ret
	}
	return *o.LIFETIME_QUOTE_VOLUME
}

// GetLIFETIME_QUOTE_VOLUMEOk returns a tuple with the LIFETIME_QUOTE_VOLUME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_QUOTE_VOLUMEOk() (*int32, bool) {
	if o == nil || isNil(o.LIFETIME_QUOTE_VOLUME) {
		return nil, false
	}
	return o.LIFETIME_QUOTE_VOLUME, true
}

// HasLIFETIME_QUOTE_VOLUME returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLIFETIME_QUOTE_VOLUME() bool {
	if o != nil && !isNil(o.LIFETIME_QUOTE_VOLUME) {
		return true
	}

	return false
}

// SetLIFETIME_QUOTE_VOLUME gets a reference to the given int32 and assigns it to the LIFETIME_QUOTE_VOLUME field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLIFETIME_QUOTE_VOLUME(v int32) {
	o.LIFETIME_QUOTE_VOLUME = &v
}

// GetLIFETIME_QUOTE_VOLUME_BUY returns the LIFETIME_QUOTE_VOLUME_BUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_QUOTE_VOLUME_BUY() int32 {
	if o == nil || isNil(o.LIFETIME_QUOTE_VOLUME_BUY) {
		var ret int32
		return ret
	}
	return *o.LIFETIME_QUOTE_VOLUME_BUY
}

// GetLIFETIME_QUOTE_VOLUME_BUYOk returns a tuple with the LIFETIME_QUOTE_VOLUME_BUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_QUOTE_VOLUME_BUYOk() (*int32, bool) {
	if o == nil || isNil(o.LIFETIME_QUOTE_VOLUME_BUY) {
		return nil, false
	}
	return o.LIFETIME_QUOTE_VOLUME_BUY, true
}

// HasLIFETIME_QUOTE_VOLUME_BUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLIFETIME_QUOTE_VOLUME_BUY() bool {
	if o != nil && !isNil(o.LIFETIME_QUOTE_VOLUME_BUY) {
		return true
	}

	return false
}

// SetLIFETIME_QUOTE_VOLUME_BUY gets a reference to the given int32 and assigns it to the LIFETIME_QUOTE_VOLUME_BUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLIFETIME_QUOTE_VOLUME_BUY(v int32) {
	o.LIFETIME_QUOTE_VOLUME_BUY = &v
}

// GetLIFETIME_QUOTE_VOLUME_SELL returns the LIFETIME_QUOTE_VOLUME_SELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_QUOTE_VOLUME_SELL() int32 {
	if o == nil || isNil(o.LIFETIME_QUOTE_VOLUME_SELL) {
		var ret int32
		return ret
	}
	return *o.LIFETIME_QUOTE_VOLUME_SELL
}

// GetLIFETIME_QUOTE_VOLUME_SELLOk returns a tuple with the LIFETIME_QUOTE_VOLUME_SELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_QUOTE_VOLUME_SELLOk() (*int32, bool) {
	if o == nil || isNil(o.LIFETIME_QUOTE_VOLUME_SELL) {
		return nil, false
	}
	return o.LIFETIME_QUOTE_VOLUME_SELL, true
}

// HasLIFETIME_QUOTE_VOLUME_SELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLIFETIME_QUOTE_VOLUME_SELL() bool {
	if o != nil && !isNil(o.LIFETIME_QUOTE_VOLUME_SELL) {
		return true
	}

	return false
}

// SetLIFETIME_QUOTE_VOLUME_SELL gets a reference to the given int32 and assigns it to the LIFETIME_QUOTE_VOLUME_SELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLIFETIME_QUOTE_VOLUME_SELL(v int32) {
	o.LIFETIME_QUOTE_VOLUME_SELL = &v
}

// GetLIFETIME_QUOTE_VOLUME_UNKNOWN returns the LIFETIME_QUOTE_VOLUME_UNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_QUOTE_VOLUME_UNKNOWN() int32 {
	if o == nil || isNil(o.LIFETIME_QUOTE_VOLUME_UNKNOWN) {
		var ret int32
		return ret
	}
	return *o.LIFETIME_QUOTE_VOLUME_UNKNOWN
}

// GetLIFETIME_QUOTE_VOLUME_UNKNOWNOk returns a tuple with the LIFETIME_QUOTE_VOLUME_UNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_QUOTE_VOLUME_UNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.LIFETIME_QUOTE_VOLUME_UNKNOWN) {
		return nil, false
	}
	return o.LIFETIME_QUOTE_VOLUME_UNKNOWN, true
}

// HasLIFETIME_QUOTE_VOLUME_UNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLIFETIME_QUOTE_VOLUME_UNKNOWN() bool {
	if o != nil && !isNil(o.LIFETIME_QUOTE_VOLUME_UNKNOWN) {
		return true
	}

	return false
}

// SetLIFETIME_QUOTE_VOLUME_UNKNOWN gets a reference to the given int32 and assigns it to the LIFETIME_QUOTE_VOLUME_UNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLIFETIME_QUOTE_VOLUME_UNKNOWN(v int32) {
	o.LIFETIME_QUOTE_VOLUME_UNKNOWN = &v
}

// GetLIFETIME_TOTAL_TRADES returns the LIFETIME_TOTAL_TRADES field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_TOTAL_TRADES() int32 {
	if o == nil || isNil(o.LIFETIME_TOTAL_TRADES) {
		var ret int32
		return ret
	}
	return *o.LIFETIME_TOTAL_TRADES
}

// GetLIFETIME_TOTAL_TRADESOk returns a tuple with the LIFETIME_TOTAL_TRADES field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_TOTAL_TRADESOk() (*int32, bool) {
	if o == nil || isNil(o.LIFETIME_TOTAL_TRADES) {
		return nil, false
	}
	return o.LIFETIME_TOTAL_TRADES, true
}

// HasLIFETIME_TOTAL_TRADES returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLIFETIME_TOTAL_TRADES() bool {
	if o != nil && !isNil(o.LIFETIME_TOTAL_TRADES) {
		return true
	}

	return false
}

// SetLIFETIME_TOTAL_TRADES gets a reference to the given int32 and assigns it to the LIFETIME_TOTAL_TRADES field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLIFETIME_TOTAL_TRADES(v int32) {
	o.LIFETIME_TOTAL_TRADES = &v
}

// GetLIFETIME_TOTAL_TRADES_BUY returns the LIFETIME_TOTAL_TRADES_BUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_TOTAL_TRADES_BUY() int32 {
	if o == nil || isNil(o.LIFETIME_TOTAL_TRADES_BUY) {
		var ret int32
		return ret
	}
	return *o.LIFETIME_TOTAL_TRADES_BUY
}

// GetLIFETIME_TOTAL_TRADES_BUYOk returns a tuple with the LIFETIME_TOTAL_TRADES_BUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_TOTAL_TRADES_BUYOk() (*int32, bool) {
	if o == nil || isNil(o.LIFETIME_TOTAL_TRADES_BUY) {
		return nil, false
	}
	return o.LIFETIME_TOTAL_TRADES_BUY, true
}

// HasLIFETIME_TOTAL_TRADES_BUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLIFETIME_TOTAL_TRADES_BUY() bool {
	if o != nil && !isNil(o.LIFETIME_TOTAL_TRADES_BUY) {
		return true
	}

	return false
}

// SetLIFETIME_TOTAL_TRADES_BUY gets a reference to the given int32 and assigns it to the LIFETIME_TOTAL_TRADES_BUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLIFETIME_TOTAL_TRADES_BUY(v int32) {
	o.LIFETIME_TOTAL_TRADES_BUY = &v
}

// GetLIFETIME_TOTAL_TRADES_SELL returns the LIFETIME_TOTAL_TRADES_SELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_TOTAL_TRADES_SELL() int32 {
	if o == nil || isNil(o.LIFETIME_TOTAL_TRADES_SELL) {
		var ret int32
		return ret
	}
	return *o.LIFETIME_TOTAL_TRADES_SELL
}

// GetLIFETIME_TOTAL_TRADES_SELLOk returns a tuple with the LIFETIME_TOTAL_TRADES_SELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_TOTAL_TRADES_SELLOk() (*int32, bool) {
	if o == nil || isNil(o.LIFETIME_TOTAL_TRADES_SELL) {
		return nil, false
	}
	return o.LIFETIME_TOTAL_TRADES_SELL, true
}

// HasLIFETIME_TOTAL_TRADES_SELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLIFETIME_TOTAL_TRADES_SELL() bool {
	if o != nil && !isNil(o.LIFETIME_TOTAL_TRADES_SELL) {
		return true
	}

	return false
}

// SetLIFETIME_TOTAL_TRADES_SELL gets a reference to the given int32 and assigns it to the LIFETIME_TOTAL_TRADES_SELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLIFETIME_TOTAL_TRADES_SELL(v int32) {
	o.LIFETIME_TOTAL_TRADES_SELL = &v
}

// GetLIFETIME_TOTAL_TRADES_UNKNOWN returns the LIFETIME_TOTAL_TRADES_UNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_TOTAL_TRADES_UNKNOWN() int32 {
	if o == nil || isNil(o.LIFETIME_TOTAL_TRADES_UNKNOWN) {
		var ret int32
		return ret
	}
	return *o.LIFETIME_TOTAL_TRADES_UNKNOWN
}

// GetLIFETIME_TOTAL_TRADES_UNKNOWNOk returns a tuple with the LIFETIME_TOTAL_TRADES_UNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_TOTAL_TRADES_UNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.LIFETIME_TOTAL_TRADES_UNKNOWN) {
		return nil, false
	}
	return o.LIFETIME_TOTAL_TRADES_UNKNOWN, true
}

// HasLIFETIME_TOTAL_TRADES_UNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLIFETIME_TOTAL_TRADES_UNKNOWN() bool {
	if o != nil && !isNil(o.LIFETIME_TOTAL_TRADES_UNKNOWN) {
		return true
	}

	return false
}

// SetLIFETIME_TOTAL_TRADES_UNKNOWN gets a reference to the given int32 and assigns it to the LIFETIME_TOTAL_TRADES_UNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLIFETIME_TOTAL_TRADES_UNKNOWN(v int32) {
	o.LIFETIME_TOTAL_TRADES_UNKNOWN = &v
}

// GetLIFETIME_VOLUME returns the LIFETIME_VOLUME field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_VOLUME() int32 {
	if o == nil || isNil(o.LIFETIME_VOLUME) {
		var ret int32
		return ret
	}
	return *o.LIFETIME_VOLUME
}

// GetLIFETIME_VOLUMEOk returns a tuple with the LIFETIME_VOLUME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_VOLUMEOk() (*int32, bool) {
	if o == nil || isNil(o.LIFETIME_VOLUME) {
		return nil, false
	}
	return o.LIFETIME_VOLUME, true
}

// HasLIFETIME_VOLUME returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLIFETIME_VOLUME() bool {
	if o != nil && !isNil(o.LIFETIME_VOLUME) {
		return true
	}

	return false
}

// SetLIFETIME_VOLUME gets a reference to the given int32 and assigns it to the LIFETIME_VOLUME field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLIFETIME_VOLUME(v int32) {
	o.LIFETIME_VOLUME = &v
}

// GetLIFETIME_VOLUME_BUY returns the LIFETIME_VOLUME_BUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_VOLUME_BUY() int32 {
	if o == nil || isNil(o.LIFETIME_VOLUME_BUY) {
		var ret int32
		return ret
	}
	return *o.LIFETIME_VOLUME_BUY
}

// GetLIFETIME_VOLUME_BUYOk returns a tuple with the LIFETIME_VOLUME_BUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_VOLUME_BUYOk() (*int32, bool) {
	if o == nil || isNil(o.LIFETIME_VOLUME_BUY) {
		return nil, false
	}
	return o.LIFETIME_VOLUME_BUY, true
}

// HasLIFETIME_VOLUME_BUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLIFETIME_VOLUME_BUY() bool {
	if o != nil && !isNil(o.LIFETIME_VOLUME_BUY) {
		return true
	}

	return false
}

// SetLIFETIME_VOLUME_BUY gets a reference to the given int32 and assigns it to the LIFETIME_VOLUME_BUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLIFETIME_VOLUME_BUY(v int32) {
	o.LIFETIME_VOLUME_BUY = &v
}

// GetLIFETIME_VOLUME_SELL returns the LIFETIME_VOLUME_SELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_VOLUME_SELL() int32 {
	if o == nil || isNil(o.LIFETIME_VOLUME_SELL) {
		var ret int32
		return ret
	}
	return *o.LIFETIME_VOLUME_SELL
}

// GetLIFETIME_VOLUME_SELLOk returns a tuple with the LIFETIME_VOLUME_SELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_VOLUME_SELLOk() (*int32, bool) {
	if o == nil || isNil(o.LIFETIME_VOLUME_SELL) {
		return nil, false
	}
	return o.LIFETIME_VOLUME_SELL, true
}

// HasLIFETIME_VOLUME_SELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLIFETIME_VOLUME_SELL() bool {
	if o != nil && !isNil(o.LIFETIME_VOLUME_SELL) {
		return true
	}

	return false
}

// SetLIFETIME_VOLUME_SELL gets a reference to the given int32 and assigns it to the LIFETIME_VOLUME_SELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLIFETIME_VOLUME_SELL(v int32) {
	o.LIFETIME_VOLUME_SELL = &v
}

// GetLIFETIME_VOLUME_UNKNOWN returns the LIFETIME_VOLUME_UNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_VOLUME_UNKNOWN() int32 {
	if o == nil || isNil(o.LIFETIME_VOLUME_UNKNOWN) {
		var ret int32
		return ret
	}
	return *o.LIFETIME_VOLUME_UNKNOWN
}

// GetLIFETIME_VOLUME_UNKNOWNOk returns a tuple with the LIFETIME_VOLUME_UNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetLIFETIME_VOLUME_UNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.LIFETIME_VOLUME_UNKNOWN) {
		return nil, false
	}
	return o.LIFETIME_VOLUME_UNKNOWN, true
}

// HasLIFETIME_VOLUME_UNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasLIFETIME_VOLUME_UNKNOWN() bool {
	if o != nil && !isNil(o.LIFETIME_VOLUME_UNKNOWN) {
		return true
	}

	return false
}

// SetLIFETIME_VOLUME_UNKNOWN gets a reference to the given int32 and assigns it to the LIFETIME_VOLUME_UNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetLIFETIME_VOLUME_UNKNOWN(v int32) {
	o.LIFETIME_VOLUME_UNKNOWN = &v
}

// GetMAPPED_INSTRUMENT returns the MAPPED_INSTRUMENT field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMAPPED_INSTRUMENT() string {
	if o == nil || isNil(o.MAPPED_INSTRUMENT) {
		var ret string
		return ret
	}
	return *o.MAPPED_INSTRUMENT
}

// GetMAPPED_INSTRUMENTOk returns a tuple with the MAPPED_INSTRUMENT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMAPPED_INSTRUMENTOk() (*string, bool) {
	if o == nil || isNil(o.MAPPED_INSTRUMENT) {
		return nil, false
	}
	return o.MAPPED_INSTRUMENT, true
}

// HasMAPPED_INSTRUMENT returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMAPPED_INSTRUMENT() bool {
	if o != nil && !isNil(o.MAPPED_INSTRUMENT) {
		return true
	}

	return false
}

// SetMAPPED_INSTRUMENT gets a reference to the given string and assigns it to the MAPPED_INSTRUMENT field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMAPPED_INSTRUMENT(v string) {
	o.MAPPED_INSTRUMENT = &v
}

// GetMARKET returns the MARKET field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMARKET() string {
	if o == nil || isNil(o.MARKET) {
		var ret string
		return ret
	}
	return *o.MARKET
}

// GetMARKETOk returns a tuple with the MARKET field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMARKETOk() (*string, bool) {
	if o == nil || isNil(o.MARKET) {
		return nil, false
	}
	return o.MARKET, true
}

// HasMARKET returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMARKET() bool {
	if o != nil && !isNil(o.MARKET) {
		return true
	}

	return false
}

// SetMARKET gets a reference to the given string and assigns it to the MARKET field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMARKET(v string) {
	o.MARKET = &v
}

// GetMOVING180DAYHIGH returns the MOVING180DAYHIGH field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYHIGH() int32 {
	if o == nil || isNil(o.MOVING180DAYHIGH) {
		var ret int32
		return ret
	}
	return *o.MOVING180DAYHIGH
}

// GetMOVING180DAYHIGHOk returns a tuple with the MOVING180DAYHIGH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYHIGHOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING180DAYHIGH) {
		return nil, false
	}
	return o.MOVING180DAYHIGH, true
}

// HasMOVING180DAYHIGH returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING180DAYHIGH() bool {
	if o != nil && !isNil(o.MOVING180DAYHIGH) {
		return true
	}

	return false
}

// SetMOVING180DAYHIGH gets a reference to the given int32 and assigns it to the MOVING180DAYHIGH field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING180DAYHIGH(v int32) {
	o.MOVING180DAYHIGH = &v
}

// GetMOVING180DAYLOW returns the MOVING180DAYLOW field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYLOW() int32 {
	if o == nil || isNil(o.MOVING180DAYLOW) {
		var ret int32
		return ret
	}
	return *o.MOVING180DAYLOW
}

// GetMOVING180DAYLOWOk returns a tuple with the MOVING180DAYLOW field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYLOWOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING180DAYLOW) {
		return nil, false
	}
	return o.MOVING180DAYLOW, true
}

// HasMOVING180DAYLOW returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING180DAYLOW() bool {
	if o != nil && !isNil(o.MOVING180DAYLOW) {
		return true
	}

	return false
}

// SetMOVING180DAYLOW gets a reference to the given int32 and assigns it to the MOVING180DAYLOW field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING180DAYLOW(v int32) {
	o.MOVING180DAYLOW = &v
}

// GetMOVING180DAYOPEN returns the MOVING180DAYOPEN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYOPEN() int32 {
	if o == nil || isNil(o.MOVING180DAYOPEN) {
		var ret int32
		return ret
	}
	return *o.MOVING180DAYOPEN
}

// GetMOVING180DAYOPENOk returns a tuple with the MOVING180DAYOPEN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYOPENOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING180DAYOPEN) {
		return nil, false
	}
	return o.MOVING180DAYOPEN, true
}

// HasMOVING180DAYOPEN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING180DAYOPEN() bool {
	if o != nil && !isNil(o.MOVING180DAYOPEN) {
		return true
	}

	return false
}

// SetMOVING180DAYOPEN gets a reference to the given int32 and assigns it to the MOVING180DAYOPEN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING180DAYOPEN(v int32) {
	o.MOVING180DAYOPEN = &v
}

// GetMOVING180DAYQUOTEVOLUME returns the MOVING180DAYQUOTEVOLUME field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYQUOTEVOLUME() int32 {
	if o == nil || isNil(o.MOVING180DAYQUOTEVOLUME) {
		var ret int32
		return ret
	}
	return *o.MOVING180DAYQUOTEVOLUME
}

// GetMOVING180DAYQUOTEVOLUMEOk returns a tuple with the MOVING180DAYQUOTEVOLUME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYQUOTEVOLUMEOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING180DAYQUOTEVOLUME) {
		return nil, false
	}
	return o.MOVING180DAYQUOTEVOLUME, true
}

// HasMOVING180DAYQUOTEVOLUME returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING180DAYQUOTEVOLUME() bool {
	if o != nil && !isNil(o.MOVING180DAYQUOTEVOLUME) {
		return true
	}

	return false
}

// SetMOVING180DAYQUOTEVOLUME gets a reference to the given int32 and assigns it to the MOVING180DAYQUOTEVOLUME field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING180DAYQUOTEVOLUME(v int32) {
	o.MOVING180DAYQUOTEVOLUME = &v
}

// GetMOVING180DAYQUOTEVOLUMEBUY returns the MOVING180DAYQUOTEVOLUMEBUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYQUOTEVOLUMEBUY() int32 {
	if o == nil || isNil(o.MOVING180DAYQUOTEVOLUMEBUY) {
		var ret int32
		return ret
	}
	return *o.MOVING180DAYQUOTEVOLUMEBUY
}

// GetMOVING180DAYQUOTEVOLUMEBUYOk returns a tuple with the MOVING180DAYQUOTEVOLUMEBUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYQUOTEVOLUMEBUYOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING180DAYQUOTEVOLUMEBUY) {
		return nil, false
	}
	return o.MOVING180DAYQUOTEVOLUMEBUY, true
}

// HasMOVING180DAYQUOTEVOLUMEBUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING180DAYQUOTEVOLUMEBUY() bool {
	if o != nil && !isNil(o.MOVING180DAYQUOTEVOLUMEBUY) {
		return true
	}

	return false
}

// SetMOVING180DAYQUOTEVOLUMEBUY gets a reference to the given int32 and assigns it to the MOVING180DAYQUOTEVOLUMEBUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING180DAYQUOTEVOLUMEBUY(v int32) {
	o.MOVING180DAYQUOTEVOLUMEBUY = &v
}

// GetMOVING180DAYQUOTEVOLUMESELL returns the MOVING180DAYQUOTEVOLUMESELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYQUOTEVOLUMESELL() int32 {
	if o == nil || isNil(o.MOVING180DAYQUOTEVOLUMESELL) {
		var ret int32
		return ret
	}
	return *o.MOVING180DAYQUOTEVOLUMESELL
}

// GetMOVING180DAYQUOTEVOLUMESELLOk returns a tuple with the MOVING180DAYQUOTEVOLUMESELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYQUOTEVOLUMESELLOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING180DAYQUOTEVOLUMESELL) {
		return nil, false
	}
	return o.MOVING180DAYQUOTEVOLUMESELL, true
}

// HasMOVING180DAYQUOTEVOLUMESELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING180DAYQUOTEVOLUMESELL() bool {
	if o != nil && !isNil(o.MOVING180DAYQUOTEVOLUMESELL) {
		return true
	}

	return false
}

// SetMOVING180DAYQUOTEVOLUMESELL gets a reference to the given int32 and assigns it to the MOVING180DAYQUOTEVOLUMESELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING180DAYQUOTEVOLUMESELL(v int32) {
	o.MOVING180DAYQUOTEVOLUMESELL = &v
}

// GetMOVING180DAYQUOTEVOLUMEUNKNOWN returns the MOVING180DAYQUOTEVOLUMEUNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYQUOTEVOLUMEUNKNOWN() int32 {
	if o == nil || isNil(o.MOVING180DAYQUOTEVOLUMEUNKNOWN) {
		var ret int32
		return ret
	}
	return *o.MOVING180DAYQUOTEVOLUMEUNKNOWN
}

// GetMOVING180DAYQUOTEVOLUMEUNKNOWNOk returns a tuple with the MOVING180DAYQUOTEVOLUMEUNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYQUOTEVOLUMEUNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING180DAYQUOTEVOLUMEUNKNOWN) {
		return nil, false
	}
	return o.MOVING180DAYQUOTEVOLUMEUNKNOWN, true
}

// HasMOVING180DAYQUOTEVOLUMEUNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING180DAYQUOTEVOLUMEUNKNOWN() bool {
	if o != nil && !isNil(o.MOVING180DAYQUOTEVOLUMEUNKNOWN) {
		return true
	}

	return false
}

// SetMOVING180DAYQUOTEVOLUMEUNKNOWN gets a reference to the given int32 and assigns it to the MOVING180DAYQUOTEVOLUMEUNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING180DAYQUOTEVOLUMEUNKNOWN(v int32) {
	o.MOVING180DAYQUOTEVOLUMEUNKNOWN = &v
}

// GetMOVING180DAYTOTALTRADES returns the MOVING180DAYTOTALTRADES field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYTOTALTRADES() int32 {
	if o == nil || isNil(o.MOVING180DAYTOTALTRADES) {
		var ret int32
		return ret
	}
	return *o.MOVING180DAYTOTALTRADES
}

// GetMOVING180DAYTOTALTRADESOk returns a tuple with the MOVING180DAYTOTALTRADES field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYTOTALTRADESOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING180DAYTOTALTRADES) {
		return nil, false
	}
	return o.MOVING180DAYTOTALTRADES, true
}

// HasMOVING180DAYTOTALTRADES returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING180DAYTOTALTRADES() bool {
	if o != nil && !isNil(o.MOVING180DAYTOTALTRADES) {
		return true
	}

	return false
}

// SetMOVING180DAYTOTALTRADES gets a reference to the given int32 and assigns it to the MOVING180DAYTOTALTRADES field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING180DAYTOTALTRADES(v int32) {
	o.MOVING180DAYTOTALTRADES = &v
}

// GetMOVING180DAYTOTALTRADESBUY returns the MOVING180DAYTOTALTRADESBUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYTOTALTRADESBUY() int32 {
	if o == nil || isNil(o.MOVING180DAYTOTALTRADESBUY) {
		var ret int32
		return ret
	}
	return *o.MOVING180DAYTOTALTRADESBUY
}

// GetMOVING180DAYTOTALTRADESBUYOk returns a tuple with the MOVING180DAYTOTALTRADESBUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYTOTALTRADESBUYOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING180DAYTOTALTRADESBUY) {
		return nil, false
	}
	return o.MOVING180DAYTOTALTRADESBUY, true
}

// HasMOVING180DAYTOTALTRADESBUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING180DAYTOTALTRADESBUY() bool {
	if o != nil && !isNil(o.MOVING180DAYTOTALTRADESBUY) {
		return true
	}

	return false
}

// SetMOVING180DAYTOTALTRADESBUY gets a reference to the given int32 and assigns it to the MOVING180DAYTOTALTRADESBUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING180DAYTOTALTRADESBUY(v int32) {
	o.MOVING180DAYTOTALTRADESBUY = &v
}

// GetMOVING180DAYTOTALTRADESSELL returns the MOVING180DAYTOTALTRADESSELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYTOTALTRADESSELL() int32 {
	if o == nil || isNil(o.MOVING180DAYTOTALTRADESSELL) {
		var ret int32
		return ret
	}
	return *o.MOVING180DAYTOTALTRADESSELL
}

// GetMOVING180DAYTOTALTRADESSELLOk returns a tuple with the MOVING180DAYTOTALTRADESSELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYTOTALTRADESSELLOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING180DAYTOTALTRADESSELL) {
		return nil, false
	}
	return o.MOVING180DAYTOTALTRADESSELL, true
}

// HasMOVING180DAYTOTALTRADESSELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING180DAYTOTALTRADESSELL() bool {
	if o != nil && !isNil(o.MOVING180DAYTOTALTRADESSELL) {
		return true
	}

	return false
}

// SetMOVING180DAYTOTALTRADESSELL gets a reference to the given int32 and assigns it to the MOVING180DAYTOTALTRADESSELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING180DAYTOTALTRADESSELL(v int32) {
	o.MOVING180DAYTOTALTRADESSELL = &v
}

// GetMOVING180DAYTOTALTRADESUNKNOWN returns the MOVING180DAYTOTALTRADESUNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYTOTALTRADESUNKNOWN() int32 {
	if o == nil || isNil(o.MOVING180DAYTOTALTRADESUNKNOWN) {
		var ret int32
		return ret
	}
	return *o.MOVING180DAYTOTALTRADESUNKNOWN
}

// GetMOVING180DAYTOTALTRADESUNKNOWNOk returns a tuple with the MOVING180DAYTOTALTRADESUNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYTOTALTRADESUNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING180DAYTOTALTRADESUNKNOWN) {
		return nil, false
	}
	return o.MOVING180DAYTOTALTRADESUNKNOWN, true
}

// HasMOVING180DAYTOTALTRADESUNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING180DAYTOTALTRADESUNKNOWN() bool {
	if o != nil && !isNil(o.MOVING180DAYTOTALTRADESUNKNOWN) {
		return true
	}

	return false
}

// SetMOVING180DAYTOTALTRADESUNKNOWN gets a reference to the given int32 and assigns it to the MOVING180DAYTOTALTRADESUNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING180DAYTOTALTRADESUNKNOWN(v int32) {
	o.MOVING180DAYTOTALTRADESUNKNOWN = &v
}

// GetMOVING180DAYVOLUME returns the MOVING180DAYVOLUME field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYVOLUME() int32 {
	if o == nil || isNil(o.MOVING180DAYVOLUME) {
		var ret int32
		return ret
	}
	return *o.MOVING180DAYVOLUME
}

// GetMOVING180DAYVOLUMEOk returns a tuple with the MOVING180DAYVOLUME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYVOLUMEOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING180DAYVOLUME) {
		return nil, false
	}
	return o.MOVING180DAYVOLUME, true
}

// HasMOVING180DAYVOLUME returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING180DAYVOLUME() bool {
	if o != nil && !isNil(o.MOVING180DAYVOLUME) {
		return true
	}

	return false
}

// SetMOVING180DAYVOLUME gets a reference to the given int32 and assigns it to the MOVING180DAYVOLUME field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING180DAYVOLUME(v int32) {
	o.MOVING180DAYVOLUME = &v
}

// GetMOVING180DAYVOLUMEBUY returns the MOVING180DAYVOLUMEBUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYVOLUMEBUY() int32 {
	if o == nil || isNil(o.MOVING180DAYVOLUMEBUY) {
		var ret int32
		return ret
	}
	return *o.MOVING180DAYVOLUMEBUY
}

// GetMOVING180DAYVOLUMEBUYOk returns a tuple with the MOVING180DAYVOLUMEBUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYVOLUMEBUYOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING180DAYVOLUMEBUY) {
		return nil, false
	}
	return o.MOVING180DAYVOLUMEBUY, true
}

// HasMOVING180DAYVOLUMEBUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING180DAYVOLUMEBUY() bool {
	if o != nil && !isNil(o.MOVING180DAYVOLUMEBUY) {
		return true
	}

	return false
}

// SetMOVING180DAYVOLUMEBUY gets a reference to the given int32 and assigns it to the MOVING180DAYVOLUMEBUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING180DAYVOLUMEBUY(v int32) {
	o.MOVING180DAYVOLUMEBUY = &v
}

// GetMOVING180DAYVOLUMESELL returns the MOVING180DAYVOLUMESELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYVOLUMESELL() int32 {
	if o == nil || isNil(o.MOVING180DAYVOLUMESELL) {
		var ret int32
		return ret
	}
	return *o.MOVING180DAYVOLUMESELL
}

// GetMOVING180DAYVOLUMESELLOk returns a tuple with the MOVING180DAYVOLUMESELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYVOLUMESELLOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING180DAYVOLUMESELL) {
		return nil, false
	}
	return o.MOVING180DAYVOLUMESELL, true
}

// HasMOVING180DAYVOLUMESELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING180DAYVOLUMESELL() bool {
	if o != nil && !isNil(o.MOVING180DAYVOLUMESELL) {
		return true
	}

	return false
}

// SetMOVING180DAYVOLUMESELL gets a reference to the given int32 and assigns it to the MOVING180DAYVOLUMESELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING180DAYVOLUMESELL(v int32) {
	o.MOVING180DAYVOLUMESELL = &v
}

// GetMOVING180DAYVOLUMEUNKNOWN returns the MOVING180DAYVOLUMEUNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYVOLUMEUNKNOWN() int32 {
	if o == nil || isNil(o.MOVING180DAYVOLUMEUNKNOWN) {
		var ret int32
		return ret
	}
	return *o.MOVING180DAYVOLUMEUNKNOWN
}

// GetMOVING180DAYVOLUMEUNKNOWNOk returns a tuple with the MOVING180DAYVOLUMEUNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING180DAYVOLUMEUNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING180DAYVOLUMEUNKNOWN) {
		return nil, false
	}
	return o.MOVING180DAYVOLUMEUNKNOWN, true
}

// HasMOVING180DAYVOLUMEUNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING180DAYVOLUMEUNKNOWN() bool {
	if o != nil && !isNil(o.MOVING180DAYVOLUMEUNKNOWN) {
		return true
	}

	return false
}

// SetMOVING180DAYVOLUMEUNKNOWN gets a reference to the given int32 and assigns it to the MOVING180DAYVOLUMEUNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING180DAYVOLUMEUNKNOWN(v int32) {
	o.MOVING180DAYVOLUMEUNKNOWN = &v
}

// GetMOVING24HOURHIGH returns the MOVING24HOURHIGH field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURHIGH() int32 {
	if o == nil || isNil(o.MOVING24HOURHIGH) {
		var ret int32
		return ret
	}
	return *o.MOVING24HOURHIGH
}

// GetMOVING24HOURHIGHOk returns a tuple with the MOVING24HOURHIGH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURHIGHOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING24HOURHIGH) {
		return nil, false
	}
	return o.MOVING24HOURHIGH, true
}

// HasMOVING24HOURHIGH returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING24HOURHIGH() bool {
	if o != nil && !isNil(o.MOVING24HOURHIGH) {
		return true
	}

	return false
}

// SetMOVING24HOURHIGH gets a reference to the given int32 and assigns it to the MOVING24HOURHIGH field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING24HOURHIGH(v int32) {
	o.MOVING24HOURHIGH = &v
}

// GetMOVING24HOURLOW returns the MOVING24HOURLOW field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURLOW() int32 {
	if o == nil || isNil(o.MOVING24HOURLOW) {
		var ret int32
		return ret
	}
	return *o.MOVING24HOURLOW
}

// GetMOVING24HOURLOWOk returns a tuple with the MOVING24HOURLOW field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURLOWOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING24HOURLOW) {
		return nil, false
	}
	return o.MOVING24HOURLOW, true
}

// HasMOVING24HOURLOW returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING24HOURLOW() bool {
	if o != nil && !isNil(o.MOVING24HOURLOW) {
		return true
	}

	return false
}

// SetMOVING24HOURLOW gets a reference to the given int32 and assigns it to the MOVING24HOURLOW field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING24HOURLOW(v int32) {
	o.MOVING24HOURLOW = &v
}

// GetMOVING24HOUROPEN returns the MOVING24HOUROPEN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOUROPEN() int32 {
	if o == nil || isNil(o.MOVING24HOUROPEN) {
		var ret int32
		return ret
	}
	return *o.MOVING24HOUROPEN
}

// GetMOVING24HOUROPENOk returns a tuple with the MOVING24HOUROPEN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOUROPENOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING24HOUROPEN) {
		return nil, false
	}
	return o.MOVING24HOUROPEN, true
}

// HasMOVING24HOUROPEN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING24HOUROPEN() bool {
	if o != nil && !isNil(o.MOVING24HOUROPEN) {
		return true
	}

	return false
}

// SetMOVING24HOUROPEN gets a reference to the given int32 and assigns it to the MOVING24HOUROPEN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING24HOUROPEN(v int32) {
	o.MOVING24HOUROPEN = &v
}

// GetMOVING24HOURQUOTEVOLUME returns the MOVING24HOURQUOTEVOLUME field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURQUOTEVOLUME() int32 {
	if o == nil || isNil(o.MOVING24HOURQUOTEVOLUME) {
		var ret int32
		return ret
	}
	return *o.MOVING24HOURQUOTEVOLUME
}

// GetMOVING24HOURQUOTEVOLUMEOk returns a tuple with the MOVING24HOURQUOTEVOLUME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURQUOTEVOLUMEOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING24HOURQUOTEVOLUME) {
		return nil, false
	}
	return o.MOVING24HOURQUOTEVOLUME, true
}

// HasMOVING24HOURQUOTEVOLUME returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING24HOURQUOTEVOLUME() bool {
	if o != nil && !isNil(o.MOVING24HOURQUOTEVOLUME) {
		return true
	}

	return false
}

// SetMOVING24HOURQUOTEVOLUME gets a reference to the given int32 and assigns it to the MOVING24HOURQUOTEVOLUME field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING24HOURQUOTEVOLUME(v int32) {
	o.MOVING24HOURQUOTEVOLUME = &v
}

// GetMOVING24HOURQUOTEVOLUMEBUY returns the MOVING24HOURQUOTEVOLUMEBUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURQUOTEVOLUMEBUY() int32 {
	if o == nil || isNil(o.MOVING24HOURQUOTEVOLUMEBUY) {
		var ret int32
		return ret
	}
	return *o.MOVING24HOURQUOTEVOLUMEBUY
}

// GetMOVING24HOURQUOTEVOLUMEBUYOk returns a tuple with the MOVING24HOURQUOTEVOLUMEBUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURQUOTEVOLUMEBUYOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING24HOURQUOTEVOLUMEBUY) {
		return nil, false
	}
	return o.MOVING24HOURQUOTEVOLUMEBUY, true
}

// HasMOVING24HOURQUOTEVOLUMEBUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING24HOURQUOTEVOLUMEBUY() bool {
	if o != nil && !isNil(o.MOVING24HOURQUOTEVOLUMEBUY) {
		return true
	}

	return false
}

// SetMOVING24HOURQUOTEVOLUMEBUY gets a reference to the given int32 and assigns it to the MOVING24HOURQUOTEVOLUMEBUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING24HOURQUOTEVOLUMEBUY(v int32) {
	o.MOVING24HOURQUOTEVOLUMEBUY = &v
}

// GetMOVING24HOURQUOTEVOLUMESELL returns the MOVING24HOURQUOTEVOLUMESELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURQUOTEVOLUMESELL() int32 {
	if o == nil || isNil(o.MOVING24HOURQUOTEVOLUMESELL) {
		var ret int32
		return ret
	}
	return *o.MOVING24HOURQUOTEVOLUMESELL
}

// GetMOVING24HOURQUOTEVOLUMESELLOk returns a tuple with the MOVING24HOURQUOTEVOLUMESELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURQUOTEVOLUMESELLOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING24HOURQUOTEVOLUMESELL) {
		return nil, false
	}
	return o.MOVING24HOURQUOTEVOLUMESELL, true
}

// HasMOVING24HOURQUOTEVOLUMESELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING24HOURQUOTEVOLUMESELL() bool {
	if o != nil && !isNil(o.MOVING24HOURQUOTEVOLUMESELL) {
		return true
	}

	return false
}

// SetMOVING24HOURQUOTEVOLUMESELL gets a reference to the given int32 and assigns it to the MOVING24HOURQUOTEVOLUMESELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING24HOURQUOTEVOLUMESELL(v int32) {
	o.MOVING24HOURQUOTEVOLUMESELL = &v
}

// GetMOVING24HOURQUOTEVOLUMEUNKNOWN returns the MOVING24HOURQUOTEVOLUMEUNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURQUOTEVOLUMEUNKNOWN() int32 {
	if o == nil || isNil(o.MOVING24HOURQUOTEVOLUMEUNKNOWN) {
		var ret int32
		return ret
	}
	return *o.MOVING24HOURQUOTEVOLUMEUNKNOWN
}

// GetMOVING24HOURQUOTEVOLUMEUNKNOWNOk returns a tuple with the MOVING24HOURQUOTEVOLUMEUNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURQUOTEVOLUMEUNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING24HOURQUOTEVOLUMEUNKNOWN) {
		return nil, false
	}
	return o.MOVING24HOURQUOTEVOLUMEUNKNOWN, true
}

// HasMOVING24HOURQUOTEVOLUMEUNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING24HOURQUOTEVOLUMEUNKNOWN() bool {
	if o != nil && !isNil(o.MOVING24HOURQUOTEVOLUMEUNKNOWN) {
		return true
	}

	return false
}

// SetMOVING24HOURQUOTEVOLUMEUNKNOWN gets a reference to the given int32 and assigns it to the MOVING24HOURQUOTEVOLUMEUNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING24HOURQUOTEVOLUMEUNKNOWN(v int32) {
	o.MOVING24HOURQUOTEVOLUMEUNKNOWN = &v
}

// GetMOVING24HOURTOTALTRADES returns the MOVING24HOURTOTALTRADES field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURTOTALTRADES() int32 {
	if o == nil || isNil(o.MOVING24HOURTOTALTRADES) {
		var ret int32
		return ret
	}
	return *o.MOVING24HOURTOTALTRADES
}

// GetMOVING24HOURTOTALTRADESOk returns a tuple with the MOVING24HOURTOTALTRADES field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURTOTALTRADESOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING24HOURTOTALTRADES) {
		return nil, false
	}
	return o.MOVING24HOURTOTALTRADES, true
}

// HasMOVING24HOURTOTALTRADES returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING24HOURTOTALTRADES() bool {
	if o != nil && !isNil(o.MOVING24HOURTOTALTRADES) {
		return true
	}

	return false
}

// SetMOVING24HOURTOTALTRADES gets a reference to the given int32 and assigns it to the MOVING24HOURTOTALTRADES field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING24HOURTOTALTRADES(v int32) {
	o.MOVING24HOURTOTALTRADES = &v
}

// GetMOVING24HOURTOTALTRADESBUY returns the MOVING24HOURTOTALTRADESBUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURTOTALTRADESBUY() int32 {
	if o == nil || isNil(o.MOVING24HOURTOTALTRADESBUY) {
		var ret int32
		return ret
	}
	return *o.MOVING24HOURTOTALTRADESBUY
}

// GetMOVING24HOURTOTALTRADESBUYOk returns a tuple with the MOVING24HOURTOTALTRADESBUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURTOTALTRADESBUYOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING24HOURTOTALTRADESBUY) {
		return nil, false
	}
	return o.MOVING24HOURTOTALTRADESBUY, true
}

// HasMOVING24HOURTOTALTRADESBUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING24HOURTOTALTRADESBUY() bool {
	if o != nil && !isNil(o.MOVING24HOURTOTALTRADESBUY) {
		return true
	}

	return false
}

// SetMOVING24HOURTOTALTRADESBUY gets a reference to the given int32 and assigns it to the MOVING24HOURTOTALTRADESBUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING24HOURTOTALTRADESBUY(v int32) {
	o.MOVING24HOURTOTALTRADESBUY = &v
}

// GetMOVING24HOURTOTALTRADESSELL returns the MOVING24HOURTOTALTRADESSELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURTOTALTRADESSELL() int32 {
	if o == nil || isNil(o.MOVING24HOURTOTALTRADESSELL) {
		var ret int32
		return ret
	}
	return *o.MOVING24HOURTOTALTRADESSELL
}

// GetMOVING24HOURTOTALTRADESSELLOk returns a tuple with the MOVING24HOURTOTALTRADESSELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURTOTALTRADESSELLOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING24HOURTOTALTRADESSELL) {
		return nil, false
	}
	return o.MOVING24HOURTOTALTRADESSELL, true
}

// HasMOVING24HOURTOTALTRADESSELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING24HOURTOTALTRADESSELL() bool {
	if o != nil && !isNil(o.MOVING24HOURTOTALTRADESSELL) {
		return true
	}

	return false
}

// SetMOVING24HOURTOTALTRADESSELL gets a reference to the given int32 and assigns it to the MOVING24HOURTOTALTRADESSELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING24HOURTOTALTRADESSELL(v int32) {
	o.MOVING24HOURTOTALTRADESSELL = &v
}

// GetMOVING24HOURTOTALTRADESUNKNOWN returns the MOVING24HOURTOTALTRADESUNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURTOTALTRADESUNKNOWN() int32 {
	if o == nil || isNil(o.MOVING24HOURTOTALTRADESUNKNOWN) {
		var ret int32
		return ret
	}
	return *o.MOVING24HOURTOTALTRADESUNKNOWN
}

// GetMOVING24HOURTOTALTRADESUNKNOWNOk returns a tuple with the MOVING24HOURTOTALTRADESUNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURTOTALTRADESUNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING24HOURTOTALTRADESUNKNOWN) {
		return nil, false
	}
	return o.MOVING24HOURTOTALTRADESUNKNOWN, true
}

// HasMOVING24HOURTOTALTRADESUNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING24HOURTOTALTRADESUNKNOWN() bool {
	if o != nil && !isNil(o.MOVING24HOURTOTALTRADESUNKNOWN) {
		return true
	}

	return false
}

// SetMOVING24HOURTOTALTRADESUNKNOWN gets a reference to the given int32 and assigns it to the MOVING24HOURTOTALTRADESUNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING24HOURTOTALTRADESUNKNOWN(v int32) {
	o.MOVING24HOURTOTALTRADESUNKNOWN = &v
}

// GetMOVING24HOURVOLUME returns the MOVING24HOURVOLUME field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURVOLUME() int32 {
	if o == nil || isNil(o.MOVING24HOURVOLUME) {
		var ret int32
		return ret
	}
	return *o.MOVING24HOURVOLUME
}

// GetMOVING24HOURVOLUMEOk returns a tuple with the MOVING24HOURVOLUME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURVOLUMEOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING24HOURVOLUME) {
		return nil, false
	}
	return o.MOVING24HOURVOLUME, true
}

// HasMOVING24HOURVOLUME returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING24HOURVOLUME() bool {
	if o != nil && !isNil(o.MOVING24HOURVOLUME) {
		return true
	}

	return false
}

// SetMOVING24HOURVOLUME gets a reference to the given int32 and assigns it to the MOVING24HOURVOLUME field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING24HOURVOLUME(v int32) {
	o.MOVING24HOURVOLUME = &v
}

// GetMOVING24HOURVOLUMEBUY returns the MOVING24HOURVOLUMEBUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURVOLUMEBUY() int32 {
	if o == nil || isNil(o.MOVING24HOURVOLUMEBUY) {
		var ret int32
		return ret
	}
	return *o.MOVING24HOURVOLUMEBUY
}

// GetMOVING24HOURVOLUMEBUYOk returns a tuple with the MOVING24HOURVOLUMEBUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURVOLUMEBUYOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING24HOURVOLUMEBUY) {
		return nil, false
	}
	return o.MOVING24HOURVOLUMEBUY, true
}

// HasMOVING24HOURVOLUMEBUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING24HOURVOLUMEBUY() bool {
	if o != nil && !isNil(o.MOVING24HOURVOLUMEBUY) {
		return true
	}

	return false
}

// SetMOVING24HOURVOLUMEBUY gets a reference to the given int32 and assigns it to the MOVING24HOURVOLUMEBUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING24HOURVOLUMEBUY(v int32) {
	o.MOVING24HOURVOLUMEBUY = &v
}

// GetMOVING24HOURVOLUMESELL returns the MOVING24HOURVOLUMESELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURVOLUMESELL() int32 {
	if o == nil || isNil(o.MOVING24HOURVOLUMESELL) {
		var ret int32
		return ret
	}
	return *o.MOVING24HOURVOLUMESELL
}

// GetMOVING24HOURVOLUMESELLOk returns a tuple with the MOVING24HOURVOLUMESELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURVOLUMESELLOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING24HOURVOLUMESELL) {
		return nil, false
	}
	return o.MOVING24HOURVOLUMESELL, true
}

// HasMOVING24HOURVOLUMESELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING24HOURVOLUMESELL() bool {
	if o != nil && !isNil(o.MOVING24HOURVOLUMESELL) {
		return true
	}

	return false
}

// SetMOVING24HOURVOLUMESELL gets a reference to the given int32 and assigns it to the MOVING24HOURVOLUMESELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING24HOURVOLUMESELL(v int32) {
	o.MOVING24HOURVOLUMESELL = &v
}

// GetMOVING24HOURVOLUMEUNKNOWN returns the MOVING24HOURVOLUMEUNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURVOLUMEUNKNOWN() int32 {
	if o == nil || isNil(o.MOVING24HOURVOLUMEUNKNOWN) {
		var ret int32
		return ret
	}
	return *o.MOVING24HOURVOLUMEUNKNOWN
}

// GetMOVING24HOURVOLUMEUNKNOWNOk returns a tuple with the MOVING24HOURVOLUMEUNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING24HOURVOLUMEUNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING24HOURVOLUMEUNKNOWN) {
		return nil, false
	}
	return o.MOVING24HOURVOLUMEUNKNOWN, true
}

// HasMOVING24HOURVOLUMEUNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING24HOURVOLUMEUNKNOWN() bool {
	if o != nil && !isNil(o.MOVING24HOURVOLUMEUNKNOWN) {
		return true
	}

	return false
}

// SetMOVING24HOURVOLUMEUNKNOWN gets a reference to the given int32 and assigns it to the MOVING24HOURVOLUMEUNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING24HOURVOLUMEUNKNOWN(v int32) {
	o.MOVING24HOURVOLUMEUNKNOWN = &v
}

// GetMOVING30DAYHIGH returns the MOVING30DAYHIGH field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYHIGH() int32 {
	if o == nil || isNil(o.MOVING30DAYHIGH) {
		var ret int32
		return ret
	}
	return *o.MOVING30DAYHIGH
}

// GetMOVING30DAYHIGHOk returns a tuple with the MOVING30DAYHIGH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYHIGHOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING30DAYHIGH) {
		return nil, false
	}
	return o.MOVING30DAYHIGH, true
}

// HasMOVING30DAYHIGH returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING30DAYHIGH() bool {
	if o != nil && !isNil(o.MOVING30DAYHIGH) {
		return true
	}

	return false
}

// SetMOVING30DAYHIGH gets a reference to the given int32 and assigns it to the MOVING30DAYHIGH field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING30DAYHIGH(v int32) {
	o.MOVING30DAYHIGH = &v
}

// GetMOVING30DAYLOW returns the MOVING30DAYLOW field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYLOW() int32 {
	if o == nil || isNil(o.MOVING30DAYLOW) {
		var ret int32
		return ret
	}
	return *o.MOVING30DAYLOW
}

// GetMOVING30DAYLOWOk returns a tuple with the MOVING30DAYLOW field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYLOWOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING30DAYLOW) {
		return nil, false
	}
	return o.MOVING30DAYLOW, true
}

// HasMOVING30DAYLOW returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING30DAYLOW() bool {
	if o != nil && !isNil(o.MOVING30DAYLOW) {
		return true
	}

	return false
}

// SetMOVING30DAYLOW gets a reference to the given int32 and assigns it to the MOVING30DAYLOW field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING30DAYLOW(v int32) {
	o.MOVING30DAYLOW = &v
}

// GetMOVING30DAYOPEN returns the MOVING30DAYOPEN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYOPEN() int32 {
	if o == nil || isNil(o.MOVING30DAYOPEN) {
		var ret int32
		return ret
	}
	return *o.MOVING30DAYOPEN
}

// GetMOVING30DAYOPENOk returns a tuple with the MOVING30DAYOPEN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYOPENOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING30DAYOPEN) {
		return nil, false
	}
	return o.MOVING30DAYOPEN, true
}

// HasMOVING30DAYOPEN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING30DAYOPEN() bool {
	if o != nil && !isNil(o.MOVING30DAYOPEN) {
		return true
	}

	return false
}

// SetMOVING30DAYOPEN gets a reference to the given int32 and assigns it to the MOVING30DAYOPEN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING30DAYOPEN(v int32) {
	o.MOVING30DAYOPEN = &v
}

// GetMOVING30DAYQUOTEVOLUME returns the MOVING30DAYQUOTEVOLUME field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYQUOTEVOLUME() int32 {
	if o == nil || isNil(o.MOVING30DAYQUOTEVOLUME) {
		var ret int32
		return ret
	}
	return *o.MOVING30DAYQUOTEVOLUME
}

// GetMOVING30DAYQUOTEVOLUMEOk returns a tuple with the MOVING30DAYQUOTEVOLUME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYQUOTEVOLUMEOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING30DAYQUOTEVOLUME) {
		return nil, false
	}
	return o.MOVING30DAYQUOTEVOLUME, true
}

// HasMOVING30DAYQUOTEVOLUME returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING30DAYQUOTEVOLUME() bool {
	if o != nil && !isNil(o.MOVING30DAYQUOTEVOLUME) {
		return true
	}

	return false
}

// SetMOVING30DAYQUOTEVOLUME gets a reference to the given int32 and assigns it to the MOVING30DAYQUOTEVOLUME field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING30DAYQUOTEVOLUME(v int32) {
	o.MOVING30DAYQUOTEVOLUME = &v
}

// GetMOVING30DAYQUOTEVOLUMEBUY returns the MOVING30DAYQUOTEVOLUMEBUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYQUOTEVOLUMEBUY() int32 {
	if o == nil || isNil(o.MOVING30DAYQUOTEVOLUMEBUY) {
		var ret int32
		return ret
	}
	return *o.MOVING30DAYQUOTEVOLUMEBUY
}

// GetMOVING30DAYQUOTEVOLUMEBUYOk returns a tuple with the MOVING30DAYQUOTEVOLUMEBUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYQUOTEVOLUMEBUYOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING30DAYQUOTEVOLUMEBUY) {
		return nil, false
	}
	return o.MOVING30DAYQUOTEVOLUMEBUY, true
}

// HasMOVING30DAYQUOTEVOLUMEBUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING30DAYQUOTEVOLUMEBUY() bool {
	if o != nil && !isNil(o.MOVING30DAYQUOTEVOLUMEBUY) {
		return true
	}

	return false
}

// SetMOVING30DAYQUOTEVOLUMEBUY gets a reference to the given int32 and assigns it to the MOVING30DAYQUOTEVOLUMEBUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING30DAYQUOTEVOLUMEBUY(v int32) {
	o.MOVING30DAYQUOTEVOLUMEBUY = &v
}

// GetMOVING30DAYQUOTEVOLUMESELL returns the MOVING30DAYQUOTEVOLUMESELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYQUOTEVOLUMESELL() int32 {
	if o == nil || isNil(o.MOVING30DAYQUOTEVOLUMESELL) {
		var ret int32
		return ret
	}
	return *o.MOVING30DAYQUOTEVOLUMESELL
}

// GetMOVING30DAYQUOTEVOLUMESELLOk returns a tuple with the MOVING30DAYQUOTEVOLUMESELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYQUOTEVOLUMESELLOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING30DAYQUOTEVOLUMESELL) {
		return nil, false
	}
	return o.MOVING30DAYQUOTEVOLUMESELL, true
}

// HasMOVING30DAYQUOTEVOLUMESELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING30DAYQUOTEVOLUMESELL() bool {
	if o != nil && !isNil(o.MOVING30DAYQUOTEVOLUMESELL) {
		return true
	}

	return false
}

// SetMOVING30DAYQUOTEVOLUMESELL gets a reference to the given int32 and assigns it to the MOVING30DAYQUOTEVOLUMESELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING30DAYQUOTEVOLUMESELL(v int32) {
	o.MOVING30DAYQUOTEVOLUMESELL = &v
}

// GetMOVING30DAYQUOTEVOLUMEUNKNOWN returns the MOVING30DAYQUOTEVOLUMEUNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYQUOTEVOLUMEUNKNOWN() int32 {
	if o == nil || isNil(o.MOVING30DAYQUOTEVOLUMEUNKNOWN) {
		var ret int32
		return ret
	}
	return *o.MOVING30DAYQUOTEVOLUMEUNKNOWN
}

// GetMOVING30DAYQUOTEVOLUMEUNKNOWNOk returns a tuple with the MOVING30DAYQUOTEVOLUMEUNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYQUOTEVOLUMEUNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING30DAYQUOTEVOLUMEUNKNOWN) {
		return nil, false
	}
	return o.MOVING30DAYQUOTEVOLUMEUNKNOWN, true
}

// HasMOVING30DAYQUOTEVOLUMEUNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING30DAYQUOTEVOLUMEUNKNOWN() bool {
	if o != nil && !isNil(o.MOVING30DAYQUOTEVOLUMEUNKNOWN) {
		return true
	}

	return false
}

// SetMOVING30DAYQUOTEVOLUMEUNKNOWN gets a reference to the given int32 and assigns it to the MOVING30DAYQUOTEVOLUMEUNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING30DAYQUOTEVOLUMEUNKNOWN(v int32) {
	o.MOVING30DAYQUOTEVOLUMEUNKNOWN = &v
}

// GetMOVING30DAYTOTALTRADES returns the MOVING30DAYTOTALTRADES field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYTOTALTRADES() int32 {
	if o == nil || isNil(o.MOVING30DAYTOTALTRADES) {
		var ret int32
		return ret
	}
	return *o.MOVING30DAYTOTALTRADES
}

// GetMOVING30DAYTOTALTRADESOk returns a tuple with the MOVING30DAYTOTALTRADES field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYTOTALTRADESOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING30DAYTOTALTRADES) {
		return nil, false
	}
	return o.MOVING30DAYTOTALTRADES, true
}

// HasMOVING30DAYTOTALTRADES returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING30DAYTOTALTRADES() bool {
	if o != nil && !isNil(o.MOVING30DAYTOTALTRADES) {
		return true
	}

	return false
}

// SetMOVING30DAYTOTALTRADES gets a reference to the given int32 and assigns it to the MOVING30DAYTOTALTRADES field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING30DAYTOTALTRADES(v int32) {
	o.MOVING30DAYTOTALTRADES = &v
}

// GetMOVING30DAYTOTALTRADESBUY returns the MOVING30DAYTOTALTRADESBUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYTOTALTRADESBUY() int32 {
	if o == nil || isNil(o.MOVING30DAYTOTALTRADESBUY) {
		var ret int32
		return ret
	}
	return *o.MOVING30DAYTOTALTRADESBUY
}

// GetMOVING30DAYTOTALTRADESBUYOk returns a tuple with the MOVING30DAYTOTALTRADESBUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYTOTALTRADESBUYOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING30DAYTOTALTRADESBUY) {
		return nil, false
	}
	return o.MOVING30DAYTOTALTRADESBUY, true
}

// HasMOVING30DAYTOTALTRADESBUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING30DAYTOTALTRADESBUY() bool {
	if o != nil && !isNil(o.MOVING30DAYTOTALTRADESBUY) {
		return true
	}

	return false
}

// SetMOVING30DAYTOTALTRADESBUY gets a reference to the given int32 and assigns it to the MOVING30DAYTOTALTRADESBUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING30DAYTOTALTRADESBUY(v int32) {
	o.MOVING30DAYTOTALTRADESBUY = &v
}

// GetMOVING30DAYTOTALTRADESSELL returns the MOVING30DAYTOTALTRADESSELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYTOTALTRADESSELL() int32 {
	if o == nil || isNil(o.MOVING30DAYTOTALTRADESSELL) {
		var ret int32
		return ret
	}
	return *o.MOVING30DAYTOTALTRADESSELL
}

// GetMOVING30DAYTOTALTRADESSELLOk returns a tuple with the MOVING30DAYTOTALTRADESSELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYTOTALTRADESSELLOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING30DAYTOTALTRADESSELL) {
		return nil, false
	}
	return o.MOVING30DAYTOTALTRADESSELL, true
}

// HasMOVING30DAYTOTALTRADESSELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING30DAYTOTALTRADESSELL() bool {
	if o != nil && !isNil(o.MOVING30DAYTOTALTRADESSELL) {
		return true
	}

	return false
}

// SetMOVING30DAYTOTALTRADESSELL gets a reference to the given int32 and assigns it to the MOVING30DAYTOTALTRADESSELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING30DAYTOTALTRADESSELL(v int32) {
	o.MOVING30DAYTOTALTRADESSELL = &v
}

// GetMOVING30DAYTOTALTRADESUNKNOWN returns the MOVING30DAYTOTALTRADESUNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYTOTALTRADESUNKNOWN() int32 {
	if o == nil || isNil(o.MOVING30DAYTOTALTRADESUNKNOWN) {
		var ret int32
		return ret
	}
	return *o.MOVING30DAYTOTALTRADESUNKNOWN
}

// GetMOVING30DAYTOTALTRADESUNKNOWNOk returns a tuple with the MOVING30DAYTOTALTRADESUNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYTOTALTRADESUNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING30DAYTOTALTRADESUNKNOWN) {
		return nil, false
	}
	return o.MOVING30DAYTOTALTRADESUNKNOWN, true
}

// HasMOVING30DAYTOTALTRADESUNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING30DAYTOTALTRADESUNKNOWN() bool {
	if o != nil && !isNil(o.MOVING30DAYTOTALTRADESUNKNOWN) {
		return true
	}

	return false
}

// SetMOVING30DAYTOTALTRADESUNKNOWN gets a reference to the given int32 and assigns it to the MOVING30DAYTOTALTRADESUNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING30DAYTOTALTRADESUNKNOWN(v int32) {
	o.MOVING30DAYTOTALTRADESUNKNOWN = &v
}

// GetMOVING30DAYVOLUME returns the MOVING30DAYVOLUME field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYVOLUME() int32 {
	if o == nil || isNil(o.MOVING30DAYVOLUME) {
		var ret int32
		return ret
	}
	return *o.MOVING30DAYVOLUME
}

// GetMOVING30DAYVOLUMEOk returns a tuple with the MOVING30DAYVOLUME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYVOLUMEOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING30DAYVOLUME) {
		return nil, false
	}
	return o.MOVING30DAYVOLUME, true
}

// HasMOVING30DAYVOLUME returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING30DAYVOLUME() bool {
	if o != nil && !isNil(o.MOVING30DAYVOLUME) {
		return true
	}

	return false
}

// SetMOVING30DAYVOLUME gets a reference to the given int32 and assigns it to the MOVING30DAYVOLUME field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING30DAYVOLUME(v int32) {
	o.MOVING30DAYVOLUME = &v
}

// GetMOVING30DAYVOLUMEBUY returns the MOVING30DAYVOLUMEBUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYVOLUMEBUY() int32 {
	if o == nil || isNil(o.MOVING30DAYVOLUMEBUY) {
		var ret int32
		return ret
	}
	return *o.MOVING30DAYVOLUMEBUY
}

// GetMOVING30DAYVOLUMEBUYOk returns a tuple with the MOVING30DAYVOLUMEBUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYVOLUMEBUYOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING30DAYVOLUMEBUY) {
		return nil, false
	}
	return o.MOVING30DAYVOLUMEBUY, true
}

// HasMOVING30DAYVOLUMEBUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING30DAYVOLUMEBUY() bool {
	if o != nil && !isNil(o.MOVING30DAYVOLUMEBUY) {
		return true
	}

	return false
}

// SetMOVING30DAYVOLUMEBUY gets a reference to the given int32 and assigns it to the MOVING30DAYVOLUMEBUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING30DAYVOLUMEBUY(v int32) {
	o.MOVING30DAYVOLUMEBUY = &v
}

// GetMOVING30DAYVOLUMESELL returns the MOVING30DAYVOLUMESELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYVOLUMESELL() int32 {
	if o == nil || isNil(o.MOVING30DAYVOLUMESELL) {
		var ret int32
		return ret
	}
	return *o.MOVING30DAYVOLUMESELL
}

// GetMOVING30DAYVOLUMESELLOk returns a tuple with the MOVING30DAYVOLUMESELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYVOLUMESELLOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING30DAYVOLUMESELL) {
		return nil, false
	}
	return o.MOVING30DAYVOLUMESELL, true
}

// HasMOVING30DAYVOLUMESELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING30DAYVOLUMESELL() bool {
	if o != nil && !isNil(o.MOVING30DAYVOLUMESELL) {
		return true
	}

	return false
}

// SetMOVING30DAYVOLUMESELL gets a reference to the given int32 and assigns it to the MOVING30DAYVOLUMESELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING30DAYVOLUMESELL(v int32) {
	o.MOVING30DAYVOLUMESELL = &v
}

// GetMOVING30DAYVOLUMEUNKNOWN returns the MOVING30DAYVOLUMEUNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYVOLUMEUNKNOWN() int32 {
	if o == nil || isNil(o.MOVING30DAYVOLUMEUNKNOWN) {
		var ret int32
		return ret
	}
	return *o.MOVING30DAYVOLUMEUNKNOWN
}

// GetMOVING30DAYVOLUMEUNKNOWNOk returns a tuple with the MOVING30DAYVOLUMEUNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING30DAYVOLUMEUNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING30DAYVOLUMEUNKNOWN) {
		return nil, false
	}
	return o.MOVING30DAYVOLUMEUNKNOWN, true
}

// HasMOVING30DAYVOLUMEUNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING30DAYVOLUMEUNKNOWN() bool {
	if o != nil && !isNil(o.MOVING30DAYVOLUMEUNKNOWN) {
		return true
	}

	return false
}

// SetMOVING30DAYVOLUMEUNKNOWN gets a reference to the given int32 and assigns it to the MOVING30DAYVOLUMEUNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING30DAYVOLUMEUNKNOWN(v int32) {
	o.MOVING30DAYVOLUMEUNKNOWN = &v
}

// GetMOVING365DAYHIGH returns the MOVING365DAYHIGH field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYHIGH() int32 {
	if o == nil || isNil(o.MOVING365DAYHIGH) {
		var ret int32
		return ret
	}
	return *o.MOVING365DAYHIGH
}

// GetMOVING365DAYHIGHOk returns a tuple with the MOVING365DAYHIGH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYHIGHOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING365DAYHIGH) {
		return nil, false
	}
	return o.MOVING365DAYHIGH, true
}

// HasMOVING365DAYHIGH returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING365DAYHIGH() bool {
	if o != nil && !isNil(o.MOVING365DAYHIGH) {
		return true
	}

	return false
}

// SetMOVING365DAYHIGH gets a reference to the given int32 and assigns it to the MOVING365DAYHIGH field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING365DAYHIGH(v int32) {
	o.MOVING365DAYHIGH = &v
}

// GetMOVING365DAYLOW returns the MOVING365DAYLOW field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYLOW() int32 {
	if o == nil || isNil(o.MOVING365DAYLOW) {
		var ret int32
		return ret
	}
	return *o.MOVING365DAYLOW
}

// GetMOVING365DAYLOWOk returns a tuple with the MOVING365DAYLOW field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYLOWOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING365DAYLOW) {
		return nil, false
	}
	return o.MOVING365DAYLOW, true
}

// HasMOVING365DAYLOW returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING365DAYLOW() bool {
	if o != nil && !isNil(o.MOVING365DAYLOW) {
		return true
	}

	return false
}

// SetMOVING365DAYLOW gets a reference to the given int32 and assigns it to the MOVING365DAYLOW field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING365DAYLOW(v int32) {
	o.MOVING365DAYLOW = &v
}

// GetMOVING365DAYOPEN returns the MOVING365DAYOPEN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYOPEN() int32 {
	if o == nil || isNil(o.MOVING365DAYOPEN) {
		var ret int32
		return ret
	}
	return *o.MOVING365DAYOPEN
}

// GetMOVING365DAYOPENOk returns a tuple with the MOVING365DAYOPEN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYOPENOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING365DAYOPEN) {
		return nil, false
	}
	return o.MOVING365DAYOPEN, true
}

// HasMOVING365DAYOPEN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING365DAYOPEN() bool {
	if o != nil && !isNil(o.MOVING365DAYOPEN) {
		return true
	}

	return false
}

// SetMOVING365DAYOPEN gets a reference to the given int32 and assigns it to the MOVING365DAYOPEN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING365DAYOPEN(v int32) {
	o.MOVING365DAYOPEN = &v
}

// GetMOVING365DAYQUOTEVOLUME returns the MOVING365DAYQUOTEVOLUME field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYQUOTEVOLUME() int32 {
	if o == nil || isNil(o.MOVING365DAYQUOTEVOLUME) {
		var ret int32
		return ret
	}
	return *o.MOVING365DAYQUOTEVOLUME
}

// GetMOVING365DAYQUOTEVOLUMEOk returns a tuple with the MOVING365DAYQUOTEVOLUME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYQUOTEVOLUMEOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING365DAYQUOTEVOLUME) {
		return nil, false
	}
	return o.MOVING365DAYQUOTEVOLUME, true
}

// HasMOVING365DAYQUOTEVOLUME returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING365DAYQUOTEVOLUME() bool {
	if o != nil && !isNil(o.MOVING365DAYQUOTEVOLUME) {
		return true
	}

	return false
}

// SetMOVING365DAYQUOTEVOLUME gets a reference to the given int32 and assigns it to the MOVING365DAYQUOTEVOLUME field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING365DAYQUOTEVOLUME(v int32) {
	o.MOVING365DAYQUOTEVOLUME = &v
}

// GetMOVING365DAYQUOTEVOLUMEBUY returns the MOVING365DAYQUOTEVOLUMEBUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYQUOTEVOLUMEBUY() int32 {
	if o == nil || isNil(o.MOVING365DAYQUOTEVOLUMEBUY) {
		var ret int32
		return ret
	}
	return *o.MOVING365DAYQUOTEVOLUMEBUY
}

// GetMOVING365DAYQUOTEVOLUMEBUYOk returns a tuple with the MOVING365DAYQUOTEVOLUMEBUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYQUOTEVOLUMEBUYOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING365DAYQUOTEVOLUMEBUY) {
		return nil, false
	}
	return o.MOVING365DAYQUOTEVOLUMEBUY, true
}

// HasMOVING365DAYQUOTEVOLUMEBUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING365DAYQUOTEVOLUMEBUY() bool {
	if o != nil && !isNil(o.MOVING365DAYQUOTEVOLUMEBUY) {
		return true
	}

	return false
}

// SetMOVING365DAYQUOTEVOLUMEBUY gets a reference to the given int32 and assigns it to the MOVING365DAYQUOTEVOLUMEBUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING365DAYQUOTEVOLUMEBUY(v int32) {
	o.MOVING365DAYQUOTEVOLUMEBUY = &v
}

// GetMOVING365DAYQUOTEVOLUMESELL returns the MOVING365DAYQUOTEVOLUMESELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYQUOTEVOLUMESELL() int32 {
	if o == nil || isNil(o.MOVING365DAYQUOTEVOLUMESELL) {
		var ret int32
		return ret
	}
	return *o.MOVING365DAYQUOTEVOLUMESELL
}

// GetMOVING365DAYQUOTEVOLUMESELLOk returns a tuple with the MOVING365DAYQUOTEVOLUMESELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYQUOTEVOLUMESELLOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING365DAYQUOTEVOLUMESELL) {
		return nil, false
	}
	return o.MOVING365DAYQUOTEVOLUMESELL, true
}

// HasMOVING365DAYQUOTEVOLUMESELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING365DAYQUOTEVOLUMESELL() bool {
	if o != nil && !isNil(o.MOVING365DAYQUOTEVOLUMESELL) {
		return true
	}

	return false
}

// SetMOVING365DAYQUOTEVOLUMESELL gets a reference to the given int32 and assigns it to the MOVING365DAYQUOTEVOLUMESELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING365DAYQUOTEVOLUMESELL(v int32) {
	o.MOVING365DAYQUOTEVOLUMESELL = &v
}

// GetMOVING365DAYQUOTEVOLUMEUNKNOWN returns the MOVING365DAYQUOTEVOLUMEUNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYQUOTEVOLUMEUNKNOWN() int32 {
	if o == nil || isNil(o.MOVING365DAYQUOTEVOLUMEUNKNOWN) {
		var ret int32
		return ret
	}
	return *o.MOVING365DAYQUOTEVOLUMEUNKNOWN
}

// GetMOVING365DAYQUOTEVOLUMEUNKNOWNOk returns a tuple with the MOVING365DAYQUOTEVOLUMEUNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYQUOTEVOLUMEUNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING365DAYQUOTEVOLUMEUNKNOWN) {
		return nil, false
	}
	return o.MOVING365DAYQUOTEVOLUMEUNKNOWN, true
}

// HasMOVING365DAYQUOTEVOLUMEUNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING365DAYQUOTEVOLUMEUNKNOWN() bool {
	if o != nil && !isNil(o.MOVING365DAYQUOTEVOLUMEUNKNOWN) {
		return true
	}

	return false
}

// SetMOVING365DAYQUOTEVOLUMEUNKNOWN gets a reference to the given int32 and assigns it to the MOVING365DAYQUOTEVOLUMEUNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING365DAYQUOTEVOLUMEUNKNOWN(v int32) {
	o.MOVING365DAYQUOTEVOLUMEUNKNOWN = &v
}

// GetMOVING365DAYTOTALTRADES returns the MOVING365DAYTOTALTRADES field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYTOTALTRADES() int32 {
	if o == nil || isNil(o.MOVING365DAYTOTALTRADES) {
		var ret int32
		return ret
	}
	return *o.MOVING365DAYTOTALTRADES
}

// GetMOVING365DAYTOTALTRADESOk returns a tuple with the MOVING365DAYTOTALTRADES field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYTOTALTRADESOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING365DAYTOTALTRADES) {
		return nil, false
	}
	return o.MOVING365DAYTOTALTRADES, true
}

// HasMOVING365DAYTOTALTRADES returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING365DAYTOTALTRADES() bool {
	if o != nil && !isNil(o.MOVING365DAYTOTALTRADES) {
		return true
	}

	return false
}

// SetMOVING365DAYTOTALTRADES gets a reference to the given int32 and assigns it to the MOVING365DAYTOTALTRADES field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING365DAYTOTALTRADES(v int32) {
	o.MOVING365DAYTOTALTRADES = &v
}

// GetMOVING365DAYTOTALTRADESBUY returns the MOVING365DAYTOTALTRADESBUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYTOTALTRADESBUY() int32 {
	if o == nil || isNil(o.MOVING365DAYTOTALTRADESBUY) {
		var ret int32
		return ret
	}
	return *o.MOVING365DAYTOTALTRADESBUY
}

// GetMOVING365DAYTOTALTRADESBUYOk returns a tuple with the MOVING365DAYTOTALTRADESBUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYTOTALTRADESBUYOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING365DAYTOTALTRADESBUY) {
		return nil, false
	}
	return o.MOVING365DAYTOTALTRADESBUY, true
}

// HasMOVING365DAYTOTALTRADESBUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING365DAYTOTALTRADESBUY() bool {
	if o != nil && !isNil(o.MOVING365DAYTOTALTRADESBUY) {
		return true
	}

	return false
}

// SetMOVING365DAYTOTALTRADESBUY gets a reference to the given int32 and assigns it to the MOVING365DAYTOTALTRADESBUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING365DAYTOTALTRADESBUY(v int32) {
	o.MOVING365DAYTOTALTRADESBUY = &v
}

// GetMOVING365DAYTOTALTRADESSELL returns the MOVING365DAYTOTALTRADESSELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYTOTALTRADESSELL() int32 {
	if o == nil || isNil(o.MOVING365DAYTOTALTRADESSELL) {
		var ret int32
		return ret
	}
	return *o.MOVING365DAYTOTALTRADESSELL
}

// GetMOVING365DAYTOTALTRADESSELLOk returns a tuple with the MOVING365DAYTOTALTRADESSELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYTOTALTRADESSELLOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING365DAYTOTALTRADESSELL) {
		return nil, false
	}
	return o.MOVING365DAYTOTALTRADESSELL, true
}

// HasMOVING365DAYTOTALTRADESSELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING365DAYTOTALTRADESSELL() bool {
	if o != nil && !isNil(o.MOVING365DAYTOTALTRADESSELL) {
		return true
	}

	return false
}

// SetMOVING365DAYTOTALTRADESSELL gets a reference to the given int32 and assigns it to the MOVING365DAYTOTALTRADESSELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING365DAYTOTALTRADESSELL(v int32) {
	o.MOVING365DAYTOTALTRADESSELL = &v
}

// GetMOVING365DAYTOTALTRADESUNKNOWN returns the MOVING365DAYTOTALTRADESUNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYTOTALTRADESUNKNOWN() int32 {
	if o == nil || isNil(o.MOVING365DAYTOTALTRADESUNKNOWN) {
		var ret int32
		return ret
	}
	return *o.MOVING365DAYTOTALTRADESUNKNOWN
}

// GetMOVING365DAYTOTALTRADESUNKNOWNOk returns a tuple with the MOVING365DAYTOTALTRADESUNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYTOTALTRADESUNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING365DAYTOTALTRADESUNKNOWN) {
		return nil, false
	}
	return o.MOVING365DAYTOTALTRADESUNKNOWN, true
}

// HasMOVING365DAYTOTALTRADESUNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING365DAYTOTALTRADESUNKNOWN() bool {
	if o != nil && !isNil(o.MOVING365DAYTOTALTRADESUNKNOWN) {
		return true
	}

	return false
}

// SetMOVING365DAYTOTALTRADESUNKNOWN gets a reference to the given int32 and assigns it to the MOVING365DAYTOTALTRADESUNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING365DAYTOTALTRADESUNKNOWN(v int32) {
	o.MOVING365DAYTOTALTRADESUNKNOWN = &v
}

// GetMOVING365DAYVOLUME returns the MOVING365DAYVOLUME field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYVOLUME() int32 {
	if o == nil || isNil(o.MOVING365DAYVOLUME) {
		var ret int32
		return ret
	}
	return *o.MOVING365DAYVOLUME
}

// GetMOVING365DAYVOLUMEOk returns a tuple with the MOVING365DAYVOLUME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYVOLUMEOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING365DAYVOLUME) {
		return nil, false
	}
	return o.MOVING365DAYVOLUME, true
}

// HasMOVING365DAYVOLUME returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING365DAYVOLUME() bool {
	if o != nil && !isNil(o.MOVING365DAYVOLUME) {
		return true
	}

	return false
}

// SetMOVING365DAYVOLUME gets a reference to the given int32 and assigns it to the MOVING365DAYVOLUME field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING365DAYVOLUME(v int32) {
	o.MOVING365DAYVOLUME = &v
}

// GetMOVING365DAYVOLUMEBUY returns the MOVING365DAYVOLUMEBUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYVOLUMEBUY() int32 {
	if o == nil || isNil(o.MOVING365DAYVOLUMEBUY) {
		var ret int32
		return ret
	}
	return *o.MOVING365DAYVOLUMEBUY
}

// GetMOVING365DAYVOLUMEBUYOk returns a tuple with the MOVING365DAYVOLUMEBUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYVOLUMEBUYOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING365DAYVOLUMEBUY) {
		return nil, false
	}
	return o.MOVING365DAYVOLUMEBUY, true
}

// HasMOVING365DAYVOLUMEBUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING365DAYVOLUMEBUY() bool {
	if o != nil && !isNil(o.MOVING365DAYVOLUMEBUY) {
		return true
	}

	return false
}

// SetMOVING365DAYVOLUMEBUY gets a reference to the given int32 and assigns it to the MOVING365DAYVOLUMEBUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING365DAYVOLUMEBUY(v int32) {
	o.MOVING365DAYVOLUMEBUY = &v
}

// GetMOVING365DAYVOLUMESELL returns the MOVING365DAYVOLUMESELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYVOLUMESELL() int32 {
	if o == nil || isNil(o.MOVING365DAYVOLUMESELL) {
		var ret int32
		return ret
	}
	return *o.MOVING365DAYVOLUMESELL
}

// GetMOVING365DAYVOLUMESELLOk returns a tuple with the MOVING365DAYVOLUMESELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYVOLUMESELLOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING365DAYVOLUMESELL) {
		return nil, false
	}
	return o.MOVING365DAYVOLUMESELL, true
}

// HasMOVING365DAYVOLUMESELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING365DAYVOLUMESELL() bool {
	if o != nil && !isNil(o.MOVING365DAYVOLUMESELL) {
		return true
	}

	return false
}

// SetMOVING365DAYVOLUMESELL gets a reference to the given int32 and assigns it to the MOVING365DAYVOLUMESELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING365DAYVOLUMESELL(v int32) {
	o.MOVING365DAYVOLUMESELL = &v
}

// GetMOVING365DAYVOLUMEUNKNOWN returns the MOVING365DAYVOLUMEUNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYVOLUMEUNKNOWN() int32 {
	if o == nil || isNil(o.MOVING365DAYVOLUMEUNKNOWN) {
		var ret int32
		return ret
	}
	return *o.MOVING365DAYVOLUMEUNKNOWN
}

// GetMOVING365DAYVOLUMEUNKNOWNOk returns a tuple with the MOVING365DAYVOLUMEUNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING365DAYVOLUMEUNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING365DAYVOLUMEUNKNOWN) {
		return nil, false
	}
	return o.MOVING365DAYVOLUMEUNKNOWN, true
}

// HasMOVING365DAYVOLUMEUNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING365DAYVOLUMEUNKNOWN() bool {
	if o != nil && !isNil(o.MOVING365DAYVOLUMEUNKNOWN) {
		return true
	}

	return false
}

// SetMOVING365DAYVOLUMEUNKNOWN gets a reference to the given int32 and assigns it to the MOVING365DAYVOLUMEUNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING365DAYVOLUMEUNKNOWN(v int32) {
	o.MOVING365DAYVOLUMEUNKNOWN = &v
}

// GetMOVING7DAYHIGH returns the MOVING7DAYHIGH field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYHIGH() int32 {
	if o == nil || isNil(o.MOVING7DAYHIGH) {
		var ret int32
		return ret
	}
	return *o.MOVING7DAYHIGH
}

// GetMOVING7DAYHIGHOk returns a tuple with the MOVING7DAYHIGH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYHIGHOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING7DAYHIGH) {
		return nil, false
	}
	return o.MOVING7DAYHIGH, true
}

// HasMOVING7DAYHIGH returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING7DAYHIGH() bool {
	if o != nil && !isNil(o.MOVING7DAYHIGH) {
		return true
	}

	return false
}

// SetMOVING7DAYHIGH gets a reference to the given int32 and assigns it to the MOVING7DAYHIGH field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING7DAYHIGH(v int32) {
	o.MOVING7DAYHIGH = &v
}

// GetMOVING7DAYLOW returns the MOVING7DAYLOW field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYLOW() int32 {
	if o == nil || isNil(o.MOVING7DAYLOW) {
		var ret int32
		return ret
	}
	return *o.MOVING7DAYLOW
}

// GetMOVING7DAYLOWOk returns a tuple with the MOVING7DAYLOW field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYLOWOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING7DAYLOW) {
		return nil, false
	}
	return o.MOVING7DAYLOW, true
}

// HasMOVING7DAYLOW returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING7DAYLOW() bool {
	if o != nil && !isNil(o.MOVING7DAYLOW) {
		return true
	}

	return false
}

// SetMOVING7DAYLOW gets a reference to the given int32 and assigns it to the MOVING7DAYLOW field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING7DAYLOW(v int32) {
	o.MOVING7DAYLOW = &v
}

// GetMOVING7DAYOPEN returns the MOVING7DAYOPEN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYOPEN() int32 {
	if o == nil || isNil(o.MOVING7DAYOPEN) {
		var ret int32
		return ret
	}
	return *o.MOVING7DAYOPEN
}

// GetMOVING7DAYOPENOk returns a tuple with the MOVING7DAYOPEN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYOPENOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING7DAYOPEN) {
		return nil, false
	}
	return o.MOVING7DAYOPEN, true
}

// HasMOVING7DAYOPEN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING7DAYOPEN() bool {
	if o != nil && !isNil(o.MOVING7DAYOPEN) {
		return true
	}

	return false
}

// SetMOVING7DAYOPEN gets a reference to the given int32 and assigns it to the MOVING7DAYOPEN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING7DAYOPEN(v int32) {
	o.MOVING7DAYOPEN = &v
}

// GetMOVING7DAYQUOTEVOLUME returns the MOVING7DAYQUOTEVOLUME field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYQUOTEVOLUME() int32 {
	if o == nil || isNil(o.MOVING7DAYQUOTEVOLUME) {
		var ret int32
		return ret
	}
	return *o.MOVING7DAYQUOTEVOLUME
}

// GetMOVING7DAYQUOTEVOLUMEOk returns a tuple with the MOVING7DAYQUOTEVOLUME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYQUOTEVOLUMEOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING7DAYQUOTEVOLUME) {
		return nil, false
	}
	return o.MOVING7DAYQUOTEVOLUME, true
}

// HasMOVING7DAYQUOTEVOLUME returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING7DAYQUOTEVOLUME() bool {
	if o != nil && !isNil(o.MOVING7DAYQUOTEVOLUME) {
		return true
	}

	return false
}

// SetMOVING7DAYQUOTEVOLUME gets a reference to the given int32 and assigns it to the MOVING7DAYQUOTEVOLUME field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING7DAYQUOTEVOLUME(v int32) {
	o.MOVING7DAYQUOTEVOLUME = &v
}

// GetMOVING7DAYQUOTEVOLUMEBUY returns the MOVING7DAYQUOTEVOLUMEBUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYQUOTEVOLUMEBUY() int32 {
	if o == nil || isNil(o.MOVING7DAYQUOTEVOLUMEBUY) {
		var ret int32
		return ret
	}
	return *o.MOVING7DAYQUOTEVOLUMEBUY
}

// GetMOVING7DAYQUOTEVOLUMEBUYOk returns a tuple with the MOVING7DAYQUOTEVOLUMEBUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYQUOTEVOLUMEBUYOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING7DAYQUOTEVOLUMEBUY) {
		return nil, false
	}
	return o.MOVING7DAYQUOTEVOLUMEBUY, true
}

// HasMOVING7DAYQUOTEVOLUMEBUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING7DAYQUOTEVOLUMEBUY() bool {
	if o != nil && !isNil(o.MOVING7DAYQUOTEVOLUMEBUY) {
		return true
	}

	return false
}

// SetMOVING7DAYQUOTEVOLUMEBUY gets a reference to the given int32 and assigns it to the MOVING7DAYQUOTEVOLUMEBUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING7DAYQUOTEVOLUMEBUY(v int32) {
	o.MOVING7DAYQUOTEVOLUMEBUY = &v
}

// GetMOVING7DAYQUOTEVOLUMESELL returns the MOVING7DAYQUOTEVOLUMESELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYQUOTEVOLUMESELL() int32 {
	if o == nil || isNil(o.MOVING7DAYQUOTEVOLUMESELL) {
		var ret int32
		return ret
	}
	return *o.MOVING7DAYQUOTEVOLUMESELL
}

// GetMOVING7DAYQUOTEVOLUMESELLOk returns a tuple with the MOVING7DAYQUOTEVOLUMESELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYQUOTEVOLUMESELLOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING7DAYQUOTEVOLUMESELL) {
		return nil, false
	}
	return o.MOVING7DAYQUOTEVOLUMESELL, true
}

// HasMOVING7DAYQUOTEVOLUMESELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING7DAYQUOTEVOLUMESELL() bool {
	if o != nil && !isNil(o.MOVING7DAYQUOTEVOLUMESELL) {
		return true
	}

	return false
}

// SetMOVING7DAYQUOTEVOLUMESELL gets a reference to the given int32 and assigns it to the MOVING7DAYQUOTEVOLUMESELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING7DAYQUOTEVOLUMESELL(v int32) {
	o.MOVING7DAYQUOTEVOLUMESELL = &v
}

// GetMOVING7DAYQUOTEVOLUMEUNKNOWN returns the MOVING7DAYQUOTEVOLUMEUNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYQUOTEVOLUMEUNKNOWN() int32 {
	if o == nil || isNil(o.MOVING7DAYQUOTEVOLUMEUNKNOWN) {
		var ret int32
		return ret
	}
	return *o.MOVING7DAYQUOTEVOLUMEUNKNOWN
}

// GetMOVING7DAYQUOTEVOLUMEUNKNOWNOk returns a tuple with the MOVING7DAYQUOTEVOLUMEUNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYQUOTEVOLUMEUNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING7DAYQUOTEVOLUMEUNKNOWN) {
		return nil, false
	}
	return o.MOVING7DAYQUOTEVOLUMEUNKNOWN, true
}

// HasMOVING7DAYQUOTEVOLUMEUNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING7DAYQUOTEVOLUMEUNKNOWN() bool {
	if o != nil && !isNil(o.MOVING7DAYQUOTEVOLUMEUNKNOWN) {
		return true
	}

	return false
}

// SetMOVING7DAYQUOTEVOLUMEUNKNOWN gets a reference to the given int32 and assigns it to the MOVING7DAYQUOTEVOLUMEUNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING7DAYQUOTEVOLUMEUNKNOWN(v int32) {
	o.MOVING7DAYQUOTEVOLUMEUNKNOWN = &v
}

// GetMOVING7DAYTOTALTRADES returns the MOVING7DAYTOTALTRADES field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYTOTALTRADES() int32 {
	if o == nil || isNil(o.MOVING7DAYTOTALTRADES) {
		var ret int32
		return ret
	}
	return *o.MOVING7DAYTOTALTRADES
}

// GetMOVING7DAYTOTALTRADESOk returns a tuple with the MOVING7DAYTOTALTRADES field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYTOTALTRADESOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING7DAYTOTALTRADES) {
		return nil, false
	}
	return o.MOVING7DAYTOTALTRADES, true
}

// HasMOVING7DAYTOTALTRADES returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING7DAYTOTALTRADES() bool {
	if o != nil && !isNil(o.MOVING7DAYTOTALTRADES) {
		return true
	}

	return false
}

// SetMOVING7DAYTOTALTRADES gets a reference to the given int32 and assigns it to the MOVING7DAYTOTALTRADES field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING7DAYTOTALTRADES(v int32) {
	o.MOVING7DAYTOTALTRADES = &v
}

// GetMOVING7DAYTOTALTRADESBUY returns the MOVING7DAYTOTALTRADESBUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYTOTALTRADESBUY() int32 {
	if o == nil || isNil(o.MOVING7DAYTOTALTRADESBUY) {
		var ret int32
		return ret
	}
	return *o.MOVING7DAYTOTALTRADESBUY
}

// GetMOVING7DAYTOTALTRADESBUYOk returns a tuple with the MOVING7DAYTOTALTRADESBUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYTOTALTRADESBUYOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING7DAYTOTALTRADESBUY) {
		return nil, false
	}
	return o.MOVING7DAYTOTALTRADESBUY, true
}

// HasMOVING7DAYTOTALTRADESBUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING7DAYTOTALTRADESBUY() bool {
	if o != nil && !isNil(o.MOVING7DAYTOTALTRADESBUY) {
		return true
	}

	return false
}

// SetMOVING7DAYTOTALTRADESBUY gets a reference to the given int32 and assigns it to the MOVING7DAYTOTALTRADESBUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING7DAYTOTALTRADESBUY(v int32) {
	o.MOVING7DAYTOTALTRADESBUY = &v
}

// GetMOVING7DAYTOTALTRADESSELL returns the MOVING7DAYTOTALTRADESSELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYTOTALTRADESSELL() int32 {
	if o == nil || isNil(o.MOVING7DAYTOTALTRADESSELL) {
		var ret int32
		return ret
	}
	return *o.MOVING7DAYTOTALTRADESSELL
}

// GetMOVING7DAYTOTALTRADESSELLOk returns a tuple with the MOVING7DAYTOTALTRADESSELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYTOTALTRADESSELLOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING7DAYTOTALTRADESSELL) {
		return nil, false
	}
	return o.MOVING7DAYTOTALTRADESSELL, true
}

// HasMOVING7DAYTOTALTRADESSELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING7DAYTOTALTRADESSELL() bool {
	if o != nil && !isNil(o.MOVING7DAYTOTALTRADESSELL) {
		return true
	}

	return false
}

// SetMOVING7DAYTOTALTRADESSELL gets a reference to the given int32 and assigns it to the MOVING7DAYTOTALTRADESSELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING7DAYTOTALTRADESSELL(v int32) {
	o.MOVING7DAYTOTALTRADESSELL = &v
}

// GetMOVING7DAYTOTALTRADESUNKNOWN returns the MOVING7DAYTOTALTRADESUNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYTOTALTRADESUNKNOWN() int32 {
	if o == nil || isNil(o.MOVING7DAYTOTALTRADESUNKNOWN) {
		var ret int32
		return ret
	}
	return *o.MOVING7DAYTOTALTRADESUNKNOWN
}

// GetMOVING7DAYTOTALTRADESUNKNOWNOk returns a tuple with the MOVING7DAYTOTALTRADESUNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYTOTALTRADESUNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING7DAYTOTALTRADESUNKNOWN) {
		return nil, false
	}
	return o.MOVING7DAYTOTALTRADESUNKNOWN, true
}

// HasMOVING7DAYTOTALTRADESUNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING7DAYTOTALTRADESUNKNOWN() bool {
	if o != nil && !isNil(o.MOVING7DAYTOTALTRADESUNKNOWN) {
		return true
	}

	return false
}

// SetMOVING7DAYTOTALTRADESUNKNOWN gets a reference to the given int32 and assigns it to the MOVING7DAYTOTALTRADESUNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING7DAYTOTALTRADESUNKNOWN(v int32) {
	o.MOVING7DAYTOTALTRADESUNKNOWN = &v
}

// GetMOVING7DAYVOLUME returns the MOVING7DAYVOLUME field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYVOLUME() int32 {
	if o == nil || isNil(o.MOVING7DAYVOLUME) {
		var ret int32
		return ret
	}
	return *o.MOVING7DAYVOLUME
}

// GetMOVING7DAYVOLUMEOk returns a tuple with the MOVING7DAYVOLUME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYVOLUMEOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING7DAYVOLUME) {
		return nil, false
	}
	return o.MOVING7DAYVOLUME, true
}

// HasMOVING7DAYVOLUME returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING7DAYVOLUME() bool {
	if o != nil && !isNil(o.MOVING7DAYVOLUME) {
		return true
	}

	return false
}

// SetMOVING7DAYVOLUME gets a reference to the given int32 and assigns it to the MOVING7DAYVOLUME field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING7DAYVOLUME(v int32) {
	o.MOVING7DAYVOLUME = &v
}

// GetMOVING7DAYVOLUMEBUY returns the MOVING7DAYVOLUMEBUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYVOLUMEBUY() int32 {
	if o == nil || isNil(o.MOVING7DAYVOLUMEBUY) {
		var ret int32
		return ret
	}
	return *o.MOVING7DAYVOLUMEBUY
}

// GetMOVING7DAYVOLUMEBUYOk returns a tuple with the MOVING7DAYVOLUMEBUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYVOLUMEBUYOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING7DAYVOLUMEBUY) {
		return nil, false
	}
	return o.MOVING7DAYVOLUMEBUY, true
}

// HasMOVING7DAYVOLUMEBUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING7DAYVOLUMEBUY() bool {
	if o != nil && !isNil(o.MOVING7DAYVOLUMEBUY) {
		return true
	}

	return false
}

// SetMOVING7DAYVOLUMEBUY gets a reference to the given int32 and assigns it to the MOVING7DAYVOLUMEBUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING7DAYVOLUMEBUY(v int32) {
	o.MOVING7DAYVOLUMEBUY = &v
}

// GetMOVING7DAYVOLUMESELL returns the MOVING7DAYVOLUMESELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYVOLUMESELL() int32 {
	if o == nil || isNil(o.MOVING7DAYVOLUMESELL) {
		var ret int32
		return ret
	}
	return *o.MOVING7DAYVOLUMESELL
}

// GetMOVING7DAYVOLUMESELLOk returns a tuple with the MOVING7DAYVOLUMESELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYVOLUMESELLOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING7DAYVOLUMESELL) {
		return nil, false
	}
	return o.MOVING7DAYVOLUMESELL, true
}

// HasMOVING7DAYVOLUMESELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING7DAYVOLUMESELL() bool {
	if o != nil && !isNil(o.MOVING7DAYVOLUMESELL) {
		return true
	}

	return false
}

// SetMOVING7DAYVOLUMESELL gets a reference to the given int32 and assigns it to the MOVING7DAYVOLUMESELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING7DAYVOLUMESELL(v int32) {
	o.MOVING7DAYVOLUMESELL = &v
}

// GetMOVING7DAYVOLUMEUNKNOWN returns the MOVING7DAYVOLUMEUNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYVOLUMEUNKNOWN() int32 {
	if o == nil || isNil(o.MOVING7DAYVOLUMEUNKNOWN) {
		var ret int32
		return ret
	}
	return *o.MOVING7DAYVOLUMEUNKNOWN
}

// GetMOVING7DAYVOLUMEUNKNOWNOk returns a tuple with the MOVING7DAYVOLUMEUNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING7DAYVOLUMEUNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING7DAYVOLUMEUNKNOWN) {
		return nil, false
	}
	return o.MOVING7DAYVOLUMEUNKNOWN, true
}

// HasMOVING7DAYVOLUMEUNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING7DAYVOLUMEUNKNOWN() bool {
	if o != nil && !isNil(o.MOVING7DAYVOLUMEUNKNOWN) {
		return true
	}

	return false
}

// SetMOVING7DAYVOLUMEUNKNOWN gets a reference to the given int32 and assigns it to the MOVING7DAYVOLUMEUNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING7DAYVOLUMEUNKNOWN(v int32) {
	o.MOVING7DAYVOLUMEUNKNOWN = &v
}

// GetMOVING90DAYHIGH returns the MOVING90DAYHIGH field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYHIGH() int32 {
	if o == nil || isNil(o.MOVING90DAYHIGH) {
		var ret int32
		return ret
	}
	return *o.MOVING90DAYHIGH
}

// GetMOVING90DAYHIGHOk returns a tuple with the MOVING90DAYHIGH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYHIGHOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING90DAYHIGH) {
		return nil, false
	}
	return o.MOVING90DAYHIGH, true
}

// HasMOVING90DAYHIGH returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING90DAYHIGH() bool {
	if o != nil && !isNil(o.MOVING90DAYHIGH) {
		return true
	}

	return false
}

// SetMOVING90DAYHIGH gets a reference to the given int32 and assigns it to the MOVING90DAYHIGH field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING90DAYHIGH(v int32) {
	o.MOVING90DAYHIGH = &v
}

// GetMOVING90DAYLOW returns the MOVING90DAYLOW field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYLOW() int32 {
	if o == nil || isNil(o.MOVING90DAYLOW) {
		var ret int32
		return ret
	}
	return *o.MOVING90DAYLOW
}

// GetMOVING90DAYLOWOk returns a tuple with the MOVING90DAYLOW field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYLOWOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING90DAYLOW) {
		return nil, false
	}
	return o.MOVING90DAYLOW, true
}

// HasMOVING90DAYLOW returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING90DAYLOW() bool {
	if o != nil && !isNil(o.MOVING90DAYLOW) {
		return true
	}

	return false
}

// SetMOVING90DAYLOW gets a reference to the given int32 and assigns it to the MOVING90DAYLOW field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING90DAYLOW(v int32) {
	o.MOVING90DAYLOW = &v
}

// GetMOVING90DAYOPEN returns the MOVING90DAYOPEN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYOPEN() int32 {
	if o == nil || isNil(o.MOVING90DAYOPEN) {
		var ret int32
		return ret
	}
	return *o.MOVING90DAYOPEN
}

// GetMOVING90DAYOPENOk returns a tuple with the MOVING90DAYOPEN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYOPENOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING90DAYOPEN) {
		return nil, false
	}
	return o.MOVING90DAYOPEN, true
}

// HasMOVING90DAYOPEN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING90DAYOPEN() bool {
	if o != nil && !isNil(o.MOVING90DAYOPEN) {
		return true
	}

	return false
}

// SetMOVING90DAYOPEN gets a reference to the given int32 and assigns it to the MOVING90DAYOPEN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING90DAYOPEN(v int32) {
	o.MOVING90DAYOPEN = &v
}

// GetMOVING90DAYQUOTEVOLUME returns the MOVING90DAYQUOTEVOLUME field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYQUOTEVOLUME() int32 {
	if o == nil || isNil(o.MOVING90DAYQUOTEVOLUME) {
		var ret int32
		return ret
	}
	return *o.MOVING90DAYQUOTEVOLUME
}

// GetMOVING90DAYQUOTEVOLUMEOk returns a tuple with the MOVING90DAYQUOTEVOLUME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYQUOTEVOLUMEOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING90DAYQUOTEVOLUME) {
		return nil, false
	}
	return o.MOVING90DAYQUOTEVOLUME, true
}

// HasMOVING90DAYQUOTEVOLUME returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING90DAYQUOTEVOLUME() bool {
	if o != nil && !isNil(o.MOVING90DAYQUOTEVOLUME) {
		return true
	}

	return false
}

// SetMOVING90DAYQUOTEVOLUME gets a reference to the given int32 and assigns it to the MOVING90DAYQUOTEVOLUME field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING90DAYQUOTEVOLUME(v int32) {
	o.MOVING90DAYQUOTEVOLUME = &v
}

// GetMOVING90DAYQUOTEVOLUMEBUY returns the MOVING90DAYQUOTEVOLUMEBUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYQUOTEVOLUMEBUY() int32 {
	if o == nil || isNil(o.MOVING90DAYQUOTEVOLUMEBUY) {
		var ret int32
		return ret
	}
	return *o.MOVING90DAYQUOTEVOLUMEBUY
}

// GetMOVING90DAYQUOTEVOLUMEBUYOk returns a tuple with the MOVING90DAYQUOTEVOLUMEBUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYQUOTEVOLUMEBUYOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING90DAYQUOTEVOLUMEBUY) {
		return nil, false
	}
	return o.MOVING90DAYQUOTEVOLUMEBUY, true
}

// HasMOVING90DAYQUOTEVOLUMEBUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING90DAYQUOTEVOLUMEBUY() bool {
	if o != nil && !isNil(o.MOVING90DAYQUOTEVOLUMEBUY) {
		return true
	}

	return false
}

// SetMOVING90DAYQUOTEVOLUMEBUY gets a reference to the given int32 and assigns it to the MOVING90DAYQUOTEVOLUMEBUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING90DAYQUOTEVOLUMEBUY(v int32) {
	o.MOVING90DAYQUOTEVOLUMEBUY = &v
}

// GetMOVING90DAYQUOTEVOLUMESELL returns the MOVING90DAYQUOTEVOLUMESELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYQUOTEVOLUMESELL() int32 {
	if o == nil || isNil(o.MOVING90DAYQUOTEVOLUMESELL) {
		var ret int32
		return ret
	}
	return *o.MOVING90DAYQUOTEVOLUMESELL
}

// GetMOVING90DAYQUOTEVOLUMESELLOk returns a tuple with the MOVING90DAYQUOTEVOLUMESELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYQUOTEVOLUMESELLOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING90DAYQUOTEVOLUMESELL) {
		return nil, false
	}
	return o.MOVING90DAYQUOTEVOLUMESELL, true
}

// HasMOVING90DAYQUOTEVOLUMESELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING90DAYQUOTEVOLUMESELL() bool {
	if o != nil && !isNil(o.MOVING90DAYQUOTEVOLUMESELL) {
		return true
	}

	return false
}

// SetMOVING90DAYQUOTEVOLUMESELL gets a reference to the given int32 and assigns it to the MOVING90DAYQUOTEVOLUMESELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING90DAYQUOTEVOLUMESELL(v int32) {
	o.MOVING90DAYQUOTEVOLUMESELL = &v
}

// GetMOVING90DAYQUOTEVOLUMEUNKNOWN returns the MOVING90DAYQUOTEVOLUMEUNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYQUOTEVOLUMEUNKNOWN() int32 {
	if o == nil || isNil(o.MOVING90DAYQUOTEVOLUMEUNKNOWN) {
		var ret int32
		return ret
	}
	return *o.MOVING90DAYQUOTEVOLUMEUNKNOWN
}

// GetMOVING90DAYQUOTEVOLUMEUNKNOWNOk returns a tuple with the MOVING90DAYQUOTEVOLUMEUNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYQUOTEVOLUMEUNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING90DAYQUOTEVOLUMEUNKNOWN) {
		return nil, false
	}
	return o.MOVING90DAYQUOTEVOLUMEUNKNOWN, true
}

// HasMOVING90DAYQUOTEVOLUMEUNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING90DAYQUOTEVOLUMEUNKNOWN() bool {
	if o != nil && !isNil(o.MOVING90DAYQUOTEVOLUMEUNKNOWN) {
		return true
	}

	return false
}

// SetMOVING90DAYQUOTEVOLUMEUNKNOWN gets a reference to the given int32 and assigns it to the MOVING90DAYQUOTEVOLUMEUNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING90DAYQUOTEVOLUMEUNKNOWN(v int32) {
	o.MOVING90DAYQUOTEVOLUMEUNKNOWN = &v
}

// GetMOVING90DAYTOTALTRADES returns the MOVING90DAYTOTALTRADES field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYTOTALTRADES() int32 {
	if o == nil || isNil(o.MOVING90DAYTOTALTRADES) {
		var ret int32
		return ret
	}
	return *o.MOVING90DAYTOTALTRADES
}

// GetMOVING90DAYTOTALTRADESOk returns a tuple with the MOVING90DAYTOTALTRADES field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYTOTALTRADESOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING90DAYTOTALTRADES) {
		return nil, false
	}
	return o.MOVING90DAYTOTALTRADES, true
}

// HasMOVING90DAYTOTALTRADES returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING90DAYTOTALTRADES() bool {
	if o != nil && !isNil(o.MOVING90DAYTOTALTRADES) {
		return true
	}

	return false
}

// SetMOVING90DAYTOTALTRADES gets a reference to the given int32 and assigns it to the MOVING90DAYTOTALTRADES field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING90DAYTOTALTRADES(v int32) {
	o.MOVING90DAYTOTALTRADES = &v
}

// GetMOVING90DAYTOTALTRADESBUY returns the MOVING90DAYTOTALTRADESBUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYTOTALTRADESBUY() int32 {
	if o == nil || isNil(o.MOVING90DAYTOTALTRADESBUY) {
		var ret int32
		return ret
	}
	return *o.MOVING90DAYTOTALTRADESBUY
}

// GetMOVING90DAYTOTALTRADESBUYOk returns a tuple with the MOVING90DAYTOTALTRADESBUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYTOTALTRADESBUYOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING90DAYTOTALTRADESBUY) {
		return nil, false
	}
	return o.MOVING90DAYTOTALTRADESBUY, true
}

// HasMOVING90DAYTOTALTRADESBUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING90DAYTOTALTRADESBUY() bool {
	if o != nil && !isNil(o.MOVING90DAYTOTALTRADESBUY) {
		return true
	}

	return false
}

// SetMOVING90DAYTOTALTRADESBUY gets a reference to the given int32 and assigns it to the MOVING90DAYTOTALTRADESBUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING90DAYTOTALTRADESBUY(v int32) {
	o.MOVING90DAYTOTALTRADESBUY = &v
}

// GetMOVING90DAYTOTALTRADESSELL returns the MOVING90DAYTOTALTRADESSELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYTOTALTRADESSELL() int32 {
	if o == nil || isNil(o.MOVING90DAYTOTALTRADESSELL) {
		var ret int32
		return ret
	}
	return *o.MOVING90DAYTOTALTRADESSELL
}

// GetMOVING90DAYTOTALTRADESSELLOk returns a tuple with the MOVING90DAYTOTALTRADESSELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYTOTALTRADESSELLOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING90DAYTOTALTRADESSELL) {
		return nil, false
	}
	return o.MOVING90DAYTOTALTRADESSELL, true
}

// HasMOVING90DAYTOTALTRADESSELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING90DAYTOTALTRADESSELL() bool {
	if o != nil && !isNil(o.MOVING90DAYTOTALTRADESSELL) {
		return true
	}

	return false
}

// SetMOVING90DAYTOTALTRADESSELL gets a reference to the given int32 and assigns it to the MOVING90DAYTOTALTRADESSELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING90DAYTOTALTRADESSELL(v int32) {
	o.MOVING90DAYTOTALTRADESSELL = &v
}

// GetMOVING90DAYTOTALTRADESUNKNOWN returns the MOVING90DAYTOTALTRADESUNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYTOTALTRADESUNKNOWN() int32 {
	if o == nil || isNil(o.MOVING90DAYTOTALTRADESUNKNOWN) {
		var ret int32
		return ret
	}
	return *o.MOVING90DAYTOTALTRADESUNKNOWN
}

// GetMOVING90DAYTOTALTRADESUNKNOWNOk returns a tuple with the MOVING90DAYTOTALTRADESUNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYTOTALTRADESUNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING90DAYTOTALTRADESUNKNOWN) {
		return nil, false
	}
	return o.MOVING90DAYTOTALTRADESUNKNOWN, true
}

// HasMOVING90DAYTOTALTRADESUNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING90DAYTOTALTRADESUNKNOWN() bool {
	if o != nil && !isNil(o.MOVING90DAYTOTALTRADESUNKNOWN) {
		return true
	}

	return false
}

// SetMOVING90DAYTOTALTRADESUNKNOWN gets a reference to the given int32 and assigns it to the MOVING90DAYTOTALTRADESUNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING90DAYTOTALTRADESUNKNOWN(v int32) {
	o.MOVING90DAYTOTALTRADESUNKNOWN = &v
}

// GetMOVING90DAYVOLUME returns the MOVING90DAYVOLUME field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYVOLUME() int32 {
	if o == nil || isNil(o.MOVING90DAYVOLUME) {
		var ret int32
		return ret
	}
	return *o.MOVING90DAYVOLUME
}

// GetMOVING90DAYVOLUMEOk returns a tuple with the MOVING90DAYVOLUME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYVOLUMEOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING90DAYVOLUME) {
		return nil, false
	}
	return o.MOVING90DAYVOLUME, true
}

// HasMOVING90DAYVOLUME returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING90DAYVOLUME() bool {
	if o != nil && !isNil(o.MOVING90DAYVOLUME) {
		return true
	}

	return false
}

// SetMOVING90DAYVOLUME gets a reference to the given int32 and assigns it to the MOVING90DAYVOLUME field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING90DAYVOLUME(v int32) {
	o.MOVING90DAYVOLUME = &v
}

// GetMOVING90DAYVOLUMEBUY returns the MOVING90DAYVOLUMEBUY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYVOLUMEBUY() int32 {
	if o == nil || isNil(o.MOVING90DAYVOLUMEBUY) {
		var ret int32
		return ret
	}
	return *o.MOVING90DAYVOLUMEBUY
}

// GetMOVING90DAYVOLUMEBUYOk returns a tuple with the MOVING90DAYVOLUMEBUY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYVOLUMEBUYOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING90DAYVOLUMEBUY) {
		return nil, false
	}
	return o.MOVING90DAYVOLUMEBUY, true
}

// HasMOVING90DAYVOLUMEBUY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING90DAYVOLUMEBUY() bool {
	if o != nil && !isNil(o.MOVING90DAYVOLUMEBUY) {
		return true
	}

	return false
}

// SetMOVING90DAYVOLUMEBUY gets a reference to the given int32 and assigns it to the MOVING90DAYVOLUMEBUY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING90DAYVOLUMEBUY(v int32) {
	o.MOVING90DAYVOLUMEBUY = &v
}

// GetMOVING90DAYVOLUMESELL returns the MOVING90DAYVOLUMESELL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYVOLUMESELL() int32 {
	if o == nil || isNil(o.MOVING90DAYVOLUMESELL) {
		var ret int32
		return ret
	}
	return *o.MOVING90DAYVOLUMESELL
}

// GetMOVING90DAYVOLUMESELLOk returns a tuple with the MOVING90DAYVOLUMESELL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYVOLUMESELLOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING90DAYVOLUMESELL) {
		return nil, false
	}
	return o.MOVING90DAYVOLUMESELL, true
}

// HasMOVING90DAYVOLUMESELL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING90DAYVOLUMESELL() bool {
	if o != nil && !isNil(o.MOVING90DAYVOLUMESELL) {
		return true
	}

	return false
}

// SetMOVING90DAYVOLUMESELL gets a reference to the given int32 and assigns it to the MOVING90DAYVOLUMESELL field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING90DAYVOLUMESELL(v int32) {
	o.MOVING90DAYVOLUMESELL = &v
}

// GetMOVING90DAYVOLUMEUNKNOWN returns the MOVING90DAYVOLUMEUNKNOWN field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYVOLUMEUNKNOWN() int32 {
	if o == nil || isNil(o.MOVING90DAYVOLUMEUNKNOWN) {
		var ret int32
		return ret
	}
	return *o.MOVING90DAYVOLUMEUNKNOWN
}

// GetMOVING90DAYVOLUMEUNKNOWNOk returns a tuple with the MOVING90DAYVOLUMEUNKNOWN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetMOVING90DAYVOLUMEUNKNOWNOk() (*int32, bool) {
	if o == nil || isNil(o.MOVING90DAYVOLUMEUNKNOWN) {
		return nil, false
	}
	return o.MOVING90DAYVOLUMEUNKNOWN, true
}

// HasMOVING90DAYVOLUMEUNKNOWN returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasMOVING90DAYVOLUMEUNKNOWN() bool {
	if o != nil && !isNil(o.MOVING90DAYVOLUMEUNKNOWN) {
		return true
	}

	return false
}

// SetMOVING90DAYVOLUMEUNKNOWN gets a reference to the given int32 and assigns it to the MOVING90DAYVOLUMEUNKNOWN field.
func (o *SPOTINSTRUMENTMARKETDATA) SetMOVING90DAYVOLUMEUNKNOWN(v int32) {
	o.MOVING90DAYVOLUMEUNKNOWN = &v
}

// GetPRICE returns the PRICE field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetPRICE() int32 {
	if o == nil || isNil(o.PRICE) {
		var ret int32
		return ret
	}
	return *o.PRICE
}

// GetPRICEOk returns a tuple with the PRICE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetPRICEOk() (*int32, bool) {
	if o == nil || isNil(o.PRICE) {
		return nil, false
	}
	return o.PRICE, true
}

// HasPRICE returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasPRICE() bool {
	if o != nil && !isNil(o.PRICE) {
		return true
	}

	return false
}

// SetPRICE gets a reference to the given int32 and assigns it to the PRICE field.
func (o *SPOTINSTRUMENTMARKETDATA) SetPRICE(v int32) {
	o.PRICE = &v
}

// GetPRICE_FLAG returns the PRICE_FLAG field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetPRICE_FLAG() string {
	if o == nil || isNil(o.PRICE_FLAG) {
		var ret string
		return ret
	}
	return *o.PRICE_FLAG
}

// GetPRICE_FLAGOk returns a tuple with the PRICE_FLAG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetPRICE_FLAGOk() (*string, bool) {
	if o == nil || isNil(o.PRICE_FLAG) {
		return nil, false
	}
	return o.PRICE_FLAG, true
}

// HasPRICE_FLAG returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasPRICE_FLAG() bool {
	if o != nil && !isNil(o.PRICE_FLAG) {
		return true
	}

	return false
}

// SetPRICE_FLAG gets a reference to the given string and assigns it to the PRICE_FLAG field.
func (o *SPOTINSTRUMENTMARKETDATA) SetPRICE_FLAG(v string) {
	o.PRICE_FLAG = &v
}

// GetPRICE_LAST_UPDATE_TS returns the PRICE_LAST_UPDATE_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetPRICE_LAST_UPDATE_TS() int32 {
	if o == nil || isNil(o.PRICE_LAST_UPDATE_TS) {
		var ret int32
		return ret
	}
	return *o.PRICE_LAST_UPDATE_TS
}

// GetPRICE_LAST_UPDATE_TSOk returns a tuple with the PRICE_LAST_UPDATE_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetPRICE_LAST_UPDATE_TSOk() (*int32, bool) {
	if o == nil || isNil(o.PRICE_LAST_UPDATE_TS) {
		return nil, false
	}
	return o.PRICE_LAST_UPDATE_TS, true
}

// HasPRICE_LAST_UPDATE_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasPRICE_LAST_UPDATE_TS() bool {
	if o != nil && !isNil(o.PRICE_LAST_UPDATE_TS) {
		return true
	}

	return false
}

// SetPRICE_LAST_UPDATE_TS gets a reference to the given int32 and assigns it to the PRICE_LAST_UPDATE_TS field.
func (o *SPOTINSTRUMENTMARKETDATA) SetPRICE_LAST_UPDATE_TS(v int32) {
	o.PRICE_LAST_UPDATE_TS = &v
}

// GetQUOTE returns the QUOTE field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetQUOTE() string {
	if o == nil || isNil(o.QUOTE) {
		var ret string
		return ret
	}
	return *o.QUOTE
}

// GetQUOTEOk returns a tuple with the QUOTE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetQUOTEOk() (*string, bool) {
	if o == nil || isNil(o.QUOTE) {
		return nil, false
	}
	return o.QUOTE, true
}

// HasQUOTE returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasQUOTE() bool {
	if o != nil && !isNil(o.QUOTE) {
		return true
	}

	return false
}

// SetQUOTE gets a reference to the given string and assigns it to the QUOTE field.
func (o *SPOTINSTRUMENTMARKETDATA) SetQUOTE(v string) {
	o.QUOTE = &v
}

// GetTOP_ASK_LAST_UPDATE_TS returns the TOP_ASK_LAST_UPDATE_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetTOP_ASK_LAST_UPDATE_TS() int32 {
	if o == nil || isNil(o.TOP_ASK_LAST_UPDATE_TS) {
		var ret int32
		return ret
	}
	return *o.TOP_ASK_LAST_UPDATE_TS
}

// GetTOP_ASK_LAST_UPDATE_TSOk returns a tuple with the TOP_ASK_LAST_UPDATE_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetTOP_ASK_LAST_UPDATE_TSOk() (*int32, bool) {
	if o == nil || isNil(o.TOP_ASK_LAST_UPDATE_TS) {
		return nil, false
	}
	return o.TOP_ASK_LAST_UPDATE_TS, true
}

// HasTOP_ASK_LAST_UPDATE_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasTOP_ASK_LAST_UPDATE_TS() bool {
	if o != nil && !isNil(o.TOP_ASK_LAST_UPDATE_TS) {
		return true
	}

	return false
}

// SetTOP_ASK_LAST_UPDATE_TS gets a reference to the given int32 and assigns it to the TOP_ASK_LAST_UPDATE_TS field.
func (o *SPOTINSTRUMENTMARKETDATA) SetTOP_ASK_LAST_UPDATE_TS(v int32) {
	o.TOP_ASK_LAST_UPDATE_TS = &v
}

// GetTOP_ASK_PRICE returns the TOP_ASK_PRICE field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetTOP_ASK_PRICE() int32 {
	if o == nil || isNil(o.TOP_ASK_PRICE) {
		var ret int32
		return ret
	}
	return *o.TOP_ASK_PRICE
}

// GetTOP_ASK_PRICEOk returns a tuple with the TOP_ASK_PRICE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetTOP_ASK_PRICEOk() (*int32, bool) {
	if o == nil || isNil(o.TOP_ASK_PRICE) {
		return nil, false
	}
	return o.TOP_ASK_PRICE, true
}

// HasTOP_ASK_PRICE returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasTOP_ASK_PRICE() bool {
	if o != nil && !isNil(o.TOP_ASK_PRICE) {
		return true
	}

	return false
}

// SetTOP_ASK_PRICE gets a reference to the given int32 and assigns it to the TOP_ASK_PRICE field.
func (o *SPOTINSTRUMENTMARKETDATA) SetTOP_ASK_PRICE(v int32) {
	o.TOP_ASK_PRICE = &v
}

// GetTOP_ASK_QUANTITY returns the TOP_ASK_QUANTITY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetTOP_ASK_QUANTITY() int32 {
	if o == nil || isNil(o.TOP_ASK_QUANTITY) {
		var ret int32
		return ret
	}
	return *o.TOP_ASK_QUANTITY
}

// GetTOP_ASK_QUANTITYOk returns a tuple with the TOP_ASK_QUANTITY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetTOP_ASK_QUANTITYOk() (*int32, bool) {
	if o == nil || isNil(o.TOP_ASK_QUANTITY) {
		return nil, false
	}
	return o.TOP_ASK_QUANTITY, true
}

// HasTOP_ASK_QUANTITY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasTOP_ASK_QUANTITY() bool {
	if o != nil && !isNil(o.TOP_ASK_QUANTITY) {
		return true
	}

	return false
}

// SetTOP_ASK_QUANTITY gets a reference to the given int32 and assigns it to the TOP_ASK_QUANTITY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetTOP_ASK_QUANTITY(v int32) {
	o.TOP_ASK_QUANTITY = &v
}

// GetTOP_BID_LAST_UPDATE_TS returns the TOP_BID_LAST_UPDATE_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetTOP_BID_LAST_UPDATE_TS() int32 {
	if o == nil || isNil(o.TOP_BID_LAST_UPDATE_TS) {
		var ret int32
		return ret
	}
	return *o.TOP_BID_LAST_UPDATE_TS
}

// GetTOP_BID_LAST_UPDATE_TSOk returns a tuple with the TOP_BID_LAST_UPDATE_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetTOP_BID_LAST_UPDATE_TSOk() (*int32, bool) {
	if o == nil || isNil(o.TOP_BID_LAST_UPDATE_TS) {
		return nil, false
	}
	return o.TOP_BID_LAST_UPDATE_TS, true
}

// HasTOP_BID_LAST_UPDATE_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasTOP_BID_LAST_UPDATE_TS() bool {
	if o != nil && !isNil(o.TOP_BID_LAST_UPDATE_TS) {
		return true
	}

	return false
}

// SetTOP_BID_LAST_UPDATE_TS gets a reference to the given int32 and assigns it to the TOP_BID_LAST_UPDATE_TS field.
func (o *SPOTINSTRUMENTMARKETDATA) SetTOP_BID_LAST_UPDATE_TS(v int32) {
	o.TOP_BID_LAST_UPDATE_TS = &v
}

// GetTOP_BID_PRICE returns the TOP_BID_PRICE field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetTOP_BID_PRICE() int32 {
	if o == nil || isNil(o.TOP_BID_PRICE) {
		var ret int32
		return ret
	}
	return *o.TOP_BID_PRICE
}

// GetTOP_BID_PRICEOk returns a tuple with the TOP_BID_PRICE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetTOP_BID_PRICEOk() (*int32, bool) {
	if o == nil || isNil(o.TOP_BID_PRICE) {
		return nil, false
	}
	return o.TOP_BID_PRICE, true
}

// HasTOP_BID_PRICE returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasTOP_BID_PRICE() bool {
	if o != nil && !isNil(o.TOP_BID_PRICE) {
		return true
	}

	return false
}

// SetTOP_BID_PRICE gets a reference to the given int32 and assigns it to the TOP_BID_PRICE field.
func (o *SPOTINSTRUMENTMARKETDATA) SetTOP_BID_PRICE(v int32) {
	o.TOP_BID_PRICE = &v
}

// GetTOP_BID_QUANTITY returns the TOP_BID_QUANTITY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetTOP_BID_QUANTITY() int32 {
	if o == nil || isNil(o.TOP_BID_QUANTITY) {
		var ret int32
		return ret
	}
	return *o.TOP_BID_QUANTITY
}

// GetTOP_BID_QUANTITYOk returns a tuple with the TOP_BID_QUANTITY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetTOP_BID_QUANTITYOk() (*int32, bool) {
	if o == nil || isNil(o.TOP_BID_QUANTITY) {
		return nil, false
	}
	return o.TOP_BID_QUANTITY, true
}

// HasTOP_BID_QUANTITY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasTOP_BID_QUANTITY() bool {
	if o != nil && !isNil(o.TOP_BID_QUANTITY) {
		return true
	}

	return false
}

// SetTOP_BID_QUANTITY gets a reference to the given int32 and assigns it to the TOP_BID_QUANTITY field.
func (o *SPOTINSTRUMENTMARKETDATA) SetTOP_BID_QUANTITY(v int32) {
	o.TOP_BID_QUANTITY = &v
}

// GetTYPE returns the TYPE field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMARKETDATA) GetTYPE() string {
	if o == nil || isNil(o.TYPE) {
		var ret string
		return ret
	}
	return *o.TYPE
}

// GetTYPEOk returns a tuple with the TYPE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMARKETDATA) GetTYPEOk() (*string, bool) {
	if o == nil || isNil(o.TYPE) {
		return nil, false
	}
	return o.TYPE, true
}

// HasTYPE returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMARKETDATA) HasTYPE() bool {
	if o != nil && !isNil(o.TYPE) {
		return true
	}

	return false
}

// SetTYPE gets a reference to the given string and assigns it to the TYPE field.
func (o *SPOTINSTRUMENTMARKETDATA) SetTYPE(v string) {
	o.TYPE = &v
}

func (o SPOTINSTRUMENTMARKETDATA) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SPOTINSTRUMENTMARKETDATA) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BASE) {
		toSerialize["BASE"] = o.BASE
	}
	if !isNil(o.CCSEQ) {
		toSerialize["CCSEQ"] = o.CCSEQ
	}
	if !isNil(o.CURRENT_DAY_HIGH) {
		toSerialize["CURRENT_DAY_HIGH"] = o.CURRENT_DAY_HIGH
	}
	if !isNil(o.CURRENT_DAY_LOW) {
		toSerialize["CURRENT_DAY_LOW"] = o.CURRENT_DAY_LOW
	}
	if !isNil(o.CURRENT_DAY_OPEN) {
		toSerialize["CURRENT_DAY_OPEN"] = o.CURRENT_DAY_OPEN
	}
	if !isNil(o.CURRENT_DAY_QUOTE_VOLUME) {
		toSerialize["CURRENT_DAY_QUOTE_VOLUME"] = o.CURRENT_DAY_QUOTE_VOLUME
	}
	if !isNil(o.CURRENT_DAY_QUOTE_VOLUME_BUY) {
		toSerialize["CURRENT_DAY_QUOTE_VOLUME_BUY"] = o.CURRENT_DAY_QUOTE_VOLUME_BUY
	}
	if !isNil(o.CURRENT_DAY_QUOTE_VOLUME_SELL) {
		toSerialize["CURRENT_DAY_QUOTE_VOLUME_SELL"] = o.CURRENT_DAY_QUOTE_VOLUME_SELL
	}
	if !isNil(o.CURRENT_DAY_QUOTE_VOLUME_UNKNOWN) {
		toSerialize["CURRENT_DAY_QUOTE_VOLUME_UNKNOWN"] = o.CURRENT_DAY_QUOTE_VOLUME_UNKNOWN
	}
	if !isNil(o.CURRENT_DAY_TOTAL_TRADES) {
		toSerialize["CURRENT_DAY_TOTAL_TRADES"] = o.CURRENT_DAY_TOTAL_TRADES
	}
	if !isNil(o.CURRENT_DAY_TOTAL_TRADES_BUY) {
		toSerialize["CURRENT_DAY_TOTAL_TRADES_BUY"] = o.CURRENT_DAY_TOTAL_TRADES_BUY
	}
	if !isNil(o.CURRENT_DAY_TOTAL_TRADES_SELL) {
		toSerialize["CURRENT_DAY_TOTAL_TRADES_SELL"] = o.CURRENT_DAY_TOTAL_TRADES_SELL
	}
	if !isNil(o.CURRENT_DAY_TOTAL_TRADES_UNKNOWN) {
		toSerialize["CURRENT_DAY_TOTAL_TRADES_UNKNOWN"] = o.CURRENT_DAY_TOTAL_TRADES_UNKNOWN
	}
	if !isNil(o.CURRENT_DAY_VOLUME) {
		toSerialize["CURRENT_DAY_VOLUME"] = o.CURRENT_DAY_VOLUME
	}
	if !isNil(o.CURRENT_DAY_VOLUME_BUY) {
		toSerialize["CURRENT_DAY_VOLUME_BUY"] = o.CURRENT_DAY_VOLUME_BUY
	}
	if !isNil(o.CURRENT_DAY_VOLUME_SELL) {
		toSerialize["CURRENT_DAY_VOLUME_SELL"] = o.CURRENT_DAY_VOLUME_SELL
	}
	if !isNil(o.CURRENT_DAY_VOLUME_UNKNOWN) {
		toSerialize["CURRENT_DAY_VOLUME_UNKNOWN"] = o.CURRENT_DAY_VOLUME_UNKNOWN
	}
	if !isNil(o.CURRENT_HOUR_HIGH) {
		toSerialize["CURRENT_HOUR_HIGH"] = o.CURRENT_HOUR_HIGH
	}
	if !isNil(o.CURRENT_HOUR_LOW) {
		toSerialize["CURRENT_HOUR_LOW"] = o.CURRENT_HOUR_LOW
	}
	if !isNil(o.CURRENT_HOUR_OPEN) {
		toSerialize["CURRENT_HOUR_OPEN"] = o.CURRENT_HOUR_OPEN
	}
	if !isNil(o.CURRENT_HOUR_QUOTE_VOLUME) {
		toSerialize["CURRENT_HOUR_QUOTE_VOLUME"] = o.CURRENT_HOUR_QUOTE_VOLUME
	}
	if !isNil(o.CURRENT_HOUR_QUOTE_VOLUME_BUY) {
		toSerialize["CURRENT_HOUR_QUOTE_VOLUME_BUY"] = o.CURRENT_HOUR_QUOTE_VOLUME_BUY
	}
	if !isNil(o.CURRENT_HOUR_QUOTE_VOLUME_SELL) {
		toSerialize["CURRENT_HOUR_QUOTE_VOLUME_SELL"] = o.CURRENT_HOUR_QUOTE_VOLUME_SELL
	}
	if !isNil(o.CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN) {
		toSerialize["CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN"] = o.CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN
	}
	if !isNil(o.CURRENT_HOUR_TOTAL_TRADES) {
		toSerialize["CURRENT_HOUR_TOTAL_TRADES"] = o.CURRENT_HOUR_TOTAL_TRADES
	}
	if !isNil(o.CURRENT_HOUR_TOTAL_TRADES_BUY) {
		toSerialize["CURRENT_HOUR_TOTAL_TRADES_BUY"] = o.CURRENT_HOUR_TOTAL_TRADES_BUY
	}
	if !isNil(o.CURRENT_HOUR_TOTAL_TRADES_SELL) {
		toSerialize["CURRENT_HOUR_TOTAL_TRADES_SELL"] = o.CURRENT_HOUR_TOTAL_TRADES_SELL
	}
	if !isNil(o.CURRENT_HOUR_TOTAL_TRADES_UNKNOWN) {
		toSerialize["CURRENT_HOUR_TOTAL_TRADES_UNKNOWN"] = o.CURRENT_HOUR_TOTAL_TRADES_UNKNOWN
	}
	if !isNil(o.CURRENT_HOUR_VOLUME) {
		toSerialize["CURRENT_HOUR_VOLUME"] = o.CURRENT_HOUR_VOLUME
	}
	if !isNil(o.CURRENT_HOUR_VOLUME_BUY) {
		toSerialize["CURRENT_HOUR_VOLUME_BUY"] = o.CURRENT_HOUR_VOLUME_BUY
	}
	if !isNil(o.CURRENT_HOUR_VOLUME_SELL) {
		toSerialize["CURRENT_HOUR_VOLUME_SELL"] = o.CURRENT_HOUR_VOLUME_SELL
	}
	if !isNil(o.CURRENT_HOUR_VOLUME_UNKNOWN) {
		toSerialize["CURRENT_HOUR_VOLUME_UNKNOWN"] = o.CURRENT_HOUR_VOLUME_UNKNOWN
	}
	if !isNil(o.CURRENT_MONTH_HIGH) {
		toSerialize["CURRENT_MONTH_HIGH"] = o.CURRENT_MONTH_HIGH
	}
	if !isNil(o.CURRENT_MONTH_LOW) {
		toSerialize["CURRENT_MONTH_LOW"] = o.CURRENT_MONTH_LOW
	}
	if !isNil(o.CURRENT_MONTH_OPEN) {
		toSerialize["CURRENT_MONTH_OPEN"] = o.CURRENT_MONTH_OPEN
	}
	if !isNil(o.CURRENT_MONTH_QUOTE_VOLUME) {
		toSerialize["CURRENT_MONTH_QUOTE_VOLUME"] = o.CURRENT_MONTH_QUOTE_VOLUME
	}
	if !isNil(o.CURRENT_MONTH_QUOTE_VOLUME_BUY) {
		toSerialize["CURRENT_MONTH_QUOTE_VOLUME_BUY"] = o.CURRENT_MONTH_QUOTE_VOLUME_BUY
	}
	if !isNil(o.CURRENT_MONTH_QUOTE_VOLUME_SELL) {
		toSerialize["CURRENT_MONTH_QUOTE_VOLUME_SELL"] = o.CURRENT_MONTH_QUOTE_VOLUME_SELL
	}
	if !isNil(o.CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN) {
		toSerialize["CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN"] = o.CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN
	}
	if !isNil(o.CURRENT_MONTH_TOTAL_TRADES) {
		toSerialize["CURRENT_MONTH_TOTAL_TRADES"] = o.CURRENT_MONTH_TOTAL_TRADES
	}
	if !isNil(o.CURRENT_MONTH_TOTAL_TRADES_BUY) {
		toSerialize["CURRENT_MONTH_TOTAL_TRADES_BUY"] = o.CURRENT_MONTH_TOTAL_TRADES_BUY
	}
	if !isNil(o.CURRENT_MONTH_TOTAL_TRADES_SELL) {
		toSerialize["CURRENT_MONTH_TOTAL_TRADES_SELL"] = o.CURRENT_MONTH_TOTAL_TRADES_SELL
	}
	if !isNil(o.CURRENT_MONTH_TOTAL_TRADES_UNKNOWN) {
		toSerialize["CURRENT_MONTH_TOTAL_TRADES_UNKNOWN"] = o.CURRENT_MONTH_TOTAL_TRADES_UNKNOWN
	}
	if !isNil(o.CURRENT_MONTH_VOLUME) {
		toSerialize["CURRENT_MONTH_VOLUME"] = o.CURRENT_MONTH_VOLUME
	}
	if !isNil(o.CURRENT_MONTH_VOLUME_BUY) {
		toSerialize["CURRENT_MONTH_VOLUME_BUY"] = o.CURRENT_MONTH_VOLUME_BUY
	}
	if !isNil(o.CURRENT_MONTH_VOLUME_SELL) {
		toSerialize["CURRENT_MONTH_VOLUME_SELL"] = o.CURRENT_MONTH_VOLUME_SELL
	}
	if !isNil(o.CURRENT_MONTH_VOLUME_UNKNOWN) {
		toSerialize["CURRENT_MONTH_VOLUME_UNKNOWN"] = o.CURRENT_MONTH_VOLUME_UNKNOWN
	}
	if !isNil(o.CURRENT_WEEK_HIGH) {
		toSerialize["CURRENT_WEEK_HIGH"] = o.CURRENT_WEEK_HIGH
	}
	if !isNil(o.CURRENT_WEEK_LOW) {
		toSerialize["CURRENT_WEEK_LOW"] = o.CURRENT_WEEK_LOW
	}
	if !isNil(o.CURRENT_WEEK_OPEN) {
		toSerialize["CURRENT_WEEK_OPEN"] = o.CURRENT_WEEK_OPEN
	}
	if !isNil(o.CURRENT_WEEK_QUOTE_VOLUME) {
		toSerialize["CURRENT_WEEK_QUOTE_VOLUME"] = o.CURRENT_WEEK_QUOTE_VOLUME
	}
	if !isNil(o.CURRENT_WEEK_QUOTE_VOLUME_BUY) {
		toSerialize["CURRENT_WEEK_QUOTE_VOLUME_BUY"] = o.CURRENT_WEEK_QUOTE_VOLUME_BUY
	}
	if !isNil(o.CURRENT_WEEK_QUOTE_VOLUME_SELL) {
		toSerialize["CURRENT_WEEK_QUOTE_VOLUME_SELL"] = o.CURRENT_WEEK_QUOTE_VOLUME_SELL
	}
	if !isNil(o.CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN) {
		toSerialize["CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN"] = o.CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN
	}
	if !isNil(o.CURRENT_WEEK_TOTAL_TRADES) {
		toSerialize["CURRENT_WEEK_TOTAL_TRADES"] = o.CURRENT_WEEK_TOTAL_TRADES
	}
	if !isNil(o.CURRENT_WEEK_TOTAL_TRADES_BUY) {
		toSerialize["CURRENT_WEEK_TOTAL_TRADES_BUY"] = o.CURRENT_WEEK_TOTAL_TRADES_BUY
	}
	if !isNil(o.CURRENT_WEEK_TOTAL_TRADES_SELL) {
		toSerialize["CURRENT_WEEK_TOTAL_TRADES_SELL"] = o.CURRENT_WEEK_TOTAL_TRADES_SELL
	}
	if !isNil(o.CURRENT_WEEK_TOTAL_TRADES_UNKNOWN) {
		toSerialize["CURRENT_WEEK_TOTAL_TRADES_UNKNOWN"] = o.CURRENT_WEEK_TOTAL_TRADES_UNKNOWN
	}
	if !isNil(o.CURRENT_WEEK_VOLUME) {
		toSerialize["CURRENT_WEEK_VOLUME"] = o.CURRENT_WEEK_VOLUME
	}
	if !isNil(o.CURRENT_WEEK_VOLUME_BUY) {
		toSerialize["CURRENT_WEEK_VOLUME_BUY"] = o.CURRENT_WEEK_VOLUME_BUY
	}
	if !isNil(o.CURRENT_WEEK_VOLUME_SELL) {
		toSerialize["CURRENT_WEEK_VOLUME_SELL"] = o.CURRENT_WEEK_VOLUME_SELL
	}
	if !isNil(o.CURRENT_WEEK_VOLUME_UNKNOWN) {
		toSerialize["CURRENT_WEEK_VOLUME_UNKNOWN"] = o.CURRENT_WEEK_VOLUME_UNKNOWN
	}
	if !isNil(o.CURRENT_YEAR_HIGH) {
		toSerialize["CURRENT_YEAR_HIGH"] = o.CURRENT_YEAR_HIGH
	}
	if !isNil(o.CURRENT_YEAR_LOW) {
		toSerialize["CURRENT_YEAR_LOW"] = o.CURRENT_YEAR_LOW
	}
	if !isNil(o.CURRENT_YEAR_OPEN) {
		toSerialize["CURRENT_YEAR_OPEN"] = o.CURRENT_YEAR_OPEN
	}
	if !isNil(o.CURRENT_YEAR_QUOTE_VOLUME) {
		toSerialize["CURRENT_YEAR_QUOTE_VOLUME"] = o.CURRENT_YEAR_QUOTE_VOLUME
	}
	if !isNil(o.CURRENT_YEAR_QUOTE_VOLUME_BUY) {
		toSerialize["CURRENT_YEAR_QUOTE_VOLUME_BUY"] = o.CURRENT_YEAR_QUOTE_VOLUME_BUY
	}
	if !isNil(o.CURRENT_YEAR_QUOTE_VOLUME_SELL) {
		toSerialize["CURRENT_YEAR_QUOTE_VOLUME_SELL"] = o.CURRENT_YEAR_QUOTE_VOLUME_SELL
	}
	if !isNil(o.CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN) {
		toSerialize["CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN"] = o.CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN
	}
	if !isNil(o.CURRENT_YEAR_TOTAL_TRADES) {
		toSerialize["CURRENT_YEAR_TOTAL_TRADES"] = o.CURRENT_YEAR_TOTAL_TRADES
	}
	if !isNil(o.CURRENT_YEAR_TOTAL_TRADES_BUY) {
		toSerialize["CURRENT_YEAR_TOTAL_TRADES_BUY"] = o.CURRENT_YEAR_TOTAL_TRADES_BUY
	}
	if !isNil(o.CURRENT_YEAR_TOTAL_TRADES_SELL) {
		toSerialize["CURRENT_YEAR_TOTAL_TRADES_SELL"] = o.CURRENT_YEAR_TOTAL_TRADES_SELL
	}
	if !isNil(o.CURRENT_YEAR_TOTAL_TRADES_UNKNOWN) {
		toSerialize["CURRENT_YEAR_TOTAL_TRADES_UNKNOWN"] = o.CURRENT_YEAR_TOTAL_TRADES_UNKNOWN
	}
	if !isNil(o.CURRENT_YEAR_VOLUME) {
		toSerialize["CURRENT_YEAR_VOLUME"] = o.CURRENT_YEAR_VOLUME
	}
	if !isNil(o.CURRENT_YEAR_VOLUME_BUY) {
		toSerialize["CURRENT_YEAR_VOLUME_BUY"] = o.CURRENT_YEAR_VOLUME_BUY
	}
	if !isNil(o.CURRENT_YEAR_VOLUME_SELL) {
		toSerialize["CURRENT_YEAR_VOLUME_SELL"] = o.CURRENT_YEAR_VOLUME_SELL
	}
	if !isNil(o.CURRENT_YEAR_VOLUME_UNKNOWN) {
		toSerialize["CURRENT_YEAR_VOLUME_UNKNOWN"] = o.CURRENT_YEAR_VOLUME_UNKNOWN
	}
	if !isNil(o.INSTRUMENT) {
		toSerialize["INSTRUMENT"] = o.INSTRUMENT
	}
	if !isNil(o.LAST_PROCESSED_TRADE_CCSEQ) {
		toSerialize["LAST_PROCESSED_TRADE_CCSEQ"] = o.LAST_PROCESSED_TRADE_CCSEQ
	}
	if !isNil(o.LAST_PROCESSED_TRADE_PRICE) {
		toSerialize["LAST_PROCESSED_TRADE_PRICE"] = o.LAST_PROCESSED_TRADE_PRICE
	}
	if !isNil(o.LAST_PROCESSED_TRADE_QUANTITY) {
		toSerialize["LAST_PROCESSED_TRADE_QUANTITY"] = o.LAST_PROCESSED_TRADE_QUANTITY
	}
	if !isNil(o.LAST_PROCESSED_TRADE_QUOTE_QUANTITY) {
		toSerialize["LAST_PROCESSED_TRADE_QUOTE_QUANTITY"] = o.LAST_PROCESSED_TRADE_QUOTE_QUANTITY
	}
	if !isNil(o.LAST_PROCESSED_TRADE_SIDE) {
		toSerialize["LAST_PROCESSED_TRADE_SIDE"] = o.LAST_PROCESSED_TRADE_SIDE
	}
	if !isNil(o.LAST_PROCESSED_TRADE_TS) {
		toSerialize["LAST_PROCESSED_TRADE_TS"] = o.LAST_PROCESSED_TRADE_TS
	}
	if !isNil(o.LAST_TRADE_CCSEQ) {
		toSerialize["LAST_TRADE_CCSEQ"] = o.LAST_TRADE_CCSEQ
	}
	if !isNil(o.LAST_TRADE_ID) {
		toSerialize["LAST_TRADE_ID"] = o.LAST_TRADE_ID
	}
	if !isNil(o.LAST_TRADE_QUANTITY) {
		toSerialize["LAST_TRADE_QUANTITY"] = o.LAST_TRADE_QUANTITY
	}
	if !isNil(o.LAST_TRADE_QUOTE_QUANTITY) {
		toSerialize["LAST_TRADE_QUOTE_QUANTITY"] = o.LAST_TRADE_QUOTE_QUANTITY
	}
	if !isNil(o.LAST_TRADE_SIDE) {
		toSerialize["LAST_TRADE_SIDE"] = o.LAST_TRADE_SIDE
	}
	if !isNil(o.LIFETIME_FIRST_TRADE_TS) {
		toSerialize["LIFETIME_FIRST_TRADE_TS"] = o.LIFETIME_FIRST_TRADE_TS
	}
	if !isNil(o.LIFETIME_HIGH) {
		toSerialize["LIFETIME_HIGH"] = o.LIFETIME_HIGH
	}
	if !isNil(o.LIFETIME_HIGH_TS) {
		toSerialize["LIFETIME_HIGH_TS"] = o.LIFETIME_HIGH_TS
	}
	if !isNil(o.LIFETIME_LOW) {
		toSerialize["LIFETIME_LOW"] = o.LIFETIME_LOW
	}
	if !isNil(o.LIFETIME_LOW_TS) {
		toSerialize["LIFETIME_LOW_TS"] = o.LIFETIME_LOW_TS
	}
	if !isNil(o.LIFETIME_OPEN) {
		toSerialize["LIFETIME_OPEN"] = o.LIFETIME_OPEN
	}
	if !isNil(o.LIFETIME_QUOTE_VOLUME) {
		toSerialize["LIFETIME_QUOTE_VOLUME"] = o.LIFETIME_QUOTE_VOLUME
	}
	if !isNil(o.LIFETIME_QUOTE_VOLUME_BUY) {
		toSerialize["LIFETIME_QUOTE_VOLUME_BUY"] = o.LIFETIME_QUOTE_VOLUME_BUY
	}
	if !isNil(o.LIFETIME_QUOTE_VOLUME_SELL) {
		toSerialize["LIFETIME_QUOTE_VOLUME_SELL"] = o.LIFETIME_QUOTE_VOLUME_SELL
	}
	if !isNil(o.LIFETIME_QUOTE_VOLUME_UNKNOWN) {
		toSerialize["LIFETIME_QUOTE_VOLUME_UNKNOWN"] = o.LIFETIME_QUOTE_VOLUME_UNKNOWN
	}
	if !isNil(o.LIFETIME_TOTAL_TRADES) {
		toSerialize["LIFETIME_TOTAL_TRADES"] = o.LIFETIME_TOTAL_TRADES
	}
	if !isNil(o.LIFETIME_TOTAL_TRADES_BUY) {
		toSerialize["LIFETIME_TOTAL_TRADES_BUY"] = o.LIFETIME_TOTAL_TRADES_BUY
	}
	if !isNil(o.LIFETIME_TOTAL_TRADES_SELL) {
		toSerialize["LIFETIME_TOTAL_TRADES_SELL"] = o.LIFETIME_TOTAL_TRADES_SELL
	}
	if !isNil(o.LIFETIME_TOTAL_TRADES_UNKNOWN) {
		toSerialize["LIFETIME_TOTAL_TRADES_UNKNOWN"] = o.LIFETIME_TOTAL_TRADES_UNKNOWN
	}
	if !isNil(o.LIFETIME_VOLUME) {
		toSerialize["LIFETIME_VOLUME"] = o.LIFETIME_VOLUME
	}
	if !isNil(o.LIFETIME_VOLUME_BUY) {
		toSerialize["LIFETIME_VOLUME_BUY"] = o.LIFETIME_VOLUME_BUY
	}
	if !isNil(o.LIFETIME_VOLUME_SELL) {
		toSerialize["LIFETIME_VOLUME_SELL"] = o.LIFETIME_VOLUME_SELL
	}
	if !isNil(o.LIFETIME_VOLUME_UNKNOWN) {
		toSerialize["LIFETIME_VOLUME_UNKNOWN"] = o.LIFETIME_VOLUME_UNKNOWN
	}
	if !isNil(o.MAPPED_INSTRUMENT) {
		toSerialize["MAPPED_INSTRUMENT"] = o.MAPPED_INSTRUMENT
	}
	if !isNil(o.MARKET) {
		toSerialize["MARKET"] = o.MARKET
	}
	if !isNil(o.MOVING180DAYHIGH) {
		toSerialize["MOVING_180_DAY_HIGH"] = o.MOVING180DAYHIGH
	}
	if !isNil(o.MOVING180DAYLOW) {
		toSerialize["MOVING_180_DAY_LOW"] = o.MOVING180DAYLOW
	}
	if !isNil(o.MOVING180DAYOPEN) {
		toSerialize["MOVING_180_DAY_OPEN"] = o.MOVING180DAYOPEN
	}
	if !isNil(o.MOVING180DAYQUOTEVOLUME) {
		toSerialize["MOVING_180_DAY_QUOTE_VOLUME"] = o.MOVING180DAYQUOTEVOLUME
	}
	if !isNil(o.MOVING180DAYQUOTEVOLUMEBUY) {
		toSerialize["MOVING_180_DAY_QUOTE_VOLUME_BUY"] = o.MOVING180DAYQUOTEVOLUMEBUY
	}
	if !isNil(o.MOVING180DAYQUOTEVOLUMESELL) {
		toSerialize["MOVING_180_DAY_QUOTE_VOLUME_SELL"] = o.MOVING180DAYQUOTEVOLUMESELL
	}
	if !isNil(o.MOVING180DAYQUOTEVOLUMEUNKNOWN) {
		toSerialize["MOVING_180_DAY_QUOTE_VOLUME_UNKNOWN"] = o.MOVING180DAYQUOTEVOLUMEUNKNOWN
	}
	if !isNil(o.MOVING180DAYTOTALTRADES) {
		toSerialize["MOVING_180_DAY_TOTAL_TRADES"] = o.MOVING180DAYTOTALTRADES
	}
	if !isNil(o.MOVING180DAYTOTALTRADESBUY) {
		toSerialize["MOVING_180_DAY_TOTAL_TRADES_BUY"] = o.MOVING180DAYTOTALTRADESBUY
	}
	if !isNil(o.MOVING180DAYTOTALTRADESSELL) {
		toSerialize["MOVING_180_DAY_TOTAL_TRADES_SELL"] = o.MOVING180DAYTOTALTRADESSELL
	}
	if !isNil(o.MOVING180DAYTOTALTRADESUNKNOWN) {
		toSerialize["MOVING_180_DAY_TOTAL_TRADES_UNKNOWN"] = o.MOVING180DAYTOTALTRADESUNKNOWN
	}
	if !isNil(o.MOVING180DAYVOLUME) {
		toSerialize["MOVING_180_DAY_VOLUME"] = o.MOVING180DAYVOLUME
	}
	if !isNil(o.MOVING180DAYVOLUMEBUY) {
		toSerialize["MOVING_180_DAY_VOLUME_BUY"] = o.MOVING180DAYVOLUMEBUY
	}
	if !isNil(o.MOVING180DAYVOLUMESELL) {
		toSerialize["MOVING_180_DAY_VOLUME_SELL"] = o.MOVING180DAYVOLUMESELL
	}
	if !isNil(o.MOVING180DAYVOLUMEUNKNOWN) {
		toSerialize["MOVING_180_DAY_VOLUME_UNKNOWN"] = o.MOVING180DAYVOLUMEUNKNOWN
	}
	if !isNil(o.MOVING24HOURHIGH) {
		toSerialize["MOVING_24_HOUR_HIGH"] = o.MOVING24HOURHIGH
	}
	if !isNil(o.MOVING24HOURLOW) {
		toSerialize["MOVING_24_HOUR_LOW"] = o.MOVING24HOURLOW
	}
	if !isNil(o.MOVING24HOUROPEN) {
		toSerialize["MOVING_24_HOUR_OPEN"] = o.MOVING24HOUROPEN
	}
	if !isNil(o.MOVING24HOURQUOTEVOLUME) {
		toSerialize["MOVING_24_HOUR_QUOTE_VOLUME"] = o.MOVING24HOURQUOTEVOLUME
	}
	if !isNil(o.MOVING24HOURQUOTEVOLUMEBUY) {
		toSerialize["MOVING_24_HOUR_QUOTE_VOLUME_BUY"] = o.MOVING24HOURQUOTEVOLUMEBUY
	}
	if !isNil(o.MOVING24HOURQUOTEVOLUMESELL) {
		toSerialize["MOVING_24_HOUR_QUOTE_VOLUME_SELL"] = o.MOVING24HOURQUOTEVOLUMESELL
	}
	if !isNil(o.MOVING24HOURQUOTEVOLUMEUNKNOWN) {
		toSerialize["MOVING_24_HOUR_QUOTE_VOLUME_UNKNOWN"] = o.MOVING24HOURQUOTEVOLUMEUNKNOWN
	}
	if !isNil(o.MOVING24HOURTOTALTRADES) {
		toSerialize["MOVING_24_HOUR_TOTAL_TRADES"] = o.MOVING24HOURTOTALTRADES
	}
	if !isNil(o.MOVING24HOURTOTALTRADESBUY) {
		toSerialize["MOVING_24_HOUR_TOTAL_TRADES_BUY"] = o.MOVING24HOURTOTALTRADESBUY
	}
	if !isNil(o.MOVING24HOURTOTALTRADESSELL) {
		toSerialize["MOVING_24_HOUR_TOTAL_TRADES_SELL"] = o.MOVING24HOURTOTALTRADESSELL
	}
	if !isNil(o.MOVING24HOURTOTALTRADESUNKNOWN) {
		toSerialize["MOVING_24_HOUR_TOTAL_TRADES_UNKNOWN"] = o.MOVING24HOURTOTALTRADESUNKNOWN
	}
	if !isNil(o.MOVING24HOURVOLUME) {
		toSerialize["MOVING_24_HOUR_VOLUME"] = o.MOVING24HOURVOLUME
	}
	if !isNil(o.MOVING24HOURVOLUMEBUY) {
		toSerialize["MOVING_24_HOUR_VOLUME_BUY"] = o.MOVING24HOURVOLUMEBUY
	}
	if !isNil(o.MOVING24HOURVOLUMESELL) {
		toSerialize["MOVING_24_HOUR_VOLUME_SELL"] = o.MOVING24HOURVOLUMESELL
	}
	if !isNil(o.MOVING24HOURVOLUMEUNKNOWN) {
		toSerialize["MOVING_24_HOUR_VOLUME_UNKNOWN"] = o.MOVING24HOURVOLUMEUNKNOWN
	}
	if !isNil(o.MOVING30DAYHIGH) {
		toSerialize["MOVING_30_DAY_HIGH"] = o.MOVING30DAYHIGH
	}
	if !isNil(o.MOVING30DAYLOW) {
		toSerialize["MOVING_30_DAY_LOW"] = o.MOVING30DAYLOW
	}
	if !isNil(o.MOVING30DAYOPEN) {
		toSerialize["MOVING_30_DAY_OPEN"] = o.MOVING30DAYOPEN
	}
	if !isNil(o.MOVING30DAYQUOTEVOLUME) {
		toSerialize["MOVING_30_DAY_QUOTE_VOLUME"] = o.MOVING30DAYQUOTEVOLUME
	}
	if !isNil(o.MOVING30DAYQUOTEVOLUMEBUY) {
		toSerialize["MOVING_30_DAY_QUOTE_VOLUME_BUY"] = o.MOVING30DAYQUOTEVOLUMEBUY
	}
	if !isNil(o.MOVING30DAYQUOTEVOLUMESELL) {
		toSerialize["MOVING_30_DAY_QUOTE_VOLUME_SELL"] = o.MOVING30DAYQUOTEVOLUMESELL
	}
	if !isNil(o.MOVING30DAYQUOTEVOLUMEUNKNOWN) {
		toSerialize["MOVING_30_DAY_QUOTE_VOLUME_UNKNOWN"] = o.MOVING30DAYQUOTEVOLUMEUNKNOWN
	}
	if !isNil(o.MOVING30DAYTOTALTRADES) {
		toSerialize["MOVING_30_DAY_TOTAL_TRADES"] = o.MOVING30DAYTOTALTRADES
	}
	if !isNil(o.MOVING30DAYTOTALTRADESBUY) {
		toSerialize["MOVING_30_DAY_TOTAL_TRADES_BUY"] = o.MOVING30DAYTOTALTRADESBUY
	}
	if !isNil(o.MOVING30DAYTOTALTRADESSELL) {
		toSerialize["MOVING_30_DAY_TOTAL_TRADES_SELL"] = o.MOVING30DAYTOTALTRADESSELL
	}
	if !isNil(o.MOVING30DAYTOTALTRADESUNKNOWN) {
		toSerialize["MOVING_30_DAY_TOTAL_TRADES_UNKNOWN"] = o.MOVING30DAYTOTALTRADESUNKNOWN
	}
	if !isNil(o.MOVING30DAYVOLUME) {
		toSerialize["MOVING_30_DAY_VOLUME"] = o.MOVING30DAYVOLUME
	}
	if !isNil(o.MOVING30DAYVOLUMEBUY) {
		toSerialize["MOVING_30_DAY_VOLUME_BUY"] = o.MOVING30DAYVOLUMEBUY
	}
	if !isNil(o.MOVING30DAYVOLUMESELL) {
		toSerialize["MOVING_30_DAY_VOLUME_SELL"] = o.MOVING30DAYVOLUMESELL
	}
	if !isNil(o.MOVING30DAYVOLUMEUNKNOWN) {
		toSerialize["MOVING_30_DAY_VOLUME_UNKNOWN"] = o.MOVING30DAYVOLUMEUNKNOWN
	}
	if !isNil(o.MOVING365DAYHIGH) {
		toSerialize["MOVING_365_DAY_HIGH"] = o.MOVING365DAYHIGH
	}
	if !isNil(o.MOVING365DAYLOW) {
		toSerialize["MOVING_365_DAY_LOW"] = o.MOVING365DAYLOW
	}
	if !isNil(o.MOVING365DAYOPEN) {
		toSerialize["MOVING_365_DAY_OPEN"] = o.MOVING365DAYOPEN
	}
	if !isNil(o.MOVING365DAYQUOTEVOLUME) {
		toSerialize["MOVING_365_DAY_QUOTE_VOLUME"] = o.MOVING365DAYQUOTEVOLUME
	}
	if !isNil(o.MOVING365DAYQUOTEVOLUMEBUY) {
		toSerialize["MOVING_365_DAY_QUOTE_VOLUME_BUY"] = o.MOVING365DAYQUOTEVOLUMEBUY
	}
	if !isNil(o.MOVING365DAYQUOTEVOLUMESELL) {
		toSerialize["MOVING_365_DAY_QUOTE_VOLUME_SELL"] = o.MOVING365DAYQUOTEVOLUMESELL
	}
	if !isNil(o.MOVING365DAYQUOTEVOLUMEUNKNOWN) {
		toSerialize["MOVING_365_DAY_QUOTE_VOLUME_UNKNOWN"] = o.MOVING365DAYQUOTEVOLUMEUNKNOWN
	}
	if !isNil(o.MOVING365DAYTOTALTRADES) {
		toSerialize["MOVING_365_DAY_TOTAL_TRADES"] = o.MOVING365DAYTOTALTRADES
	}
	if !isNil(o.MOVING365DAYTOTALTRADESBUY) {
		toSerialize["MOVING_365_DAY_TOTAL_TRADES_BUY"] = o.MOVING365DAYTOTALTRADESBUY
	}
	if !isNil(o.MOVING365DAYTOTALTRADESSELL) {
		toSerialize["MOVING_365_DAY_TOTAL_TRADES_SELL"] = o.MOVING365DAYTOTALTRADESSELL
	}
	if !isNil(o.MOVING365DAYTOTALTRADESUNKNOWN) {
		toSerialize["MOVING_365_DAY_TOTAL_TRADES_UNKNOWN"] = o.MOVING365DAYTOTALTRADESUNKNOWN
	}
	if !isNil(o.MOVING365DAYVOLUME) {
		toSerialize["MOVING_365_DAY_VOLUME"] = o.MOVING365DAYVOLUME
	}
	if !isNil(o.MOVING365DAYVOLUMEBUY) {
		toSerialize["MOVING_365_DAY_VOLUME_BUY"] = o.MOVING365DAYVOLUMEBUY
	}
	if !isNil(o.MOVING365DAYVOLUMESELL) {
		toSerialize["MOVING_365_DAY_VOLUME_SELL"] = o.MOVING365DAYVOLUMESELL
	}
	if !isNil(o.MOVING365DAYVOLUMEUNKNOWN) {
		toSerialize["MOVING_365_DAY_VOLUME_UNKNOWN"] = o.MOVING365DAYVOLUMEUNKNOWN
	}
	if !isNil(o.MOVING7DAYHIGH) {
		toSerialize["MOVING_7_DAY_HIGH"] = o.MOVING7DAYHIGH
	}
	if !isNil(o.MOVING7DAYLOW) {
		toSerialize["MOVING_7_DAY_LOW"] = o.MOVING7DAYLOW
	}
	if !isNil(o.MOVING7DAYOPEN) {
		toSerialize["MOVING_7_DAY_OPEN"] = o.MOVING7DAYOPEN
	}
	if !isNil(o.MOVING7DAYQUOTEVOLUME) {
		toSerialize["MOVING_7_DAY_QUOTE_VOLUME"] = o.MOVING7DAYQUOTEVOLUME
	}
	if !isNil(o.MOVING7DAYQUOTEVOLUMEBUY) {
		toSerialize["MOVING_7_DAY_QUOTE_VOLUME_BUY"] = o.MOVING7DAYQUOTEVOLUMEBUY
	}
	if !isNil(o.MOVING7DAYQUOTEVOLUMESELL) {
		toSerialize["MOVING_7_DAY_QUOTE_VOLUME_SELL"] = o.MOVING7DAYQUOTEVOLUMESELL
	}
	if !isNil(o.MOVING7DAYQUOTEVOLUMEUNKNOWN) {
		toSerialize["MOVING_7_DAY_QUOTE_VOLUME_UNKNOWN"] = o.MOVING7DAYQUOTEVOLUMEUNKNOWN
	}
	if !isNil(o.MOVING7DAYTOTALTRADES) {
		toSerialize["MOVING_7_DAY_TOTAL_TRADES"] = o.MOVING7DAYTOTALTRADES
	}
	if !isNil(o.MOVING7DAYTOTALTRADESBUY) {
		toSerialize["MOVING_7_DAY_TOTAL_TRADES_BUY"] = o.MOVING7DAYTOTALTRADESBUY
	}
	if !isNil(o.MOVING7DAYTOTALTRADESSELL) {
		toSerialize["MOVING_7_DAY_TOTAL_TRADES_SELL"] = o.MOVING7DAYTOTALTRADESSELL
	}
	if !isNil(o.MOVING7DAYTOTALTRADESUNKNOWN) {
		toSerialize["MOVING_7_DAY_TOTAL_TRADES_UNKNOWN"] = o.MOVING7DAYTOTALTRADESUNKNOWN
	}
	if !isNil(o.MOVING7DAYVOLUME) {
		toSerialize["MOVING_7_DAY_VOLUME"] = o.MOVING7DAYVOLUME
	}
	if !isNil(o.MOVING7DAYVOLUMEBUY) {
		toSerialize["MOVING_7_DAY_VOLUME_BUY"] = o.MOVING7DAYVOLUMEBUY
	}
	if !isNil(o.MOVING7DAYVOLUMESELL) {
		toSerialize["MOVING_7_DAY_VOLUME_SELL"] = o.MOVING7DAYVOLUMESELL
	}
	if !isNil(o.MOVING7DAYVOLUMEUNKNOWN) {
		toSerialize["MOVING_7_DAY_VOLUME_UNKNOWN"] = o.MOVING7DAYVOLUMEUNKNOWN
	}
	if !isNil(o.MOVING90DAYHIGH) {
		toSerialize["MOVING_90_DAY_HIGH"] = o.MOVING90DAYHIGH
	}
	if !isNil(o.MOVING90DAYLOW) {
		toSerialize["MOVING_90_DAY_LOW"] = o.MOVING90DAYLOW
	}
	if !isNil(o.MOVING90DAYOPEN) {
		toSerialize["MOVING_90_DAY_OPEN"] = o.MOVING90DAYOPEN
	}
	if !isNil(o.MOVING90DAYQUOTEVOLUME) {
		toSerialize["MOVING_90_DAY_QUOTE_VOLUME"] = o.MOVING90DAYQUOTEVOLUME
	}
	if !isNil(o.MOVING90DAYQUOTEVOLUMEBUY) {
		toSerialize["MOVING_90_DAY_QUOTE_VOLUME_BUY"] = o.MOVING90DAYQUOTEVOLUMEBUY
	}
	if !isNil(o.MOVING90DAYQUOTEVOLUMESELL) {
		toSerialize["MOVING_90_DAY_QUOTE_VOLUME_SELL"] = o.MOVING90DAYQUOTEVOLUMESELL
	}
	if !isNil(o.MOVING90DAYQUOTEVOLUMEUNKNOWN) {
		toSerialize["MOVING_90_DAY_QUOTE_VOLUME_UNKNOWN"] = o.MOVING90DAYQUOTEVOLUMEUNKNOWN
	}
	if !isNil(o.MOVING90DAYTOTALTRADES) {
		toSerialize["MOVING_90_DAY_TOTAL_TRADES"] = o.MOVING90DAYTOTALTRADES
	}
	if !isNil(o.MOVING90DAYTOTALTRADESBUY) {
		toSerialize["MOVING_90_DAY_TOTAL_TRADES_BUY"] = o.MOVING90DAYTOTALTRADESBUY
	}
	if !isNil(o.MOVING90DAYTOTALTRADESSELL) {
		toSerialize["MOVING_90_DAY_TOTAL_TRADES_SELL"] = o.MOVING90DAYTOTALTRADESSELL
	}
	if !isNil(o.MOVING90DAYTOTALTRADESUNKNOWN) {
		toSerialize["MOVING_90_DAY_TOTAL_TRADES_UNKNOWN"] = o.MOVING90DAYTOTALTRADESUNKNOWN
	}
	if !isNil(o.MOVING90DAYVOLUME) {
		toSerialize["MOVING_90_DAY_VOLUME"] = o.MOVING90DAYVOLUME
	}
	if !isNil(o.MOVING90DAYVOLUMEBUY) {
		toSerialize["MOVING_90_DAY_VOLUME_BUY"] = o.MOVING90DAYVOLUMEBUY
	}
	if !isNil(o.MOVING90DAYVOLUMESELL) {
		toSerialize["MOVING_90_DAY_VOLUME_SELL"] = o.MOVING90DAYVOLUMESELL
	}
	if !isNil(o.MOVING90DAYVOLUMEUNKNOWN) {
		toSerialize["MOVING_90_DAY_VOLUME_UNKNOWN"] = o.MOVING90DAYVOLUMEUNKNOWN
	}
	if !isNil(o.PRICE) {
		toSerialize["PRICE"] = o.PRICE
	}
	if !isNil(o.PRICE_FLAG) {
		toSerialize["PRICE_FLAG"] = o.PRICE_FLAG
	}
	if !isNil(o.PRICE_LAST_UPDATE_TS) {
		toSerialize["PRICE_LAST_UPDATE_TS"] = o.PRICE_LAST_UPDATE_TS
	}
	if !isNil(o.QUOTE) {
		toSerialize["QUOTE"] = o.QUOTE
	}
	if !isNil(o.TOP_ASK_LAST_UPDATE_TS) {
		toSerialize["TOP_ASK_LAST_UPDATE_TS"] = o.TOP_ASK_LAST_UPDATE_TS
	}
	if !isNil(o.TOP_ASK_PRICE) {
		toSerialize["TOP_ASK_PRICE"] = o.TOP_ASK_PRICE
	}
	if !isNil(o.TOP_ASK_QUANTITY) {
		toSerialize["TOP_ASK_QUANTITY"] = o.TOP_ASK_QUANTITY
	}
	if !isNil(o.TOP_BID_LAST_UPDATE_TS) {
		toSerialize["TOP_BID_LAST_UPDATE_TS"] = o.TOP_BID_LAST_UPDATE_TS
	}
	if !isNil(o.TOP_BID_PRICE) {
		toSerialize["TOP_BID_PRICE"] = o.TOP_BID_PRICE
	}
	if !isNil(o.TOP_BID_QUANTITY) {
		toSerialize["TOP_BID_QUANTITY"] = o.TOP_BID_QUANTITY
	}
	if !isNil(o.TYPE) {
		toSerialize["TYPE"] = o.TYPE
	}
	return toSerialize, nil
}

type NullableSPOTINSTRUMENTMARKETDATA struct {
	value *SPOTINSTRUMENTMARKETDATA
	isSet bool
}

func (v NullableSPOTINSTRUMENTMARKETDATA) Get() *SPOTINSTRUMENTMARKETDATA {
	return v.value
}

func (v *NullableSPOTINSTRUMENTMARKETDATA) Set(val *SPOTINSTRUMENTMARKETDATA) {
	v.value = val
	v.isSet = true
}

func (v NullableSPOTINSTRUMENTMARKETDATA) IsSet() bool {
	return v.isSet
}

func (v *NullableSPOTINSTRUMENTMARKETDATA) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSPOTINSTRUMENTMARKETDATA(val *SPOTINSTRUMENTMARKETDATA) *NullableSPOTINSTRUMENTMARKETDATA {
	return &NullableSPOTINSTRUMENTMARKETDATA{value: val, isSet: true}
}

func (v NullableSPOTINSTRUMENTMARKETDATA) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSPOTINSTRUMENTMARKETDATA) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


