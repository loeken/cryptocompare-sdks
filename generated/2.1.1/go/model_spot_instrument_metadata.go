/*
CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry

CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.

API version: 2.1.1
Contact: data@cryptocompare.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SPOTINSTRUMENTMETADATA type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SPOTINSTRUMENTMETADATA{}

// SPOTINSTRUMENTMETADATA struct for SPOTINSTRUMENTMETADATA
type SPOTINSTRUMENTMETADATA struct {
	// This is the first time instrument was seen on instrumentListSourceType BLOB.
	FIRST_SEEN_ON_BLOB_TS *int32 `json:"FIRST_SEEN_ON_BLOB_TS,omitempty"`
	// This is the first time instrument was seen on instrumentListSourceType FIX.
	FIRST_SEEN_ON_FIX_TS *int32 `json:"FIRST_SEEN_ON_FIX_TS,omitempty"`
	// This is the first time instrument was seen on instrumentListSourceType HARDCODED.
	FIRST_SEEN_ON_HARDCODED_TS *int32 `json:"FIRST_SEEN_ON_HARDCODED_TS,omitempty"`
	// This is the first time instrument was seen on instrumentListSourceType INDEX_COMPOSITION.
	FIRST_SEEN_ON_INDEX_COMPOSITION_TS *int32 `json:"FIRST_SEEN_ON_INDEX_COMPOSITION_TS,omitempty"`
	// This is the first time instrument was seen on instrumentListSourceType NSQ.
	FIRST_SEEN_ON_NSQ_TS *int32 `json:"FIRST_SEEN_ON_NSQ_TS,omitempty"`
	// This is the first time instrument was seen on instrumentListSourceType POLLING.
	FIRST_SEEN_ON_POLLING_TS *int32 `json:"FIRST_SEEN_ON_POLLING_TS,omitempty"`
	// This is the first time instrument was seen on instrumentListSourceType STREAMING.
	FIRST_SEEN_ON_STREAMING_TS *int32 `json:"FIRST_SEEN_ON_STREAMING_TS,omitempty"`
	// This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
	FIRST_TRADE_SPOT_FROM_BACKFILL map[string]interface{} `json:"FIRST_TRADE_SPOT_FROM_BACKFILL,omitempty"`
	// This is the first TRADE_SPOT that we have seen on the specific source type in external format.
	FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL map[string]interface{} `json:"FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL,omitempty"`
	// This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
	FIRST_TRADE_SPOT_FROM_BLOB map[string]interface{} `json:"FIRST_TRADE_SPOT_FROM_BLOB,omitempty"`
	// This is the first TRADE_SPOT that we have seen on the specific source type in external format.
	FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL map[string]interface{} `json:"FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL,omitempty"`
	// This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
	FIRST_TRADE_SPOT_FROM_CALCULATED map[string]interface{} `json:"FIRST_TRADE_SPOT_FROM_CALCULATED,omitempty"`
	// This is the first TRADE_SPOT that we have seen on the specific source type in external format.
	FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL map[string]interface{} `json:"FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL,omitempty"`
	// This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
	FIRST_TRADE_SPOT_FROM_FIX map[string]interface{} `json:"FIRST_TRADE_SPOT_FROM_FIX,omitempty"`
	// This is the first TRADE_SPOT that we have seen on the specific source type in external format.
	FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL map[string]interface{} `json:"FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL,omitempty"`
	// This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
	FIRST_TRADE_SPOT_FROM_GO map[string]interface{} `json:"FIRST_TRADE_SPOT_FROM_GO,omitempty"`
	// This is the first TRADE_SPOT that we have seen on the specific source type in external format.
	FIRST_TRADE_SPOT_FROM_GO_EXTERNAL map[string]interface{} `json:"FIRST_TRADE_SPOT_FROM_GO_EXTERNAL,omitempty"`
	// This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
	FIRST_TRADE_SPOT_FROM_POLLING map[string]interface{} `json:"FIRST_TRADE_SPOT_FROM_POLLING,omitempty"`
	// This is the first TRADE_SPOT that we have seen on the specific source type in external format.
	FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL map[string]interface{} `json:"FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL,omitempty"`
	// This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
	FIRST_TRADE_SPOT_FROM_STREAMING map[string]interface{} `json:"FIRST_TRADE_SPOT_FROM_STREAMING,omitempty"`
	// This is the first TRADE_SPOT that we have seen on the specific source type in external format.
	FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL map[string]interface{} `json:"FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL,omitempty"`
	// The migration destination vm hostname.
	HOST_MIGRATION_DESTINATION *string `json:"HOST_MIGRATION_DESTINATION,omitempty"`
	// The migration source vm hostname.
	HOST_MIGRATION_SOURCE *string `json:"HOST_MIGRATION_SOURCE,omitempty"`
	// The migration status of the symbol, we only poll / stream / connect empty or SETTLED
	HOST_MIGRATION_STATUS *string `json:"HOST_MIGRATION_STATUS,omitempty"`
	// The instrument ID as it is on the exchange with small modifications - we do not allow the following characters inside isntrument ids: ,/&?
	INSTRUMENT *string `json:"INSTRUMENT,omitempty"`
	// The full data we get from the polling endpoint for this specific instrument. This is a JSON stringified object with different properties per exchange.
	INSTRUMENT_EXTERNAL_DATA *string `json:"INSTRUMENT_EXTERNAL_DATA,omitempty"`
	// The current mapping information for this instrument
	INSTRUMENT_MAPPING map[string]interface{} `json:"INSTRUMENT_MAPPING,omitempty"`
	// Historical mapping information for this instrument
	INSTRUMENT_MAPPING_HISTORY []string `json:"INSTRUMENT_MAPPING_HISTORY,omitempty"`
	// Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
	INSTRUMENT_SOURCE_BACKFILL *string `json:"INSTRUMENT_SOURCE_BACKFILL,omitempty"`
	// Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
	INSTRUMENT_SOURCE_BLOB *string `json:"INSTRUMENT_SOURCE_BLOB,omitempty"`
	// Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
	INSTRUMENT_SOURCE_CALCULATED *string `json:"INSTRUMENT_SOURCE_CALCULATED,omitempty"`
	// Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
	INSTRUMENT_SOURCE_FIX *string `json:"INSTRUMENT_SOURCE_FIX,omitempty"`
	// Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
	INSTRUMENT_SOURCE_GO *string `json:"INSTRUMENT_SOURCE_GO,omitempty"`
	// Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
	INSTRUMENT_SOURCE_POLLING *string `json:"INSTRUMENT_SOURCE_POLLING,omitempty"`
	// Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
	INSTRUMENT_SOURCE_STREAMING *string `json:"INSTRUMENT_SOURCE_STREAMING,omitempty"`
	// The status of the symbol, we only poll / stream / connect to the ACTIVE ones, for the RETIRED / IGNORED / EXPIRED  one we no longer query for data.
	INSTRUMENT_STATUS *string `json:"INSTRUMENT_STATUS,omitempty"`
	// The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
	INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST map[string]interface{} `json:"INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST,omitempty"`
	// The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
	INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS *int32 `json:"INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS,omitempty"`
	// The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
	INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS *int32 `json:"INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS,omitempty"`
	// The next time we expect to make a request for TRADE_SPOT on this instrument.
	INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS *int32 `json:"INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS,omitempty"`
	// The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
	INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST map[string]interface{} `json:"INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST,omitempty"`
	// The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
	INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS *int32 `json:"INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS,omitempty"`
	// The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
	INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS *int32 `json:"INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS,omitempty"`
	// The next time we expect to make a request for TRADE_SPOT on this instrument.
	INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS *int32 `json:"INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS,omitempty"`
	// The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
	INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST map[string]interface{} `json:"INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST,omitempty"`
	// The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
	INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS *int32 `json:"INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS,omitempty"`
	// The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
	INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS *int32 `json:"INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS,omitempty"`
	// The next time we expect to make a request for TRADE_SPOT on this instrument.
	INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS *int32 `json:"INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS,omitempty"`
	// The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
	INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST map[string]interface{} `json:"INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST,omitempty"`
	// The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
	INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS *int32 `json:"INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS,omitempty"`
	// The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
	INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS *int32 `json:"INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS,omitempty"`
	// The next time we expect to make a request for TRADE_SPOT on this instrument.
	INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS *int32 `json:"INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS,omitempty"`
	// The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
	INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST map[string]interface{} `json:"INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST,omitempty"`
	// The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
	INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS *int32 `json:"INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS,omitempty"`
	// The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
	INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS *int32 `json:"INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS,omitempty"`
	// The next time we expect to make a request for TRADE_SPOT on this instrument.
	INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS *int32 `json:"INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS,omitempty"`
	// The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
	INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST map[string]interface{} `json:"INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST,omitempty"`
	// The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
	INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS *int32 `json:"INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS,omitempty"`
	// The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
	INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS *int32 `json:"INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS,omitempty"`
	// The next time we expect to make a request for TRADE_SPOT on this instrument.
	INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS *int32 `json:"INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS,omitempty"`
	// The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
	INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST map[string]interface{} `json:"INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST,omitempty"`
	// The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
	INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS *int32 `json:"INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS,omitempty"`
	// The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
	INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS *int32 `json:"INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS,omitempty"`
	// The next time we expect to make a request for TRADE_SPOT on this instrument.
	INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS *int32 `json:"INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS,omitempty"`
	// This flags the exchange instrument as in ready to consume TRADE_SPOT via a streaming integration.
	INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION *bool `json:"INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION,omitempty"`
	// This is used to build up the request in some cases, this is where we put the id we use when querying for TRADE_SPOT.
	INSTRUMENT_TRADE_SPOT_REST_URI *string `json:"INSTRUMENT_TRADE_SPOT_REST_URI,omitempty"`
	// The URL we send to the proxy swarm to get TRADE_SPOT for the instrument.
	INSTRUMENT_TRADE_SPOT_REST_URL *string `json:"INSTRUMENT_TRADE_SPOT_REST_URL,omitempty"`
	// This is used to build up the subscription in some cases, this is where we put the id we use when subscribing for TRADE_SPOT on this instrument.
	INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION *string `json:"INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION,omitempty"`
	// The timestamp last encountered where the batch of trades from TRADES_SPOT all occured at the same time. This is an issue when making the next request that requires polling by timestamp as a start/from parameter
	LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS *int32 `json:"LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS,omitempty"`
	// This is the last time instrument was seen on instrumentListSourceType BLOB.
	LAST_SEEN_ON_BLOB_TS *int32 `json:"LAST_SEEN_ON_BLOB_TS,omitempty"`
	// This is the last time instrument was seen on instrumentListSourceType FIX.
	LAST_SEEN_ON_FIX_TS *int32 `json:"LAST_SEEN_ON_FIX_TS,omitempty"`
	// This is the last time instrument was seen on instrumentListSourceType HARDCODED.
	LAST_SEEN_ON_HARDCODED_TS *int32 `json:"LAST_SEEN_ON_HARDCODED_TS,omitempty"`
	// This is the last time instrument was seen on instrumentListSourceType INDEX_COMPOSITION.
	LAST_SEEN_ON_INDEX_COMPOSITION_TS *int32 `json:"LAST_SEEN_ON_INDEX_COMPOSITION_TS,omitempty"`
	// This is the last time instrument was seen on instrumentListSourceType NSQ.
	LAST_SEEN_ON_NSQ_TS *int32 `json:"LAST_SEEN_ON_NSQ_TS,omitempty"`
	// This is the last time instrument was seen on instrumentListSourceType POLLING.
	LAST_SEEN_ON_POLLING_TS *int32 `json:"LAST_SEEN_ON_POLLING_TS,omitempty"`
	// This is the last time instrument was seen on instrumentListSourceType STREAMING.
	LAST_SEEN_ON_STREAMING_TS *int32 `json:"LAST_SEEN_ON_STREAMING_TS,omitempty"`
	// This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
	LAST_TRADE_SPOT_FROM_BACKFILL map[string]interface{} `json:"LAST_TRADE_SPOT_FROM_BACKFILL,omitempty"`
	// This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
	LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL map[string]interface{} `json:"LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL,omitempty"`
	// This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
	LAST_TRADE_SPOT_FROM_BLOB map[string]interface{} `json:"LAST_TRADE_SPOT_FROM_BLOB,omitempty"`
	// This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
	LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL map[string]interface{} `json:"LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL,omitempty"`
	// This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
	LAST_TRADE_SPOT_FROM_CALCULATED map[string]interface{} `json:"LAST_TRADE_SPOT_FROM_CALCULATED,omitempty"`
	// This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
	LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL map[string]interface{} `json:"LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL,omitempty"`
	// This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
	LAST_TRADE_SPOT_FROM_FIX map[string]interface{} `json:"LAST_TRADE_SPOT_FROM_FIX,omitempty"`
	// This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
	LAST_TRADE_SPOT_FROM_FIX_EXTERNAL map[string]interface{} `json:"LAST_TRADE_SPOT_FROM_FIX_EXTERNAL,omitempty"`
	// This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
	LAST_TRADE_SPOT_FROM_GO map[string]interface{} `json:"LAST_TRADE_SPOT_FROM_GO,omitempty"`
	// This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
	LAST_TRADE_SPOT_FROM_GO_EXTERNAL map[string]interface{} `json:"LAST_TRADE_SPOT_FROM_GO_EXTERNAL,omitempty"`
	// This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
	LAST_TRADE_SPOT_FROM_POLLING map[string]interface{} `json:"LAST_TRADE_SPOT_FROM_POLLING,omitempty"`
	// This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
	LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL map[string]interface{} `json:"LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL,omitempty"`
	// This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
	LAST_TRADE_SPOT_FROM_STREAMING map[string]interface{} `json:"LAST_TRADE_SPOT_FROM_STREAMING,omitempty"`
	// This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
	LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL map[string]interface{} `json:"LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL,omitempty"`
	// The version of metadata, used for version conversions/migrates.
	METADATA_VERSION *int32 `json:"METADATA_VERSION,omitempty"`
	// This states the status of blob migration for this intrument on this exchange.
	PROCESSING_TRADES_FROM_BLOB_STATUS *string `json:"PROCESSING_TRADES_FROM_BLOB_STATUS,omitempty"`
	// This is both the CCSEQ and the total TRADES_SPOT we have processed on this instrument
	TOTAL_TRADES_SPOT *int32 `json:"TOTAL_TRADES_SPOT,omitempty"`
	// This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
	UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA map[string]interface{} `json:"UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA,omitempty"`
	// This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
	UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA map[string]interface{} `json:"UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA,omitempty"`
	// This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
	UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA map[string]interface{} `json:"UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA,omitempty"`
	// This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
	UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA map[string]interface{} `json:"UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA,omitempty"`
	// This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
	UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA map[string]interface{} `json:"UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA,omitempty"`
	// This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
	UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA map[string]interface{} `json:"UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA,omitempty"`
	// This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
	UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA map[string]interface{} `json:"UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA,omitempty"`
}

// NewSPOTINSTRUMENTMETADATA instantiates a new SPOTINSTRUMENTMETADATA object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSPOTINSTRUMENTMETADATA() *SPOTINSTRUMENTMETADATA {
	this := SPOTINSTRUMENTMETADATA{}
	var iNSTRUMENTSTATUS string = "ACTIVE"
	this.INSTRUMENT_STATUS = &iNSTRUMENTSTATUS
	var iNSTRUMENTTRADESPOTISREADYFORSTREAMINGINTEGRATION bool = false
	this.INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION = &iNSTRUMENTTRADESPOTISREADYFORSTREAMINGINTEGRATION
	var mETADATAVERSION int32 = 4
	this.METADATA_VERSION = &mETADATAVERSION
	return &this
}

// NewSPOTINSTRUMENTMETADATAWithDefaults instantiates a new SPOTINSTRUMENTMETADATA object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSPOTINSTRUMENTMETADATAWithDefaults() *SPOTINSTRUMENTMETADATA {
	this := SPOTINSTRUMENTMETADATA{}
	var iNSTRUMENTSTATUS string = "ACTIVE"
	this.INSTRUMENT_STATUS = &iNSTRUMENTSTATUS
	var iNSTRUMENTTRADESPOTISREADYFORSTREAMINGINTEGRATION bool = false
	this.INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION = &iNSTRUMENTTRADESPOTISREADYFORSTREAMINGINTEGRATION
	var mETADATAVERSION int32 = 4
	this.METADATA_VERSION = &mETADATAVERSION
	return &this
}

// GetFIRST_SEEN_ON_BLOB_TS returns the FIRST_SEEN_ON_BLOB_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_SEEN_ON_BLOB_TS() int32 {
	if o == nil || isNil(o.FIRST_SEEN_ON_BLOB_TS) {
		var ret int32
		return ret
	}
	return *o.FIRST_SEEN_ON_BLOB_TS
}

// GetFIRST_SEEN_ON_BLOB_TSOk returns a tuple with the FIRST_SEEN_ON_BLOB_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_SEEN_ON_BLOB_TSOk() (*int32, bool) {
	if o == nil || isNil(o.FIRST_SEEN_ON_BLOB_TS) {
		return nil, false
	}
	return o.FIRST_SEEN_ON_BLOB_TS, true
}

// HasFIRST_SEEN_ON_BLOB_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasFIRST_SEEN_ON_BLOB_TS() bool {
	if o != nil && !isNil(o.FIRST_SEEN_ON_BLOB_TS) {
		return true
	}

	return false
}

// SetFIRST_SEEN_ON_BLOB_TS gets a reference to the given int32 and assigns it to the FIRST_SEEN_ON_BLOB_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetFIRST_SEEN_ON_BLOB_TS(v int32) {
	o.FIRST_SEEN_ON_BLOB_TS = &v
}

// GetFIRST_SEEN_ON_FIX_TS returns the FIRST_SEEN_ON_FIX_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_SEEN_ON_FIX_TS() int32 {
	if o == nil || isNil(o.FIRST_SEEN_ON_FIX_TS) {
		var ret int32
		return ret
	}
	return *o.FIRST_SEEN_ON_FIX_TS
}

// GetFIRST_SEEN_ON_FIX_TSOk returns a tuple with the FIRST_SEEN_ON_FIX_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_SEEN_ON_FIX_TSOk() (*int32, bool) {
	if o == nil || isNil(o.FIRST_SEEN_ON_FIX_TS) {
		return nil, false
	}
	return o.FIRST_SEEN_ON_FIX_TS, true
}

// HasFIRST_SEEN_ON_FIX_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasFIRST_SEEN_ON_FIX_TS() bool {
	if o != nil && !isNil(o.FIRST_SEEN_ON_FIX_TS) {
		return true
	}

	return false
}

// SetFIRST_SEEN_ON_FIX_TS gets a reference to the given int32 and assigns it to the FIRST_SEEN_ON_FIX_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetFIRST_SEEN_ON_FIX_TS(v int32) {
	o.FIRST_SEEN_ON_FIX_TS = &v
}

// GetFIRST_SEEN_ON_HARDCODED_TS returns the FIRST_SEEN_ON_HARDCODED_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_SEEN_ON_HARDCODED_TS() int32 {
	if o == nil || isNil(o.FIRST_SEEN_ON_HARDCODED_TS) {
		var ret int32
		return ret
	}
	return *o.FIRST_SEEN_ON_HARDCODED_TS
}

// GetFIRST_SEEN_ON_HARDCODED_TSOk returns a tuple with the FIRST_SEEN_ON_HARDCODED_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_SEEN_ON_HARDCODED_TSOk() (*int32, bool) {
	if o == nil || isNil(o.FIRST_SEEN_ON_HARDCODED_TS) {
		return nil, false
	}
	return o.FIRST_SEEN_ON_HARDCODED_TS, true
}

// HasFIRST_SEEN_ON_HARDCODED_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasFIRST_SEEN_ON_HARDCODED_TS() bool {
	if o != nil && !isNil(o.FIRST_SEEN_ON_HARDCODED_TS) {
		return true
	}

	return false
}

// SetFIRST_SEEN_ON_HARDCODED_TS gets a reference to the given int32 and assigns it to the FIRST_SEEN_ON_HARDCODED_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetFIRST_SEEN_ON_HARDCODED_TS(v int32) {
	o.FIRST_SEEN_ON_HARDCODED_TS = &v
}

// GetFIRST_SEEN_ON_INDEX_COMPOSITION_TS returns the FIRST_SEEN_ON_INDEX_COMPOSITION_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_SEEN_ON_INDEX_COMPOSITION_TS() int32 {
	if o == nil || isNil(o.FIRST_SEEN_ON_INDEX_COMPOSITION_TS) {
		var ret int32
		return ret
	}
	return *o.FIRST_SEEN_ON_INDEX_COMPOSITION_TS
}

// GetFIRST_SEEN_ON_INDEX_COMPOSITION_TSOk returns a tuple with the FIRST_SEEN_ON_INDEX_COMPOSITION_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_SEEN_ON_INDEX_COMPOSITION_TSOk() (*int32, bool) {
	if o == nil || isNil(o.FIRST_SEEN_ON_INDEX_COMPOSITION_TS) {
		return nil, false
	}
	return o.FIRST_SEEN_ON_INDEX_COMPOSITION_TS, true
}

// HasFIRST_SEEN_ON_INDEX_COMPOSITION_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasFIRST_SEEN_ON_INDEX_COMPOSITION_TS() bool {
	if o != nil && !isNil(o.FIRST_SEEN_ON_INDEX_COMPOSITION_TS) {
		return true
	}

	return false
}

// SetFIRST_SEEN_ON_INDEX_COMPOSITION_TS gets a reference to the given int32 and assigns it to the FIRST_SEEN_ON_INDEX_COMPOSITION_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetFIRST_SEEN_ON_INDEX_COMPOSITION_TS(v int32) {
	o.FIRST_SEEN_ON_INDEX_COMPOSITION_TS = &v
}

// GetFIRST_SEEN_ON_NSQ_TS returns the FIRST_SEEN_ON_NSQ_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_SEEN_ON_NSQ_TS() int32 {
	if o == nil || isNil(o.FIRST_SEEN_ON_NSQ_TS) {
		var ret int32
		return ret
	}
	return *o.FIRST_SEEN_ON_NSQ_TS
}

// GetFIRST_SEEN_ON_NSQ_TSOk returns a tuple with the FIRST_SEEN_ON_NSQ_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_SEEN_ON_NSQ_TSOk() (*int32, bool) {
	if o == nil || isNil(o.FIRST_SEEN_ON_NSQ_TS) {
		return nil, false
	}
	return o.FIRST_SEEN_ON_NSQ_TS, true
}

// HasFIRST_SEEN_ON_NSQ_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasFIRST_SEEN_ON_NSQ_TS() bool {
	if o != nil && !isNil(o.FIRST_SEEN_ON_NSQ_TS) {
		return true
	}

	return false
}

// SetFIRST_SEEN_ON_NSQ_TS gets a reference to the given int32 and assigns it to the FIRST_SEEN_ON_NSQ_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetFIRST_SEEN_ON_NSQ_TS(v int32) {
	o.FIRST_SEEN_ON_NSQ_TS = &v
}

// GetFIRST_SEEN_ON_POLLING_TS returns the FIRST_SEEN_ON_POLLING_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_SEEN_ON_POLLING_TS() int32 {
	if o == nil || isNil(o.FIRST_SEEN_ON_POLLING_TS) {
		var ret int32
		return ret
	}
	return *o.FIRST_SEEN_ON_POLLING_TS
}

// GetFIRST_SEEN_ON_POLLING_TSOk returns a tuple with the FIRST_SEEN_ON_POLLING_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_SEEN_ON_POLLING_TSOk() (*int32, bool) {
	if o == nil || isNil(o.FIRST_SEEN_ON_POLLING_TS) {
		return nil, false
	}
	return o.FIRST_SEEN_ON_POLLING_TS, true
}

// HasFIRST_SEEN_ON_POLLING_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasFIRST_SEEN_ON_POLLING_TS() bool {
	if o != nil && !isNil(o.FIRST_SEEN_ON_POLLING_TS) {
		return true
	}

	return false
}

// SetFIRST_SEEN_ON_POLLING_TS gets a reference to the given int32 and assigns it to the FIRST_SEEN_ON_POLLING_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetFIRST_SEEN_ON_POLLING_TS(v int32) {
	o.FIRST_SEEN_ON_POLLING_TS = &v
}

// GetFIRST_SEEN_ON_STREAMING_TS returns the FIRST_SEEN_ON_STREAMING_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_SEEN_ON_STREAMING_TS() int32 {
	if o == nil || isNil(o.FIRST_SEEN_ON_STREAMING_TS) {
		var ret int32
		return ret
	}
	return *o.FIRST_SEEN_ON_STREAMING_TS
}

// GetFIRST_SEEN_ON_STREAMING_TSOk returns a tuple with the FIRST_SEEN_ON_STREAMING_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_SEEN_ON_STREAMING_TSOk() (*int32, bool) {
	if o == nil || isNil(o.FIRST_SEEN_ON_STREAMING_TS) {
		return nil, false
	}
	return o.FIRST_SEEN_ON_STREAMING_TS, true
}

// HasFIRST_SEEN_ON_STREAMING_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasFIRST_SEEN_ON_STREAMING_TS() bool {
	if o != nil && !isNil(o.FIRST_SEEN_ON_STREAMING_TS) {
		return true
	}

	return false
}

// SetFIRST_SEEN_ON_STREAMING_TS gets a reference to the given int32 and assigns it to the FIRST_SEEN_ON_STREAMING_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetFIRST_SEEN_ON_STREAMING_TS(v int32) {
	o.FIRST_SEEN_ON_STREAMING_TS = &v
}

// GetFIRST_TRADE_SPOT_FROM_BACKFILL returns the FIRST_TRADE_SPOT_FROM_BACKFILL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_BACKFILL() map[string]interface{} {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_BACKFILL) {
		var ret map[string]interface{}
		return ret
	}
	return o.FIRST_TRADE_SPOT_FROM_BACKFILL
}

// GetFIRST_TRADE_SPOT_FROM_BACKFILLOk returns a tuple with the FIRST_TRADE_SPOT_FROM_BACKFILL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_BACKFILLOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_BACKFILL) {
		return map[string]interface{}{}, false
	}
	return o.FIRST_TRADE_SPOT_FROM_BACKFILL, true
}

// HasFIRST_TRADE_SPOT_FROM_BACKFILL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasFIRST_TRADE_SPOT_FROM_BACKFILL() bool {
	if o != nil && !isNil(o.FIRST_TRADE_SPOT_FROM_BACKFILL) {
		return true
	}

	return false
}

// SetFIRST_TRADE_SPOT_FROM_BACKFILL gets a reference to the given map[string]interface{} and assigns it to the FIRST_TRADE_SPOT_FROM_BACKFILL field.
func (o *SPOTINSTRUMENTMETADATA) SetFIRST_TRADE_SPOT_FROM_BACKFILL(v map[string]interface{}) {
	o.FIRST_TRADE_SPOT_FROM_BACKFILL = v
}

// GetFIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL returns the FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL() map[string]interface{} {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL) {
		var ret map[string]interface{}
		return ret
	}
	return o.FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL
}

// GetFIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNALOk returns a tuple with the FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNALOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL) {
		return map[string]interface{}{}, false
	}
	return o.FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL, true
}

// HasFIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasFIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL() bool {
	if o != nil && !isNil(o.FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL) {
		return true
	}

	return false
}

// SetFIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL gets a reference to the given map[string]interface{} and assigns it to the FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL field.
func (o *SPOTINSTRUMENTMETADATA) SetFIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL(v map[string]interface{}) {
	o.FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL = v
}

// GetFIRST_TRADE_SPOT_FROM_BLOB returns the FIRST_TRADE_SPOT_FROM_BLOB field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_BLOB() map[string]interface{} {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_BLOB) {
		var ret map[string]interface{}
		return ret
	}
	return o.FIRST_TRADE_SPOT_FROM_BLOB
}

// GetFIRST_TRADE_SPOT_FROM_BLOBOk returns a tuple with the FIRST_TRADE_SPOT_FROM_BLOB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_BLOBOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_BLOB) {
		return map[string]interface{}{}, false
	}
	return o.FIRST_TRADE_SPOT_FROM_BLOB, true
}

// HasFIRST_TRADE_SPOT_FROM_BLOB returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasFIRST_TRADE_SPOT_FROM_BLOB() bool {
	if o != nil && !isNil(o.FIRST_TRADE_SPOT_FROM_BLOB) {
		return true
	}

	return false
}

// SetFIRST_TRADE_SPOT_FROM_BLOB gets a reference to the given map[string]interface{} and assigns it to the FIRST_TRADE_SPOT_FROM_BLOB field.
func (o *SPOTINSTRUMENTMETADATA) SetFIRST_TRADE_SPOT_FROM_BLOB(v map[string]interface{}) {
	o.FIRST_TRADE_SPOT_FROM_BLOB = v
}

// GetFIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL returns the FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL() map[string]interface{} {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL) {
		var ret map[string]interface{}
		return ret
	}
	return o.FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL
}

// GetFIRST_TRADE_SPOT_FROM_BLOB_EXTERNALOk returns a tuple with the FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_BLOB_EXTERNALOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL) {
		return map[string]interface{}{}, false
	}
	return o.FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL, true
}

// HasFIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasFIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL() bool {
	if o != nil && !isNil(o.FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL) {
		return true
	}

	return false
}

// SetFIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL gets a reference to the given map[string]interface{} and assigns it to the FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL field.
func (o *SPOTINSTRUMENTMETADATA) SetFIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL(v map[string]interface{}) {
	o.FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL = v
}

// GetFIRST_TRADE_SPOT_FROM_CALCULATED returns the FIRST_TRADE_SPOT_FROM_CALCULATED field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_CALCULATED() map[string]interface{} {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_CALCULATED) {
		var ret map[string]interface{}
		return ret
	}
	return o.FIRST_TRADE_SPOT_FROM_CALCULATED
}

// GetFIRST_TRADE_SPOT_FROM_CALCULATEDOk returns a tuple with the FIRST_TRADE_SPOT_FROM_CALCULATED field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_CALCULATEDOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_CALCULATED) {
		return map[string]interface{}{}, false
	}
	return o.FIRST_TRADE_SPOT_FROM_CALCULATED, true
}

// HasFIRST_TRADE_SPOT_FROM_CALCULATED returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasFIRST_TRADE_SPOT_FROM_CALCULATED() bool {
	if o != nil && !isNil(o.FIRST_TRADE_SPOT_FROM_CALCULATED) {
		return true
	}

	return false
}

// SetFIRST_TRADE_SPOT_FROM_CALCULATED gets a reference to the given map[string]interface{} and assigns it to the FIRST_TRADE_SPOT_FROM_CALCULATED field.
func (o *SPOTINSTRUMENTMETADATA) SetFIRST_TRADE_SPOT_FROM_CALCULATED(v map[string]interface{}) {
	o.FIRST_TRADE_SPOT_FROM_CALCULATED = v
}

// GetFIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL returns the FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL() map[string]interface{} {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL) {
		var ret map[string]interface{}
		return ret
	}
	return o.FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL
}

// GetFIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNALOk returns a tuple with the FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNALOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL) {
		return map[string]interface{}{}, false
	}
	return o.FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL, true
}

// HasFIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasFIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL() bool {
	if o != nil && !isNil(o.FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL) {
		return true
	}

	return false
}

// SetFIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL gets a reference to the given map[string]interface{} and assigns it to the FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL field.
func (o *SPOTINSTRUMENTMETADATA) SetFIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL(v map[string]interface{}) {
	o.FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL = v
}

// GetFIRST_TRADE_SPOT_FROM_FIX returns the FIRST_TRADE_SPOT_FROM_FIX field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_FIX() map[string]interface{} {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_FIX) {
		var ret map[string]interface{}
		return ret
	}
	return o.FIRST_TRADE_SPOT_FROM_FIX
}

// GetFIRST_TRADE_SPOT_FROM_FIXOk returns a tuple with the FIRST_TRADE_SPOT_FROM_FIX field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_FIXOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_FIX) {
		return map[string]interface{}{}, false
	}
	return o.FIRST_TRADE_SPOT_FROM_FIX, true
}

// HasFIRST_TRADE_SPOT_FROM_FIX returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasFIRST_TRADE_SPOT_FROM_FIX() bool {
	if o != nil && !isNil(o.FIRST_TRADE_SPOT_FROM_FIX) {
		return true
	}

	return false
}

// SetFIRST_TRADE_SPOT_FROM_FIX gets a reference to the given map[string]interface{} and assigns it to the FIRST_TRADE_SPOT_FROM_FIX field.
func (o *SPOTINSTRUMENTMETADATA) SetFIRST_TRADE_SPOT_FROM_FIX(v map[string]interface{}) {
	o.FIRST_TRADE_SPOT_FROM_FIX = v
}

// GetFIRST_TRADE_SPOT_FROM_FIX_EXTERNAL returns the FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_FIX_EXTERNAL() map[string]interface{} {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL) {
		var ret map[string]interface{}
		return ret
	}
	return o.FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL
}

// GetFIRST_TRADE_SPOT_FROM_FIX_EXTERNALOk returns a tuple with the FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_FIX_EXTERNALOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL) {
		return map[string]interface{}{}, false
	}
	return o.FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL, true
}

// HasFIRST_TRADE_SPOT_FROM_FIX_EXTERNAL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasFIRST_TRADE_SPOT_FROM_FIX_EXTERNAL() bool {
	if o != nil && !isNil(o.FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL) {
		return true
	}

	return false
}

// SetFIRST_TRADE_SPOT_FROM_FIX_EXTERNAL gets a reference to the given map[string]interface{} and assigns it to the FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL field.
func (o *SPOTINSTRUMENTMETADATA) SetFIRST_TRADE_SPOT_FROM_FIX_EXTERNAL(v map[string]interface{}) {
	o.FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL = v
}

// GetFIRST_TRADE_SPOT_FROM_GO returns the FIRST_TRADE_SPOT_FROM_GO field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_GO() map[string]interface{} {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_GO) {
		var ret map[string]interface{}
		return ret
	}
	return o.FIRST_TRADE_SPOT_FROM_GO
}

// GetFIRST_TRADE_SPOT_FROM_GOOk returns a tuple with the FIRST_TRADE_SPOT_FROM_GO field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_GOOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_GO) {
		return map[string]interface{}{}, false
	}
	return o.FIRST_TRADE_SPOT_FROM_GO, true
}

// HasFIRST_TRADE_SPOT_FROM_GO returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasFIRST_TRADE_SPOT_FROM_GO() bool {
	if o != nil && !isNil(o.FIRST_TRADE_SPOT_FROM_GO) {
		return true
	}

	return false
}

// SetFIRST_TRADE_SPOT_FROM_GO gets a reference to the given map[string]interface{} and assigns it to the FIRST_TRADE_SPOT_FROM_GO field.
func (o *SPOTINSTRUMENTMETADATA) SetFIRST_TRADE_SPOT_FROM_GO(v map[string]interface{}) {
	o.FIRST_TRADE_SPOT_FROM_GO = v
}

// GetFIRST_TRADE_SPOT_FROM_GO_EXTERNAL returns the FIRST_TRADE_SPOT_FROM_GO_EXTERNAL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_GO_EXTERNAL() map[string]interface{} {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_GO_EXTERNAL) {
		var ret map[string]interface{}
		return ret
	}
	return o.FIRST_TRADE_SPOT_FROM_GO_EXTERNAL
}

// GetFIRST_TRADE_SPOT_FROM_GO_EXTERNALOk returns a tuple with the FIRST_TRADE_SPOT_FROM_GO_EXTERNAL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_GO_EXTERNALOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_GO_EXTERNAL) {
		return map[string]interface{}{}, false
	}
	return o.FIRST_TRADE_SPOT_FROM_GO_EXTERNAL, true
}

// HasFIRST_TRADE_SPOT_FROM_GO_EXTERNAL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasFIRST_TRADE_SPOT_FROM_GO_EXTERNAL() bool {
	if o != nil && !isNil(o.FIRST_TRADE_SPOT_FROM_GO_EXTERNAL) {
		return true
	}

	return false
}

// SetFIRST_TRADE_SPOT_FROM_GO_EXTERNAL gets a reference to the given map[string]interface{} and assigns it to the FIRST_TRADE_SPOT_FROM_GO_EXTERNAL field.
func (o *SPOTINSTRUMENTMETADATA) SetFIRST_TRADE_SPOT_FROM_GO_EXTERNAL(v map[string]interface{}) {
	o.FIRST_TRADE_SPOT_FROM_GO_EXTERNAL = v
}

// GetFIRST_TRADE_SPOT_FROM_POLLING returns the FIRST_TRADE_SPOT_FROM_POLLING field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_POLLING() map[string]interface{} {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_POLLING) {
		var ret map[string]interface{}
		return ret
	}
	return o.FIRST_TRADE_SPOT_FROM_POLLING
}

// GetFIRST_TRADE_SPOT_FROM_POLLINGOk returns a tuple with the FIRST_TRADE_SPOT_FROM_POLLING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_POLLINGOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_POLLING) {
		return map[string]interface{}{}, false
	}
	return o.FIRST_TRADE_SPOT_FROM_POLLING, true
}

// HasFIRST_TRADE_SPOT_FROM_POLLING returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasFIRST_TRADE_SPOT_FROM_POLLING() bool {
	if o != nil && !isNil(o.FIRST_TRADE_SPOT_FROM_POLLING) {
		return true
	}

	return false
}

// SetFIRST_TRADE_SPOT_FROM_POLLING gets a reference to the given map[string]interface{} and assigns it to the FIRST_TRADE_SPOT_FROM_POLLING field.
func (o *SPOTINSTRUMENTMETADATA) SetFIRST_TRADE_SPOT_FROM_POLLING(v map[string]interface{}) {
	o.FIRST_TRADE_SPOT_FROM_POLLING = v
}

// GetFIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL returns the FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL() map[string]interface{} {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL) {
		var ret map[string]interface{}
		return ret
	}
	return o.FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL
}

// GetFIRST_TRADE_SPOT_FROM_POLLING_EXTERNALOk returns a tuple with the FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_POLLING_EXTERNALOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL) {
		return map[string]interface{}{}, false
	}
	return o.FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL, true
}

// HasFIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasFIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL() bool {
	if o != nil && !isNil(o.FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL) {
		return true
	}

	return false
}

// SetFIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL gets a reference to the given map[string]interface{} and assigns it to the FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL field.
func (o *SPOTINSTRUMENTMETADATA) SetFIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL(v map[string]interface{}) {
	o.FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL = v
}

// GetFIRST_TRADE_SPOT_FROM_STREAMING returns the FIRST_TRADE_SPOT_FROM_STREAMING field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_STREAMING() map[string]interface{} {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_STREAMING) {
		var ret map[string]interface{}
		return ret
	}
	return o.FIRST_TRADE_SPOT_FROM_STREAMING
}

// GetFIRST_TRADE_SPOT_FROM_STREAMINGOk returns a tuple with the FIRST_TRADE_SPOT_FROM_STREAMING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_STREAMINGOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_STREAMING) {
		return map[string]interface{}{}, false
	}
	return o.FIRST_TRADE_SPOT_FROM_STREAMING, true
}

// HasFIRST_TRADE_SPOT_FROM_STREAMING returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasFIRST_TRADE_SPOT_FROM_STREAMING() bool {
	if o != nil && !isNil(o.FIRST_TRADE_SPOT_FROM_STREAMING) {
		return true
	}

	return false
}

// SetFIRST_TRADE_SPOT_FROM_STREAMING gets a reference to the given map[string]interface{} and assigns it to the FIRST_TRADE_SPOT_FROM_STREAMING field.
func (o *SPOTINSTRUMENTMETADATA) SetFIRST_TRADE_SPOT_FROM_STREAMING(v map[string]interface{}) {
	o.FIRST_TRADE_SPOT_FROM_STREAMING = v
}

// GetFIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL returns the FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL() map[string]interface{} {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL) {
		var ret map[string]interface{}
		return ret
	}
	return o.FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL
}

// GetFIRST_TRADE_SPOT_FROM_STREAMING_EXTERNALOk returns a tuple with the FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetFIRST_TRADE_SPOT_FROM_STREAMING_EXTERNALOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL) {
		return map[string]interface{}{}, false
	}
	return o.FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL, true
}

// HasFIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasFIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL() bool {
	if o != nil && !isNil(o.FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL) {
		return true
	}

	return false
}

// SetFIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL gets a reference to the given map[string]interface{} and assigns it to the FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL field.
func (o *SPOTINSTRUMENTMETADATA) SetFIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL(v map[string]interface{}) {
	o.FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL = v
}

// GetHOST_MIGRATION_DESTINATION returns the HOST_MIGRATION_DESTINATION field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetHOST_MIGRATION_DESTINATION() string {
	if o == nil || isNil(o.HOST_MIGRATION_DESTINATION) {
		var ret string
		return ret
	}
	return *o.HOST_MIGRATION_DESTINATION
}

// GetHOST_MIGRATION_DESTINATIONOk returns a tuple with the HOST_MIGRATION_DESTINATION field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetHOST_MIGRATION_DESTINATIONOk() (*string, bool) {
	if o == nil || isNil(o.HOST_MIGRATION_DESTINATION) {
		return nil, false
	}
	return o.HOST_MIGRATION_DESTINATION, true
}

// HasHOST_MIGRATION_DESTINATION returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasHOST_MIGRATION_DESTINATION() bool {
	if o != nil && !isNil(o.HOST_MIGRATION_DESTINATION) {
		return true
	}

	return false
}

// SetHOST_MIGRATION_DESTINATION gets a reference to the given string and assigns it to the HOST_MIGRATION_DESTINATION field.
func (o *SPOTINSTRUMENTMETADATA) SetHOST_MIGRATION_DESTINATION(v string) {
	o.HOST_MIGRATION_DESTINATION = &v
}

// GetHOST_MIGRATION_SOURCE returns the HOST_MIGRATION_SOURCE field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetHOST_MIGRATION_SOURCE() string {
	if o == nil || isNil(o.HOST_MIGRATION_SOURCE) {
		var ret string
		return ret
	}
	return *o.HOST_MIGRATION_SOURCE
}

// GetHOST_MIGRATION_SOURCEOk returns a tuple with the HOST_MIGRATION_SOURCE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetHOST_MIGRATION_SOURCEOk() (*string, bool) {
	if o == nil || isNil(o.HOST_MIGRATION_SOURCE) {
		return nil, false
	}
	return o.HOST_MIGRATION_SOURCE, true
}

// HasHOST_MIGRATION_SOURCE returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasHOST_MIGRATION_SOURCE() bool {
	if o != nil && !isNil(o.HOST_MIGRATION_SOURCE) {
		return true
	}

	return false
}

// SetHOST_MIGRATION_SOURCE gets a reference to the given string and assigns it to the HOST_MIGRATION_SOURCE field.
func (o *SPOTINSTRUMENTMETADATA) SetHOST_MIGRATION_SOURCE(v string) {
	o.HOST_MIGRATION_SOURCE = &v
}

// GetHOST_MIGRATION_STATUS returns the HOST_MIGRATION_STATUS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetHOST_MIGRATION_STATUS() string {
	if o == nil || isNil(o.HOST_MIGRATION_STATUS) {
		var ret string
		return ret
	}
	return *o.HOST_MIGRATION_STATUS
}

// GetHOST_MIGRATION_STATUSOk returns a tuple with the HOST_MIGRATION_STATUS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetHOST_MIGRATION_STATUSOk() (*string, bool) {
	if o == nil || isNil(o.HOST_MIGRATION_STATUS) {
		return nil, false
	}
	return o.HOST_MIGRATION_STATUS, true
}

// HasHOST_MIGRATION_STATUS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasHOST_MIGRATION_STATUS() bool {
	if o != nil && !isNil(o.HOST_MIGRATION_STATUS) {
		return true
	}

	return false
}

// SetHOST_MIGRATION_STATUS gets a reference to the given string and assigns it to the HOST_MIGRATION_STATUS field.
func (o *SPOTINSTRUMENTMETADATA) SetHOST_MIGRATION_STATUS(v string) {
	o.HOST_MIGRATION_STATUS = &v
}

// GetINSTRUMENT returns the INSTRUMENT field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT() string {
	if o == nil || isNil(o.INSTRUMENT) {
		var ret string
		return ret
	}
	return *o.INSTRUMENT
}

// GetINSTRUMENTOk returns a tuple with the INSTRUMENT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENTOk() (*string, bool) {
	if o == nil || isNil(o.INSTRUMENT) {
		return nil, false
	}
	return o.INSTRUMENT, true
}

// HasINSTRUMENT returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT() bool {
	if o != nil && !isNil(o.INSTRUMENT) {
		return true
	}

	return false
}

// SetINSTRUMENT gets a reference to the given string and assigns it to the INSTRUMENT field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT(v string) {
	o.INSTRUMENT = &v
}

// GetINSTRUMENT_EXTERNAL_DATA returns the INSTRUMENT_EXTERNAL_DATA field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_EXTERNAL_DATA() string {
	if o == nil || isNil(o.INSTRUMENT_EXTERNAL_DATA) {
		var ret string
		return ret
	}
	return *o.INSTRUMENT_EXTERNAL_DATA
}

// GetINSTRUMENT_EXTERNAL_DATAOk returns a tuple with the INSTRUMENT_EXTERNAL_DATA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_EXTERNAL_DATAOk() (*string, bool) {
	if o == nil || isNil(o.INSTRUMENT_EXTERNAL_DATA) {
		return nil, false
	}
	return o.INSTRUMENT_EXTERNAL_DATA, true
}

// HasINSTRUMENT_EXTERNAL_DATA returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_EXTERNAL_DATA() bool {
	if o != nil && !isNil(o.INSTRUMENT_EXTERNAL_DATA) {
		return true
	}

	return false
}

// SetINSTRUMENT_EXTERNAL_DATA gets a reference to the given string and assigns it to the INSTRUMENT_EXTERNAL_DATA field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_EXTERNAL_DATA(v string) {
	o.INSTRUMENT_EXTERNAL_DATA = &v
}

// GetINSTRUMENT_MAPPING returns the INSTRUMENT_MAPPING field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_MAPPING() map[string]interface{} {
	if o == nil || isNil(o.INSTRUMENT_MAPPING) {
		var ret map[string]interface{}
		return ret
	}
	return o.INSTRUMENT_MAPPING
}

// GetINSTRUMENT_MAPPINGOk returns a tuple with the INSTRUMENT_MAPPING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_MAPPINGOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.INSTRUMENT_MAPPING) {
		return map[string]interface{}{}, false
	}
	return o.INSTRUMENT_MAPPING, true
}

// HasINSTRUMENT_MAPPING returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_MAPPING() bool {
	if o != nil && !isNil(o.INSTRUMENT_MAPPING) {
		return true
	}

	return false
}

// SetINSTRUMENT_MAPPING gets a reference to the given map[string]interface{} and assigns it to the INSTRUMENT_MAPPING field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_MAPPING(v map[string]interface{}) {
	o.INSTRUMENT_MAPPING = v
}

// GetINSTRUMENT_MAPPING_HISTORY returns the INSTRUMENT_MAPPING_HISTORY field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_MAPPING_HISTORY() []string {
	if o == nil || isNil(o.INSTRUMENT_MAPPING_HISTORY) {
		var ret []string
		return ret
	}
	return o.INSTRUMENT_MAPPING_HISTORY
}

// GetINSTRUMENT_MAPPING_HISTORYOk returns a tuple with the INSTRUMENT_MAPPING_HISTORY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_MAPPING_HISTORYOk() ([]string, bool) {
	if o == nil || isNil(o.INSTRUMENT_MAPPING_HISTORY) {
		return nil, false
	}
	return o.INSTRUMENT_MAPPING_HISTORY, true
}

// HasINSTRUMENT_MAPPING_HISTORY returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_MAPPING_HISTORY() bool {
	if o != nil && !isNil(o.INSTRUMENT_MAPPING_HISTORY) {
		return true
	}

	return false
}

// SetINSTRUMENT_MAPPING_HISTORY gets a reference to the given []string and assigns it to the INSTRUMENT_MAPPING_HISTORY field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_MAPPING_HISTORY(v []string) {
	o.INSTRUMENT_MAPPING_HISTORY = v
}

// GetINSTRUMENT_SOURCE_BACKFILL returns the INSTRUMENT_SOURCE_BACKFILL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_SOURCE_BACKFILL() string {
	if o == nil || isNil(o.INSTRUMENT_SOURCE_BACKFILL) {
		var ret string
		return ret
	}
	return *o.INSTRUMENT_SOURCE_BACKFILL
}

// GetINSTRUMENT_SOURCE_BACKFILLOk returns a tuple with the INSTRUMENT_SOURCE_BACKFILL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_SOURCE_BACKFILLOk() (*string, bool) {
	if o == nil || isNil(o.INSTRUMENT_SOURCE_BACKFILL) {
		return nil, false
	}
	return o.INSTRUMENT_SOURCE_BACKFILL, true
}

// HasINSTRUMENT_SOURCE_BACKFILL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_SOURCE_BACKFILL() bool {
	if o != nil && !isNil(o.INSTRUMENT_SOURCE_BACKFILL) {
		return true
	}

	return false
}

// SetINSTRUMENT_SOURCE_BACKFILL gets a reference to the given string and assigns it to the INSTRUMENT_SOURCE_BACKFILL field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_SOURCE_BACKFILL(v string) {
	o.INSTRUMENT_SOURCE_BACKFILL = &v
}

// GetINSTRUMENT_SOURCE_BLOB returns the INSTRUMENT_SOURCE_BLOB field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_SOURCE_BLOB() string {
	if o == nil || isNil(o.INSTRUMENT_SOURCE_BLOB) {
		var ret string
		return ret
	}
	return *o.INSTRUMENT_SOURCE_BLOB
}

// GetINSTRUMENT_SOURCE_BLOBOk returns a tuple with the INSTRUMENT_SOURCE_BLOB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_SOURCE_BLOBOk() (*string, bool) {
	if o == nil || isNil(o.INSTRUMENT_SOURCE_BLOB) {
		return nil, false
	}
	return o.INSTRUMENT_SOURCE_BLOB, true
}

// HasINSTRUMENT_SOURCE_BLOB returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_SOURCE_BLOB() bool {
	if o != nil && !isNil(o.INSTRUMENT_SOURCE_BLOB) {
		return true
	}

	return false
}

// SetINSTRUMENT_SOURCE_BLOB gets a reference to the given string and assigns it to the INSTRUMENT_SOURCE_BLOB field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_SOURCE_BLOB(v string) {
	o.INSTRUMENT_SOURCE_BLOB = &v
}

// GetINSTRUMENT_SOURCE_CALCULATED returns the INSTRUMENT_SOURCE_CALCULATED field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_SOURCE_CALCULATED() string {
	if o == nil || isNil(o.INSTRUMENT_SOURCE_CALCULATED) {
		var ret string
		return ret
	}
	return *o.INSTRUMENT_SOURCE_CALCULATED
}

// GetINSTRUMENT_SOURCE_CALCULATEDOk returns a tuple with the INSTRUMENT_SOURCE_CALCULATED field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_SOURCE_CALCULATEDOk() (*string, bool) {
	if o == nil || isNil(o.INSTRUMENT_SOURCE_CALCULATED) {
		return nil, false
	}
	return o.INSTRUMENT_SOURCE_CALCULATED, true
}

// HasINSTRUMENT_SOURCE_CALCULATED returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_SOURCE_CALCULATED() bool {
	if o != nil && !isNil(o.INSTRUMENT_SOURCE_CALCULATED) {
		return true
	}

	return false
}

// SetINSTRUMENT_SOURCE_CALCULATED gets a reference to the given string and assigns it to the INSTRUMENT_SOURCE_CALCULATED field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_SOURCE_CALCULATED(v string) {
	o.INSTRUMENT_SOURCE_CALCULATED = &v
}

// GetINSTRUMENT_SOURCE_FIX returns the INSTRUMENT_SOURCE_FIX field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_SOURCE_FIX() string {
	if o == nil || isNil(o.INSTRUMENT_SOURCE_FIX) {
		var ret string
		return ret
	}
	return *o.INSTRUMENT_SOURCE_FIX
}

// GetINSTRUMENT_SOURCE_FIXOk returns a tuple with the INSTRUMENT_SOURCE_FIX field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_SOURCE_FIXOk() (*string, bool) {
	if o == nil || isNil(o.INSTRUMENT_SOURCE_FIX) {
		return nil, false
	}
	return o.INSTRUMENT_SOURCE_FIX, true
}

// HasINSTRUMENT_SOURCE_FIX returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_SOURCE_FIX() bool {
	if o != nil && !isNil(o.INSTRUMENT_SOURCE_FIX) {
		return true
	}

	return false
}

// SetINSTRUMENT_SOURCE_FIX gets a reference to the given string and assigns it to the INSTRUMENT_SOURCE_FIX field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_SOURCE_FIX(v string) {
	o.INSTRUMENT_SOURCE_FIX = &v
}

// GetINSTRUMENT_SOURCE_GO returns the INSTRUMENT_SOURCE_GO field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_SOURCE_GO() string {
	if o == nil || isNil(o.INSTRUMENT_SOURCE_GO) {
		var ret string
		return ret
	}
	return *o.INSTRUMENT_SOURCE_GO
}

// GetINSTRUMENT_SOURCE_GOOk returns a tuple with the INSTRUMENT_SOURCE_GO field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_SOURCE_GOOk() (*string, bool) {
	if o == nil || isNil(o.INSTRUMENT_SOURCE_GO) {
		return nil, false
	}
	return o.INSTRUMENT_SOURCE_GO, true
}

// HasINSTRUMENT_SOURCE_GO returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_SOURCE_GO() bool {
	if o != nil && !isNil(o.INSTRUMENT_SOURCE_GO) {
		return true
	}

	return false
}

// SetINSTRUMENT_SOURCE_GO gets a reference to the given string and assigns it to the INSTRUMENT_SOURCE_GO field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_SOURCE_GO(v string) {
	o.INSTRUMENT_SOURCE_GO = &v
}

// GetINSTRUMENT_SOURCE_POLLING returns the INSTRUMENT_SOURCE_POLLING field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_SOURCE_POLLING() string {
	if o == nil || isNil(o.INSTRUMENT_SOURCE_POLLING) {
		var ret string
		return ret
	}
	return *o.INSTRUMENT_SOURCE_POLLING
}

// GetINSTRUMENT_SOURCE_POLLINGOk returns a tuple with the INSTRUMENT_SOURCE_POLLING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_SOURCE_POLLINGOk() (*string, bool) {
	if o == nil || isNil(o.INSTRUMENT_SOURCE_POLLING) {
		return nil, false
	}
	return o.INSTRUMENT_SOURCE_POLLING, true
}

// HasINSTRUMENT_SOURCE_POLLING returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_SOURCE_POLLING() bool {
	if o != nil && !isNil(o.INSTRUMENT_SOURCE_POLLING) {
		return true
	}

	return false
}

// SetINSTRUMENT_SOURCE_POLLING gets a reference to the given string and assigns it to the INSTRUMENT_SOURCE_POLLING field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_SOURCE_POLLING(v string) {
	o.INSTRUMENT_SOURCE_POLLING = &v
}

// GetINSTRUMENT_SOURCE_STREAMING returns the INSTRUMENT_SOURCE_STREAMING field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_SOURCE_STREAMING() string {
	if o == nil || isNil(o.INSTRUMENT_SOURCE_STREAMING) {
		var ret string
		return ret
	}
	return *o.INSTRUMENT_SOURCE_STREAMING
}

// GetINSTRUMENT_SOURCE_STREAMINGOk returns a tuple with the INSTRUMENT_SOURCE_STREAMING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_SOURCE_STREAMINGOk() (*string, bool) {
	if o == nil || isNil(o.INSTRUMENT_SOURCE_STREAMING) {
		return nil, false
	}
	return o.INSTRUMENT_SOURCE_STREAMING, true
}

// HasINSTRUMENT_SOURCE_STREAMING returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_SOURCE_STREAMING() bool {
	if o != nil && !isNil(o.INSTRUMENT_SOURCE_STREAMING) {
		return true
	}

	return false
}

// SetINSTRUMENT_SOURCE_STREAMING gets a reference to the given string and assigns it to the INSTRUMENT_SOURCE_STREAMING field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_SOURCE_STREAMING(v string) {
	o.INSTRUMENT_SOURCE_STREAMING = &v
}

// GetINSTRUMENT_STATUS returns the INSTRUMENT_STATUS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_STATUS() string {
	if o == nil || isNil(o.INSTRUMENT_STATUS) {
		var ret string
		return ret
	}
	return *o.INSTRUMENT_STATUS
}

// GetINSTRUMENT_STATUSOk returns a tuple with the INSTRUMENT_STATUS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_STATUSOk() (*string, bool) {
	if o == nil || isNil(o.INSTRUMENT_STATUS) {
		return nil, false
	}
	return o.INSTRUMENT_STATUS, true
}

// HasINSTRUMENT_STATUS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_STATUS() bool {
	if o != nil && !isNil(o.INSTRUMENT_STATUS) {
		return true
	}

	return false
}

// SetINSTRUMENT_STATUS gets a reference to the given string and assigns it to the INSTRUMENT_STATUS field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_STATUS(v string) {
	o.INSTRUMENT_STATUS = &v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST returns the INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST() map[string]interface{} {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST) {
		var ret map[string]interface{}
		return ret
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST
}

// GetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUESTOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUESTOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST) {
		return map[string]interface{}{}, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST gets a reference to the given map[string]interface{} and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST(v map[string]interface{}) {
	o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST = v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS returns the INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS() int32 {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS) {
		var ret int32
		return ret
	}
	return *o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS
}

// GetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TSOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TSOk() (*int32, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS) {
		return nil, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS gets a reference to the given int32 and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS(v int32) {
	o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS = &v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS returns the INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS() int32 {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS) {
		var ret int32
		return ret
	}
	return *o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS
}

// GetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TSOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TSOk() (*int32, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS) {
		return nil, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS gets a reference to the given int32 and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS(v int32) {
	o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS = &v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS returns the INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS() int32 {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS) {
		var ret int32
		return ret
	}
	return *o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS
}

// GetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TSOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TSOk() (*int32, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS) {
		return nil, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS gets a reference to the given int32 and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS(v int32) {
	o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS = &v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST returns the INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST() map[string]interface{} {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST) {
		var ret map[string]interface{}
		return ret
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST
}

// GetINSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUESTOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUESTOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST) {
		return map[string]interface{}{}, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST gets a reference to the given map[string]interface{} and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST(v map[string]interface{}) {
	o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST = v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS returns the INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS() int32 {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS) {
		var ret int32
		return ret
	}
	return *o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS
}

// GetINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TSOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TSOk() (*int32, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS) {
		return nil, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS gets a reference to the given int32 and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS(v int32) {
	o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS = &v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS returns the INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS() int32 {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS) {
		var ret int32
		return ret
	}
	return *o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS
}

// GetINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TSOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TSOk() (*int32, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS) {
		return nil, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS gets a reference to the given int32 and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS(v int32) {
	o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS = &v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS returns the INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS() int32 {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS) {
		var ret int32
		return ret
	}
	return *o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS
}

// GetINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TSOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TSOk() (*int32, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS) {
		return nil, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS gets a reference to the given int32 and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS(v int32) {
	o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS = &v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST returns the INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST() map[string]interface{} {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST) {
		var ret map[string]interface{}
		return ret
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST
}

// GetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUESTOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUESTOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST) {
		return map[string]interface{}{}, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST gets a reference to the given map[string]interface{} and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST(v map[string]interface{}) {
	o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST = v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS returns the INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS() int32 {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS) {
		var ret int32
		return ret
	}
	return *o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS
}

// GetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TSOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TSOk() (*int32, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS) {
		return nil, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS gets a reference to the given int32 and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS(v int32) {
	o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS = &v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS returns the INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS() int32 {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS) {
		var ret int32
		return ret
	}
	return *o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS
}

// GetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TSOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TSOk() (*int32, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS) {
		return nil, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS gets a reference to the given int32 and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS(v int32) {
	o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS = &v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS returns the INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS() int32 {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS) {
		var ret int32
		return ret
	}
	return *o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS
}

// GetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TSOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TSOk() (*int32, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS) {
		return nil, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS gets a reference to the given int32 and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS(v int32) {
	o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS = &v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST returns the INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST() map[string]interface{} {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST) {
		var ret map[string]interface{}
		return ret
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST
}

// GetINSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUESTOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUESTOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST) {
		return map[string]interface{}{}, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST gets a reference to the given map[string]interface{} and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST(v map[string]interface{}) {
	o.INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST = v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS returns the INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS() int32 {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS) {
		var ret int32
		return ret
	}
	return *o.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS
}

// GetINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TSOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TSOk() (*int32, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS) {
		return nil, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS gets a reference to the given int32 and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS(v int32) {
	o.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS = &v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS returns the INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS() int32 {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS) {
		var ret int32
		return ret
	}
	return *o.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS
}

// GetINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TSOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TSOk() (*int32, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS) {
		return nil, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS gets a reference to the given int32 and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS(v int32) {
	o.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS = &v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS returns the INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS() int32 {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS) {
		var ret int32
		return ret
	}
	return *o.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS
}

// GetINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TSOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TSOk() (*int32, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS) {
		return nil, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS gets a reference to the given int32 and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS(v int32) {
	o.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS = &v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST returns the INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST() map[string]interface{} {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST) {
		var ret map[string]interface{}
		return ret
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST
}

// GetINSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUESTOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUESTOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST) {
		return map[string]interface{}{}, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST gets a reference to the given map[string]interface{} and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST(v map[string]interface{}) {
	o.INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST = v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS returns the INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS() int32 {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS) {
		var ret int32
		return ret
	}
	return *o.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS
}

// GetINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TSOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TSOk() (*int32, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS) {
		return nil, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS gets a reference to the given int32 and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS(v int32) {
	o.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS = &v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS returns the INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS() int32 {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS) {
		var ret int32
		return ret
	}
	return *o.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS
}

// GetINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TSOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TSOk() (*int32, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS) {
		return nil, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS gets a reference to the given int32 and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS(v int32) {
	o.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS = &v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS returns the INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS() int32 {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS) {
		var ret int32
		return ret
	}
	return *o.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS
}

// GetINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TSOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TSOk() (*int32, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS) {
		return nil, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS gets a reference to the given int32 and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS(v int32) {
	o.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS = &v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST returns the INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST() map[string]interface{} {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST) {
		var ret map[string]interface{}
		return ret
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST
}

// GetINSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUESTOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUESTOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST) {
		return map[string]interface{}{}, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST gets a reference to the given map[string]interface{} and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST(v map[string]interface{}) {
	o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST = v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS returns the INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS() int32 {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS) {
		var ret int32
		return ret
	}
	return *o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS
}

// GetINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TSOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TSOk() (*int32, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS) {
		return nil, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS gets a reference to the given int32 and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS(v int32) {
	o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS = &v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS returns the INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS() int32 {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS) {
		var ret int32
		return ret
	}
	return *o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS
}

// GetINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TSOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TSOk() (*int32, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS) {
		return nil, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS gets a reference to the given int32 and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS(v int32) {
	o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS = &v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS returns the INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS() int32 {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS) {
		var ret int32
		return ret
	}
	return *o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS
}

// GetINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TSOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TSOk() (*int32, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS) {
		return nil, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS gets a reference to the given int32 and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS(v int32) {
	o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS = &v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST returns the INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST() map[string]interface{} {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST) {
		var ret map[string]interface{}
		return ret
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST
}

// GetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUESTOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUESTOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST) {
		return map[string]interface{}{}, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST gets a reference to the given map[string]interface{} and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST(v map[string]interface{}) {
	o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST = v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS returns the INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS() int32 {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS) {
		var ret int32
		return ret
	}
	return *o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS
}

// GetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TSOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TSOk() (*int32, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS) {
		return nil, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS gets a reference to the given int32 and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS(v int32) {
	o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS = &v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS returns the INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS() int32 {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS) {
		var ret int32
		return ret
	}
	return *o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS
}

// GetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TSOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TSOk() (*int32, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS) {
		return nil, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS gets a reference to the given int32 and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS(v int32) {
	o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS = &v
}

// GetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS returns the INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS() int32 {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS) {
		var ret int32
		return ret
	}
	return *o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS
}

// GetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TSOk returns a tuple with the INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TSOk() (*int32, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS) {
		return nil, false
	}
	return o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS, true
}

// HasINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS gets a reference to the given int32 and assigns it to the INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS(v int32) {
	o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS = &v
}

// GetINSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION returns the INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION() bool {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION) {
		var ret bool
		return ret
	}
	return *o.INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION
}

// GetINSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATIONOk returns a tuple with the INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATIONOk() (*bool, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION) {
		return nil, false
	}
	return o.INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION, true
}

// HasINSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION gets a reference to the given bool and assigns it to the INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION(v bool) {
	o.INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION = &v
}

// GetINSTRUMENT_TRADE_SPOT_REST_URI returns the INSTRUMENT_TRADE_SPOT_REST_URI field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_REST_URI() string {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_REST_URI) {
		var ret string
		return ret
	}
	return *o.INSTRUMENT_TRADE_SPOT_REST_URI
}

// GetINSTRUMENT_TRADE_SPOT_REST_URIOk returns a tuple with the INSTRUMENT_TRADE_SPOT_REST_URI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_REST_URIOk() (*string, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_REST_URI) {
		return nil, false
	}
	return o.INSTRUMENT_TRADE_SPOT_REST_URI, true
}

// HasINSTRUMENT_TRADE_SPOT_REST_URI returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_REST_URI() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_REST_URI) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_REST_URI gets a reference to the given string and assigns it to the INSTRUMENT_TRADE_SPOT_REST_URI field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_REST_URI(v string) {
	o.INSTRUMENT_TRADE_SPOT_REST_URI = &v
}

// GetINSTRUMENT_TRADE_SPOT_REST_URL returns the INSTRUMENT_TRADE_SPOT_REST_URL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_REST_URL() string {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_REST_URL) {
		var ret string
		return ret
	}
	return *o.INSTRUMENT_TRADE_SPOT_REST_URL
}

// GetINSTRUMENT_TRADE_SPOT_REST_URLOk returns a tuple with the INSTRUMENT_TRADE_SPOT_REST_URL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_REST_URLOk() (*string, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_REST_URL) {
		return nil, false
	}
	return o.INSTRUMENT_TRADE_SPOT_REST_URL, true
}

// HasINSTRUMENT_TRADE_SPOT_REST_URL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_REST_URL() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_REST_URL) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_REST_URL gets a reference to the given string and assigns it to the INSTRUMENT_TRADE_SPOT_REST_URL field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_REST_URL(v string) {
	o.INSTRUMENT_TRADE_SPOT_REST_URL = &v
}

// GetINSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION returns the INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION() string {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION) {
		var ret string
		return ret
	}
	return *o.INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION
}

// GetINSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTIONOk returns a tuple with the INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetINSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTIONOk() (*string, bool) {
	if o == nil || isNil(o.INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION) {
		return nil, false
	}
	return o.INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION, true
}

// HasINSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasINSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION() bool {
	if o != nil && !isNil(o.INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION) {
		return true
	}

	return false
}

// SetINSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION gets a reference to the given string and assigns it to the INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION field.
func (o *SPOTINSTRUMENTMETADATA) SetINSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION(v string) {
	o.INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION = &v
}

// GetLAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS returns the LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS() int32 {
	if o == nil || isNil(o.LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS) {
		var ret int32
		return ret
	}
	return *o.LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS
}

// GetLAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MSOk returns a tuple with the LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MSOk() (*int32, bool) {
	if o == nil || isNil(o.LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS) {
		return nil, false
	}
	return o.LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS, true
}

// HasLAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasLAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS() bool {
	if o != nil && !isNil(o.LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS) {
		return true
	}

	return false
}

// SetLAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS gets a reference to the given int32 and assigns it to the LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS field.
func (o *SPOTINSTRUMENTMETADATA) SetLAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS(v int32) {
	o.LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS = &v
}

// GetLAST_SEEN_ON_BLOB_TS returns the LAST_SEEN_ON_BLOB_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_SEEN_ON_BLOB_TS() int32 {
	if o == nil || isNil(o.LAST_SEEN_ON_BLOB_TS) {
		var ret int32
		return ret
	}
	return *o.LAST_SEEN_ON_BLOB_TS
}

// GetLAST_SEEN_ON_BLOB_TSOk returns a tuple with the LAST_SEEN_ON_BLOB_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_SEEN_ON_BLOB_TSOk() (*int32, bool) {
	if o == nil || isNil(o.LAST_SEEN_ON_BLOB_TS) {
		return nil, false
	}
	return o.LAST_SEEN_ON_BLOB_TS, true
}

// HasLAST_SEEN_ON_BLOB_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasLAST_SEEN_ON_BLOB_TS() bool {
	if o != nil && !isNil(o.LAST_SEEN_ON_BLOB_TS) {
		return true
	}

	return false
}

// SetLAST_SEEN_ON_BLOB_TS gets a reference to the given int32 and assigns it to the LAST_SEEN_ON_BLOB_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetLAST_SEEN_ON_BLOB_TS(v int32) {
	o.LAST_SEEN_ON_BLOB_TS = &v
}

// GetLAST_SEEN_ON_FIX_TS returns the LAST_SEEN_ON_FIX_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_SEEN_ON_FIX_TS() int32 {
	if o == nil || isNil(o.LAST_SEEN_ON_FIX_TS) {
		var ret int32
		return ret
	}
	return *o.LAST_SEEN_ON_FIX_TS
}

// GetLAST_SEEN_ON_FIX_TSOk returns a tuple with the LAST_SEEN_ON_FIX_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_SEEN_ON_FIX_TSOk() (*int32, bool) {
	if o == nil || isNil(o.LAST_SEEN_ON_FIX_TS) {
		return nil, false
	}
	return o.LAST_SEEN_ON_FIX_TS, true
}

// HasLAST_SEEN_ON_FIX_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasLAST_SEEN_ON_FIX_TS() bool {
	if o != nil && !isNil(o.LAST_SEEN_ON_FIX_TS) {
		return true
	}

	return false
}

// SetLAST_SEEN_ON_FIX_TS gets a reference to the given int32 and assigns it to the LAST_SEEN_ON_FIX_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetLAST_SEEN_ON_FIX_TS(v int32) {
	o.LAST_SEEN_ON_FIX_TS = &v
}

// GetLAST_SEEN_ON_HARDCODED_TS returns the LAST_SEEN_ON_HARDCODED_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_SEEN_ON_HARDCODED_TS() int32 {
	if o == nil || isNil(o.LAST_SEEN_ON_HARDCODED_TS) {
		var ret int32
		return ret
	}
	return *o.LAST_SEEN_ON_HARDCODED_TS
}

// GetLAST_SEEN_ON_HARDCODED_TSOk returns a tuple with the LAST_SEEN_ON_HARDCODED_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_SEEN_ON_HARDCODED_TSOk() (*int32, bool) {
	if o == nil || isNil(o.LAST_SEEN_ON_HARDCODED_TS) {
		return nil, false
	}
	return o.LAST_SEEN_ON_HARDCODED_TS, true
}

// HasLAST_SEEN_ON_HARDCODED_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasLAST_SEEN_ON_HARDCODED_TS() bool {
	if o != nil && !isNil(o.LAST_SEEN_ON_HARDCODED_TS) {
		return true
	}

	return false
}

// SetLAST_SEEN_ON_HARDCODED_TS gets a reference to the given int32 and assigns it to the LAST_SEEN_ON_HARDCODED_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetLAST_SEEN_ON_HARDCODED_TS(v int32) {
	o.LAST_SEEN_ON_HARDCODED_TS = &v
}

// GetLAST_SEEN_ON_INDEX_COMPOSITION_TS returns the LAST_SEEN_ON_INDEX_COMPOSITION_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_SEEN_ON_INDEX_COMPOSITION_TS() int32 {
	if o == nil || isNil(o.LAST_SEEN_ON_INDEX_COMPOSITION_TS) {
		var ret int32
		return ret
	}
	return *o.LAST_SEEN_ON_INDEX_COMPOSITION_TS
}

// GetLAST_SEEN_ON_INDEX_COMPOSITION_TSOk returns a tuple with the LAST_SEEN_ON_INDEX_COMPOSITION_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_SEEN_ON_INDEX_COMPOSITION_TSOk() (*int32, bool) {
	if o == nil || isNil(o.LAST_SEEN_ON_INDEX_COMPOSITION_TS) {
		return nil, false
	}
	return o.LAST_SEEN_ON_INDEX_COMPOSITION_TS, true
}

// HasLAST_SEEN_ON_INDEX_COMPOSITION_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasLAST_SEEN_ON_INDEX_COMPOSITION_TS() bool {
	if o != nil && !isNil(o.LAST_SEEN_ON_INDEX_COMPOSITION_TS) {
		return true
	}

	return false
}

// SetLAST_SEEN_ON_INDEX_COMPOSITION_TS gets a reference to the given int32 and assigns it to the LAST_SEEN_ON_INDEX_COMPOSITION_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetLAST_SEEN_ON_INDEX_COMPOSITION_TS(v int32) {
	o.LAST_SEEN_ON_INDEX_COMPOSITION_TS = &v
}

// GetLAST_SEEN_ON_NSQ_TS returns the LAST_SEEN_ON_NSQ_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_SEEN_ON_NSQ_TS() int32 {
	if o == nil || isNil(o.LAST_SEEN_ON_NSQ_TS) {
		var ret int32
		return ret
	}
	return *o.LAST_SEEN_ON_NSQ_TS
}

// GetLAST_SEEN_ON_NSQ_TSOk returns a tuple with the LAST_SEEN_ON_NSQ_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_SEEN_ON_NSQ_TSOk() (*int32, bool) {
	if o == nil || isNil(o.LAST_SEEN_ON_NSQ_TS) {
		return nil, false
	}
	return o.LAST_SEEN_ON_NSQ_TS, true
}

// HasLAST_SEEN_ON_NSQ_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasLAST_SEEN_ON_NSQ_TS() bool {
	if o != nil && !isNil(o.LAST_SEEN_ON_NSQ_TS) {
		return true
	}

	return false
}

// SetLAST_SEEN_ON_NSQ_TS gets a reference to the given int32 and assigns it to the LAST_SEEN_ON_NSQ_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetLAST_SEEN_ON_NSQ_TS(v int32) {
	o.LAST_SEEN_ON_NSQ_TS = &v
}

// GetLAST_SEEN_ON_POLLING_TS returns the LAST_SEEN_ON_POLLING_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_SEEN_ON_POLLING_TS() int32 {
	if o == nil || isNil(o.LAST_SEEN_ON_POLLING_TS) {
		var ret int32
		return ret
	}
	return *o.LAST_SEEN_ON_POLLING_TS
}

// GetLAST_SEEN_ON_POLLING_TSOk returns a tuple with the LAST_SEEN_ON_POLLING_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_SEEN_ON_POLLING_TSOk() (*int32, bool) {
	if o == nil || isNil(o.LAST_SEEN_ON_POLLING_TS) {
		return nil, false
	}
	return o.LAST_SEEN_ON_POLLING_TS, true
}

// HasLAST_SEEN_ON_POLLING_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasLAST_SEEN_ON_POLLING_TS() bool {
	if o != nil && !isNil(o.LAST_SEEN_ON_POLLING_TS) {
		return true
	}

	return false
}

// SetLAST_SEEN_ON_POLLING_TS gets a reference to the given int32 and assigns it to the LAST_SEEN_ON_POLLING_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetLAST_SEEN_ON_POLLING_TS(v int32) {
	o.LAST_SEEN_ON_POLLING_TS = &v
}

// GetLAST_SEEN_ON_STREAMING_TS returns the LAST_SEEN_ON_STREAMING_TS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_SEEN_ON_STREAMING_TS() int32 {
	if o == nil || isNil(o.LAST_SEEN_ON_STREAMING_TS) {
		var ret int32
		return ret
	}
	return *o.LAST_SEEN_ON_STREAMING_TS
}

// GetLAST_SEEN_ON_STREAMING_TSOk returns a tuple with the LAST_SEEN_ON_STREAMING_TS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_SEEN_ON_STREAMING_TSOk() (*int32, bool) {
	if o == nil || isNil(o.LAST_SEEN_ON_STREAMING_TS) {
		return nil, false
	}
	return o.LAST_SEEN_ON_STREAMING_TS, true
}

// HasLAST_SEEN_ON_STREAMING_TS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasLAST_SEEN_ON_STREAMING_TS() bool {
	if o != nil && !isNil(o.LAST_SEEN_ON_STREAMING_TS) {
		return true
	}

	return false
}

// SetLAST_SEEN_ON_STREAMING_TS gets a reference to the given int32 and assigns it to the LAST_SEEN_ON_STREAMING_TS field.
func (o *SPOTINSTRUMENTMETADATA) SetLAST_SEEN_ON_STREAMING_TS(v int32) {
	o.LAST_SEEN_ON_STREAMING_TS = &v
}

// GetLAST_TRADE_SPOT_FROM_BACKFILL returns the LAST_TRADE_SPOT_FROM_BACKFILL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_BACKFILL() map[string]interface{} {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_BACKFILL) {
		var ret map[string]interface{}
		return ret
	}
	return o.LAST_TRADE_SPOT_FROM_BACKFILL
}

// GetLAST_TRADE_SPOT_FROM_BACKFILLOk returns a tuple with the LAST_TRADE_SPOT_FROM_BACKFILL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_BACKFILLOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_BACKFILL) {
		return map[string]interface{}{}, false
	}
	return o.LAST_TRADE_SPOT_FROM_BACKFILL, true
}

// HasLAST_TRADE_SPOT_FROM_BACKFILL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasLAST_TRADE_SPOT_FROM_BACKFILL() bool {
	if o != nil && !isNil(o.LAST_TRADE_SPOT_FROM_BACKFILL) {
		return true
	}

	return false
}

// SetLAST_TRADE_SPOT_FROM_BACKFILL gets a reference to the given map[string]interface{} and assigns it to the LAST_TRADE_SPOT_FROM_BACKFILL field.
func (o *SPOTINSTRUMENTMETADATA) SetLAST_TRADE_SPOT_FROM_BACKFILL(v map[string]interface{}) {
	o.LAST_TRADE_SPOT_FROM_BACKFILL = v
}

// GetLAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL returns the LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL() map[string]interface{} {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL) {
		var ret map[string]interface{}
		return ret
	}
	return o.LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL
}

// GetLAST_TRADE_SPOT_FROM_BACKFILL_EXTERNALOk returns a tuple with the LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_BACKFILL_EXTERNALOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL) {
		return map[string]interface{}{}, false
	}
	return o.LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL, true
}

// HasLAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasLAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL() bool {
	if o != nil && !isNil(o.LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL) {
		return true
	}

	return false
}

// SetLAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL gets a reference to the given map[string]interface{} and assigns it to the LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL field.
func (o *SPOTINSTRUMENTMETADATA) SetLAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL(v map[string]interface{}) {
	o.LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL = v
}

// GetLAST_TRADE_SPOT_FROM_BLOB returns the LAST_TRADE_SPOT_FROM_BLOB field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_BLOB() map[string]interface{} {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_BLOB) {
		var ret map[string]interface{}
		return ret
	}
	return o.LAST_TRADE_SPOT_FROM_BLOB
}

// GetLAST_TRADE_SPOT_FROM_BLOBOk returns a tuple with the LAST_TRADE_SPOT_FROM_BLOB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_BLOBOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_BLOB) {
		return map[string]interface{}{}, false
	}
	return o.LAST_TRADE_SPOT_FROM_BLOB, true
}

// HasLAST_TRADE_SPOT_FROM_BLOB returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasLAST_TRADE_SPOT_FROM_BLOB() bool {
	if o != nil && !isNil(o.LAST_TRADE_SPOT_FROM_BLOB) {
		return true
	}

	return false
}

// SetLAST_TRADE_SPOT_FROM_BLOB gets a reference to the given map[string]interface{} and assigns it to the LAST_TRADE_SPOT_FROM_BLOB field.
func (o *SPOTINSTRUMENTMETADATA) SetLAST_TRADE_SPOT_FROM_BLOB(v map[string]interface{}) {
	o.LAST_TRADE_SPOT_FROM_BLOB = v
}

// GetLAST_TRADE_SPOT_FROM_BLOB_EXTERNAL returns the LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_BLOB_EXTERNAL() map[string]interface{} {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL) {
		var ret map[string]interface{}
		return ret
	}
	return o.LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL
}

// GetLAST_TRADE_SPOT_FROM_BLOB_EXTERNALOk returns a tuple with the LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_BLOB_EXTERNALOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL) {
		return map[string]interface{}{}, false
	}
	return o.LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL, true
}

// HasLAST_TRADE_SPOT_FROM_BLOB_EXTERNAL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasLAST_TRADE_SPOT_FROM_BLOB_EXTERNAL() bool {
	if o != nil && !isNil(o.LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL) {
		return true
	}

	return false
}

// SetLAST_TRADE_SPOT_FROM_BLOB_EXTERNAL gets a reference to the given map[string]interface{} and assigns it to the LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL field.
func (o *SPOTINSTRUMENTMETADATA) SetLAST_TRADE_SPOT_FROM_BLOB_EXTERNAL(v map[string]interface{}) {
	o.LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL = v
}

// GetLAST_TRADE_SPOT_FROM_CALCULATED returns the LAST_TRADE_SPOT_FROM_CALCULATED field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_CALCULATED() map[string]interface{} {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_CALCULATED) {
		var ret map[string]interface{}
		return ret
	}
	return o.LAST_TRADE_SPOT_FROM_CALCULATED
}

// GetLAST_TRADE_SPOT_FROM_CALCULATEDOk returns a tuple with the LAST_TRADE_SPOT_FROM_CALCULATED field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_CALCULATEDOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_CALCULATED) {
		return map[string]interface{}{}, false
	}
	return o.LAST_TRADE_SPOT_FROM_CALCULATED, true
}

// HasLAST_TRADE_SPOT_FROM_CALCULATED returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasLAST_TRADE_SPOT_FROM_CALCULATED() bool {
	if o != nil && !isNil(o.LAST_TRADE_SPOT_FROM_CALCULATED) {
		return true
	}

	return false
}

// SetLAST_TRADE_SPOT_FROM_CALCULATED gets a reference to the given map[string]interface{} and assigns it to the LAST_TRADE_SPOT_FROM_CALCULATED field.
func (o *SPOTINSTRUMENTMETADATA) SetLAST_TRADE_SPOT_FROM_CALCULATED(v map[string]interface{}) {
	o.LAST_TRADE_SPOT_FROM_CALCULATED = v
}

// GetLAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL returns the LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL() map[string]interface{} {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL) {
		var ret map[string]interface{}
		return ret
	}
	return o.LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL
}

// GetLAST_TRADE_SPOT_FROM_CALCULATED_EXTERNALOk returns a tuple with the LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_CALCULATED_EXTERNALOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL) {
		return map[string]interface{}{}, false
	}
	return o.LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL, true
}

// HasLAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasLAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL() bool {
	if o != nil && !isNil(o.LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL) {
		return true
	}

	return false
}

// SetLAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL gets a reference to the given map[string]interface{} and assigns it to the LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL field.
func (o *SPOTINSTRUMENTMETADATA) SetLAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL(v map[string]interface{}) {
	o.LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL = v
}

// GetLAST_TRADE_SPOT_FROM_FIX returns the LAST_TRADE_SPOT_FROM_FIX field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_FIX() map[string]interface{} {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_FIX) {
		var ret map[string]interface{}
		return ret
	}
	return o.LAST_TRADE_SPOT_FROM_FIX
}

// GetLAST_TRADE_SPOT_FROM_FIXOk returns a tuple with the LAST_TRADE_SPOT_FROM_FIX field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_FIXOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_FIX) {
		return map[string]interface{}{}, false
	}
	return o.LAST_TRADE_SPOT_FROM_FIX, true
}

// HasLAST_TRADE_SPOT_FROM_FIX returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasLAST_TRADE_SPOT_FROM_FIX() bool {
	if o != nil && !isNil(o.LAST_TRADE_SPOT_FROM_FIX) {
		return true
	}

	return false
}

// SetLAST_TRADE_SPOT_FROM_FIX gets a reference to the given map[string]interface{} and assigns it to the LAST_TRADE_SPOT_FROM_FIX field.
func (o *SPOTINSTRUMENTMETADATA) SetLAST_TRADE_SPOT_FROM_FIX(v map[string]interface{}) {
	o.LAST_TRADE_SPOT_FROM_FIX = v
}

// GetLAST_TRADE_SPOT_FROM_FIX_EXTERNAL returns the LAST_TRADE_SPOT_FROM_FIX_EXTERNAL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_FIX_EXTERNAL() map[string]interface{} {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_FIX_EXTERNAL) {
		var ret map[string]interface{}
		return ret
	}
	return o.LAST_TRADE_SPOT_FROM_FIX_EXTERNAL
}

// GetLAST_TRADE_SPOT_FROM_FIX_EXTERNALOk returns a tuple with the LAST_TRADE_SPOT_FROM_FIX_EXTERNAL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_FIX_EXTERNALOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_FIX_EXTERNAL) {
		return map[string]interface{}{}, false
	}
	return o.LAST_TRADE_SPOT_FROM_FIX_EXTERNAL, true
}

// HasLAST_TRADE_SPOT_FROM_FIX_EXTERNAL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasLAST_TRADE_SPOT_FROM_FIX_EXTERNAL() bool {
	if o != nil && !isNil(o.LAST_TRADE_SPOT_FROM_FIX_EXTERNAL) {
		return true
	}

	return false
}

// SetLAST_TRADE_SPOT_FROM_FIX_EXTERNAL gets a reference to the given map[string]interface{} and assigns it to the LAST_TRADE_SPOT_FROM_FIX_EXTERNAL field.
func (o *SPOTINSTRUMENTMETADATA) SetLAST_TRADE_SPOT_FROM_FIX_EXTERNAL(v map[string]interface{}) {
	o.LAST_TRADE_SPOT_FROM_FIX_EXTERNAL = v
}

// GetLAST_TRADE_SPOT_FROM_GO returns the LAST_TRADE_SPOT_FROM_GO field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_GO() map[string]interface{} {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_GO) {
		var ret map[string]interface{}
		return ret
	}
	return o.LAST_TRADE_SPOT_FROM_GO
}

// GetLAST_TRADE_SPOT_FROM_GOOk returns a tuple with the LAST_TRADE_SPOT_FROM_GO field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_GOOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_GO) {
		return map[string]interface{}{}, false
	}
	return o.LAST_TRADE_SPOT_FROM_GO, true
}

// HasLAST_TRADE_SPOT_FROM_GO returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasLAST_TRADE_SPOT_FROM_GO() bool {
	if o != nil && !isNil(o.LAST_TRADE_SPOT_FROM_GO) {
		return true
	}

	return false
}

// SetLAST_TRADE_SPOT_FROM_GO gets a reference to the given map[string]interface{} and assigns it to the LAST_TRADE_SPOT_FROM_GO field.
func (o *SPOTINSTRUMENTMETADATA) SetLAST_TRADE_SPOT_FROM_GO(v map[string]interface{}) {
	o.LAST_TRADE_SPOT_FROM_GO = v
}

// GetLAST_TRADE_SPOT_FROM_GO_EXTERNAL returns the LAST_TRADE_SPOT_FROM_GO_EXTERNAL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_GO_EXTERNAL() map[string]interface{} {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_GO_EXTERNAL) {
		var ret map[string]interface{}
		return ret
	}
	return o.LAST_TRADE_SPOT_FROM_GO_EXTERNAL
}

// GetLAST_TRADE_SPOT_FROM_GO_EXTERNALOk returns a tuple with the LAST_TRADE_SPOT_FROM_GO_EXTERNAL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_GO_EXTERNALOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_GO_EXTERNAL) {
		return map[string]interface{}{}, false
	}
	return o.LAST_TRADE_SPOT_FROM_GO_EXTERNAL, true
}

// HasLAST_TRADE_SPOT_FROM_GO_EXTERNAL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasLAST_TRADE_SPOT_FROM_GO_EXTERNAL() bool {
	if o != nil && !isNil(o.LAST_TRADE_SPOT_FROM_GO_EXTERNAL) {
		return true
	}

	return false
}

// SetLAST_TRADE_SPOT_FROM_GO_EXTERNAL gets a reference to the given map[string]interface{} and assigns it to the LAST_TRADE_SPOT_FROM_GO_EXTERNAL field.
func (o *SPOTINSTRUMENTMETADATA) SetLAST_TRADE_SPOT_FROM_GO_EXTERNAL(v map[string]interface{}) {
	o.LAST_TRADE_SPOT_FROM_GO_EXTERNAL = v
}

// GetLAST_TRADE_SPOT_FROM_POLLING returns the LAST_TRADE_SPOT_FROM_POLLING field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_POLLING() map[string]interface{} {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_POLLING) {
		var ret map[string]interface{}
		return ret
	}
	return o.LAST_TRADE_SPOT_FROM_POLLING
}

// GetLAST_TRADE_SPOT_FROM_POLLINGOk returns a tuple with the LAST_TRADE_SPOT_FROM_POLLING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_POLLINGOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_POLLING) {
		return map[string]interface{}{}, false
	}
	return o.LAST_TRADE_SPOT_FROM_POLLING, true
}

// HasLAST_TRADE_SPOT_FROM_POLLING returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasLAST_TRADE_SPOT_FROM_POLLING() bool {
	if o != nil && !isNil(o.LAST_TRADE_SPOT_FROM_POLLING) {
		return true
	}

	return false
}

// SetLAST_TRADE_SPOT_FROM_POLLING gets a reference to the given map[string]interface{} and assigns it to the LAST_TRADE_SPOT_FROM_POLLING field.
func (o *SPOTINSTRUMENTMETADATA) SetLAST_TRADE_SPOT_FROM_POLLING(v map[string]interface{}) {
	o.LAST_TRADE_SPOT_FROM_POLLING = v
}

// GetLAST_TRADE_SPOT_FROM_POLLING_EXTERNAL returns the LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_POLLING_EXTERNAL() map[string]interface{} {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL) {
		var ret map[string]interface{}
		return ret
	}
	return o.LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL
}

// GetLAST_TRADE_SPOT_FROM_POLLING_EXTERNALOk returns a tuple with the LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_POLLING_EXTERNALOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL) {
		return map[string]interface{}{}, false
	}
	return o.LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL, true
}

// HasLAST_TRADE_SPOT_FROM_POLLING_EXTERNAL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasLAST_TRADE_SPOT_FROM_POLLING_EXTERNAL() bool {
	if o != nil && !isNil(o.LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL) {
		return true
	}

	return false
}

// SetLAST_TRADE_SPOT_FROM_POLLING_EXTERNAL gets a reference to the given map[string]interface{} and assigns it to the LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL field.
func (o *SPOTINSTRUMENTMETADATA) SetLAST_TRADE_SPOT_FROM_POLLING_EXTERNAL(v map[string]interface{}) {
	o.LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL = v
}

// GetLAST_TRADE_SPOT_FROM_STREAMING returns the LAST_TRADE_SPOT_FROM_STREAMING field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_STREAMING() map[string]interface{} {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_STREAMING) {
		var ret map[string]interface{}
		return ret
	}
	return o.LAST_TRADE_SPOT_FROM_STREAMING
}

// GetLAST_TRADE_SPOT_FROM_STREAMINGOk returns a tuple with the LAST_TRADE_SPOT_FROM_STREAMING field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_STREAMINGOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_STREAMING) {
		return map[string]interface{}{}, false
	}
	return o.LAST_TRADE_SPOT_FROM_STREAMING, true
}

// HasLAST_TRADE_SPOT_FROM_STREAMING returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasLAST_TRADE_SPOT_FROM_STREAMING() bool {
	if o != nil && !isNil(o.LAST_TRADE_SPOT_FROM_STREAMING) {
		return true
	}

	return false
}

// SetLAST_TRADE_SPOT_FROM_STREAMING gets a reference to the given map[string]interface{} and assigns it to the LAST_TRADE_SPOT_FROM_STREAMING field.
func (o *SPOTINSTRUMENTMETADATA) SetLAST_TRADE_SPOT_FROM_STREAMING(v map[string]interface{}) {
	o.LAST_TRADE_SPOT_FROM_STREAMING = v
}

// GetLAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL returns the LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL() map[string]interface{} {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL) {
		var ret map[string]interface{}
		return ret
	}
	return o.LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL
}

// GetLAST_TRADE_SPOT_FROM_STREAMING_EXTERNALOk returns a tuple with the LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetLAST_TRADE_SPOT_FROM_STREAMING_EXTERNALOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL) {
		return map[string]interface{}{}, false
	}
	return o.LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL, true
}

// HasLAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasLAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL() bool {
	if o != nil && !isNil(o.LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL) {
		return true
	}

	return false
}

// SetLAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL gets a reference to the given map[string]interface{} and assigns it to the LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL field.
func (o *SPOTINSTRUMENTMETADATA) SetLAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL(v map[string]interface{}) {
	o.LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL = v
}

// GetMETADATA_VERSION returns the METADATA_VERSION field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetMETADATA_VERSION() int32 {
	if o == nil || isNil(o.METADATA_VERSION) {
		var ret int32
		return ret
	}
	return *o.METADATA_VERSION
}

// GetMETADATA_VERSIONOk returns a tuple with the METADATA_VERSION field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetMETADATA_VERSIONOk() (*int32, bool) {
	if o == nil || isNil(o.METADATA_VERSION) {
		return nil, false
	}
	return o.METADATA_VERSION, true
}

// HasMETADATA_VERSION returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasMETADATA_VERSION() bool {
	if o != nil && !isNil(o.METADATA_VERSION) {
		return true
	}

	return false
}

// SetMETADATA_VERSION gets a reference to the given int32 and assigns it to the METADATA_VERSION field.
func (o *SPOTINSTRUMENTMETADATA) SetMETADATA_VERSION(v int32) {
	o.METADATA_VERSION = &v
}

// GetPROCESSING_TRADES_FROM_BLOB_STATUS returns the PROCESSING_TRADES_FROM_BLOB_STATUS field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetPROCESSING_TRADES_FROM_BLOB_STATUS() string {
	if o == nil || isNil(o.PROCESSING_TRADES_FROM_BLOB_STATUS) {
		var ret string
		return ret
	}
	return *o.PROCESSING_TRADES_FROM_BLOB_STATUS
}

// GetPROCESSING_TRADES_FROM_BLOB_STATUSOk returns a tuple with the PROCESSING_TRADES_FROM_BLOB_STATUS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetPROCESSING_TRADES_FROM_BLOB_STATUSOk() (*string, bool) {
	if o == nil || isNil(o.PROCESSING_TRADES_FROM_BLOB_STATUS) {
		return nil, false
	}
	return o.PROCESSING_TRADES_FROM_BLOB_STATUS, true
}

// HasPROCESSING_TRADES_FROM_BLOB_STATUS returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasPROCESSING_TRADES_FROM_BLOB_STATUS() bool {
	if o != nil && !isNil(o.PROCESSING_TRADES_FROM_BLOB_STATUS) {
		return true
	}

	return false
}

// SetPROCESSING_TRADES_FROM_BLOB_STATUS gets a reference to the given string and assigns it to the PROCESSING_TRADES_FROM_BLOB_STATUS field.
func (o *SPOTINSTRUMENTMETADATA) SetPROCESSING_TRADES_FROM_BLOB_STATUS(v string) {
	o.PROCESSING_TRADES_FROM_BLOB_STATUS = &v
}

// GetTOTAL_TRADES_SPOT returns the TOTAL_TRADES_SPOT field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetTOTAL_TRADES_SPOT() int32 {
	if o == nil || isNil(o.TOTAL_TRADES_SPOT) {
		var ret int32
		return ret
	}
	return *o.TOTAL_TRADES_SPOT
}

// GetTOTAL_TRADES_SPOTOk returns a tuple with the TOTAL_TRADES_SPOT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetTOTAL_TRADES_SPOTOk() (*int32, bool) {
	if o == nil || isNil(o.TOTAL_TRADES_SPOT) {
		return nil, false
	}
	return o.TOTAL_TRADES_SPOT, true
}

// HasTOTAL_TRADES_SPOT returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasTOTAL_TRADES_SPOT() bool {
	if o != nil && !isNil(o.TOTAL_TRADES_SPOT) {
		return true
	}

	return false
}

// SetTOTAL_TRADES_SPOT gets a reference to the given int32 and assigns it to the TOTAL_TRADES_SPOT field.
func (o *SPOTINSTRUMENTMETADATA) SetTOTAL_TRADES_SPOT(v int32) {
	o.TOTAL_TRADES_SPOT = &v
}

// GetUNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA returns the UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetUNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA() map[string]interface{} {
	if o == nil || isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA) {
		var ret map[string]interface{}
		return ret
	}
	return o.UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA
}

// GetUNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATAOk returns a tuple with the UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetUNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATAOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA) {
		return map[string]interface{}{}, false
	}
	return o.UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA, true
}

// HasUNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasUNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA() bool {
	if o != nil && !isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA) {
		return true
	}

	return false
}

// SetUNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA gets a reference to the given map[string]interface{} and assigns it to the UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA field.
func (o *SPOTINSTRUMENTMETADATA) SetUNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA(v map[string]interface{}) {
	o.UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA = v
}

// GetUNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA returns the UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetUNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA() map[string]interface{} {
	if o == nil || isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA) {
		var ret map[string]interface{}
		return ret
	}
	return o.UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA
}

// GetUNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATAOk returns a tuple with the UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetUNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATAOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA) {
		return map[string]interface{}{}, false
	}
	return o.UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA, true
}

// HasUNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasUNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA() bool {
	if o != nil && !isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA) {
		return true
	}

	return false
}

// SetUNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA gets a reference to the given map[string]interface{} and assigns it to the UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA field.
func (o *SPOTINSTRUMENTMETADATA) SetUNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA(v map[string]interface{}) {
	o.UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA = v
}

// GetUNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA returns the UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetUNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA() map[string]interface{} {
	if o == nil || isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA) {
		var ret map[string]interface{}
		return ret
	}
	return o.UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA
}

// GetUNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATAOk returns a tuple with the UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetUNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATAOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA) {
		return map[string]interface{}{}, false
	}
	return o.UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA, true
}

// HasUNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasUNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA() bool {
	if o != nil && !isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA) {
		return true
	}

	return false
}

// SetUNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA gets a reference to the given map[string]interface{} and assigns it to the UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA field.
func (o *SPOTINSTRUMENTMETADATA) SetUNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA(v map[string]interface{}) {
	o.UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA = v
}

// GetUNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA returns the UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetUNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA() map[string]interface{} {
	if o == nil || isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA) {
		var ret map[string]interface{}
		return ret
	}
	return o.UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA
}

// GetUNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATAOk returns a tuple with the UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetUNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATAOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA) {
		return map[string]interface{}{}, false
	}
	return o.UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA, true
}

// HasUNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasUNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA() bool {
	if o != nil && !isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA) {
		return true
	}

	return false
}

// SetUNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA gets a reference to the given map[string]interface{} and assigns it to the UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA field.
func (o *SPOTINSTRUMENTMETADATA) SetUNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA(v map[string]interface{}) {
	o.UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA = v
}

// GetUNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA returns the UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetUNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA() map[string]interface{} {
	if o == nil || isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA) {
		var ret map[string]interface{}
		return ret
	}
	return o.UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA
}

// GetUNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATAOk returns a tuple with the UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetUNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATAOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA) {
		return map[string]interface{}{}, false
	}
	return o.UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA, true
}

// HasUNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasUNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA() bool {
	if o != nil && !isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA) {
		return true
	}

	return false
}

// SetUNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA gets a reference to the given map[string]interface{} and assigns it to the UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA field.
func (o *SPOTINSTRUMENTMETADATA) SetUNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA(v map[string]interface{}) {
	o.UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA = v
}

// GetUNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA returns the UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetUNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA() map[string]interface{} {
	if o == nil || isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA) {
		var ret map[string]interface{}
		return ret
	}
	return o.UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA
}

// GetUNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATAOk returns a tuple with the UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetUNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATAOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA) {
		return map[string]interface{}{}, false
	}
	return o.UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA, true
}

// HasUNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasUNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA() bool {
	if o != nil && !isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA) {
		return true
	}

	return false
}

// SetUNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA gets a reference to the given map[string]interface{} and assigns it to the UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA field.
func (o *SPOTINSTRUMENTMETADATA) SetUNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA(v map[string]interface{}) {
	o.UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA = v
}

// GetUNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA returns the UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA field value if set, zero value otherwise.
func (o *SPOTINSTRUMENTMETADATA) GetUNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA() map[string]interface{} {
	if o == nil || isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA) {
		var ret map[string]interface{}
		return ret
	}
	return o.UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA
}

// GetUNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATAOk returns a tuple with the UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SPOTINSTRUMENTMETADATA) GetUNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATAOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA) {
		return map[string]interface{}{}, false
	}
	return o.UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA, true
}

// HasUNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA returns a boolean if a field has been set.
func (o *SPOTINSTRUMENTMETADATA) HasUNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA() bool {
	if o != nil && !isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA) {
		return true
	}

	return false
}

// SetUNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA gets a reference to the given map[string]interface{} and assigns it to the UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA field.
func (o *SPOTINSTRUMENTMETADATA) SetUNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA(v map[string]interface{}) {
	o.UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA = v
}

func (o SPOTINSTRUMENTMETADATA) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SPOTINSTRUMENTMETADATA) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.FIRST_SEEN_ON_BLOB_TS) {
		toSerialize["FIRST_SEEN_ON_BLOB_TS"] = o.FIRST_SEEN_ON_BLOB_TS
	}
	if !isNil(o.FIRST_SEEN_ON_FIX_TS) {
		toSerialize["FIRST_SEEN_ON_FIX_TS"] = o.FIRST_SEEN_ON_FIX_TS
	}
	if !isNil(o.FIRST_SEEN_ON_HARDCODED_TS) {
		toSerialize["FIRST_SEEN_ON_HARDCODED_TS"] = o.FIRST_SEEN_ON_HARDCODED_TS
	}
	if !isNil(o.FIRST_SEEN_ON_INDEX_COMPOSITION_TS) {
		toSerialize["FIRST_SEEN_ON_INDEX_COMPOSITION_TS"] = o.FIRST_SEEN_ON_INDEX_COMPOSITION_TS
	}
	if !isNil(o.FIRST_SEEN_ON_NSQ_TS) {
		toSerialize["FIRST_SEEN_ON_NSQ_TS"] = o.FIRST_SEEN_ON_NSQ_TS
	}
	if !isNil(o.FIRST_SEEN_ON_POLLING_TS) {
		toSerialize["FIRST_SEEN_ON_POLLING_TS"] = o.FIRST_SEEN_ON_POLLING_TS
	}
	if !isNil(o.FIRST_SEEN_ON_STREAMING_TS) {
		toSerialize["FIRST_SEEN_ON_STREAMING_TS"] = o.FIRST_SEEN_ON_STREAMING_TS
	}
	if !isNil(o.FIRST_TRADE_SPOT_FROM_BACKFILL) {
		toSerialize["FIRST_TRADE_SPOT_FROM_BACKFILL"] = o.FIRST_TRADE_SPOT_FROM_BACKFILL
	}
	if !isNil(o.FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL) {
		toSerialize["FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL"] = o.FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL
	}
	if !isNil(o.FIRST_TRADE_SPOT_FROM_BLOB) {
		toSerialize["FIRST_TRADE_SPOT_FROM_BLOB"] = o.FIRST_TRADE_SPOT_FROM_BLOB
	}
	if !isNil(o.FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL) {
		toSerialize["FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL"] = o.FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL
	}
	if !isNil(o.FIRST_TRADE_SPOT_FROM_CALCULATED) {
		toSerialize["FIRST_TRADE_SPOT_FROM_CALCULATED"] = o.FIRST_TRADE_SPOT_FROM_CALCULATED
	}
	if !isNil(o.FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL) {
		toSerialize["FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL"] = o.FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL
	}
	if !isNil(o.FIRST_TRADE_SPOT_FROM_FIX) {
		toSerialize["FIRST_TRADE_SPOT_FROM_FIX"] = o.FIRST_TRADE_SPOT_FROM_FIX
	}
	if !isNil(o.FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL) {
		toSerialize["FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL"] = o.FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL
	}
	if !isNil(o.FIRST_TRADE_SPOT_FROM_GO) {
		toSerialize["FIRST_TRADE_SPOT_FROM_GO"] = o.FIRST_TRADE_SPOT_FROM_GO
	}
	if !isNil(o.FIRST_TRADE_SPOT_FROM_GO_EXTERNAL) {
		toSerialize["FIRST_TRADE_SPOT_FROM_GO_EXTERNAL"] = o.FIRST_TRADE_SPOT_FROM_GO_EXTERNAL
	}
	if !isNil(o.FIRST_TRADE_SPOT_FROM_POLLING) {
		toSerialize["FIRST_TRADE_SPOT_FROM_POLLING"] = o.FIRST_TRADE_SPOT_FROM_POLLING
	}
	if !isNil(o.FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL) {
		toSerialize["FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL"] = o.FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL
	}
	if !isNil(o.FIRST_TRADE_SPOT_FROM_STREAMING) {
		toSerialize["FIRST_TRADE_SPOT_FROM_STREAMING"] = o.FIRST_TRADE_SPOT_FROM_STREAMING
	}
	if !isNil(o.FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL) {
		toSerialize["FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL"] = o.FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL
	}
	if !isNil(o.HOST_MIGRATION_DESTINATION) {
		toSerialize["HOST_MIGRATION_DESTINATION"] = o.HOST_MIGRATION_DESTINATION
	}
	if !isNil(o.HOST_MIGRATION_SOURCE) {
		toSerialize["HOST_MIGRATION_SOURCE"] = o.HOST_MIGRATION_SOURCE
	}
	if !isNil(o.HOST_MIGRATION_STATUS) {
		toSerialize["HOST_MIGRATION_STATUS"] = o.HOST_MIGRATION_STATUS
	}
	if !isNil(o.INSTRUMENT) {
		toSerialize["INSTRUMENT"] = o.INSTRUMENT
	}
	if !isNil(o.INSTRUMENT_EXTERNAL_DATA) {
		toSerialize["INSTRUMENT_EXTERNAL_DATA"] = o.INSTRUMENT_EXTERNAL_DATA
	}
	if !isNil(o.INSTRUMENT_MAPPING) {
		toSerialize["INSTRUMENT_MAPPING"] = o.INSTRUMENT_MAPPING
	}
	if !isNil(o.INSTRUMENT_MAPPING_HISTORY) {
		toSerialize["INSTRUMENT_MAPPING_HISTORY"] = o.INSTRUMENT_MAPPING_HISTORY
	}
	if !isNil(o.INSTRUMENT_SOURCE_BACKFILL) {
		toSerialize["INSTRUMENT_SOURCE_BACKFILL"] = o.INSTRUMENT_SOURCE_BACKFILL
	}
	if !isNil(o.INSTRUMENT_SOURCE_BLOB) {
		toSerialize["INSTRUMENT_SOURCE_BLOB"] = o.INSTRUMENT_SOURCE_BLOB
	}
	if !isNil(o.INSTRUMENT_SOURCE_CALCULATED) {
		toSerialize["INSTRUMENT_SOURCE_CALCULATED"] = o.INSTRUMENT_SOURCE_CALCULATED
	}
	if !isNil(o.INSTRUMENT_SOURCE_FIX) {
		toSerialize["INSTRUMENT_SOURCE_FIX"] = o.INSTRUMENT_SOURCE_FIX
	}
	if !isNil(o.INSTRUMENT_SOURCE_GO) {
		toSerialize["INSTRUMENT_SOURCE_GO"] = o.INSTRUMENT_SOURCE_GO
	}
	if !isNil(o.INSTRUMENT_SOURCE_POLLING) {
		toSerialize["INSTRUMENT_SOURCE_POLLING"] = o.INSTRUMENT_SOURCE_POLLING
	}
	if !isNil(o.INSTRUMENT_SOURCE_STREAMING) {
		toSerialize["INSTRUMENT_SOURCE_STREAMING"] = o.INSTRUMENT_SOURCE_STREAMING
	}
	if !isNil(o.INSTRUMENT_STATUS) {
		toSerialize["INSTRUMENT_STATUS"] = o.INSTRUMENT_STATUS
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST"] = o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS"] = o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS"] = o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS"] = o.INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST"] = o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS"] = o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS"] = o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS"] = o.INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST"] = o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS"] = o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS"] = o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS"] = o.INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST"] = o.INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS"] = o.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS"] = o.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS"] = o.INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST"] = o.INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS"] = o.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS"] = o.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS"] = o.INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST"] = o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS"] = o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS"] = o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS"] = o.INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST"] = o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS"] = o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS"] = o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS) {
		toSerialize["INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS"] = o.INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION) {
		toSerialize["INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION"] = o.INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_REST_URI) {
		toSerialize["INSTRUMENT_TRADE_SPOT_REST_URI"] = o.INSTRUMENT_TRADE_SPOT_REST_URI
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_REST_URL) {
		toSerialize["INSTRUMENT_TRADE_SPOT_REST_URL"] = o.INSTRUMENT_TRADE_SPOT_REST_URL
	}
	if !isNil(o.INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION) {
		toSerialize["INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION"] = o.INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION
	}
	if !isNil(o.LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS) {
		toSerialize["LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS"] = o.LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS
	}
	if !isNil(o.LAST_SEEN_ON_BLOB_TS) {
		toSerialize["LAST_SEEN_ON_BLOB_TS"] = o.LAST_SEEN_ON_BLOB_TS
	}
	if !isNil(o.LAST_SEEN_ON_FIX_TS) {
		toSerialize["LAST_SEEN_ON_FIX_TS"] = o.LAST_SEEN_ON_FIX_TS
	}
	if !isNil(o.LAST_SEEN_ON_HARDCODED_TS) {
		toSerialize["LAST_SEEN_ON_HARDCODED_TS"] = o.LAST_SEEN_ON_HARDCODED_TS
	}
	if !isNil(o.LAST_SEEN_ON_INDEX_COMPOSITION_TS) {
		toSerialize["LAST_SEEN_ON_INDEX_COMPOSITION_TS"] = o.LAST_SEEN_ON_INDEX_COMPOSITION_TS
	}
	if !isNil(o.LAST_SEEN_ON_NSQ_TS) {
		toSerialize["LAST_SEEN_ON_NSQ_TS"] = o.LAST_SEEN_ON_NSQ_TS
	}
	if !isNil(o.LAST_SEEN_ON_POLLING_TS) {
		toSerialize["LAST_SEEN_ON_POLLING_TS"] = o.LAST_SEEN_ON_POLLING_TS
	}
	if !isNil(o.LAST_SEEN_ON_STREAMING_TS) {
		toSerialize["LAST_SEEN_ON_STREAMING_TS"] = o.LAST_SEEN_ON_STREAMING_TS
	}
	if !isNil(o.LAST_TRADE_SPOT_FROM_BACKFILL) {
		toSerialize["LAST_TRADE_SPOT_FROM_BACKFILL"] = o.LAST_TRADE_SPOT_FROM_BACKFILL
	}
	if !isNil(o.LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL) {
		toSerialize["LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL"] = o.LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL
	}
	if !isNil(o.LAST_TRADE_SPOT_FROM_BLOB) {
		toSerialize["LAST_TRADE_SPOT_FROM_BLOB"] = o.LAST_TRADE_SPOT_FROM_BLOB
	}
	if !isNil(o.LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL) {
		toSerialize["LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL"] = o.LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL
	}
	if !isNil(o.LAST_TRADE_SPOT_FROM_CALCULATED) {
		toSerialize["LAST_TRADE_SPOT_FROM_CALCULATED"] = o.LAST_TRADE_SPOT_FROM_CALCULATED
	}
	if !isNil(o.LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL) {
		toSerialize["LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL"] = o.LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL
	}
	if !isNil(o.LAST_TRADE_SPOT_FROM_FIX) {
		toSerialize["LAST_TRADE_SPOT_FROM_FIX"] = o.LAST_TRADE_SPOT_FROM_FIX
	}
	if !isNil(o.LAST_TRADE_SPOT_FROM_FIX_EXTERNAL) {
		toSerialize["LAST_TRADE_SPOT_FROM_FIX_EXTERNAL"] = o.LAST_TRADE_SPOT_FROM_FIX_EXTERNAL
	}
	if !isNil(o.LAST_TRADE_SPOT_FROM_GO) {
		toSerialize["LAST_TRADE_SPOT_FROM_GO"] = o.LAST_TRADE_SPOT_FROM_GO
	}
	if !isNil(o.LAST_TRADE_SPOT_FROM_GO_EXTERNAL) {
		toSerialize["LAST_TRADE_SPOT_FROM_GO_EXTERNAL"] = o.LAST_TRADE_SPOT_FROM_GO_EXTERNAL
	}
	if !isNil(o.LAST_TRADE_SPOT_FROM_POLLING) {
		toSerialize["LAST_TRADE_SPOT_FROM_POLLING"] = o.LAST_TRADE_SPOT_FROM_POLLING
	}
	if !isNil(o.LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL) {
		toSerialize["LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL"] = o.LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL
	}
	if !isNil(o.LAST_TRADE_SPOT_FROM_STREAMING) {
		toSerialize["LAST_TRADE_SPOT_FROM_STREAMING"] = o.LAST_TRADE_SPOT_FROM_STREAMING
	}
	if !isNil(o.LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL) {
		toSerialize["LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL"] = o.LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL
	}
	if !isNil(o.METADATA_VERSION) {
		toSerialize["METADATA_VERSION"] = o.METADATA_VERSION
	}
	if !isNil(o.PROCESSING_TRADES_FROM_BLOB_STATUS) {
		toSerialize["PROCESSING_TRADES_FROM_BLOB_STATUS"] = o.PROCESSING_TRADES_FROM_BLOB_STATUS
	}
	if !isNil(o.TOTAL_TRADES_SPOT) {
		toSerialize["TOTAL_TRADES_SPOT"] = o.TOTAL_TRADES_SPOT
	}
	if !isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA) {
		toSerialize["UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA"] = o.UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA
	}
	if !isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA) {
		toSerialize["UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA"] = o.UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA
	}
	if !isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA) {
		toSerialize["UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA"] = o.UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA
	}
	if !isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA) {
		toSerialize["UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA"] = o.UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA
	}
	if !isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA) {
		toSerialize["UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA"] = o.UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA
	}
	if !isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA) {
		toSerialize["UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA"] = o.UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA
	}
	if !isNil(o.UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA) {
		toSerialize["UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA"] = o.UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA
	}
	return toSerialize, nil
}

type NullableSPOTINSTRUMENTMETADATA struct {
	value *SPOTINSTRUMENTMETADATA
	isSet bool
}

func (v NullableSPOTINSTRUMENTMETADATA) Get() *SPOTINSTRUMENTMETADATA {
	return v.value
}

func (v *NullableSPOTINSTRUMENTMETADATA) Set(val *SPOTINSTRUMENTMETADATA) {
	v.value = val
	v.isSet = true
}

func (v NullableSPOTINSTRUMENTMETADATA) IsSet() bool {
	return v.isSet
}

func (v *NullableSPOTINSTRUMENTMETADATA) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSPOTINSTRUMENTMETADATA(val *SPOTINSTRUMENTMETADATA) *NullableSPOTINSTRUMENTMETADATA {
	return &NullableSPOTINSTRUMENTMETADATA{value: val, isSet: true}
}

func (v NullableSPOTINSTRUMENTMETADATA) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSPOTINSTRUMENTMETADATA) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


