@isTest
private class OASSPOTINSTRUMENTTRADETest {
    @isTest
    private static void equalsSameInstance() {
        OASSPOTINSTRUMENTTRADE SPOT_INSTRUMENT_TRADE1 = OASSPOTINSTRUMENTTRADE.getExample();
        OASSPOTINSTRUMENTTRADE SPOT_INSTRUMENT_TRADE2 = SPOT_INSTRUMENT_TRADE1;
        OASSPOTINSTRUMENTTRADE SPOT_INSTRUMENT_TRADE3 = new OASSPOTINSTRUMENTTRADE();
        OASSPOTINSTRUMENTTRADE SPOT_INSTRUMENT_TRADE4 = SPOT_INSTRUMENT_TRADE3;

        System.assert(SPOT_INSTRUMENT_TRADE1.equals(SPOT_INSTRUMENT_TRADE2));
        System.assert(SPOT_INSTRUMENT_TRADE2.equals(SPOT_INSTRUMENT_TRADE1));
        System.assert(SPOT_INSTRUMENT_TRADE1.equals(SPOT_INSTRUMENT_TRADE1));
        System.assert(SPOT_INSTRUMENT_TRADE3.equals(SPOT_INSTRUMENT_TRADE4));
        System.assert(SPOT_INSTRUMENT_TRADE4.equals(SPOT_INSTRUMENT_TRADE3));
        System.assert(SPOT_INSTRUMENT_TRADE3.equals(SPOT_INSTRUMENT_TRADE3));
    }

    @isTest
    private static void equalsIdenticalInstance() {
        OASSPOTINSTRUMENTTRADE SPOT_INSTRUMENT_TRADE1 = OASSPOTINSTRUMENTTRADE.getExample();
        OASSPOTINSTRUMENTTRADE SPOT_INSTRUMENT_TRADE2 = OASSPOTINSTRUMENTTRADE.getExample();
        OASSPOTINSTRUMENTTRADE SPOT_INSTRUMENT_TRADE3 = new OASSPOTINSTRUMENTTRADE();
        OASSPOTINSTRUMENTTRADE SPOT_INSTRUMENT_TRADE4 = new OASSPOTINSTRUMENTTRADE();

        System.assert(SPOT_INSTRUMENT_TRADE1.equals(SPOT_INSTRUMENT_TRADE2));
        System.assert(SPOT_INSTRUMENT_TRADE2.equals(SPOT_INSTRUMENT_TRADE1));
        System.assert(SPOT_INSTRUMENT_TRADE3.equals(SPOT_INSTRUMENT_TRADE4));
        System.assert(SPOT_INSTRUMENT_TRADE4.equals(SPOT_INSTRUMENT_TRADE3));
    }

    @isTest
    private static void notEqualsDifferentType() {
        OASSPOTINSTRUMENTTRADE SPOT_INSTRUMENT_TRADE1 = OASSPOTINSTRUMENTTRADE.getExample();
        OASSPOTINSTRUMENTTRADE SPOT_INSTRUMENT_TRADE2 = new OASSPOTINSTRUMENTTRADE();

        System.assertEquals(false, SPOT_INSTRUMENT_TRADE1.equals('foo'));
        System.assertEquals(false, SPOT_INSTRUMENT_TRADE2.equals('foo'));
    }

    @isTest
    private static void notEqualsNull() {
        OASSPOTINSTRUMENTTRADE SPOT_INSTRUMENT_TRADE1 = OASSPOTINSTRUMENTTRADE.getExample();
        OASSPOTINSTRUMENTTRADE SPOT_INSTRUMENT_TRADE2 = new OASSPOTINSTRUMENTTRADE();
        OASSPOTINSTRUMENTTRADE SPOT_INSTRUMENT_TRADE3;

        System.assertEquals(false, SPOT_INSTRUMENT_TRADE1.equals(SPOT_INSTRUMENT_TRADE3));
        System.assertEquals(false, SPOT_INSTRUMENT_TRADE2.equals(SPOT_INSTRUMENT_TRADE3));
    }

    @isTest
    private static void consistentHashCodeValue() {
        OASSPOTINSTRUMENTTRADE SPOT_INSTRUMENT_TRADE1 = OASSPOTINSTRUMENTTRADE.getExample();
        OASSPOTINSTRUMENTTRADE SPOT_INSTRUMENT_TRADE2 = new OASSPOTINSTRUMENTTRADE();

        System.assertEquals(SPOT_INSTRUMENT_TRADE1.hashCode(), SPOT_INSTRUMENT_TRADE1.hashCode());
        System.assertEquals(SPOT_INSTRUMENT_TRADE2.hashCode(), SPOT_INSTRUMENT_TRADE2.hashCode());
    }

    @isTest
    private static void equalInstancesHaveSameHashCode() {
        OASSPOTINSTRUMENTTRADE SPOT_INSTRUMENT_TRADE1 = OASSPOTINSTRUMENTTRADE.getExample();
        OASSPOTINSTRUMENTTRADE SPOT_INSTRUMENT_TRADE2 = OASSPOTINSTRUMENTTRADE.getExample();
        OASSPOTINSTRUMENTTRADE SPOT_INSTRUMENT_TRADE3 = new OASSPOTINSTRUMENTTRADE();
        OASSPOTINSTRUMENTTRADE SPOT_INSTRUMENT_TRADE4 = new OASSPOTINSTRUMENTTRADE();

        System.assert(SPOT_INSTRUMENT_TRADE1.equals(SPOT_INSTRUMENT_TRADE2));
        System.assert(SPOT_INSTRUMENT_TRADE3.equals(SPOT_INSTRUMENT_TRADE4));
        System.assertEquals(SPOT_INSTRUMENT_TRADE1.hashCode(), SPOT_INSTRUMENT_TRADE2.hashCode());
        System.assertEquals(SPOT_INSTRUMENT_TRADE3.hashCode(), SPOT_INSTRUMENT_TRADE4.hashCode());
    }
}
