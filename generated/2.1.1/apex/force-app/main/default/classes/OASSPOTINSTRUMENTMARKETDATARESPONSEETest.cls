@isTest
private class OASSPOTINSTRUMENTMARKETDATARESPONSEETest {
    @isTest
    private static void equalsSameInstance() {
        OASSPOTINSTRUMENTMARKETDATARESPONSEE spOTINSTRUMENTMARKETDATARESPONSEErr1 = OASSPOTINSTRUMENTMARKETDATARESPONSEE.getExample();
        OASSPOTINSTRUMENTMARKETDATARESPONSEE spOTINSTRUMENTMARKETDATARESPONSEErr2 = spOTINSTRUMENTMARKETDATARESPONSEErr1;
        OASSPOTINSTRUMENTMARKETDATARESPONSEE spOTINSTRUMENTMARKETDATARESPONSEErr3 = new OASSPOTINSTRUMENTMARKETDATARESPONSEE();
        OASSPOTINSTRUMENTMARKETDATARESPONSEE spOTINSTRUMENTMARKETDATARESPONSEErr4 = spOTINSTRUMENTMARKETDATARESPONSEErr3;

        System.assert(spOTINSTRUMENTMARKETDATARESPONSEErr1.equals(spOTINSTRUMENTMARKETDATARESPONSEErr2));
        System.assert(spOTINSTRUMENTMARKETDATARESPONSEErr2.equals(spOTINSTRUMENTMARKETDATARESPONSEErr1));
        System.assert(spOTINSTRUMENTMARKETDATARESPONSEErr1.equals(spOTINSTRUMENTMARKETDATARESPONSEErr1));
        System.assert(spOTINSTRUMENTMARKETDATARESPONSEErr3.equals(spOTINSTRUMENTMARKETDATARESPONSEErr4));
        System.assert(spOTINSTRUMENTMARKETDATARESPONSEErr4.equals(spOTINSTRUMENTMARKETDATARESPONSEErr3));
        System.assert(spOTINSTRUMENTMARKETDATARESPONSEErr3.equals(spOTINSTRUMENTMARKETDATARESPONSEErr3));
    }

    @isTest
    private static void equalsIdenticalInstance() {
        OASSPOTINSTRUMENTMARKETDATARESPONSEE spOTINSTRUMENTMARKETDATARESPONSEErr1 = OASSPOTINSTRUMENTMARKETDATARESPONSEE.getExample();
        OASSPOTINSTRUMENTMARKETDATARESPONSEE spOTINSTRUMENTMARKETDATARESPONSEErr2 = OASSPOTINSTRUMENTMARKETDATARESPONSEE.getExample();
        OASSPOTINSTRUMENTMARKETDATARESPONSEE spOTINSTRUMENTMARKETDATARESPONSEErr3 = new OASSPOTINSTRUMENTMARKETDATARESPONSEE();
        OASSPOTINSTRUMENTMARKETDATARESPONSEE spOTINSTRUMENTMARKETDATARESPONSEErr4 = new OASSPOTINSTRUMENTMARKETDATARESPONSEE();

        System.assert(spOTINSTRUMENTMARKETDATARESPONSEErr1.equals(spOTINSTRUMENTMARKETDATARESPONSEErr2));
        System.assert(spOTINSTRUMENTMARKETDATARESPONSEErr2.equals(spOTINSTRUMENTMARKETDATARESPONSEErr1));
        System.assert(spOTINSTRUMENTMARKETDATARESPONSEErr3.equals(spOTINSTRUMENTMARKETDATARESPONSEErr4));
        System.assert(spOTINSTRUMENTMARKETDATARESPONSEErr4.equals(spOTINSTRUMENTMARKETDATARESPONSEErr3));
    }

    @isTest
    private static void notEqualsDifferentType() {
        OASSPOTINSTRUMENTMARKETDATARESPONSEE spOTINSTRUMENTMARKETDATARESPONSEErr1 = OASSPOTINSTRUMENTMARKETDATARESPONSEE.getExample();
        OASSPOTINSTRUMENTMARKETDATARESPONSEE spOTINSTRUMENTMARKETDATARESPONSEErr2 = new OASSPOTINSTRUMENTMARKETDATARESPONSEE();

        System.assertEquals(false, spOTINSTRUMENTMARKETDATARESPONSEErr1.equals('foo'));
        System.assertEquals(false, spOTINSTRUMENTMARKETDATARESPONSEErr2.equals('foo'));
    }

    @isTest
    private static void notEqualsNull() {
        OASSPOTINSTRUMENTMARKETDATARESPONSEE spOTINSTRUMENTMARKETDATARESPONSEErr1 = OASSPOTINSTRUMENTMARKETDATARESPONSEE.getExample();
        OASSPOTINSTRUMENTMARKETDATARESPONSEE spOTINSTRUMENTMARKETDATARESPONSEErr2 = new OASSPOTINSTRUMENTMARKETDATARESPONSEE();
        OASSPOTINSTRUMENTMARKETDATARESPONSEE spOTINSTRUMENTMARKETDATARESPONSEErr3;

        System.assertEquals(false, spOTINSTRUMENTMARKETDATARESPONSEErr1.equals(spOTINSTRUMENTMARKETDATARESPONSEErr3));
        System.assertEquals(false, spOTINSTRUMENTMARKETDATARESPONSEErr2.equals(spOTINSTRUMENTMARKETDATARESPONSEErr3));
    }

    @isTest
    private static void consistentHashCodeValue() {
        OASSPOTINSTRUMENTMARKETDATARESPONSEE spOTINSTRUMENTMARKETDATARESPONSEErr1 = OASSPOTINSTRUMENTMARKETDATARESPONSEE.getExample();
        OASSPOTINSTRUMENTMARKETDATARESPONSEE spOTINSTRUMENTMARKETDATARESPONSEErr2 = new OASSPOTINSTRUMENTMARKETDATARESPONSEE();

        System.assertEquals(spOTINSTRUMENTMARKETDATARESPONSEErr1.hashCode(), spOTINSTRUMENTMARKETDATARESPONSEErr1.hashCode());
        System.assertEquals(spOTINSTRUMENTMARKETDATARESPONSEErr2.hashCode(), spOTINSTRUMENTMARKETDATARESPONSEErr2.hashCode());
    }

    @isTest
    private static void equalInstancesHaveSameHashCode() {
        OASSPOTINSTRUMENTMARKETDATARESPONSEE spOTINSTRUMENTMARKETDATARESPONSEErr1 = OASSPOTINSTRUMENTMARKETDATARESPONSEE.getExample();
        OASSPOTINSTRUMENTMARKETDATARESPONSEE spOTINSTRUMENTMARKETDATARESPONSEErr2 = OASSPOTINSTRUMENTMARKETDATARESPONSEE.getExample();
        OASSPOTINSTRUMENTMARKETDATARESPONSEE spOTINSTRUMENTMARKETDATARESPONSEErr3 = new OASSPOTINSTRUMENTMARKETDATARESPONSEE();
        OASSPOTINSTRUMENTMARKETDATARESPONSEE spOTINSTRUMENTMARKETDATARESPONSEErr4 = new OASSPOTINSTRUMENTMARKETDATARESPONSEE();

        System.assert(spOTINSTRUMENTMARKETDATARESPONSEErr1.equals(spOTINSTRUMENTMARKETDATARESPONSEErr2));
        System.assert(spOTINSTRUMENTMARKETDATARESPONSEErr3.equals(spOTINSTRUMENTMARKETDATARESPONSEErr4));
        System.assertEquals(spOTINSTRUMENTMARKETDATARESPONSEErr1.hashCode(), spOTINSTRUMENTMARKETDATARESPONSEErr2.hashCode());
        System.assertEquals(spOTINSTRUMENTMARKETDATARESPONSEErr3.hashCode(), spOTINSTRUMENTMARKETDATARESPONSEErr4.hashCode());
    }

    @isTest
    private static void maintainRenamedProperties() {
        OASSPOTINSTRUMENTMARKETDATARESPONSEE spOTINSTRUMENTMARKETDATARESPONSEErr = new OASSPOTINSTRUMENTMARKETDATARESPONSEE();
        Map<String, String> x-property-mappings = spOTINSTRUMENTMARKETDATARESPONSEErr.getx-property-mappings();
        System.assertEquals('otherInfo', x-property-mappings.get('other_info'));
    }
}
