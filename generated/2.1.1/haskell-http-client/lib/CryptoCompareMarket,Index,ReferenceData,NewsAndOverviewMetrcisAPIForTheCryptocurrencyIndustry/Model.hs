{-
   CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry

   CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.

   OpenAPI Version: 3.0.3
   CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry API version: 2.1.1
   Contact: data@cryptocompare.com
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model
-}

{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveFoldable #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DeriveTraversable #-}
{-# LANGUAGE GeneralizedNewtypeDeriving #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE TupleSections #-}
{-# LANGUAGE TypeFamilies #-}
{-# OPTIONS_GHC -fno-warn-unused-matches -fno-warn-unused-binds -fno-warn-unused-imports #-}

module CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Model where

import CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.Core
import CryptoCompareMarket,Index,ReferenceData,NewsAndOverviewMetrcisAPIForTheCryptocurrencyIndustry.MimeTypes

import Data.Aeson ((.:),(.:!),(.:?),(.=))

import qualified Control.Arrow as P (left)
import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Base64 as B64
import qualified Data.ByteString.Char8 as BC
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.HashMap.Lazy as HM
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Set as Set
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Time as TI
import qualified Lens.Micro as L
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Control.Applicative ((<|>))
import Control.Applicative (Alternative)
import Data.Function ((&))
import Data.Monoid ((<>))
import Data.Text (Text)
import Prelude (($),(/=),(.),(<$>),(<*>),(>>=),(=<<),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)

import qualified Prelude as P



-- * Parameter newtypes


-- ** Address
newtype Address = Address { unAddress :: Text } deriving (P.Eq, P.Show)

-- ** AfterTs
newtype AfterTs = AfterTs { unAfterTs :: Int } deriving (P.Eq, P.Show)

-- ** Aggregate
newtype Aggregate = Aggregate { unAggregate :: Int } deriving (P.Eq, P.Show)

-- ** AssetId
newtype AssetId = AssetId { unAssetId :: Int } deriving (P.Eq, P.Show)

-- ** AssetSymbol
newtype AssetSymbol = AssetSymbol { unAssetSymbol :: Text } deriving (P.Eq, P.Show)

-- ** AssetType
newtype AssetType = AssetType { unAssetType :: Text } deriving (P.Eq, P.Show)

-- ** Categories
newtype Categories = Categories { unCategories :: [E'Categories] } deriving (P.Eq, P.Show)

-- ** ChainSymbol
newtype ChainSymbol = ChainSymbol { unChainSymbol :: Text } deriving (P.Eq, P.Show)

-- ** Depth
newtype Depth = Depth { unDepth :: Int } deriving (P.Eq, P.Show)

-- ** ExcludeCategories
newtype ExcludeCategories = ExcludeCategories { unExcludeCategories :: [E'Categories] } deriving (P.Eq, P.Show)

-- ** Fill
newtype Fill = Fill { unFill :: Bool } deriving (P.Eq, P.Show)

-- ** Groups
newtype Groups = Groups { unGroups :: Text } deriving (P.Eq, P.Show)

-- ** GroupsText
newtype GroupsText = GroupsText { unGroupsText :: [Text] } deriving (P.Eq, P.Show)

-- ** HourTs
newtype HourTs = HourTs { unHourTs :: Int } deriving (P.Eq, P.Show)

-- ** Instrument
newtype Instrument = Instrument { unInstrument :: Text } deriving (P.Eq, P.Show)

-- ** InstrumentStatus
newtype InstrumentStatus = InstrumentStatus { unInstrumentStatus :: [E'InstrumentStatus] } deriving (P.Eq, P.Show)

-- ** Instruments
newtype Instruments = Instruments { unInstruments :: [Text] } deriving (P.Eq, P.Show)

-- ** Lang
newtype Lang = Lang { unLang :: E'Lang } deriving (P.Eq, P.Show)

-- ** LastCcseq
newtype LastCcseq = LastCcseq { unLastCcseq :: Int } deriving (P.Eq, P.Show)

-- ** Limit
newtype Limit = Limit { unLimit :: Int } deriving (P.Eq, P.Show)

-- ** MappingPriority
newtype MappingPriority = MappingPriority { unMappingPriority :: E'MappingPriority } deriving (P.Eq, P.Show)

-- ** Market
newtype Market = Market { unMarket :: Text } deriving (P.Eq, P.Show)

-- ** MinuteTs
newtype MinuteTs = MinuteTs { unMinuteTs :: Int } deriving (P.Eq, P.Show)

-- ** Page
newtype Page = Page { unPage :: Int } deriving (P.Eq, P.Show)

-- ** PageSize
newtype PageSize = PageSize { unPageSize :: Int } deriving (P.Eq, P.Show)

-- ** ParamType
newtype ParamType = ParamType { unParamType :: E'Type } deriving (P.Eq, P.Show)

-- ** ResponseFormat
newtype ResponseFormat = ResponseFormat { unResponseFormat :: E'ResponseFormat } deriving (P.Eq, P.Show)

-- ** Return404OnEmptyResponse
newtype Return404OnEmptyResponse = Return404OnEmptyResponse { unReturn404OnEmptyResponse :: Bool } deriving (P.Eq, P.Show)

-- ** SortBy
newtype SortBy = SortBy { unSortBy :: E'SortBy } deriving (P.Eq, P.Show)

-- ** SortDirection
newtype SortDirection = SortDirection { unSortDirection :: E'SortDirection } deriving (P.Eq, P.Show)

-- ** SourceIds
newtype SourceIds = SourceIds { unSourceIds :: [Text] } deriving (P.Eq, P.Show)

-- ** Status
newtype Status = Status { unStatus :: E'Status } deriving (P.Eq, P.Show)

-- ** ToTs
newtype ToTs = ToTs { unToTs :: Int } deriving (P.Eq, P.Show)

-- * Models


-- ** Error
-- | Error
data Error = Error
  { errorData :: !(Maybe A.Value) -- ^ "Data"
  , errorErr :: !(Maybe ErrorErr) -- ^ "Err"
  } deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON Error
instance A.FromJSON Error where
  parseJSON = A.withObject "Error" $ \o ->
    Error
      <$> (o .:? "Data")
      <*> (o .:? "Err")

-- | ToJSON Error
instance A.ToJSON Error where
  toJSON Error {..} =
   _omitNulls
      [ "Data" .= errorData
      , "Err" .= errorErr
      ]


-- | Construct a value of type 'Error' (by applying it's required fields, if any)
mkError
  :: Error
mkError =
  Error
  { errorData = Nothing
  , errorErr = Nothing
  }

-- ** ErrorErr
-- | ErrorErr
data ErrorErr = ErrorErr
  { errorErrMessage :: !(Maybe Text) -- ^ "message" - A message describing the error
  , errorErrOtherInfo :: !(Maybe ErrorErrOtherInfo) -- ^ "other_info"
  , errorErrType :: !(Maybe Int) -- ^ "type" - A public facing error type. If you want to treat a specific error use the type.
  } deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ErrorErr
instance A.FromJSON ErrorErr where
  parseJSON = A.withObject "ErrorErr" $ \o ->
    ErrorErr
      <$> (o .:? "message")
      <*> (o .:? "other_info")
      <*> (o .:? "type")

-- | ToJSON ErrorErr
instance A.ToJSON ErrorErr where
  toJSON ErrorErr {..} =
   _omitNulls
      [ "message" .= errorErrMessage
      , "other_info" .= errorErrOtherInfo
      , "type" .= errorErrType
      ]


-- | Construct a value of type 'ErrorErr' (by applying it's required fields, if any)
mkErrorErr
  :: ErrorErr
mkErrorErr =
  ErrorErr
  { errorErrMessage = Nothing
  , errorErrOtherInfo = Nothing
  , errorErrType = Nothing
  }

-- ** ErrorErrOtherInfo
-- | ErrorErrOtherInfo
data ErrorErrOtherInfo = ErrorErrOtherInfo
  { errorErrOtherInfoParam :: !(Maybe Text) -- ^ "param" - The parameter that is resposible for the error
  , errorErrOtherInfoValues :: !(Maybe [Text]) -- ^ "values" - The values resposible for the error
  } deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ErrorErrOtherInfo
instance A.FromJSON ErrorErrOtherInfo where
  parseJSON = A.withObject "ErrorErrOtherInfo" $ \o ->
    ErrorErrOtherInfo
      <$> (o .:? "param")
      <*> (o .:? "values")

-- | ToJSON ErrorErrOtherInfo
instance A.ToJSON ErrorErrOtherInfo where
  toJSON ErrorErrOtherInfo {..} =
   _omitNulls
      [ "param" .= errorErrOtherInfoParam
      , "values" .= errorErrOtherInfoValues
      ]


-- | Construct a value of type 'ErrorErrOtherInfo' (by applying it's required fields, if any)
mkErrorErrOtherInfo
  :: ErrorErrOtherInfo
mkErrorErrOtherInfo =
  ErrorErrOtherInfo
  { errorErrOtherInfoParam = Nothing
  , errorErrOtherInfoValues = Nothing
  }

-- ** GENERICRESPONSE
-- | GENERICRESPONSE
data GENERICRESPONSE = GENERICRESPONSE
  { gENERICRESPONSEData :: !(Maybe GENERICRESPONSEData) -- ^ "Data"
  , gENERICRESPONSEErr :: !(Maybe A.Value) -- ^ "Err"
  } deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON GENERICRESPONSE
instance A.FromJSON GENERICRESPONSE where
  parseJSON = A.withObject "GENERICRESPONSE" $ \o ->
    GENERICRESPONSE
      <$> (o .:? "Data")
      <*> (o .:? "Err")

-- | ToJSON GENERICRESPONSE
instance A.ToJSON GENERICRESPONSE where
  toJSON GENERICRESPONSE {..} =
   _omitNulls
      [ "Data" .= gENERICRESPONSEData
      , "Err" .= gENERICRESPONSEErr
      ]


-- | Construct a value of type 'GENERICRESPONSE' (by applying it's required fields, if any)
mkGENERICRESPONSE
  :: GENERICRESPONSE
mkGENERICRESPONSE =
  GENERICRESPONSE
  { gENERICRESPONSEData = Nothing
  , gENERICRESPONSEErr = Nothing
  }

-- ** GENERICRESPONSEData
-- | GENERICRESPONSEData
data GENERICRESPONSEData = GENERICRESPONSEData
  { gENERICRESPONSEDataNoData :: !(Maybe Text) -- ^ "NO_DATA" - The endpoint does not have a reponse defined
  } deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON GENERICRESPONSEData
instance A.FromJSON GENERICRESPONSEData where
  parseJSON = A.withObject "GENERICRESPONSEData" $ \o ->
    GENERICRESPONSEData
      <$> (o .:? "NO_DATA")

-- | ToJSON GENERICRESPONSEData
instance A.ToJSON GENERICRESPONSEData where
  toJSON GENERICRESPONSEData {..} =
   _omitNulls
      [ "NO_DATA" .= gENERICRESPONSEDataNoData
      ]


-- | Construct a value of type 'GENERICRESPONSEData' (by applying it's required fields, if any)
mkGENERICRESPONSEData
  :: GENERICRESPONSEData
mkGENERICRESPONSEData =
  GENERICRESPONSEData
  { gENERICRESPONSEDataNoData = Nothing
  }

-- ** SPOTINSTRUMENTHISTODATA
-- | SPOTINSTRUMENTHISTODATA
data SPOTINSTRUMENTHISTODATA = SPOTINSTRUMENTHISTODATA
  { sPOTINSTRUMENTHISTODATABase :: !(Maybe Text) -- ^ "BASE" - The mapped from asset (base / symbol/ coin) (e.g. BTC). Only available on instruments that have mapping.
  , sPOTINSTRUMENTHISTODATAClose :: !(Maybe Int) -- ^ "CLOSE" - The price of the last trade in this time period. If there were no trades in the time period, the open price will be given.
  , sPOTINSTRUMENTHISTODATAFirstTradePrice :: !(Maybe Int) -- ^ "FIRST_TRADE_PRICE" - The price of the first trade in the time period. This is only available when there is at least one trade in the time period.
  , sPOTINSTRUMENTHISTODATAFirstTradeTimestamp :: !(Maybe Int) -- ^ "FIRST_TRADE_TIMESTAMP" - The timestamp, in seconds, of the first trade in this time perio. This is only available when there is at least one trade in the time period.
  , sPOTINSTRUMENTHISTODATAHigh :: !(Maybe Int) -- ^ "HIGH" - The highest trade price in the time period. If there were no trades in the time period, the open price will be given.
  , sPOTINSTRUMENTHISTODATAHighTradePrice :: !(Maybe Int) -- ^ "HIGH_TRADE_PRICE" - The highest value of the trades in the time period. This is only available when there is at least one trade in the time period.
  , sPOTINSTRUMENTHISTODATAHighTradeTimestamp :: !(Maybe Int) -- ^ "HIGH_TRADE_TIMESTAMP" - The timestamp, in seconds, of the highest trade in the time period. This is only available when there is at least one trade in the time period.
  , sPOTINSTRUMENTHISTODATAInstrument :: !(Maybe Text) -- ^ "INSTRUMENT" - The unmapped instrument ID
  , sPOTINSTRUMENTHISTODATALastTradePrice :: !(Maybe Int) -- ^ "LAST_TRADE_PRICE" - The last trade price in the time period. This is only available when there is at least one trade in the time period.
  , sPOTINSTRUMENTHISTODATALastTradeTimestamp :: !(Maybe Int) -- ^ "LAST_TRADE_TIMESTAMP" - The timestamp, in seconds, of the last trade in this time period. This is only available when there is at least one trade in the time period.
  , sPOTINSTRUMENTHISTODATALow :: !(Maybe Int) -- ^ "LOW" - The lowest trade price in the time period. If there were no trades in the time period, the open price will be given.
  , sPOTINSTRUMENTHISTODATALowTradePrice :: !(Maybe Int) -- ^ "LOW_TRADE_PRICE" - The lowest value of the trades in the time period. This is only available when there is at least one trade in the time period.
  , sPOTINSTRUMENTHISTODATALowTradeTimestamp :: !(Maybe Int) -- ^ "LOW_TRADE_TIMESTAMP" - The timestamp, in seconds, of the lowest trade in the time period. This is only available when there is at least one trade in the time period.
  , sPOTINSTRUMENTHISTODATAMappedInstrument :: !(Maybe Text) -- ^ "MAPPED_INSTRUMENT" - The instrument ID, as derived from our mapping rules. This takes the form \&quot;BASE-QUOTE\&quot; (e.g. BTC-USD). Only available on instruments that have been mapped.
  , sPOTINSTRUMENTHISTODATAMarket :: !(Maybe Text) -- ^ "MARKET" - The market / exchange under consideration (e.g. gemini, kraken, coinbase, etc).
  , sPOTINSTRUMENTHISTODATAOpen :: !(Maybe Int) -- ^ "OPEN" - The open price for the historical period, this is based on the closest trade before the period start.
  , sPOTINSTRUMENTHISTODATAQuote :: !(Maybe Text) -- ^ "QUOTE" - The mapped to asset (quote / counter symbol / coin) (e.g. USD). Only available on instruments that have mapping.
  , sPOTINSTRUMENTHISTODATAQuoteVolume :: !(Maybe Int) -- ^ "QUOTE_VOLUME" - The sum of all the trade volumes in the To asset (quote/counter symbol/coin) for the time period. If there were no trades in the time period, 0 will be returned.
  , sPOTINSTRUMENTHISTODATAQuoteVolumeBuy :: !(Maybe Int) -- ^ "QUOTE_VOLUME_BUY" - The sum of all the BUY trade volumes in the to asset (quote/counter symbol/coin) for the time period.
  , sPOTINSTRUMENTHISTODATAQuoteVolumeSell :: !(Maybe Int) -- ^ "QUOTE_VOLUME_SELL" - The sum of all the SELL trade volumes in the To asset (quote/counter symbol/coin) for the time period.
  , sPOTINSTRUMENTHISTODATAQuoteVolumeUnknown :: !(Maybe Int) -- ^ "QUOTE_VOLUME_UNKNOWN" - The sum of all the UNKNOWN trade volumes in the To asset (quote/counter symbol/coin) for the time period.
  , sPOTINSTRUMENTHISTODATATimestamp :: !(Maybe Int) -- ^ "TIMESTAMP" - The timestamp in seconds of the beginning of the histo period. For minute it would be every minute at the beginning of the minute, for hour it would be the start of the hour and for daily it is 00:00 GMT.
  , sPOTINSTRUMENTHISTODATATotalTrades :: !(Maybe Int) -- ^ "TOTAL_TRADES" - The total number of trades seen in this time period. If there were no trades in the time period, 0 will be returned.
  , sPOTINSTRUMENTHISTODATATotalTradesBuy :: !(Maybe Int) -- ^ "TOTAL_TRADES_BUY" - The total number of BUY trades seen in this time period. If there were no trades in the time period, 0 will be returned.
  , sPOTINSTRUMENTHISTODATATotalTradesSell :: !(Maybe Int) -- ^ "TOTAL_TRADES_SELL" - The total number of SELL trades seen in this time period. If there were no trades in the time period, 0 will be returned.
  , sPOTINSTRUMENTHISTODATATotalTradesUnknown :: !(Maybe Int) -- ^ "TOTAL_TRADES_UNKNOWN" - The total number of UNKNOWN trades seen in this time period. If there were no trades in the time period, 0 will be returned.
  , sPOTINSTRUMENTHISTODATAType :: !(Maybe Text) -- ^ "TYPE" - The type of the message.
  , sPOTINSTRUMENTHISTODATAUnit :: !(Maybe Text) -- ^ "UNIT" - The unit of the historical period update: MINUTE for minute, HOUR for hour and DAY for day.
  , sPOTINSTRUMENTHISTODATAVolume :: !(Maybe Int) -- ^ "VOLUME" - The sum of all the trade volumes in the from asset (base symbol / coin) for the time period. If there were no trades in the time period, 0 will be returned.
  , sPOTINSTRUMENTHISTODATAVolumeBuy :: !(Maybe Int) -- ^ "VOLUME_BUY" - The sum of all the BUY trade volumes in the from asset (base symbol / coin) for the time period.
  , sPOTINSTRUMENTHISTODATAVolumeSell :: !(Maybe Int) -- ^ "VOLUME_SELL" - The sum of all the SELL trade volumes in the from asset (base symbol / coin) for the time period.
  , sPOTINSTRUMENTHISTODATAVolumeUnknown :: !(Maybe Int) -- ^ "VOLUME_UNKNOWN" - The sum of all the UNKNOWN trade volumes in the from asset (base symbol / coin) for the time period.
  } deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON SPOTINSTRUMENTHISTODATA
instance A.FromJSON SPOTINSTRUMENTHISTODATA where
  parseJSON = A.withObject "SPOTINSTRUMENTHISTODATA" $ \o ->
    SPOTINSTRUMENTHISTODATA
      <$> (o .:? "BASE")
      <*> (o .:? "CLOSE")
      <*> (o .:? "FIRST_TRADE_PRICE")
      <*> (o .:? "FIRST_TRADE_TIMESTAMP")
      <*> (o .:? "HIGH")
      <*> (o .:? "HIGH_TRADE_PRICE")
      <*> (o .:? "HIGH_TRADE_TIMESTAMP")
      <*> (o .:? "INSTRUMENT")
      <*> (o .:? "LAST_TRADE_PRICE")
      <*> (o .:? "LAST_TRADE_TIMESTAMP")
      <*> (o .:? "LOW")
      <*> (o .:? "LOW_TRADE_PRICE")
      <*> (o .:? "LOW_TRADE_TIMESTAMP")
      <*> (o .:? "MAPPED_INSTRUMENT")
      <*> (o .:? "MARKET")
      <*> (o .:? "OPEN")
      <*> (o .:? "QUOTE")
      <*> (o .:? "QUOTE_VOLUME")
      <*> (o .:? "QUOTE_VOLUME_BUY")
      <*> (o .:? "QUOTE_VOLUME_SELL")
      <*> (o .:? "QUOTE_VOLUME_UNKNOWN")
      <*> (o .:? "TIMESTAMP")
      <*> (o .:? "TOTAL_TRADES")
      <*> (o .:? "TOTAL_TRADES_BUY")
      <*> (o .:? "TOTAL_TRADES_SELL")
      <*> (o .:? "TOTAL_TRADES_UNKNOWN")
      <*> (o .:? "TYPE")
      <*> (o .:? "UNIT")
      <*> (o .:? "VOLUME")
      <*> (o .:? "VOLUME_BUY")
      <*> (o .:? "VOLUME_SELL")
      <*> (o .:? "VOLUME_UNKNOWN")

-- | ToJSON SPOTINSTRUMENTHISTODATA
instance A.ToJSON SPOTINSTRUMENTHISTODATA where
  toJSON SPOTINSTRUMENTHISTODATA {..} =
   _omitNulls
      [ "BASE" .= sPOTINSTRUMENTHISTODATABase
      , "CLOSE" .= sPOTINSTRUMENTHISTODATAClose
      , "FIRST_TRADE_PRICE" .= sPOTINSTRUMENTHISTODATAFirstTradePrice
      , "FIRST_TRADE_TIMESTAMP" .= sPOTINSTRUMENTHISTODATAFirstTradeTimestamp
      , "HIGH" .= sPOTINSTRUMENTHISTODATAHigh
      , "HIGH_TRADE_PRICE" .= sPOTINSTRUMENTHISTODATAHighTradePrice
      , "HIGH_TRADE_TIMESTAMP" .= sPOTINSTRUMENTHISTODATAHighTradeTimestamp
      , "INSTRUMENT" .= sPOTINSTRUMENTHISTODATAInstrument
      , "LAST_TRADE_PRICE" .= sPOTINSTRUMENTHISTODATALastTradePrice
      , "LAST_TRADE_TIMESTAMP" .= sPOTINSTRUMENTHISTODATALastTradeTimestamp
      , "LOW" .= sPOTINSTRUMENTHISTODATALow
      , "LOW_TRADE_PRICE" .= sPOTINSTRUMENTHISTODATALowTradePrice
      , "LOW_TRADE_TIMESTAMP" .= sPOTINSTRUMENTHISTODATALowTradeTimestamp
      , "MAPPED_INSTRUMENT" .= sPOTINSTRUMENTHISTODATAMappedInstrument
      , "MARKET" .= sPOTINSTRUMENTHISTODATAMarket
      , "OPEN" .= sPOTINSTRUMENTHISTODATAOpen
      , "QUOTE" .= sPOTINSTRUMENTHISTODATAQuote
      , "QUOTE_VOLUME" .= sPOTINSTRUMENTHISTODATAQuoteVolume
      , "QUOTE_VOLUME_BUY" .= sPOTINSTRUMENTHISTODATAQuoteVolumeBuy
      , "QUOTE_VOLUME_SELL" .= sPOTINSTRUMENTHISTODATAQuoteVolumeSell
      , "QUOTE_VOLUME_UNKNOWN" .= sPOTINSTRUMENTHISTODATAQuoteVolumeUnknown
      , "TIMESTAMP" .= sPOTINSTRUMENTHISTODATATimestamp
      , "TOTAL_TRADES" .= sPOTINSTRUMENTHISTODATATotalTrades
      , "TOTAL_TRADES_BUY" .= sPOTINSTRUMENTHISTODATATotalTradesBuy
      , "TOTAL_TRADES_SELL" .= sPOTINSTRUMENTHISTODATATotalTradesSell
      , "TOTAL_TRADES_UNKNOWN" .= sPOTINSTRUMENTHISTODATATotalTradesUnknown
      , "TYPE" .= sPOTINSTRUMENTHISTODATAType
      , "UNIT" .= sPOTINSTRUMENTHISTODATAUnit
      , "VOLUME" .= sPOTINSTRUMENTHISTODATAVolume
      , "VOLUME_BUY" .= sPOTINSTRUMENTHISTODATAVolumeBuy
      , "VOLUME_SELL" .= sPOTINSTRUMENTHISTODATAVolumeSell
      , "VOLUME_UNKNOWN" .= sPOTINSTRUMENTHISTODATAVolumeUnknown
      ]


-- | Construct a value of type 'SPOTINSTRUMENTHISTODATA' (by applying it's required fields, if any)
mkSPOTINSTRUMENTHISTODATA
  :: SPOTINSTRUMENTHISTODATA
mkSPOTINSTRUMENTHISTODATA =
  SPOTINSTRUMENTHISTODATA
  { sPOTINSTRUMENTHISTODATABase = Nothing
  , sPOTINSTRUMENTHISTODATAClose = Nothing
  , sPOTINSTRUMENTHISTODATAFirstTradePrice = Nothing
  , sPOTINSTRUMENTHISTODATAFirstTradeTimestamp = Nothing
  , sPOTINSTRUMENTHISTODATAHigh = Nothing
  , sPOTINSTRUMENTHISTODATAHighTradePrice = Nothing
  , sPOTINSTRUMENTHISTODATAHighTradeTimestamp = Nothing
  , sPOTINSTRUMENTHISTODATAInstrument = Nothing
  , sPOTINSTRUMENTHISTODATALastTradePrice = Nothing
  , sPOTINSTRUMENTHISTODATALastTradeTimestamp = Nothing
  , sPOTINSTRUMENTHISTODATALow = Nothing
  , sPOTINSTRUMENTHISTODATALowTradePrice = Nothing
  , sPOTINSTRUMENTHISTODATALowTradeTimestamp = Nothing
  , sPOTINSTRUMENTHISTODATAMappedInstrument = Nothing
  , sPOTINSTRUMENTHISTODATAMarket = Nothing
  , sPOTINSTRUMENTHISTODATAOpen = Nothing
  , sPOTINSTRUMENTHISTODATAQuote = Nothing
  , sPOTINSTRUMENTHISTODATAQuoteVolume = Nothing
  , sPOTINSTRUMENTHISTODATAQuoteVolumeBuy = Nothing
  , sPOTINSTRUMENTHISTODATAQuoteVolumeSell = Nothing
  , sPOTINSTRUMENTHISTODATAQuoteVolumeUnknown = Nothing
  , sPOTINSTRUMENTHISTODATATimestamp = Nothing
  , sPOTINSTRUMENTHISTODATATotalTrades = Nothing
  , sPOTINSTRUMENTHISTODATATotalTradesBuy = Nothing
  , sPOTINSTRUMENTHISTODATATotalTradesSell = Nothing
  , sPOTINSTRUMENTHISTODATATotalTradesUnknown = Nothing
  , sPOTINSTRUMENTHISTODATAType = Nothing
  , sPOTINSTRUMENTHISTODATAUnit = Nothing
  , sPOTINSTRUMENTHISTODATAVolume = Nothing
  , sPOTINSTRUMENTHISTODATAVolumeBuy = Nothing
  , sPOTINSTRUMENTHISTODATAVolumeSell = Nothing
  , sPOTINSTRUMENTHISTODATAVolumeUnknown = Nothing
  }

-- ** SPOTINSTRUMENTHISTODATARESPONSE
-- | SPOTINSTRUMENTHISTODATARESPONSE
data SPOTINSTRUMENTHISTODATARESPONSE = SPOTINSTRUMENTHISTODATARESPONSE
  { sPOTINSTRUMENTHISTODATARESPONSEData :: !(Maybe [SPOTINSTRUMENTHISTODATA]) -- ^ "Data"
  , sPOTINSTRUMENTHISTODATARESPONSEErr :: !(Maybe A.Value) -- ^ "Err"
  } deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON SPOTINSTRUMENTHISTODATARESPONSE
instance A.FromJSON SPOTINSTRUMENTHISTODATARESPONSE where
  parseJSON = A.withObject "SPOTINSTRUMENTHISTODATARESPONSE" $ \o ->
    SPOTINSTRUMENTHISTODATARESPONSE
      <$> (o .:? "Data")
      <*> (o .:? "Err")

-- | ToJSON SPOTINSTRUMENTHISTODATARESPONSE
instance A.ToJSON SPOTINSTRUMENTHISTODATARESPONSE where
  toJSON SPOTINSTRUMENTHISTODATARESPONSE {..} =
   _omitNulls
      [ "Data" .= sPOTINSTRUMENTHISTODATARESPONSEData
      , "Err" .= sPOTINSTRUMENTHISTODATARESPONSEErr
      ]


-- | Construct a value of type 'SPOTINSTRUMENTHISTODATARESPONSE' (by applying it's required fields, if any)
mkSPOTINSTRUMENTHISTODATARESPONSE
  :: SPOTINSTRUMENTHISTODATARESPONSE
mkSPOTINSTRUMENTHISTODATARESPONSE =
  SPOTINSTRUMENTHISTODATARESPONSE
  { sPOTINSTRUMENTHISTODATARESPONSEData = Nothing
  , sPOTINSTRUMENTHISTODATARESPONSEErr = Nothing
  }

-- ** SPOTINSTRUMENTMARKETDATA
-- | SPOTINSTRUMENTMARKETDATA
data SPOTINSTRUMENTMARKETDATA = SPOTINSTRUMENTMARKETDATA
  { sPOTINSTRUMENTMARKETDATABase :: !(Maybe Text) -- ^ "BASE" - The mapped from asset (base / symbol/ coin), e.g. BTC. Only available on instruments that have been mapped.
  , sPOTINSTRUMENTMARKETDATACcseq :: !(Maybe Int) -- ^ "CCSEQ" - Our internal sequence number for this tick update. This is unique per market / exchange and trading pair / instrument. It will always be increasing by 1 for each new tick update we send.
  , sPOTINSTRUMENTMARKETDATACurrentDayHigh :: !(Maybe Int) -- ^ "CURRENT_DAY_HIGH" - The highest trade price of the current day (00:00:00 GMT/UTC). If there were no updates in the time period, the open price will be given. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentDayLow :: !(Maybe Int) -- ^ "CURRENT_DAY_LOW" - The lowest trade price of the current day (00:00:00 GMT/UTC). If there were no updates in the time period, the open price will be given. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentDayOpen :: !(Maybe Int) -- ^ "CURRENT_DAY_OPEN" - The open price for the current day, this is based on the closest trade occurring before the start of the current day (00:00:00 GMT/UTC). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentDayQuoteVolume :: !(Maybe Int) -- ^ "CURRENT_DAY_QUOTE_VOLUME" - The sum of all trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentDayQuoteVolumeBuy :: !(Maybe Int) -- ^ "CURRENT_DAY_QUOTE_VOLUME_BUY" - The sum of all buy trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentDayQuoteVolumeSell :: !(Maybe Int) -- ^ "CURRENT_DAY_QUOTE_VOLUME_SELL" - The sum of all sell trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentDayQuoteVolumeUnknown :: !(Maybe Int) -- ^ "CURRENT_DAY_QUOTE_VOLUME_UNKNOWN" - The sum of all unknown trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentDayTotalTrades :: !(Maybe Int) -- ^ "CURRENT_DAY_TOTAL_TRADES" - The total number of trades that have occurred since the start of the current day (00:00:00 GMT/UTC).
  , sPOTINSTRUMENTMARKETDATACurrentDayTotalTradesBuy :: !(Maybe Int) -- ^ "CURRENT_DAY_TOTAL_TRADES_BUY" - The total number of buy trades since the start of the current day (00:00:00 GMT/UTC).
  , sPOTINSTRUMENTMARKETDATACurrentDayTotalTradesSell :: !(Maybe Int) -- ^ "CURRENT_DAY_TOTAL_TRADES_SELL" - The total number of sell trades since the start of the current day (00:00:00 GMT/UTC).
  , sPOTINSTRUMENTMARKETDATACurrentDayTotalTradesUnknown :: !(Maybe Int) -- ^ "CURRENT_DAY_TOTAL_TRADES_UNKNOWN" - The total number of unknown trades since the start of the current day (00:00:00 GMT/UTC).
  , sPOTINSTRUMENTMARKETDATACurrentDayVolume :: !(Maybe Int) -- ^ "CURRENT_DAY_VOLUME" - The sum of all trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset.
  , sPOTINSTRUMENTMARKETDATACurrentDayVolumeBuy :: !(Maybe Int) -- ^ "CURRENT_DAY_VOLUME_BUY" - The sum of all buy trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset.
  , sPOTINSTRUMENTMARKETDATACurrentDayVolumeSell :: !(Maybe Int) -- ^ "CURRENT_DAY_VOLUME_SELL" - The sum of all sell trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset.
  , sPOTINSTRUMENTMARKETDATACurrentDayVolumeUnknown :: !(Maybe Int) -- ^ "CURRENT_DAY_VOLUME_UNKNOWN" - The sum of all unknown trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset.
  , sPOTINSTRUMENTMARKETDATACurrentHourHigh :: !(Maybe Int) -- ^ "CURRENT_HOUR_HIGH" - The highest trade price of the current hour. If there were no updates in the time period, the open price will be given. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentHourLow :: !(Maybe Int) -- ^ "CURRENT_HOUR_LOW" - The lowest trade price of the current hour. If there were no updates in the time period, the open price will be given. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentHourOpen :: !(Maybe Int) -- ^ "CURRENT_HOUR_OPEN" - The open price for the current hour, this is based on the closest trade occurring before the start of the current hour. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentHourQuoteVolume :: !(Maybe Int) -- ^ "CURRENT_HOUR_QUOTE_VOLUME" - The sum of all trade quote quantities from the start of the current hour until now. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentHourQuoteVolumeBuy :: !(Maybe Int) -- ^ "CURRENT_HOUR_QUOTE_VOLUME_BUY" - The sum of all buy trade quote quantities from the start of the current hour until now. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentHourQuoteVolumeSell :: !(Maybe Int) -- ^ "CURRENT_HOUR_QUOTE_VOLUME_SELL" - The sum of all sell trade quote quantities from the start of the current hour until now. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentHourQuoteVolumeUnknown :: !(Maybe Int) -- ^ "CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN" - The sum of all unknown trade quote quantities from the start of the current hour until now. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentHourTotalTrades :: !(Maybe Int) -- ^ "CURRENT_HOUR_TOTAL_TRADES" - The total number of trades that have occurred since the start of the current hour.
  , sPOTINSTRUMENTMARKETDATACurrentHourTotalTradesBuy :: !(Maybe Int) -- ^ "CURRENT_HOUR_TOTAL_TRADES_BUY" - The total number of buy trades since the start of the current hour.
  , sPOTINSTRUMENTMARKETDATACurrentHourTotalTradesSell :: !(Maybe Int) -- ^ "CURRENT_HOUR_TOTAL_TRADES_SELL" - The total number of sell trades since the start of the current hour.
  , sPOTINSTRUMENTMARKETDATACurrentHourTotalTradesUnknown :: !(Maybe Int) -- ^ "CURRENT_HOUR_TOTAL_TRADES_UNKNOWN" - The total number of unknown trades since the start of the current hour.
  , sPOTINSTRUMENTMARKETDATACurrentHourVolume :: !(Maybe Int) -- ^ "CURRENT_HOUR_VOLUME" - The sum of all trade quantities from the start of the current hour until now. Given in the base asset.
  , sPOTINSTRUMENTMARKETDATACurrentHourVolumeBuy :: !(Maybe Int) -- ^ "CURRENT_HOUR_VOLUME_BUY" - The sum of all buy trade quantities from the start of the current hour until now. Given in the base asset.
  , sPOTINSTRUMENTMARKETDATACurrentHourVolumeSell :: !(Maybe Int) -- ^ "CURRENT_HOUR_VOLUME_SELL" - The sum of all sell trade quantities from the start of the current hour until now. Given in the base asset.
  , sPOTINSTRUMENTMARKETDATACurrentHourVolumeUnknown :: !(Maybe Int) -- ^ "CURRENT_HOUR_VOLUME_UNKNOWN" - The sum of all trade quote quantities from the start of the current hour until now. Given in the base asset.
  , sPOTINSTRUMENTMARKETDATACurrentMonthHigh :: !(Maybe Int) -- ^ "CURRENT_MONTH_HIGH" - The highest traded price of the month excluding the current day. The period will run from the 1st of the month - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the month. If today is the 1st of the month, this value will be CURRENT_MONTH_OPEN. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentMonthLow :: !(Maybe Int) -- ^ "CURRENT_MONTH_LOW" - The lowest traded price of the month excluding the current day. The period will run from the 1st of the month - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the month. If today is the 1st of the month, this value will be CURRENT_MONTH_OPEN. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentMonthOpen :: !(Maybe Int) -- ^ "CURRENT_MONTH_OPEN" - The price of the closest trade to the 1st day (00:00:00 GMT/UTC) of this month. In a highly liquid market, this would be the last trade that happened on the previous month at (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full monthly value. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentMonthQuoteVolume :: !(Maybe Int) -- ^ "CURRENT_MONTH_QUOTE_VOLUME" - The sum of all trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentMonthQuoteVolumeBuy :: !(Maybe Int) -- ^ "CURRENT_MONTH_QUOTE_VOLUME_BUY" - The sum of all buy trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentMonthQuoteVolumeSell :: !(Maybe Int) -- ^ "CURRENT_MONTH_QUOTE_VOLUME_SELL" - The sum of all sell trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentMonthQuoteVolumeUnknown :: !(Maybe Int) -- ^ "CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN" - The sum of all unknown trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentMonthTotalTrades :: !(Maybe Int) -- ^ "CURRENT_MONTH_TOTAL_TRADES" - The total number of trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0.
  , sPOTINSTRUMENTMARKETDATACurrentMonthTotalTradesBuy :: !(Maybe Int) -- ^ "CURRENT_MONTH_TOTAL_TRADES_BUY" - The total number of buy trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0.
  , sPOTINSTRUMENTMARKETDATACurrentMonthTotalTradesSell :: !(Maybe Int) -- ^ "CURRENT_MONTH_TOTAL_TRADES_SELL" - The total number of sell trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0.
  , sPOTINSTRUMENTMARKETDATACurrentMonthTotalTradesUnknown :: !(Maybe Int) -- ^ "CURRENT_MONTH_TOTAL_TRADES_UNKNOWN" - The total number of unknown trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0.
  , sPOTINSTRUMENTMARKETDATACurrentMonthVolume :: !(Maybe Int) -- ^ "CURRENT_MONTH_VOLUME" - The sum of all trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset.
  , sPOTINSTRUMENTMARKETDATACurrentMonthVolumeBuy :: !(Maybe Int) -- ^ "CURRENT_MONTH_VOLUME_BUY" - The sum of all buy trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset.
  , sPOTINSTRUMENTMARKETDATACurrentMonthVolumeSell :: !(Maybe Int) -- ^ "CURRENT_MONTH_VOLUME_SELL" - The sum of all sell trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset.
  , sPOTINSTRUMENTMARKETDATACurrentMonthVolumeUnknown :: !(Maybe Int) -- ^ "CURRENT_MONTH_VOLUME_UNKNOWN" - The sum of all unknown trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset.
  , sPOTINSTRUMENTMARKETDATACurrentWeekHigh :: !(Maybe Int) -- ^ "CURRENT_WEEK_HIGH" - The highest traded price of the week excluding the current day. The period will run from Monday - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the week. If today is Monday, this value will be the same as CURRENT_WEEK_OPEN. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentWeekLow :: !(Maybe Int) -- ^ "CURRENT_WEEK_LOW" - The lowest traded price of the week excluding the current day. The period will run from Monday - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the week. If today is Monday, this value will be CURRENT_WEEK_LOW. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentWeekOpen :: !(Maybe Int) -- ^ "CURRENT_WEEK_OPEN" - The price of the closest trade to Monday (00:00:00 GMT/UTC) of this week. In a highly liquid market, this would be the last trade that happened on the previous Sunday at (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full weekly value. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentWeekQuoteVolume :: !(Maybe Int) -- ^ "CURRENT_WEEK_QUOTE_VOLUME" - The sum of all trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentWeekQuoteVolumeBuy :: !(Maybe Int) -- ^ "CURRENT_WEEK_QUOTE_VOLUME_BUY" - The sum of all buy trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentWeekQuoteVolumeSell :: !(Maybe Int) -- ^ "CURRENT_WEEK_QUOTE_VOLUME_SELL" - The sum of all sell trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentWeekQuoteVolumeUnknown :: !(Maybe Int) -- ^ "CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN" - The sum of all unknown trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentWeekTotalTrades :: !(Maybe Int) -- ^ "CURRENT_WEEK_TOTAL_TRADES" - The total number of trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0.
  , sPOTINSTRUMENTMARKETDATACurrentWeekTotalTradesBuy :: !(Maybe Int) -- ^ "CURRENT_WEEK_TOTAL_TRADES_BUY" - The total number of buy trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0.
  , sPOTINSTRUMENTMARKETDATACurrentWeekTotalTradesSell :: !(Maybe Int) -- ^ "CURRENT_WEEK_TOTAL_TRADES_SELL" - The total number of sell trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0.
  , sPOTINSTRUMENTMARKETDATACurrentWeekTotalTradesUnknown :: !(Maybe Int) -- ^ "CURRENT_WEEK_TOTAL_TRADES_UNKNOWN" - The total number of unknown trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0.
  , sPOTINSTRUMENTMARKETDATACurrentWeekVolume :: !(Maybe Int) -- ^ "CURRENT_WEEK_VOLUME" - The sum of all trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset.
  , sPOTINSTRUMENTMARKETDATACurrentWeekVolumeBuy :: !(Maybe Int) -- ^ "CURRENT_WEEK_VOLUME_BUY" - The sum of all buy trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset.
  , sPOTINSTRUMENTMARKETDATACurrentWeekVolumeSell :: !(Maybe Int) -- ^ "CURRENT_WEEK_VOLUME_SELL" - The sum of all sell trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset.
  , sPOTINSTRUMENTMARKETDATACurrentWeekVolumeUnknown :: !(Maybe Int) -- ^ "CURRENT_WEEK_VOLUME_UNKNOWN" - The sum of all unknown trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset.
  , sPOTINSTRUMENTMARKETDATACurrentYearHigh :: !(Maybe Int) -- ^ "CURRENT_YEAR_HIGH" - The highest traded price of the year excluding the current day. The period runs from the 1st of January - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the year. If today is the 1st of January, this value will be CURRENT_YEAR_OPEN. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentYearLow :: !(Maybe Int) -- ^ "CURRENT_YEAR_LOW" - The lowest traded price of the year excluding the current day. The period runs from the 1st of January - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the year. If today is the 1st of January, this value will be CURRENT_YEAR_OPEN. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentYearOpen :: !(Maybe Int) -- ^ "CURRENT_YEAR_OPEN" - The price of the closest trade to the 1st of January (00:00:00 GMT/UTC) of this year. In a highly liquid market, this would be the last trade that happened on on the 31st of December of the previous year (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full yearly value. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentYearQuoteVolume :: !(Maybe Int) -- ^ "CURRENT_YEAR_QUOTE_VOLUME" - The sum of all trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentYearQuoteVolumeBuy :: !(Maybe Int) -- ^ "CURRENT_YEAR_QUOTE_VOLUME_BUY" - The sum of all buy trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentYearQuoteVolumeSell :: !(Maybe Int) -- ^ "CURRENT_YEAR_QUOTE_VOLUME_SELL" - The sum of all sell trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentYearQuoteVolumeUnknown :: !(Maybe Int) -- ^ "CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN" - The sum of all unknown trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATACurrentYearTotalTrades :: !(Maybe Int) -- ^ "CURRENT_YEAR_TOTAL_TRADES" - The total number of trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0.
  , sPOTINSTRUMENTMARKETDATACurrentYearTotalTradesBuy :: !(Maybe Int) -- ^ "CURRENT_YEAR_TOTAL_TRADES_BUY" - The total number of buy trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0.
  , sPOTINSTRUMENTMARKETDATACurrentYearTotalTradesSell :: !(Maybe Int) -- ^ "CURRENT_YEAR_TOTAL_TRADES_SELL" - The total number of sell trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0.
  , sPOTINSTRUMENTMARKETDATACurrentYearTotalTradesUnknown :: !(Maybe Int) -- ^ "CURRENT_YEAR_TOTAL_TRADES_UNKNOWN" - The total number of unknown trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0.
  , sPOTINSTRUMENTMARKETDATACurrentYearVolume :: !(Maybe Int) -- ^ "CURRENT_YEAR_VOLUME" - The sum of all trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset.
  , sPOTINSTRUMENTMARKETDATACurrentYearVolumeBuy :: !(Maybe Int) -- ^ "CURRENT_YEAR_VOLUME_BUY" - The sum of all buy trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset.
  , sPOTINSTRUMENTMARKETDATACurrentYearVolumeSell :: !(Maybe Int) -- ^ "CURRENT_YEAR_VOLUME_SELL" - The sum of all sell trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset.
  , sPOTINSTRUMENTMARKETDATACurrentYearVolumeUnknown :: !(Maybe Int) -- ^ "CURRENT_YEAR_VOLUME_UNKNOWN" - The sum of all unknown trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset.
  , sPOTINSTRUMENTMARKETDATAInstrument :: !(Maybe Text) -- ^ "INSTRUMENT" - The unmapped instrument ID
  , sPOTINSTRUMENTMARKETDATALastProcessedTradeCcseq :: !(Maybe Text) -- ^ "LAST_PROCESSED_TRADE_CCSEQ" - The CCSEQ of the latest trade.
  , sPOTINSTRUMENTMARKETDATALastProcessedTradePrice :: !(Maybe Int) -- ^ "LAST_PROCESSED_TRADE_PRICE" - The price in the quote asset of the last trade processed, as reported by the market / exchange.
  , sPOTINSTRUMENTMARKETDATALastProcessedTradeQuantity :: !(Maybe Int) -- ^ "LAST_PROCESSED_TRADE_QUANTITY" - The quantity of the last processed trade in the from symbol (base / coin).
  , sPOTINSTRUMENTMARKETDATALastProcessedTradeQuoteQuantity :: !(Maybe Int) -- ^ "LAST_PROCESSED_TRADE_QUOTE_QUANTITY" - The  volume of the last processed trade in the to asset / quote.
  , sPOTINSTRUMENTMARKETDATALastProcessedTradeSide :: !(Maybe Text) -- ^ "LAST_PROCESSED_TRADE_SIDE" - The side of the last processed trade.
  , sPOTINSTRUMENTMARKETDATALastProcessedTradeTs :: !(Maybe Int) -- ^ "LAST_PROCESSED_TRADE_TS" - The timestamp in seconds that the last trade was processed, as reported by the market / exchange. If the market / exchange does not provide this information, the timestamp that the trade was received will be returned.
  , sPOTINSTRUMENTMARKETDATALastTradeCcseq :: !(Maybe Text) -- ^ "LAST_TRADE_CCSEQ" - The CCSEQ of the latest trade.
  , sPOTINSTRUMENTMARKETDATALastTradeId :: !(Maybe Text) -- ^ "LAST_TRADE_ID" - The ID of the latest trade.
  , sPOTINSTRUMENTMARKETDATALastTradeQuantity :: !(Maybe Int) -- ^ "LAST_TRADE_QUANTITY" - The quantity of the latest trade in the from symbol (base / coin).
  , sPOTINSTRUMENTMARKETDATALastTradeQuoteQuantity :: !(Maybe Int) -- ^ "LAST_TRADE_QUOTE_QUANTITY" - The volume of the latest trade in the to asset / quote.
  , sPOTINSTRUMENTMARKETDATALastTradeSide :: !(Maybe Text) -- ^ "LAST_TRADE_SIDE" - The side of the latest trade.
  , sPOTINSTRUMENTMARKETDATALifetimeFirstTradeTs :: !(Maybe Int) -- ^ "LIFETIME_FIRST_TRADE_TS" - The timestamp of the first trade ever recorded for the instrument
  , sPOTINSTRUMENTMARKETDATALifetimeHigh :: !(Maybe Int) -- ^ "LIFETIME_HIGH" - The price of the highest trade ever executed for this instrument. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATALifetimeHighTs :: !(Maybe Int) -- ^ "LIFETIME_HIGH_TS" - The the timestamp of the highest trade ever executed for this instrument. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATALifetimeLow :: !(Maybe Int) -- ^ "LIFETIME_LOW" - The price of the lowest trade ever executed for this instrument. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATALifetimeLowTs :: !(Maybe Int) -- ^ "LIFETIME_LOW_TS" - The timestamp of the lowest trade ever executed for this instrument. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATALifetimeOpen :: !(Maybe Int) -- ^ "LIFETIME_OPEN" - The price of the first trade of the instrument. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATALifetimeQuoteVolume :: !(Maybe Int) -- ^ "LIFETIME_QUOTE_VOLUME" - The sum of all trade quote quantities of all the trades of this instrument. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATALifetimeQuoteVolumeBuy :: !(Maybe Int) -- ^ "LIFETIME_QUOTE_VOLUME_BUY" - The sum of all buy trade quote quantities of all the trades of this instrument. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATALifetimeQuoteVolumeSell :: !(Maybe Int) -- ^ "LIFETIME_QUOTE_VOLUME_SELL" - The sum of all sell trade quote quantities of all the trades of this instrument. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATALifetimeQuoteVolumeUnknown :: !(Maybe Int) -- ^ "LIFETIME_QUOTE_VOLUME_UNKNOWN" - The sum of all unknown trade quote quantities of all the trades of this instrument. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATALifetimeTotalTrades :: !(Maybe Int) -- ^ "LIFETIME_TOTAL_TRADES" - The total number of all trades that have ever been executed for this instrument.
  , sPOTINSTRUMENTMARKETDATALifetimeTotalTradesBuy :: !(Maybe Int) -- ^ "LIFETIME_TOTAL_TRADES_BUY" - The total number of all buy trades that have ever been executed for this instrument.
  , sPOTINSTRUMENTMARKETDATALifetimeTotalTradesSell :: !(Maybe Int) -- ^ "LIFETIME_TOTAL_TRADES_SELL" - The total number of all sell trades that have ever been executed for this instrument.
  , sPOTINSTRUMENTMARKETDATALifetimeTotalTradesUnknown :: !(Maybe Int) -- ^ "LIFETIME_TOTAL_TRADES_UNKNOWN" - The total number of all unknown trades that have ever been executed for this instrument.
  , sPOTINSTRUMENTMARKETDATALifetimeVolume :: !(Maybe Int) -- ^ "LIFETIME_VOLUME" - The sum of all trade quantities of all the trades of this instrument. Given in the base asset.
  , sPOTINSTRUMENTMARKETDATALifetimeVolumeBuy :: !(Maybe Int) -- ^ "LIFETIME_VOLUME_BUY" - The sum of all buy trade quantities of all the trades of this instrument. Given in the base asset.
  , sPOTINSTRUMENTMARKETDATALifetimeVolumeSell :: !(Maybe Int) -- ^ "LIFETIME_VOLUME_SELL" - The sum of all sell trade quantities of all the trades of this instrument. Given in the base asset.
  , sPOTINSTRUMENTMARKETDATALifetimeVolumeUnknown :: !(Maybe Int) -- ^ "LIFETIME_VOLUME_UNKNOWN" - The sum of all unknown trade quantities of all the trades of this instrument. Given in the base asset.
  , sPOTINSTRUMENTMARKETDATAMappedInstrument :: !(Maybe Text) -- ^ "MAPPED_INSTRUMENT" - The mapped instrument ID, derived from our mapping rules. This takes the form: \&quot;BASE-QUOTE\&quot; (e.g. BTC-USD). Only available on instruments that have been mapped.
  , sPOTINSTRUMENTMARKETDATAMarket :: !(Maybe Text) -- ^ "MARKET" - The market / exchange under consideration (e.g. coinbase, kraken, etc).
  , sPOTINSTRUMENTMARKETDATAMoving180DayHigh :: !(Maybe Int) -- ^ "MOVING_180_DAY_HIGH" - The  highest traded price of the period. Here, the period runs from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving180DayLow :: !(Maybe Int) -- ^ "MOVING_180_DAY_LOW" - The lowest traded price of the period. Here, the period runs from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving180DayOpen :: !(Maybe Int) -- ^ "MOVING_180_DAY_OPEN" - The price of the closest trade to the period start date (179 days + current day - 00:00:00 GMT/UTC to now). This will always be supplied and there is no need to do any calculation to get the full 180 day value. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving180DayQuoteVolume :: !(Maybe Int) -- ^ "MOVING_180_DAY_QUOTE_VOLUME" - The sum of all trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving180DayQuoteVolumeBuy :: !(Maybe Int) -- ^ "MOVING_180_DAY_QUOTE_VOLUME_BUY" - The sum of all buy trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving180DayQuoteVolumeSell :: !(Maybe Int) -- ^ "MOVING_180_DAY_QUOTE_VOLUME_SELL" - The sum of all sell trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving180DayQuoteVolumeUnknown :: !(Maybe Int) -- ^ "MOVING_180_DAY_QUOTE_VOLUME_UNKNOWN" - The sum of all unknown trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving180DayTotalTrades :: !(Maybe Int) -- ^ "MOVING_180_DAY_TOTAL_TRADES" - The total number of trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total).
  , sPOTINSTRUMENTMARKETDATAMoving180DayTotalTradesBuy :: !(Maybe Int) -- ^ "MOVING_180_DAY_TOTAL_TRADES_BUY" - The total number of buy trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total).
  , sPOTINSTRUMENTMARKETDATAMoving180DayTotalTradesSell :: !(Maybe Int) -- ^ "MOVING_180_DAY_TOTAL_TRADES_SELL" - The total number of sell trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total).
  , sPOTINSTRUMENTMARKETDATAMoving180DayTotalTradesUnknown :: !(Maybe Int) -- ^ "MOVING_180_DAY_TOTAL_TRADES_UNKNOWN" - The total number of unknown trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total).
  , sPOTINSTRUMENTMARKETDATAMoving180DayVolume :: !(Maybe Int) -- ^ "MOVING_180_DAY_VOLUME" - The sum of all trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset.
  , sPOTINSTRUMENTMARKETDATAMoving180DayVolumeBuy :: !(Maybe Int) -- ^ "MOVING_180_DAY_VOLUME_BUY" - The sum of all trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset.
  , sPOTINSTRUMENTMARKETDATAMoving180DayVolumeSell :: !(Maybe Int) -- ^ "MOVING_180_DAY_VOLUME_SELL" - The sum of all sell trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset.
  , sPOTINSTRUMENTMARKETDATAMoving180DayVolumeUnknown :: !(Maybe Int) -- ^ "MOVING_180_DAY_VOLUME_UNKNOWN" - The sum of all unknown trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset.
  , sPOTINSTRUMENTMARKETDATAMoving24HourHigh :: !(Maybe Int) -- ^ "MOVING_24_HOUR_HIGH" - The highest traded price of the period. Here, the period runs from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving24HourLow :: !(Maybe Int) -- ^ "MOVING_24_HOUR_LOW" - The lowest traded price of the period. Here, the period runs from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving24HourOpen :: !(Maybe Int) -- ^ "MOVING_24_HOUR_OPEN" - The price of the closest trade to the period start date (23 hours + current hour ago). This will always be supplied and there is no need to do any calculation to get the full 24 hour value. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving24HourQuoteVolume :: !(Maybe Int) -- ^ "MOVING_24_HOUR_QUOTE_VOLUME" - The sum of all trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving24HourQuoteVolumeBuy :: !(Maybe Int) -- ^ "MOVING_24_HOUR_QUOTE_VOLUME_BUY" - The sum of all buy trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving24HourQuoteVolumeSell :: !(Maybe Int) -- ^ "MOVING_24_HOUR_QUOTE_VOLUME_SELL" - The sum of all sell trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving24HourQuoteVolumeUnknown :: !(Maybe Int) -- ^ "MOVING_24_HOUR_QUOTE_VOLUME_UNKNOWN" - The sum of all unknown trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving24HourTotalTrades :: !(Maybe Int) -- ^ "MOVING_24_HOUR_TOTAL_TRADES" - The total number of trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total).
  , sPOTINSTRUMENTMARKETDATAMoving24HourTotalTradesBuy :: !(Maybe Int) -- ^ "MOVING_24_HOUR_TOTAL_TRADES_BUY" - The total number of buy trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total).
  , sPOTINSTRUMENTMARKETDATAMoving24HourTotalTradesSell :: !(Maybe Int) -- ^ "MOVING_24_HOUR_TOTAL_TRADES_SELL" - The total number of sell trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total).
  , sPOTINSTRUMENTMARKETDATAMoving24HourTotalTradesUnknown :: !(Maybe Int) -- ^ "MOVING_24_HOUR_TOTAL_TRADES_UNKNOWN" - The total number of unknown trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total).
  , sPOTINSTRUMENTMARKETDATAMoving24HourVolume :: !(Maybe Int) -- ^ "MOVING_24_HOUR_VOLUME" - The sum of all trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset.
  , sPOTINSTRUMENTMARKETDATAMoving24HourVolumeBuy :: !(Maybe Int) -- ^ "MOVING_24_HOUR_VOLUME_BUY" - The sum of all buy trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset.
  , sPOTINSTRUMENTMARKETDATAMoving24HourVolumeSell :: !(Maybe Int) -- ^ "MOVING_24_HOUR_VOLUME_SELL" - The sum of all sell trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset.
  , sPOTINSTRUMENTMARKETDATAMoving24HourVolumeUnknown :: !(Maybe Int) -- ^ "MOVING_24_HOUR_VOLUME_UNKNOWN" - The sum of all unknown trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset.
  , sPOTINSTRUMENTMARKETDATAMoving30DayHigh :: !(Maybe Int) -- ^ "MOVING_30_DAY_HIGH" - The highest traded price of the period. Here, the period runs from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving30DayLow :: !(Maybe Int) -- ^ "MOVING_30_DAY_LOW" - The lowest traded price of the period. Here, the period runs from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving30DayOpen :: !(Maybe Int) -- ^ "MOVING_30_DAY_OPEN" - The price of the closest trade to the period start date (29 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 30 day value. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving30DayQuoteVolume :: !(Maybe Int) -- ^ "MOVING_30_DAY_QUOTE_VOLUME" - The sum of all trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving30DayQuoteVolumeBuy :: !(Maybe Int) -- ^ "MOVING_30_DAY_QUOTE_VOLUME_BUY" - The sum of all buy trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving30DayQuoteVolumeSell :: !(Maybe Int) -- ^ "MOVING_30_DAY_QUOTE_VOLUME_SELL" - The sum of all sell trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving30DayQuoteVolumeUnknown :: !(Maybe Int) -- ^ "MOVING_30_DAY_QUOTE_VOLUME_UNKNOWN" - The sum of all unknown trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving30DayTotalTrades :: !(Maybe Int) -- ^ "MOVING_30_DAY_TOTAL_TRADES" - The total number of trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total).
  , sPOTINSTRUMENTMARKETDATAMoving30DayTotalTradesBuy :: !(Maybe Int) -- ^ "MOVING_30_DAY_TOTAL_TRADES_BUY" - The total number of buy trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total).
  , sPOTINSTRUMENTMARKETDATAMoving30DayTotalTradesSell :: !(Maybe Int) -- ^ "MOVING_30_DAY_TOTAL_TRADES_SELL" - The total number of sell trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total).
  , sPOTINSTRUMENTMARKETDATAMoving30DayTotalTradesUnknown :: !(Maybe Int) -- ^ "MOVING_30_DAY_TOTAL_TRADES_UNKNOWN" - The total number of unknown trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total).
  , sPOTINSTRUMENTMARKETDATAMoving30DayVolume :: !(Maybe Int) -- ^ "MOVING_30_DAY_VOLUME" - The sum of all trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset.
  , sPOTINSTRUMENTMARKETDATAMoving30DayVolumeBuy :: !(Maybe Int) -- ^ "MOVING_30_DAY_VOLUME_BUY" - The sum of all buy trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset.
  , sPOTINSTRUMENTMARKETDATAMoving30DayVolumeSell :: !(Maybe Int) -- ^ "MOVING_30_DAY_VOLUME_SELL" - The sum of all sell trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset.
  , sPOTINSTRUMENTMARKETDATAMoving30DayVolumeUnknown :: !(Maybe Int) -- ^ "MOVING_30_DAY_VOLUME_UNKNOWN" - The sum of all unknown trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset.
  , sPOTINSTRUMENTMARKETDATAMoving365DayHigh :: !(Maybe Int) -- ^ "MOVING_365_DAY_HIGH" - The highest price of the period. Here, the period runs from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving365DayLow :: !(Maybe Int) -- ^ "MOVING_365_DAY_LOW" - The lowest traded price of the period. Here, the period runs from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving365DayOpen :: !(Maybe Int) -- ^ "MOVING_365_DAY_OPEN" - The price of the closest trade to the period start date (364 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 365 day value. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving365DayQuoteVolume :: !(Maybe Int) -- ^ "MOVING_365_DAY_QUOTE_VOLUME" - The sum of all trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving365DayQuoteVolumeBuy :: !(Maybe Int) -- ^ "MOVING_365_DAY_QUOTE_VOLUME_BUY" - The sum of all buy trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving365DayQuoteVolumeSell :: !(Maybe Int) -- ^ "MOVING_365_DAY_QUOTE_VOLUME_SELL" - The sum of all sell trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving365DayQuoteVolumeUnknown :: !(Maybe Int) -- ^ "MOVING_365_DAY_QUOTE_VOLUME_UNKNOWN" - The sum of all unknown trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving365DayTotalTrades :: !(Maybe Int) -- ^ "MOVING_365_DAY_TOTAL_TRADES" - The total number of trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total).
  , sPOTINSTRUMENTMARKETDATAMoving365DayTotalTradesBuy :: !(Maybe Int) -- ^ "MOVING_365_DAY_TOTAL_TRADES_BUY" - The total number of buy trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total).
  , sPOTINSTRUMENTMARKETDATAMoving365DayTotalTradesSell :: !(Maybe Int) -- ^ "MOVING_365_DAY_TOTAL_TRADES_SELL" - The total number of sell trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total).
  , sPOTINSTRUMENTMARKETDATAMoving365DayTotalTradesUnknown :: !(Maybe Int) -- ^ "MOVING_365_DAY_TOTAL_TRADES_UNKNOWN" - The total number of unknown trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total).
  , sPOTINSTRUMENTMARKETDATAMoving365DayVolume :: !(Maybe Int) -- ^ "MOVING_365_DAY_VOLUME" - The sum of all trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset.
  , sPOTINSTRUMENTMARKETDATAMoving365DayVolumeBuy :: !(Maybe Int) -- ^ "MOVING_365_DAY_VOLUME_BUY" - The sum of all trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset.
  , sPOTINSTRUMENTMARKETDATAMoving365DayVolumeSell :: !(Maybe Int) -- ^ "MOVING_365_DAY_VOLUME_SELL" - The sum of all sell trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset.
  , sPOTINSTRUMENTMARKETDATAMoving365DayVolumeUnknown :: !(Maybe Int) -- ^ "MOVING_365_DAY_VOLUME_UNKNOWN" - The sum of all unknown trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset.
  , sPOTINSTRUMENTMARKETDATAMoving7DayHigh :: !(Maybe Int) -- ^ "MOVING_7_DAY_HIGH" - The highest traded price of the period. Here, the period runs from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving7DayLow :: !(Maybe Int) -- ^ "MOVING_7_DAY_LOW" - The lowest traded price of the period. Here, the period runs from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving7DayOpen :: !(Maybe Int) -- ^ "MOVING_7_DAY_OPEN" - The price of the closest trade to the period start date (6 days + current day - 00:00:00 GMT/UTC to now). This will always be supplied and there is no need to do any calculation to get the full 7 day value. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving7DayQuoteVolume :: !(Maybe Int) -- ^ "MOVING_7_DAY_QUOTE_VOLUME" - The sum of all trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving7DayQuoteVolumeBuy :: !(Maybe Int) -- ^ "MOVING_7_DAY_QUOTE_VOLUME_BUY" - The sum of all buy trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving7DayQuoteVolumeSell :: !(Maybe Int) -- ^ "MOVING_7_DAY_QUOTE_VOLUME_SELL" - The sum of all sell trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving7DayQuoteVolumeUnknown :: !(Maybe Int) -- ^ "MOVING_7_DAY_QUOTE_VOLUME_UNKNOWN" - The sum of all unknown trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving7DayTotalTrades :: !(Maybe Int) -- ^ "MOVING_7_DAY_TOTAL_TRADES" - The total number of trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total).
  , sPOTINSTRUMENTMARKETDATAMoving7DayTotalTradesBuy :: !(Maybe Int) -- ^ "MOVING_7_DAY_TOTAL_TRADES_BUY" - The total number of buy trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total).
  , sPOTINSTRUMENTMARKETDATAMoving7DayTotalTradesSell :: !(Maybe Int) -- ^ "MOVING_7_DAY_TOTAL_TRADES_SELL" - The total number of sell trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total).
  , sPOTINSTRUMENTMARKETDATAMoving7DayTotalTradesUnknown :: !(Maybe Int) -- ^ "MOVING_7_DAY_TOTAL_TRADES_UNKNOWN" - The total number of unknown trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total).
  , sPOTINSTRUMENTMARKETDATAMoving7DayVolume :: !(Maybe Int) -- ^ "MOVING_7_DAY_VOLUME" - The sum of all trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset.
  , sPOTINSTRUMENTMARKETDATAMoving7DayVolumeBuy :: !(Maybe Int) -- ^ "MOVING_7_DAY_VOLUME_BUY" - The sum of all buy trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset.
  , sPOTINSTRUMENTMARKETDATAMoving7DayVolumeSell :: !(Maybe Int) -- ^ "MOVING_7_DAY_VOLUME_SELL" - The sum of all sell trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset.
  , sPOTINSTRUMENTMARKETDATAMoving7DayVolumeUnknown :: !(Maybe Int) -- ^ "MOVING_7_DAY_VOLUME_UNKNOWN" - The sum of all unknown trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset.
  , sPOTINSTRUMENTMARKETDATAMoving90DayHigh :: !(Maybe Int) -- ^ "MOVING_90_DAY_HIGH" - The highest value between the MOVING_90_DAY_OPEN and the highest traded price of the period. Here, the period runs from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving90DayLow :: !(Maybe Int) -- ^ "MOVING_90_DAY_LOW" - The lowest traded price of the period. Here, the period runs from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving90DayOpen :: !(Maybe Int) -- ^ "MOVING_90_DAY_OPEN" - The price of the closest trade to the period start date (89 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 90 day value. Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving90DayQuoteVolume :: !(Maybe Int) -- ^ "MOVING_90_DAY_QUOTE_VOLUME" - The sum of all trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving90DayQuoteVolumeBuy :: !(Maybe Int) -- ^ "MOVING_90_DAY_QUOTE_VOLUME_BUY" - The sum of all buy trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving90DayQuoteVolumeSell :: !(Maybe Int) -- ^ "MOVING_90_DAY_QUOTE_VOLUME_SELL" - The sum of all sell trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving90DayQuoteVolumeUnknown :: !(Maybe Int) -- ^ "MOVING_90_DAY_QUOTE_VOLUME_UNKNOWN" - The sum of all unknown trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset.
  , sPOTINSTRUMENTMARKETDATAMoving90DayTotalTrades :: !(Maybe Int) -- ^ "MOVING_90_DAY_TOTAL_TRADES" - The total number of trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total).
  , sPOTINSTRUMENTMARKETDATAMoving90DayTotalTradesBuy :: !(Maybe Int) -- ^ "MOVING_90_DAY_TOTAL_TRADES_BUY" - The total number of buy trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total).
  , sPOTINSTRUMENTMARKETDATAMoving90DayTotalTradesSell :: !(Maybe Int) -- ^ "MOVING_90_DAY_TOTAL_TRADES_SELL" - The total number of sell trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total).
  , sPOTINSTRUMENTMARKETDATAMoving90DayTotalTradesUnknown :: !(Maybe Int) -- ^ "MOVING_90_DAY_TOTAL_TRADES_UNKNOWN" - The total number of unknown trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total).
  , sPOTINSTRUMENTMARKETDATAMoving90DayVolume :: !(Maybe Int) -- ^ "MOVING_90_DAY_VOLUME" - The sum of all trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset.
  , sPOTINSTRUMENTMARKETDATAMoving90DayVolumeBuy :: !(Maybe Int) -- ^ "MOVING_90_DAY_VOLUME_BUY" - The sum of all trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset.
  , sPOTINSTRUMENTMARKETDATAMoving90DayVolumeSell :: !(Maybe Int) -- ^ "MOVING_90_DAY_VOLUME_SELL" - The sum of all sell trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset.
  , sPOTINSTRUMENTMARKETDATAMoving90DayVolumeUnknown :: !(Maybe Int) -- ^ "MOVING_90_DAY_VOLUME_UNKNOWN" - The sum of all unknown trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset.
  , sPOTINSTRUMENTMARKETDATAPrice :: !(Maybe Int) -- ^ "PRICE" - The price in the to asset (quote / number symbol / coin) of the latest trade. I.e. for a BTC-USD trade, how much was paid for one BTC in USD).
  , sPOTINSTRUMENTMARKETDATAPriceFlag :: !(Maybe Text) -- ^ "PRICE_FLAG" - The flag indicating whether the price has increased, decreased, or not changed
  , sPOTINSTRUMENTMARKETDATAPriceLastUpdateTs :: !(Maybe Int) -- ^ "PRICE_LAST_UPDATE_TS" - The timestamp in seconds as reported by the market / exchange. If the market /exchange does not provide this information, the received timestamp will be returned.
  , sPOTINSTRUMENTMARKETDATAQuote :: !(Maybe Text) -- ^ "QUOTE" - The mapped to asset (quote / counter symbol / coin), e.g. USD. Only available on instruments that have been mapped.
  , sPOTINSTRUMENTMARKETDATATopAskLastUpdateTs :: !(Maybe Int) -- ^ "TOP_ASK_LAST_UPDATE_TS" - The timestamp in seconds of the last time the top ask was updated, as reported by the market / exchange. If the market / exchange does not provide this information, the received timestamp will be returned.
  , sPOTINSTRUMENTMARKETDATATopAskPrice :: !(Maybe Int) -- ^ "TOP_ASK_PRICE" - The price of the top ask in the to asset (quote / numberer symbol / coin). For a BTC-USD order book, this will be the best price someone is willing to sell some BTC in USD, as quoted for 1 full BTC.
  , sPOTINSTRUMENTMARKETDATATopAskQuantity :: !(Maybe Int) -- ^ "TOP_ASK_QUANTITY" - The quantity of the top ask in the from asset (base / coin). For a BTC-USD order book, this will be the amount of BTC a person is willing to sell at the best price.
  , sPOTINSTRUMENTMARKETDATATopBidLastUpdateTs :: !(Maybe Int) -- ^ "TOP_BID_LAST_UPDATE_TS" - The timestamp in seconds of the last time the top bid was updated, as reported by the market / exchange. If the market / exchange does not provide this information, the received timestamp will be returned.
  , sPOTINSTRUMENTMARKETDATATopBidPrice :: !(Maybe Int) -- ^ "TOP_BID_PRICE" - The price of the top bid in the to asset (quote / numberer symbol / coin). For a BTC-USD order book, this will be the highest price a person is willing to pay for some BTC in USD, as quoted for 1 full BTC.
  , sPOTINSTRUMENTMARKETDATATopBidQuantity :: !(Maybe Int) -- ^ "TOP_BID_QUANTITY" - The quantity of the top bid in the from asset (base / coin). For a BTC-USD order book , this will be the amount of BTC someone is willing to buy at the best price.
  , sPOTINSTRUMENTMARKETDATAType :: !(Maybe Text) -- ^ "TYPE" - The type of the message.
  } deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON SPOTINSTRUMENTMARKETDATA
instance A.FromJSON SPOTINSTRUMENTMARKETDATA where
  parseJSON = A.withObject "SPOTINSTRUMENTMARKETDATA" $ \o ->
    SPOTINSTRUMENTMARKETDATA
      <$> (o .:? "BASE")
      <*> (o .:? "CCSEQ")
      <*> (o .:? "CURRENT_DAY_HIGH")
      <*> (o .:? "CURRENT_DAY_LOW")
      <*> (o .:? "CURRENT_DAY_OPEN")
      <*> (o .:? "CURRENT_DAY_QUOTE_VOLUME")
      <*> (o .:? "CURRENT_DAY_QUOTE_VOLUME_BUY")
      <*> (o .:? "CURRENT_DAY_QUOTE_VOLUME_SELL")
      <*> (o .:? "CURRENT_DAY_QUOTE_VOLUME_UNKNOWN")
      <*> (o .:? "CURRENT_DAY_TOTAL_TRADES")
      <*> (o .:? "CURRENT_DAY_TOTAL_TRADES_BUY")
      <*> (o .:? "CURRENT_DAY_TOTAL_TRADES_SELL")
      <*> (o .:? "CURRENT_DAY_TOTAL_TRADES_UNKNOWN")
      <*> (o .:? "CURRENT_DAY_VOLUME")
      <*> (o .:? "CURRENT_DAY_VOLUME_BUY")
      <*> (o .:? "CURRENT_DAY_VOLUME_SELL")
      <*> (o .:? "CURRENT_DAY_VOLUME_UNKNOWN")
      <*> (o .:? "CURRENT_HOUR_HIGH")
      <*> (o .:? "CURRENT_HOUR_LOW")
      <*> (o .:? "CURRENT_HOUR_OPEN")
      <*> (o .:? "CURRENT_HOUR_QUOTE_VOLUME")
      <*> (o .:? "CURRENT_HOUR_QUOTE_VOLUME_BUY")
      <*> (o .:? "CURRENT_HOUR_QUOTE_VOLUME_SELL")
      <*> (o .:? "CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN")
      <*> (o .:? "CURRENT_HOUR_TOTAL_TRADES")
      <*> (o .:? "CURRENT_HOUR_TOTAL_TRADES_BUY")
      <*> (o .:? "CURRENT_HOUR_TOTAL_TRADES_SELL")
      <*> (o .:? "CURRENT_HOUR_TOTAL_TRADES_UNKNOWN")
      <*> (o .:? "CURRENT_HOUR_VOLUME")
      <*> (o .:? "CURRENT_HOUR_VOLUME_BUY")
      <*> (o .:? "CURRENT_HOUR_VOLUME_SELL")
      <*> (o .:? "CURRENT_HOUR_VOLUME_UNKNOWN")
      <*> (o .:? "CURRENT_MONTH_HIGH")
      <*> (o .:? "CURRENT_MONTH_LOW")
      <*> (o .:? "CURRENT_MONTH_OPEN")
      <*> (o .:? "CURRENT_MONTH_QUOTE_VOLUME")
      <*> (o .:? "CURRENT_MONTH_QUOTE_VOLUME_BUY")
      <*> (o .:? "CURRENT_MONTH_QUOTE_VOLUME_SELL")
      <*> (o .:? "CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN")
      <*> (o .:? "CURRENT_MONTH_TOTAL_TRADES")
      <*> (o .:? "CURRENT_MONTH_TOTAL_TRADES_BUY")
      <*> (o .:? "CURRENT_MONTH_TOTAL_TRADES_SELL")
      <*> (o .:? "CURRENT_MONTH_TOTAL_TRADES_UNKNOWN")
      <*> (o .:? "CURRENT_MONTH_VOLUME")
      <*> (o .:? "CURRENT_MONTH_VOLUME_BUY")
      <*> (o .:? "CURRENT_MONTH_VOLUME_SELL")
      <*> (o .:? "CURRENT_MONTH_VOLUME_UNKNOWN")
      <*> (o .:? "CURRENT_WEEK_HIGH")
      <*> (o .:? "CURRENT_WEEK_LOW")
      <*> (o .:? "CURRENT_WEEK_OPEN")
      <*> (o .:? "CURRENT_WEEK_QUOTE_VOLUME")
      <*> (o .:? "CURRENT_WEEK_QUOTE_VOLUME_BUY")
      <*> (o .:? "CURRENT_WEEK_QUOTE_VOLUME_SELL")
      <*> (o .:? "CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN")
      <*> (o .:? "CURRENT_WEEK_TOTAL_TRADES")
      <*> (o .:? "CURRENT_WEEK_TOTAL_TRADES_BUY")
      <*> (o .:? "CURRENT_WEEK_TOTAL_TRADES_SELL")
      <*> (o .:? "CURRENT_WEEK_TOTAL_TRADES_UNKNOWN")
      <*> (o .:? "CURRENT_WEEK_VOLUME")
      <*> (o .:? "CURRENT_WEEK_VOLUME_BUY")
      <*> (o .:? "CURRENT_WEEK_VOLUME_SELL")
      <*> (o .:? "CURRENT_WEEK_VOLUME_UNKNOWN")
      <*> (o .:? "CURRENT_YEAR_HIGH")
      <*> (o .:? "CURRENT_YEAR_LOW")
      <*> (o .:? "CURRENT_YEAR_OPEN")
      <*> (o .:? "CURRENT_YEAR_QUOTE_VOLUME")
      <*> (o .:? "CURRENT_YEAR_QUOTE_VOLUME_BUY")
      <*> (o .:? "CURRENT_YEAR_QUOTE_VOLUME_SELL")
      <*> (o .:? "CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN")
      <*> (o .:? "CURRENT_YEAR_TOTAL_TRADES")
      <*> (o .:? "CURRENT_YEAR_TOTAL_TRADES_BUY")
      <*> (o .:? "CURRENT_YEAR_TOTAL_TRADES_SELL")
      <*> (o .:? "CURRENT_YEAR_TOTAL_TRADES_UNKNOWN")
      <*> (o .:? "CURRENT_YEAR_VOLUME")
      <*> (o .:? "CURRENT_YEAR_VOLUME_BUY")
      <*> (o .:? "CURRENT_YEAR_VOLUME_SELL")
      <*> (o .:? "CURRENT_YEAR_VOLUME_UNKNOWN")
      <*> (o .:? "INSTRUMENT")
      <*> (o .:? "LAST_PROCESSED_TRADE_CCSEQ")
      <*> (o .:? "LAST_PROCESSED_TRADE_PRICE")
      <*> (o .:? "LAST_PROCESSED_TRADE_QUANTITY")
      <*> (o .:? "LAST_PROCESSED_TRADE_QUOTE_QUANTITY")
      <*> (o .:? "LAST_PROCESSED_TRADE_SIDE")
      <*> (o .:? "LAST_PROCESSED_TRADE_TS")
      <*> (o .:? "LAST_TRADE_CCSEQ")
      <*> (o .:? "LAST_TRADE_ID")
      <*> (o .:? "LAST_TRADE_QUANTITY")
      <*> (o .:? "LAST_TRADE_QUOTE_QUANTITY")
      <*> (o .:? "LAST_TRADE_SIDE")
      <*> (o .:? "LIFETIME_FIRST_TRADE_TS")
      <*> (o .:? "LIFETIME_HIGH")
      <*> (o .:? "LIFETIME_HIGH_TS")
      <*> (o .:? "LIFETIME_LOW")
      <*> (o .:? "LIFETIME_LOW_TS")
      <*> (o .:? "LIFETIME_OPEN")
      <*> (o .:? "LIFETIME_QUOTE_VOLUME")
      <*> (o .:? "LIFETIME_QUOTE_VOLUME_BUY")
      <*> (o .:? "LIFETIME_QUOTE_VOLUME_SELL")
      <*> (o .:? "LIFETIME_QUOTE_VOLUME_UNKNOWN")
      <*> (o .:? "LIFETIME_TOTAL_TRADES")
      <*> (o .:? "LIFETIME_TOTAL_TRADES_BUY")
      <*> (o .:? "LIFETIME_TOTAL_TRADES_SELL")
      <*> (o .:? "LIFETIME_TOTAL_TRADES_UNKNOWN")
      <*> (o .:? "LIFETIME_VOLUME")
      <*> (o .:? "LIFETIME_VOLUME_BUY")
      <*> (o .:? "LIFETIME_VOLUME_SELL")
      <*> (o .:? "LIFETIME_VOLUME_UNKNOWN")
      <*> (o .:? "MAPPED_INSTRUMENT")
      <*> (o .:? "MARKET")
      <*> (o .:? "MOVING_180_DAY_HIGH")
      <*> (o .:? "MOVING_180_DAY_LOW")
      <*> (o .:? "MOVING_180_DAY_OPEN")
      <*> (o .:? "MOVING_180_DAY_QUOTE_VOLUME")
      <*> (o .:? "MOVING_180_DAY_QUOTE_VOLUME_BUY")
      <*> (o .:? "MOVING_180_DAY_QUOTE_VOLUME_SELL")
      <*> (o .:? "MOVING_180_DAY_QUOTE_VOLUME_UNKNOWN")
      <*> (o .:? "MOVING_180_DAY_TOTAL_TRADES")
      <*> (o .:? "MOVING_180_DAY_TOTAL_TRADES_BUY")
      <*> (o .:? "MOVING_180_DAY_TOTAL_TRADES_SELL")
      <*> (o .:? "MOVING_180_DAY_TOTAL_TRADES_UNKNOWN")
      <*> (o .:? "MOVING_180_DAY_VOLUME")
      <*> (o .:? "MOVING_180_DAY_VOLUME_BUY")
      <*> (o .:? "MOVING_180_DAY_VOLUME_SELL")
      <*> (o .:? "MOVING_180_DAY_VOLUME_UNKNOWN")
      <*> (o .:? "MOVING_24_HOUR_HIGH")
      <*> (o .:? "MOVING_24_HOUR_LOW")
      <*> (o .:? "MOVING_24_HOUR_OPEN")
      <*> (o .:? "MOVING_24_HOUR_QUOTE_VOLUME")
      <*> (o .:? "MOVING_24_HOUR_QUOTE_VOLUME_BUY")
      <*> (o .:? "MOVING_24_HOUR_QUOTE_VOLUME_SELL")
      <*> (o .:? "MOVING_24_HOUR_QUOTE_VOLUME_UNKNOWN")
      <*> (o .:? "MOVING_24_HOUR_TOTAL_TRADES")
      <*> (o .:? "MOVING_24_HOUR_TOTAL_TRADES_BUY")
      <*> (o .:? "MOVING_24_HOUR_TOTAL_TRADES_SELL")
      <*> (o .:? "MOVING_24_HOUR_TOTAL_TRADES_UNKNOWN")
      <*> (o .:? "MOVING_24_HOUR_VOLUME")
      <*> (o .:? "MOVING_24_HOUR_VOLUME_BUY")
      <*> (o .:? "MOVING_24_HOUR_VOLUME_SELL")
      <*> (o .:? "MOVING_24_HOUR_VOLUME_UNKNOWN")
      <*> (o .:? "MOVING_30_DAY_HIGH")
      <*> (o .:? "MOVING_30_DAY_LOW")
      <*> (o .:? "MOVING_30_DAY_OPEN")
      <*> (o .:? "MOVING_30_DAY_QUOTE_VOLUME")
      <*> (o .:? "MOVING_30_DAY_QUOTE_VOLUME_BUY")
      <*> (o .:? "MOVING_30_DAY_QUOTE_VOLUME_SELL")
      <*> (o .:? "MOVING_30_DAY_QUOTE_VOLUME_UNKNOWN")
      <*> (o .:? "MOVING_30_DAY_TOTAL_TRADES")
      <*> (o .:? "MOVING_30_DAY_TOTAL_TRADES_BUY")
      <*> (o .:? "MOVING_30_DAY_TOTAL_TRADES_SELL")
      <*> (o .:? "MOVING_30_DAY_TOTAL_TRADES_UNKNOWN")
      <*> (o .:? "MOVING_30_DAY_VOLUME")
      <*> (o .:? "MOVING_30_DAY_VOLUME_BUY")
      <*> (o .:? "MOVING_30_DAY_VOLUME_SELL")
      <*> (o .:? "MOVING_30_DAY_VOLUME_UNKNOWN")
      <*> (o .:? "MOVING_365_DAY_HIGH")
      <*> (o .:? "MOVING_365_DAY_LOW")
      <*> (o .:? "MOVING_365_DAY_OPEN")
      <*> (o .:? "MOVING_365_DAY_QUOTE_VOLUME")
      <*> (o .:? "MOVING_365_DAY_QUOTE_VOLUME_BUY")
      <*> (o .:? "MOVING_365_DAY_QUOTE_VOLUME_SELL")
      <*> (o .:? "MOVING_365_DAY_QUOTE_VOLUME_UNKNOWN")
      <*> (o .:? "MOVING_365_DAY_TOTAL_TRADES")
      <*> (o .:? "MOVING_365_DAY_TOTAL_TRADES_BUY")
      <*> (o .:? "MOVING_365_DAY_TOTAL_TRADES_SELL")
      <*> (o .:? "MOVING_365_DAY_TOTAL_TRADES_UNKNOWN")
      <*> (o .:? "MOVING_365_DAY_VOLUME")
      <*> (o .:? "MOVING_365_DAY_VOLUME_BUY")
      <*> (o .:? "MOVING_365_DAY_VOLUME_SELL")
      <*> (o .:? "MOVING_365_DAY_VOLUME_UNKNOWN")
      <*> (o .:? "MOVING_7_DAY_HIGH")
      <*> (o .:? "MOVING_7_DAY_LOW")
      <*> (o .:? "MOVING_7_DAY_OPEN")
      <*> (o .:? "MOVING_7_DAY_QUOTE_VOLUME")
      <*> (o .:? "MOVING_7_DAY_QUOTE_VOLUME_BUY")
      <*> (o .:? "MOVING_7_DAY_QUOTE_VOLUME_SELL")
      <*> (o .:? "MOVING_7_DAY_QUOTE_VOLUME_UNKNOWN")
      <*> (o .:? "MOVING_7_DAY_TOTAL_TRADES")
      <*> (o .:? "MOVING_7_DAY_TOTAL_TRADES_BUY")
      <*> (o .:? "MOVING_7_DAY_TOTAL_TRADES_SELL")
      <*> (o .:? "MOVING_7_DAY_TOTAL_TRADES_UNKNOWN")
      <*> (o .:? "MOVING_7_DAY_VOLUME")
      <*> (o .:? "MOVING_7_DAY_VOLUME_BUY")
      <*> (o .:? "MOVING_7_DAY_VOLUME_SELL")
      <*> (o .:? "MOVING_7_DAY_VOLUME_UNKNOWN")
      <*> (o .:? "MOVING_90_DAY_HIGH")
      <*> (o .:? "MOVING_90_DAY_LOW")
      <*> (o .:? "MOVING_90_DAY_OPEN")
      <*> (o .:? "MOVING_90_DAY_QUOTE_VOLUME")
      <*> (o .:? "MOVING_90_DAY_QUOTE_VOLUME_BUY")
      <*> (o .:? "MOVING_90_DAY_QUOTE_VOLUME_SELL")
      <*> (o .:? "MOVING_90_DAY_QUOTE_VOLUME_UNKNOWN")
      <*> (o .:? "MOVING_90_DAY_TOTAL_TRADES")
      <*> (o .:? "MOVING_90_DAY_TOTAL_TRADES_BUY")
      <*> (o .:? "MOVING_90_DAY_TOTAL_TRADES_SELL")
      <*> (o .:? "MOVING_90_DAY_TOTAL_TRADES_UNKNOWN")
      <*> (o .:? "MOVING_90_DAY_VOLUME")
      <*> (o .:? "MOVING_90_DAY_VOLUME_BUY")
      <*> (o .:? "MOVING_90_DAY_VOLUME_SELL")
      <*> (o .:? "MOVING_90_DAY_VOLUME_UNKNOWN")
      <*> (o .:? "PRICE")
      <*> (o .:? "PRICE_FLAG")
      <*> (o .:? "PRICE_LAST_UPDATE_TS")
      <*> (o .:? "QUOTE")
      <*> (o .:? "TOP_ASK_LAST_UPDATE_TS")
      <*> (o .:? "TOP_ASK_PRICE")
      <*> (o .:? "TOP_ASK_QUANTITY")
      <*> (o .:? "TOP_BID_LAST_UPDATE_TS")
      <*> (o .:? "TOP_BID_PRICE")
      <*> (o .:? "TOP_BID_QUANTITY")
      <*> (o .:? "TYPE")

-- | ToJSON SPOTINSTRUMENTMARKETDATA
instance A.ToJSON SPOTINSTRUMENTMARKETDATA where
  toJSON SPOTINSTRUMENTMARKETDATA {..} =
   _omitNulls
      [ "BASE" .= sPOTINSTRUMENTMARKETDATABase
      , "CCSEQ" .= sPOTINSTRUMENTMARKETDATACcseq
      , "CURRENT_DAY_HIGH" .= sPOTINSTRUMENTMARKETDATACurrentDayHigh
      , "CURRENT_DAY_LOW" .= sPOTINSTRUMENTMARKETDATACurrentDayLow
      , "CURRENT_DAY_OPEN" .= sPOTINSTRUMENTMARKETDATACurrentDayOpen
      , "CURRENT_DAY_QUOTE_VOLUME" .= sPOTINSTRUMENTMARKETDATACurrentDayQuoteVolume
      , "CURRENT_DAY_QUOTE_VOLUME_BUY" .= sPOTINSTRUMENTMARKETDATACurrentDayQuoteVolumeBuy
      , "CURRENT_DAY_QUOTE_VOLUME_SELL" .= sPOTINSTRUMENTMARKETDATACurrentDayQuoteVolumeSell
      , "CURRENT_DAY_QUOTE_VOLUME_UNKNOWN" .= sPOTINSTRUMENTMARKETDATACurrentDayQuoteVolumeUnknown
      , "CURRENT_DAY_TOTAL_TRADES" .= sPOTINSTRUMENTMARKETDATACurrentDayTotalTrades
      , "CURRENT_DAY_TOTAL_TRADES_BUY" .= sPOTINSTRUMENTMARKETDATACurrentDayTotalTradesBuy
      , "CURRENT_DAY_TOTAL_TRADES_SELL" .= sPOTINSTRUMENTMARKETDATACurrentDayTotalTradesSell
      , "CURRENT_DAY_TOTAL_TRADES_UNKNOWN" .= sPOTINSTRUMENTMARKETDATACurrentDayTotalTradesUnknown
      , "CURRENT_DAY_VOLUME" .= sPOTINSTRUMENTMARKETDATACurrentDayVolume
      , "CURRENT_DAY_VOLUME_BUY" .= sPOTINSTRUMENTMARKETDATACurrentDayVolumeBuy
      , "CURRENT_DAY_VOLUME_SELL" .= sPOTINSTRUMENTMARKETDATACurrentDayVolumeSell
      , "CURRENT_DAY_VOLUME_UNKNOWN" .= sPOTINSTRUMENTMARKETDATACurrentDayVolumeUnknown
      , "CURRENT_HOUR_HIGH" .= sPOTINSTRUMENTMARKETDATACurrentHourHigh
      , "CURRENT_HOUR_LOW" .= sPOTINSTRUMENTMARKETDATACurrentHourLow
      , "CURRENT_HOUR_OPEN" .= sPOTINSTRUMENTMARKETDATACurrentHourOpen
      , "CURRENT_HOUR_QUOTE_VOLUME" .= sPOTINSTRUMENTMARKETDATACurrentHourQuoteVolume
      , "CURRENT_HOUR_QUOTE_VOLUME_BUY" .= sPOTINSTRUMENTMARKETDATACurrentHourQuoteVolumeBuy
      , "CURRENT_HOUR_QUOTE_VOLUME_SELL" .= sPOTINSTRUMENTMARKETDATACurrentHourQuoteVolumeSell
      , "CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN" .= sPOTINSTRUMENTMARKETDATACurrentHourQuoteVolumeUnknown
      , "CURRENT_HOUR_TOTAL_TRADES" .= sPOTINSTRUMENTMARKETDATACurrentHourTotalTrades
      , "CURRENT_HOUR_TOTAL_TRADES_BUY" .= sPOTINSTRUMENTMARKETDATACurrentHourTotalTradesBuy
      , "CURRENT_HOUR_TOTAL_TRADES_SELL" .= sPOTINSTRUMENTMARKETDATACurrentHourTotalTradesSell
      , "CURRENT_HOUR_TOTAL_TRADES_UNKNOWN" .= sPOTINSTRUMENTMARKETDATACurrentHourTotalTradesUnknown
      , "CURRENT_HOUR_VOLUME" .= sPOTINSTRUMENTMARKETDATACurrentHourVolume
      , "CURRENT_HOUR_VOLUME_BUY" .= sPOTINSTRUMENTMARKETDATACurrentHourVolumeBuy
      , "CURRENT_HOUR_VOLUME_SELL" .= sPOTINSTRUMENTMARKETDATACurrentHourVolumeSell
      , "CURRENT_HOUR_VOLUME_UNKNOWN" .= sPOTINSTRUMENTMARKETDATACurrentHourVolumeUnknown
      , "CURRENT_MONTH_HIGH" .= sPOTINSTRUMENTMARKETDATACurrentMonthHigh
      , "CURRENT_MONTH_LOW" .= sPOTINSTRUMENTMARKETDATACurrentMonthLow
      , "CURRENT_MONTH_OPEN" .= sPOTINSTRUMENTMARKETDATACurrentMonthOpen
      , "CURRENT_MONTH_QUOTE_VOLUME" .= sPOTINSTRUMENTMARKETDATACurrentMonthQuoteVolume
      , "CURRENT_MONTH_QUOTE_VOLUME_BUY" .= sPOTINSTRUMENTMARKETDATACurrentMonthQuoteVolumeBuy
      , "CURRENT_MONTH_QUOTE_VOLUME_SELL" .= sPOTINSTRUMENTMARKETDATACurrentMonthQuoteVolumeSell
      , "CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN" .= sPOTINSTRUMENTMARKETDATACurrentMonthQuoteVolumeUnknown
      , "CURRENT_MONTH_TOTAL_TRADES" .= sPOTINSTRUMENTMARKETDATACurrentMonthTotalTrades
      , "CURRENT_MONTH_TOTAL_TRADES_BUY" .= sPOTINSTRUMENTMARKETDATACurrentMonthTotalTradesBuy
      , "CURRENT_MONTH_TOTAL_TRADES_SELL" .= sPOTINSTRUMENTMARKETDATACurrentMonthTotalTradesSell
      , "CURRENT_MONTH_TOTAL_TRADES_UNKNOWN" .= sPOTINSTRUMENTMARKETDATACurrentMonthTotalTradesUnknown
      , "CURRENT_MONTH_VOLUME" .= sPOTINSTRUMENTMARKETDATACurrentMonthVolume
      , "CURRENT_MONTH_VOLUME_BUY" .= sPOTINSTRUMENTMARKETDATACurrentMonthVolumeBuy
      , "CURRENT_MONTH_VOLUME_SELL" .= sPOTINSTRUMENTMARKETDATACurrentMonthVolumeSell
      , "CURRENT_MONTH_VOLUME_UNKNOWN" .= sPOTINSTRUMENTMARKETDATACurrentMonthVolumeUnknown
      , "CURRENT_WEEK_HIGH" .= sPOTINSTRUMENTMARKETDATACurrentWeekHigh
      , "CURRENT_WEEK_LOW" .= sPOTINSTRUMENTMARKETDATACurrentWeekLow
      , "CURRENT_WEEK_OPEN" .= sPOTINSTRUMENTMARKETDATACurrentWeekOpen
      , "CURRENT_WEEK_QUOTE_VOLUME" .= sPOTINSTRUMENTMARKETDATACurrentWeekQuoteVolume
      , "CURRENT_WEEK_QUOTE_VOLUME_BUY" .= sPOTINSTRUMENTMARKETDATACurrentWeekQuoteVolumeBuy
      , "CURRENT_WEEK_QUOTE_VOLUME_SELL" .= sPOTINSTRUMENTMARKETDATACurrentWeekQuoteVolumeSell
      , "CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN" .= sPOTINSTRUMENTMARKETDATACurrentWeekQuoteVolumeUnknown
      , "CURRENT_WEEK_TOTAL_TRADES" .= sPOTINSTRUMENTMARKETDATACurrentWeekTotalTrades
      , "CURRENT_WEEK_TOTAL_TRADES_BUY" .= sPOTINSTRUMENTMARKETDATACurrentWeekTotalTradesBuy
      , "CURRENT_WEEK_TOTAL_TRADES_SELL" .= sPOTINSTRUMENTMARKETDATACurrentWeekTotalTradesSell
      , "CURRENT_WEEK_TOTAL_TRADES_UNKNOWN" .= sPOTINSTRUMENTMARKETDATACurrentWeekTotalTradesUnknown
      , "CURRENT_WEEK_VOLUME" .= sPOTINSTRUMENTMARKETDATACurrentWeekVolume
      , "CURRENT_WEEK_VOLUME_BUY" .= sPOTINSTRUMENTMARKETDATACurrentWeekVolumeBuy
      , "CURRENT_WEEK_VOLUME_SELL" .= sPOTINSTRUMENTMARKETDATACurrentWeekVolumeSell
      , "CURRENT_WEEK_VOLUME_UNKNOWN" .= sPOTINSTRUMENTMARKETDATACurrentWeekVolumeUnknown
      , "CURRENT_YEAR_HIGH" .= sPOTINSTRUMENTMARKETDATACurrentYearHigh
      , "CURRENT_YEAR_LOW" .= sPOTINSTRUMENTMARKETDATACurrentYearLow
      , "CURRENT_YEAR_OPEN" .= sPOTINSTRUMENTMARKETDATACurrentYearOpen
      , "CURRENT_YEAR_QUOTE_VOLUME" .= sPOTINSTRUMENTMARKETDATACurrentYearQuoteVolume
      , "CURRENT_YEAR_QUOTE_VOLUME_BUY" .= sPOTINSTRUMENTMARKETDATACurrentYearQuoteVolumeBuy
      , "CURRENT_YEAR_QUOTE_VOLUME_SELL" .= sPOTINSTRUMENTMARKETDATACurrentYearQuoteVolumeSell
      , "CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN" .= sPOTINSTRUMENTMARKETDATACurrentYearQuoteVolumeUnknown
      , "CURRENT_YEAR_TOTAL_TRADES" .= sPOTINSTRUMENTMARKETDATACurrentYearTotalTrades
      , "CURRENT_YEAR_TOTAL_TRADES_BUY" .= sPOTINSTRUMENTMARKETDATACurrentYearTotalTradesBuy
      , "CURRENT_YEAR_TOTAL_TRADES_SELL" .= sPOTINSTRUMENTMARKETDATACurrentYearTotalTradesSell
      , "CURRENT_YEAR_TOTAL_TRADES_UNKNOWN" .= sPOTINSTRUMENTMARKETDATACurrentYearTotalTradesUnknown
      , "CURRENT_YEAR_VOLUME" .= sPOTINSTRUMENTMARKETDATACurrentYearVolume
      , "CURRENT_YEAR_VOLUME_BUY" .= sPOTINSTRUMENTMARKETDATACurrentYearVolumeBuy
      , "CURRENT_YEAR_VOLUME_SELL" .= sPOTINSTRUMENTMARKETDATACurrentYearVolumeSell
      , "CURRENT_YEAR_VOLUME_UNKNOWN" .= sPOTINSTRUMENTMARKETDATACurrentYearVolumeUnknown
      , "INSTRUMENT" .= sPOTINSTRUMENTMARKETDATAInstrument
      , "LAST_PROCESSED_TRADE_CCSEQ" .= sPOTINSTRUMENTMARKETDATALastProcessedTradeCcseq
      , "LAST_PROCESSED_TRADE_PRICE" .= sPOTINSTRUMENTMARKETDATALastProcessedTradePrice
      , "LAST_PROCESSED_TRADE_QUANTITY" .= sPOTINSTRUMENTMARKETDATALastProcessedTradeQuantity
      , "LAST_PROCESSED_TRADE_QUOTE_QUANTITY" .= sPOTINSTRUMENTMARKETDATALastProcessedTradeQuoteQuantity
      , "LAST_PROCESSED_TRADE_SIDE" .= sPOTINSTRUMENTMARKETDATALastProcessedTradeSide
      , "LAST_PROCESSED_TRADE_TS" .= sPOTINSTRUMENTMARKETDATALastProcessedTradeTs
      , "LAST_TRADE_CCSEQ" .= sPOTINSTRUMENTMARKETDATALastTradeCcseq
      , "LAST_TRADE_ID" .= sPOTINSTRUMENTMARKETDATALastTradeId
      , "LAST_TRADE_QUANTITY" .= sPOTINSTRUMENTMARKETDATALastTradeQuantity
      , "LAST_TRADE_QUOTE_QUANTITY" .= sPOTINSTRUMENTMARKETDATALastTradeQuoteQuantity
      , "LAST_TRADE_SIDE" .= sPOTINSTRUMENTMARKETDATALastTradeSide
      , "LIFETIME_FIRST_TRADE_TS" .= sPOTINSTRUMENTMARKETDATALifetimeFirstTradeTs
      , "LIFETIME_HIGH" .= sPOTINSTRUMENTMARKETDATALifetimeHigh
      , "LIFETIME_HIGH_TS" .= sPOTINSTRUMENTMARKETDATALifetimeHighTs
      , "LIFETIME_LOW" .= sPOTINSTRUMENTMARKETDATALifetimeLow
      , "LIFETIME_LOW_TS" .= sPOTINSTRUMENTMARKETDATALifetimeLowTs
      , "LIFETIME_OPEN" .= sPOTINSTRUMENTMARKETDATALifetimeOpen
      , "LIFETIME_QUOTE_VOLUME" .= sPOTINSTRUMENTMARKETDATALifetimeQuoteVolume
      , "LIFETIME_QUOTE_VOLUME_BUY" .= sPOTINSTRUMENTMARKETDATALifetimeQuoteVolumeBuy
      , "LIFETIME_QUOTE_VOLUME_SELL" .= sPOTINSTRUMENTMARKETDATALifetimeQuoteVolumeSell
      , "LIFETIME_QUOTE_VOLUME_UNKNOWN" .= sPOTINSTRUMENTMARKETDATALifetimeQuoteVolumeUnknown
      , "LIFETIME_TOTAL_TRADES" .= sPOTINSTRUMENTMARKETDATALifetimeTotalTrades
      , "LIFETIME_TOTAL_TRADES_BUY" .= sPOTINSTRUMENTMARKETDATALifetimeTotalTradesBuy
      , "LIFETIME_TOTAL_TRADES_SELL" .= sPOTINSTRUMENTMARKETDATALifetimeTotalTradesSell
      , "LIFETIME_TOTAL_TRADES_UNKNOWN" .= sPOTINSTRUMENTMARKETDATALifetimeTotalTradesUnknown
      , "LIFETIME_VOLUME" .= sPOTINSTRUMENTMARKETDATALifetimeVolume
      , "LIFETIME_VOLUME_BUY" .= sPOTINSTRUMENTMARKETDATALifetimeVolumeBuy
      , "LIFETIME_VOLUME_SELL" .= sPOTINSTRUMENTMARKETDATALifetimeVolumeSell
      , "LIFETIME_VOLUME_UNKNOWN" .= sPOTINSTRUMENTMARKETDATALifetimeVolumeUnknown
      , "MAPPED_INSTRUMENT" .= sPOTINSTRUMENTMARKETDATAMappedInstrument
      , "MARKET" .= sPOTINSTRUMENTMARKETDATAMarket
      , "MOVING_180_DAY_HIGH" .= sPOTINSTRUMENTMARKETDATAMoving180DayHigh
      , "MOVING_180_DAY_LOW" .= sPOTINSTRUMENTMARKETDATAMoving180DayLow
      , "MOVING_180_DAY_OPEN" .= sPOTINSTRUMENTMARKETDATAMoving180DayOpen
      , "MOVING_180_DAY_QUOTE_VOLUME" .= sPOTINSTRUMENTMARKETDATAMoving180DayQuoteVolume
      , "MOVING_180_DAY_QUOTE_VOLUME_BUY" .= sPOTINSTRUMENTMARKETDATAMoving180DayQuoteVolumeBuy
      , "MOVING_180_DAY_QUOTE_VOLUME_SELL" .= sPOTINSTRUMENTMARKETDATAMoving180DayQuoteVolumeSell
      , "MOVING_180_DAY_QUOTE_VOLUME_UNKNOWN" .= sPOTINSTRUMENTMARKETDATAMoving180DayQuoteVolumeUnknown
      , "MOVING_180_DAY_TOTAL_TRADES" .= sPOTINSTRUMENTMARKETDATAMoving180DayTotalTrades
      , "MOVING_180_DAY_TOTAL_TRADES_BUY" .= sPOTINSTRUMENTMARKETDATAMoving180DayTotalTradesBuy
      , "MOVING_180_DAY_TOTAL_TRADES_SELL" .= sPOTINSTRUMENTMARKETDATAMoving180DayTotalTradesSell
      , "MOVING_180_DAY_TOTAL_TRADES_UNKNOWN" .= sPOTINSTRUMENTMARKETDATAMoving180DayTotalTradesUnknown
      , "MOVING_180_DAY_VOLUME" .= sPOTINSTRUMENTMARKETDATAMoving180DayVolume
      , "MOVING_180_DAY_VOLUME_BUY" .= sPOTINSTRUMENTMARKETDATAMoving180DayVolumeBuy
      , "MOVING_180_DAY_VOLUME_SELL" .= sPOTINSTRUMENTMARKETDATAMoving180DayVolumeSell
      , "MOVING_180_DAY_VOLUME_UNKNOWN" .= sPOTINSTRUMENTMARKETDATAMoving180DayVolumeUnknown
      , "MOVING_24_HOUR_HIGH" .= sPOTINSTRUMENTMARKETDATAMoving24HourHigh
      , "MOVING_24_HOUR_LOW" .= sPOTINSTRUMENTMARKETDATAMoving24HourLow
      , "MOVING_24_HOUR_OPEN" .= sPOTINSTRUMENTMARKETDATAMoving24HourOpen
      , "MOVING_24_HOUR_QUOTE_VOLUME" .= sPOTINSTRUMENTMARKETDATAMoving24HourQuoteVolume
      , "MOVING_24_HOUR_QUOTE_VOLUME_BUY" .= sPOTINSTRUMENTMARKETDATAMoving24HourQuoteVolumeBuy
      , "MOVING_24_HOUR_QUOTE_VOLUME_SELL" .= sPOTINSTRUMENTMARKETDATAMoving24HourQuoteVolumeSell
      , "MOVING_24_HOUR_QUOTE_VOLUME_UNKNOWN" .= sPOTINSTRUMENTMARKETDATAMoving24HourQuoteVolumeUnknown
      , "MOVING_24_HOUR_TOTAL_TRADES" .= sPOTINSTRUMENTMARKETDATAMoving24HourTotalTrades
      , "MOVING_24_HOUR_TOTAL_TRADES_BUY" .= sPOTINSTRUMENTMARKETDATAMoving24HourTotalTradesBuy
      , "MOVING_24_HOUR_TOTAL_TRADES_SELL" .= sPOTINSTRUMENTMARKETDATAMoving24HourTotalTradesSell
      , "MOVING_24_HOUR_TOTAL_TRADES_UNKNOWN" .= sPOTINSTRUMENTMARKETDATAMoving24HourTotalTradesUnknown
      , "MOVING_24_HOUR_VOLUME" .= sPOTINSTRUMENTMARKETDATAMoving24HourVolume
      , "MOVING_24_HOUR_VOLUME_BUY" .= sPOTINSTRUMENTMARKETDATAMoving24HourVolumeBuy
      , "MOVING_24_HOUR_VOLUME_SELL" .= sPOTINSTRUMENTMARKETDATAMoving24HourVolumeSell
      , "MOVING_24_HOUR_VOLUME_UNKNOWN" .= sPOTINSTRUMENTMARKETDATAMoving24HourVolumeUnknown
      , "MOVING_30_DAY_HIGH" .= sPOTINSTRUMENTMARKETDATAMoving30DayHigh
      , "MOVING_30_DAY_LOW" .= sPOTINSTRUMENTMARKETDATAMoving30DayLow
      , "MOVING_30_DAY_OPEN" .= sPOTINSTRUMENTMARKETDATAMoving30DayOpen
      , "MOVING_30_DAY_QUOTE_VOLUME" .= sPOTINSTRUMENTMARKETDATAMoving30DayQuoteVolume
      , "MOVING_30_DAY_QUOTE_VOLUME_BUY" .= sPOTINSTRUMENTMARKETDATAMoving30DayQuoteVolumeBuy
      , "MOVING_30_DAY_QUOTE_VOLUME_SELL" .= sPOTINSTRUMENTMARKETDATAMoving30DayQuoteVolumeSell
      , "MOVING_30_DAY_QUOTE_VOLUME_UNKNOWN" .= sPOTINSTRUMENTMARKETDATAMoving30DayQuoteVolumeUnknown
      , "MOVING_30_DAY_TOTAL_TRADES" .= sPOTINSTRUMENTMARKETDATAMoving30DayTotalTrades
      , "MOVING_30_DAY_TOTAL_TRADES_BUY" .= sPOTINSTRUMENTMARKETDATAMoving30DayTotalTradesBuy
      , "MOVING_30_DAY_TOTAL_TRADES_SELL" .= sPOTINSTRUMENTMARKETDATAMoving30DayTotalTradesSell
      , "MOVING_30_DAY_TOTAL_TRADES_UNKNOWN" .= sPOTINSTRUMENTMARKETDATAMoving30DayTotalTradesUnknown
      , "MOVING_30_DAY_VOLUME" .= sPOTINSTRUMENTMARKETDATAMoving30DayVolume
      , "MOVING_30_DAY_VOLUME_BUY" .= sPOTINSTRUMENTMARKETDATAMoving30DayVolumeBuy
      , "MOVING_30_DAY_VOLUME_SELL" .= sPOTINSTRUMENTMARKETDATAMoving30DayVolumeSell
      , "MOVING_30_DAY_VOLUME_UNKNOWN" .= sPOTINSTRUMENTMARKETDATAMoving30DayVolumeUnknown
      , "MOVING_365_DAY_HIGH" .= sPOTINSTRUMENTMARKETDATAMoving365DayHigh
      , "MOVING_365_DAY_LOW" .= sPOTINSTRUMENTMARKETDATAMoving365DayLow
      , "MOVING_365_DAY_OPEN" .= sPOTINSTRUMENTMARKETDATAMoving365DayOpen
      , "MOVING_365_DAY_QUOTE_VOLUME" .= sPOTINSTRUMENTMARKETDATAMoving365DayQuoteVolume
      , "MOVING_365_DAY_QUOTE_VOLUME_BUY" .= sPOTINSTRUMENTMARKETDATAMoving365DayQuoteVolumeBuy
      , "MOVING_365_DAY_QUOTE_VOLUME_SELL" .= sPOTINSTRUMENTMARKETDATAMoving365DayQuoteVolumeSell
      , "MOVING_365_DAY_QUOTE_VOLUME_UNKNOWN" .= sPOTINSTRUMENTMARKETDATAMoving365DayQuoteVolumeUnknown
      , "MOVING_365_DAY_TOTAL_TRADES" .= sPOTINSTRUMENTMARKETDATAMoving365DayTotalTrades
      , "MOVING_365_DAY_TOTAL_TRADES_BUY" .= sPOTINSTRUMENTMARKETDATAMoving365DayTotalTradesBuy
      , "MOVING_365_DAY_TOTAL_TRADES_SELL" .= sPOTINSTRUMENTMARKETDATAMoving365DayTotalTradesSell
      , "MOVING_365_DAY_TOTAL_TRADES_UNKNOWN" .= sPOTINSTRUMENTMARKETDATAMoving365DayTotalTradesUnknown
      , "MOVING_365_DAY_VOLUME" .= sPOTINSTRUMENTMARKETDATAMoving365DayVolume
      , "MOVING_365_DAY_VOLUME_BUY" .= sPOTINSTRUMENTMARKETDATAMoving365DayVolumeBuy
      , "MOVING_365_DAY_VOLUME_SELL" .= sPOTINSTRUMENTMARKETDATAMoving365DayVolumeSell
      , "MOVING_365_DAY_VOLUME_UNKNOWN" .= sPOTINSTRUMENTMARKETDATAMoving365DayVolumeUnknown
      , "MOVING_7_DAY_HIGH" .= sPOTINSTRUMENTMARKETDATAMoving7DayHigh
      , "MOVING_7_DAY_LOW" .= sPOTINSTRUMENTMARKETDATAMoving7DayLow
      , "MOVING_7_DAY_OPEN" .= sPOTINSTRUMENTMARKETDATAMoving7DayOpen
      , "MOVING_7_DAY_QUOTE_VOLUME" .= sPOTINSTRUMENTMARKETDATAMoving7DayQuoteVolume
      , "MOVING_7_DAY_QUOTE_VOLUME_BUY" .= sPOTINSTRUMENTMARKETDATAMoving7DayQuoteVolumeBuy
      , "MOVING_7_DAY_QUOTE_VOLUME_SELL" .= sPOTINSTRUMENTMARKETDATAMoving7DayQuoteVolumeSell
      , "MOVING_7_DAY_QUOTE_VOLUME_UNKNOWN" .= sPOTINSTRUMENTMARKETDATAMoving7DayQuoteVolumeUnknown
      , "MOVING_7_DAY_TOTAL_TRADES" .= sPOTINSTRUMENTMARKETDATAMoving7DayTotalTrades
      , "MOVING_7_DAY_TOTAL_TRADES_BUY" .= sPOTINSTRUMENTMARKETDATAMoving7DayTotalTradesBuy
      , "MOVING_7_DAY_TOTAL_TRADES_SELL" .= sPOTINSTRUMENTMARKETDATAMoving7DayTotalTradesSell
      , "MOVING_7_DAY_TOTAL_TRADES_UNKNOWN" .= sPOTINSTRUMENTMARKETDATAMoving7DayTotalTradesUnknown
      , "MOVING_7_DAY_VOLUME" .= sPOTINSTRUMENTMARKETDATAMoving7DayVolume
      , "MOVING_7_DAY_VOLUME_BUY" .= sPOTINSTRUMENTMARKETDATAMoving7DayVolumeBuy
      , "MOVING_7_DAY_VOLUME_SELL" .= sPOTINSTRUMENTMARKETDATAMoving7DayVolumeSell
      , "MOVING_7_DAY_VOLUME_UNKNOWN" .= sPOTINSTRUMENTMARKETDATAMoving7DayVolumeUnknown
      , "MOVING_90_DAY_HIGH" .= sPOTINSTRUMENTMARKETDATAMoving90DayHigh
      , "MOVING_90_DAY_LOW" .= sPOTINSTRUMENTMARKETDATAMoving90DayLow
      , "MOVING_90_DAY_OPEN" .= sPOTINSTRUMENTMARKETDATAMoving90DayOpen
      , "MOVING_90_DAY_QUOTE_VOLUME" .= sPOTINSTRUMENTMARKETDATAMoving90DayQuoteVolume
      , "MOVING_90_DAY_QUOTE_VOLUME_BUY" .= sPOTINSTRUMENTMARKETDATAMoving90DayQuoteVolumeBuy
      , "MOVING_90_DAY_QUOTE_VOLUME_SELL" .= sPOTINSTRUMENTMARKETDATAMoving90DayQuoteVolumeSell
      , "MOVING_90_DAY_QUOTE_VOLUME_UNKNOWN" .= sPOTINSTRUMENTMARKETDATAMoving90DayQuoteVolumeUnknown
      , "MOVING_90_DAY_TOTAL_TRADES" .= sPOTINSTRUMENTMARKETDATAMoving90DayTotalTrades
      , "MOVING_90_DAY_TOTAL_TRADES_BUY" .= sPOTINSTRUMENTMARKETDATAMoving90DayTotalTradesBuy
      , "MOVING_90_DAY_TOTAL_TRADES_SELL" .= sPOTINSTRUMENTMARKETDATAMoving90DayTotalTradesSell
      , "MOVING_90_DAY_TOTAL_TRADES_UNKNOWN" .= sPOTINSTRUMENTMARKETDATAMoving90DayTotalTradesUnknown
      , "MOVING_90_DAY_VOLUME" .= sPOTINSTRUMENTMARKETDATAMoving90DayVolume
      , "MOVING_90_DAY_VOLUME_BUY" .= sPOTINSTRUMENTMARKETDATAMoving90DayVolumeBuy
      , "MOVING_90_DAY_VOLUME_SELL" .= sPOTINSTRUMENTMARKETDATAMoving90DayVolumeSell
      , "MOVING_90_DAY_VOLUME_UNKNOWN" .= sPOTINSTRUMENTMARKETDATAMoving90DayVolumeUnknown
      , "PRICE" .= sPOTINSTRUMENTMARKETDATAPrice
      , "PRICE_FLAG" .= sPOTINSTRUMENTMARKETDATAPriceFlag
      , "PRICE_LAST_UPDATE_TS" .= sPOTINSTRUMENTMARKETDATAPriceLastUpdateTs
      , "QUOTE" .= sPOTINSTRUMENTMARKETDATAQuote
      , "TOP_ASK_LAST_UPDATE_TS" .= sPOTINSTRUMENTMARKETDATATopAskLastUpdateTs
      , "TOP_ASK_PRICE" .= sPOTINSTRUMENTMARKETDATATopAskPrice
      , "TOP_ASK_QUANTITY" .= sPOTINSTRUMENTMARKETDATATopAskQuantity
      , "TOP_BID_LAST_UPDATE_TS" .= sPOTINSTRUMENTMARKETDATATopBidLastUpdateTs
      , "TOP_BID_PRICE" .= sPOTINSTRUMENTMARKETDATATopBidPrice
      , "TOP_BID_QUANTITY" .= sPOTINSTRUMENTMARKETDATATopBidQuantity
      , "TYPE" .= sPOTINSTRUMENTMARKETDATAType
      ]


-- | Construct a value of type 'SPOTINSTRUMENTMARKETDATA' (by applying it's required fields, if any)
mkSPOTINSTRUMENTMARKETDATA
  :: SPOTINSTRUMENTMARKETDATA
mkSPOTINSTRUMENTMARKETDATA =
  SPOTINSTRUMENTMARKETDATA
  { sPOTINSTRUMENTMARKETDATABase = Nothing
  , sPOTINSTRUMENTMARKETDATACcseq = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentDayHigh = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentDayLow = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentDayOpen = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentDayQuoteVolume = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentDayQuoteVolumeBuy = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentDayQuoteVolumeSell = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentDayQuoteVolumeUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentDayTotalTrades = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentDayTotalTradesBuy = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentDayTotalTradesSell = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentDayTotalTradesUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentDayVolume = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentDayVolumeBuy = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentDayVolumeSell = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentDayVolumeUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentHourHigh = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentHourLow = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentHourOpen = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentHourQuoteVolume = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentHourQuoteVolumeBuy = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentHourQuoteVolumeSell = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentHourQuoteVolumeUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentHourTotalTrades = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentHourTotalTradesBuy = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentHourTotalTradesSell = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentHourTotalTradesUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentHourVolume = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentHourVolumeBuy = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentHourVolumeSell = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentHourVolumeUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentMonthHigh = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentMonthLow = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentMonthOpen = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentMonthQuoteVolume = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentMonthQuoteVolumeBuy = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentMonthQuoteVolumeSell = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentMonthQuoteVolumeUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentMonthTotalTrades = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentMonthTotalTradesBuy = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentMonthTotalTradesSell = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentMonthTotalTradesUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentMonthVolume = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentMonthVolumeBuy = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentMonthVolumeSell = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentMonthVolumeUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentWeekHigh = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentWeekLow = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentWeekOpen = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentWeekQuoteVolume = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentWeekQuoteVolumeBuy = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentWeekQuoteVolumeSell = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentWeekQuoteVolumeUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentWeekTotalTrades = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentWeekTotalTradesBuy = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentWeekTotalTradesSell = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentWeekTotalTradesUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentWeekVolume = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentWeekVolumeBuy = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentWeekVolumeSell = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentWeekVolumeUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentYearHigh = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentYearLow = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentYearOpen = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentYearQuoteVolume = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentYearQuoteVolumeBuy = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentYearQuoteVolumeSell = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentYearQuoteVolumeUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentYearTotalTrades = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentYearTotalTradesBuy = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentYearTotalTradesSell = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentYearTotalTradesUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentYearVolume = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentYearVolumeBuy = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentYearVolumeSell = Nothing
  , sPOTINSTRUMENTMARKETDATACurrentYearVolumeUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATAInstrument = Nothing
  , sPOTINSTRUMENTMARKETDATALastProcessedTradeCcseq = Nothing
  , sPOTINSTRUMENTMARKETDATALastProcessedTradePrice = Nothing
  , sPOTINSTRUMENTMARKETDATALastProcessedTradeQuantity = Nothing
  , sPOTINSTRUMENTMARKETDATALastProcessedTradeQuoteQuantity = Nothing
  , sPOTINSTRUMENTMARKETDATALastProcessedTradeSide = Nothing
  , sPOTINSTRUMENTMARKETDATALastProcessedTradeTs = Nothing
  , sPOTINSTRUMENTMARKETDATALastTradeCcseq = Nothing
  , sPOTINSTRUMENTMARKETDATALastTradeId = Nothing
  , sPOTINSTRUMENTMARKETDATALastTradeQuantity = Nothing
  , sPOTINSTRUMENTMARKETDATALastTradeQuoteQuantity = Nothing
  , sPOTINSTRUMENTMARKETDATALastTradeSide = Nothing
  , sPOTINSTRUMENTMARKETDATALifetimeFirstTradeTs = Nothing
  , sPOTINSTRUMENTMARKETDATALifetimeHigh = Nothing
  , sPOTINSTRUMENTMARKETDATALifetimeHighTs = Nothing
  , sPOTINSTRUMENTMARKETDATALifetimeLow = Nothing
  , sPOTINSTRUMENTMARKETDATALifetimeLowTs = Nothing
  , sPOTINSTRUMENTMARKETDATALifetimeOpen = Nothing
  , sPOTINSTRUMENTMARKETDATALifetimeQuoteVolume = Nothing
  , sPOTINSTRUMENTMARKETDATALifetimeQuoteVolumeBuy = Nothing
  , sPOTINSTRUMENTMARKETDATALifetimeQuoteVolumeSell = Nothing
  , sPOTINSTRUMENTMARKETDATALifetimeQuoteVolumeUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATALifetimeTotalTrades = Nothing
  , sPOTINSTRUMENTMARKETDATALifetimeTotalTradesBuy = Nothing
  , sPOTINSTRUMENTMARKETDATALifetimeTotalTradesSell = Nothing
  , sPOTINSTRUMENTMARKETDATALifetimeTotalTradesUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATALifetimeVolume = Nothing
  , sPOTINSTRUMENTMARKETDATALifetimeVolumeBuy = Nothing
  , sPOTINSTRUMENTMARKETDATALifetimeVolumeSell = Nothing
  , sPOTINSTRUMENTMARKETDATALifetimeVolumeUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATAMappedInstrument = Nothing
  , sPOTINSTRUMENTMARKETDATAMarket = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving180DayHigh = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving180DayLow = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving180DayOpen = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving180DayQuoteVolume = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving180DayQuoteVolumeBuy = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving180DayQuoteVolumeSell = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving180DayQuoteVolumeUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving180DayTotalTrades = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving180DayTotalTradesBuy = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving180DayTotalTradesSell = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving180DayTotalTradesUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving180DayVolume = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving180DayVolumeBuy = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving180DayVolumeSell = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving180DayVolumeUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving24HourHigh = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving24HourLow = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving24HourOpen = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving24HourQuoteVolume = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving24HourQuoteVolumeBuy = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving24HourQuoteVolumeSell = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving24HourQuoteVolumeUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving24HourTotalTrades = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving24HourTotalTradesBuy = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving24HourTotalTradesSell = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving24HourTotalTradesUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving24HourVolume = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving24HourVolumeBuy = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving24HourVolumeSell = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving24HourVolumeUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving30DayHigh = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving30DayLow = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving30DayOpen = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving30DayQuoteVolume = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving30DayQuoteVolumeBuy = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving30DayQuoteVolumeSell = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving30DayQuoteVolumeUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving30DayTotalTrades = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving30DayTotalTradesBuy = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving30DayTotalTradesSell = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving30DayTotalTradesUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving30DayVolume = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving30DayVolumeBuy = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving30DayVolumeSell = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving30DayVolumeUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving365DayHigh = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving365DayLow = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving365DayOpen = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving365DayQuoteVolume = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving365DayQuoteVolumeBuy = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving365DayQuoteVolumeSell = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving365DayQuoteVolumeUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving365DayTotalTrades = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving365DayTotalTradesBuy = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving365DayTotalTradesSell = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving365DayTotalTradesUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving365DayVolume = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving365DayVolumeBuy = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving365DayVolumeSell = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving365DayVolumeUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving7DayHigh = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving7DayLow = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving7DayOpen = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving7DayQuoteVolume = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving7DayQuoteVolumeBuy = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving7DayQuoteVolumeSell = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving7DayQuoteVolumeUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving7DayTotalTrades = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving7DayTotalTradesBuy = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving7DayTotalTradesSell = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving7DayTotalTradesUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving7DayVolume = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving7DayVolumeBuy = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving7DayVolumeSell = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving7DayVolumeUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving90DayHigh = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving90DayLow = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving90DayOpen = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving90DayQuoteVolume = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving90DayQuoteVolumeBuy = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving90DayQuoteVolumeSell = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving90DayQuoteVolumeUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving90DayTotalTrades = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving90DayTotalTradesBuy = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving90DayTotalTradesSell = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving90DayTotalTradesUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving90DayVolume = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving90DayVolumeBuy = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving90DayVolumeSell = Nothing
  , sPOTINSTRUMENTMARKETDATAMoving90DayVolumeUnknown = Nothing
  , sPOTINSTRUMENTMARKETDATAPrice = Nothing
  , sPOTINSTRUMENTMARKETDATAPriceFlag = Nothing
  , sPOTINSTRUMENTMARKETDATAPriceLastUpdateTs = Nothing
  , sPOTINSTRUMENTMARKETDATAQuote = Nothing
  , sPOTINSTRUMENTMARKETDATATopAskLastUpdateTs = Nothing
  , sPOTINSTRUMENTMARKETDATATopAskPrice = Nothing
  , sPOTINSTRUMENTMARKETDATATopAskQuantity = Nothing
  , sPOTINSTRUMENTMARKETDATATopBidLastUpdateTs = Nothing
  , sPOTINSTRUMENTMARKETDATATopBidPrice = Nothing
  , sPOTINSTRUMENTMARKETDATATopBidQuantity = Nothing
  , sPOTINSTRUMENTMARKETDATAType = Nothing
  }

-- ** SPOTINSTRUMENTMARKETDATARESPONSE
-- | SPOTINSTRUMENTMARKETDATARESPONSE
data SPOTINSTRUMENTMARKETDATARESPONSE = SPOTINSTRUMENTMARKETDATARESPONSE
  { sPOTINSTRUMENTMARKETDATARESPONSEData :: !(Maybe (Map.Map String SPOTINSTRUMENTMARKETDATA)) -- ^ "Data"
  , sPOTINSTRUMENTMARKETDATARESPONSEErr :: !(Maybe SPOTINSTRUMENTMARKETDATARESPONSEErr) -- ^ "Err"
  } deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON SPOTINSTRUMENTMARKETDATARESPONSE
instance A.FromJSON SPOTINSTRUMENTMARKETDATARESPONSE where
  parseJSON = A.withObject "SPOTINSTRUMENTMARKETDATARESPONSE" $ \o ->
    SPOTINSTRUMENTMARKETDATARESPONSE
      <$> (o .:? "Data")
      <*> (o .:? "Err")

-- | ToJSON SPOTINSTRUMENTMARKETDATARESPONSE
instance A.ToJSON SPOTINSTRUMENTMARKETDATARESPONSE where
  toJSON SPOTINSTRUMENTMARKETDATARESPONSE {..} =
   _omitNulls
      [ "Data" .= sPOTINSTRUMENTMARKETDATARESPONSEData
      , "Err" .= sPOTINSTRUMENTMARKETDATARESPONSEErr
      ]


-- | Construct a value of type 'SPOTINSTRUMENTMARKETDATARESPONSE' (by applying it's required fields, if any)
mkSPOTINSTRUMENTMARKETDATARESPONSE
  :: SPOTINSTRUMENTMARKETDATARESPONSE
mkSPOTINSTRUMENTMARKETDATARESPONSE =
  SPOTINSTRUMENTMARKETDATARESPONSE
  { sPOTINSTRUMENTMARKETDATARESPONSEData = Nothing
  , sPOTINSTRUMENTMARKETDATARESPONSEErr = Nothing
  }

-- ** SPOTINSTRUMENTMARKETDATARESPONSEErr
-- | SPOTINSTRUMENTMARKETDATARESPONSEErr
data SPOTINSTRUMENTMARKETDATARESPONSEErr = SPOTINSTRUMENTMARKETDATARESPONSEErr
  { sPOTINSTRUMENTMARKETDATARESPONSEErrMessage :: !(Maybe Text) -- ^ "message" - A message describing the error
  , sPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo :: !(Maybe SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo) -- ^ "other_info"
  , sPOTINSTRUMENTMARKETDATARESPONSEErrType :: !(Maybe Int) -- ^ "type" - A public facing error type. If you want to treat a specific error use the type.
  } deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON SPOTINSTRUMENTMARKETDATARESPONSEErr
instance A.FromJSON SPOTINSTRUMENTMARKETDATARESPONSEErr where
  parseJSON = A.withObject "SPOTINSTRUMENTMARKETDATARESPONSEErr" $ \o ->
    SPOTINSTRUMENTMARKETDATARESPONSEErr
      <$> (o .:? "message")
      <*> (o .:? "other_info")
      <*> (o .:? "type")

-- | ToJSON SPOTINSTRUMENTMARKETDATARESPONSEErr
instance A.ToJSON SPOTINSTRUMENTMARKETDATARESPONSEErr where
  toJSON SPOTINSTRUMENTMARKETDATARESPONSEErr {..} =
   _omitNulls
      [ "message" .= sPOTINSTRUMENTMARKETDATARESPONSEErrMessage
      , "other_info" .= sPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo
      , "type" .= sPOTINSTRUMENTMARKETDATARESPONSEErrType
      ]


-- | Construct a value of type 'SPOTINSTRUMENTMARKETDATARESPONSEErr' (by applying it's required fields, if any)
mkSPOTINSTRUMENTMARKETDATARESPONSEErr
  :: SPOTINSTRUMENTMARKETDATARESPONSEErr
mkSPOTINSTRUMENTMARKETDATARESPONSEErr =
  SPOTINSTRUMENTMARKETDATARESPONSEErr
  { sPOTINSTRUMENTMARKETDATARESPONSEErrMessage = Nothing
  , sPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo = Nothing
  , sPOTINSTRUMENTMARKETDATARESPONSEErrType = Nothing
  }

-- ** SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo
-- | SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo
data SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo = SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo
  { sPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfoParam :: !(Maybe Text) -- ^ "param" - The parameter that is resposible for the error
  , sPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfoValues :: !(Maybe [Text]) -- ^ "values" - The values resposible for the error
  } deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo
instance A.FromJSON SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo where
  parseJSON = A.withObject "SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo" $ \o ->
    SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo
      <$> (o .:? "param")
      <*> (o .:? "values")

-- | ToJSON SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo
instance A.ToJSON SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo where
  toJSON SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo {..} =
   _omitNulls
      [ "param" .= sPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfoParam
      , "values" .= sPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfoValues
      ]


-- | Construct a value of type 'SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo' (by applying it's required fields, if any)
mkSPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo
  :: SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo
mkSPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo =
  SPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfo
  { sPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfoParam = Nothing
  , sPOTINSTRUMENTMARKETDATARESPONSEErrOtherInfoValues = Nothing
  }

-- ** SPOTINSTRUMENTMETADATA
-- | SPOTINSTRUMENTMETADATA
data SPOTINSTRUMENTMETADATA = SPOTINSTRUMENTMETADATA
  { sPOTINSTRUMENTMETADATAFirstSeenOnBlobTs :: !(Maybe Int) -- ^ "FIRST_SEEN_ON_BLOB_TS" - This is the first time instrument was seen on instrumentListSourceType BLOB.
  , sPOTINSTRUMENTMETADATAFirstSeenOnFixTs :: !(Maybe Int) -- ^ "FIRST_SEEN_ON_FIX_TS" - This is the first time instrument was seen on instrumentListSourceType FIX.
  , sPOTINSTRUMENTMETADATAFirstSeenOnHardcodedTs :: !(Maybe Int) -- ^ "FIRST_SEEN_ON_HARDCODED_TS" - This is the first time instrument was seen on instrumentListSourceType HARDCODED.
  , sPOTINSTRUMENTMETADATAFirstSeenOnIndexCompositionTs :: !(Maybe Int) -- ^ "FIRST_SEEN_ON_INDEX_COMPOSITION_TS" - This is the first time instrument was seen on instrumentListSourceType INDEX_COMPOSITION.
  , sPOTINSTRUMENTMETADATAFirstSeenOnNsqTs :: !(Maybe Int) -- ^ "FIRST_SEEN_ON_NSQ_TS" - This is the first time instrument was seen on instrumentListSourceType NSQ.
  , sPOTINSTRUMENTMETADATAFirstSeenOnPollingTs :: !(Maybe Int) -- ^ "FIRST_SEEN_ON_POLLING_TS" - This is the first time instrument was seen on instrumentListSourceType POLLING.
  , sPOTINSTRUMENTMETADATAFirstSeenOnStreamingTs :: !(Maybe Int) -- ^ "FIRST_SEEN_ON_STREAMING_TS" - This is the first time instrument was seen on instrumentListSourceType STREAMING.
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromBackfill :: !(Maybe A.Value) -- ^ "FIRST_TRADE_SPOT_FROM_BACKFILL" - This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromBackfillExternal :: !(Maybe A.Value) -- ^ "FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL" - This is the first TRADE_SPOT that we have seen on the specific source type in external format.
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromBlob :: !(Maybe A.Value) -- ^ "FIRST_TRADE_SPOT_FROM_BLOB" - This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromBlobExternal :: !(Maybe A.Value) -- ^ "FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL" - This is the first TRADE_SPOT that we have seen on the specific source type in external format.
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromCalculated :: !(Maybe A.Value) -- ^ "FIRST_TRADE_SPOT_FROM_CALCULATED" - This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromCalculatedExternal :: !(Maybe A.Value) -- ^ "FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL" - This is the first TRADE_SPOT that we have seen on the specific source type in external format.
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromFix :: !(Maybe A.Value) -- ^ "FIRST_TRADE_SPOT_FROM_FIX" - This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromFixExternal :: !(Maybe A.Value) -- ^ "FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL" - This is the first TRADE_SPOT that we have seen on the specific source type in external format.
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromGo :: !(Maybe A.Value) -- ^ "FIRST_TRADE_SPOT_FROM_GO" - This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromGoExternal :: !(Maybe A.Value) -- ^ "FIRST_TRADE_SPOT_FROM_GO_EXTERNAL" - This is the first TRADE_SPOT that we have seen on the specific source type in external format.
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromPolling :: !(Maybe A.Value) -- ^ "FIRST_TRADE_SPOT_FROM_POLLING" - This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromPollingExternal :: !(Maybe A.Value) -- ^ "FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL" - This is the first TRADE_SPOT that we have seen on the specific source type in external format.
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromStreaming :: !(Maybe A.Value) -- ^ "FIRST_TRADE_SPOT_FROM_STREAMING" - This is the first TRADE_SPOT that we have seen on the specific source type in internal format.
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromStreamingExternal :: !(Maybe A.Value) -- ^ "FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL" - This is the first TRADE_SPOT that we have seen on the specific source type in external format.
  , sPOTINSTRUMENTMETADATAHostMigrationDestination :: !(Maybe Text) -- ^ "HOST_MIGRATION_DESTINATION" - The migration destination vm hostname.
  , sPOTINSTRUMENTMETADATAHostMigrationSource :: !(Maybe Text) -- ^ "HOST_MIGRATION_SOURCE" - The migration source vm hostname.
  , sPOTINSTRUMENTMETADATAHostMigrationStatus :: !(Maybe Text) -- ^ "HOST_MIGRATION_STATUS" - The migration status of the symbol, we only poll / stream / connect empty or SETTLED
  , sPOTINSTRUMENTMETADATAInstrument :: !(Maybe Text) -- ^ "INSTRUMENT" - The instrument ID as it is on the exchange with small modifications - we do not allow the following characters inside isntrument ids: ,/&amp;?
  , sPOTINSTRUMENTMETADATAInstrumentExternalData :: !(Maybe Text) -- ^ "INSTRUMENT_EXTERNAL_DATA" - The full data we get from the polling endpoint for this specific instrument. This is a JSON stringified object with different properties per exchange.
  , sPOTINSTRUMENTMETADATAInstrumentMapping :: !(Maybe A.Value) -- ^ "INSTRUMENT_MAPPING" - The current mapping information for this instrument
  , sPOTINSTRUMENTMETADATAInstrumentMappingHistory :: !(Maybe [Text]) -- ^ "INSTRUMENT_MAPPING_HISTORY" - Historical mapping information for this instrument
  , sPOTINSTRUMENTMETADATAInstrumentSourceBackfill :: !(Maybe Text) -- ^ "INSTRUMENT_SOURCE_BACKFILL" - Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
  , sPOTINSTRUMENTMETADATAInstrumentSourceBlob :: !(Maybe Text) -- ^ "INSTRUMENT_SOURCE_BLOB" - Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
  , sPOTINSTRUMENTMETADATAInstrumentSourceCalculated :: !(Maybe Text) -- ^ "INSTRUMENT_SOURCE_CALCULATED" - Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
  , sPOTINSTRUMENTMETADATAInstrumentSourceFix :: !(Maybe Text) -- ^ "INSTRUMENT_SOURCE_FIX" - Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
  , sPOTINSTRUMENTMETADATAInstrumentSourceGo :: !(Maybe Text) -- ^ "INSTRUMENT_SOURCE_GO" - Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
  , sPOTINSTRUMENTMETADATAInstrumentSourcePolling :: !(Maybe Text) -- ^ "INSTRUMENT_SOURCE_POLLING" - Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
  , sPOTINSTRUMENTMETADATAInstrumentSourceStreaming :: !(Maybe Text) -- ^ "INSTRUMENT_SOURCE_STREAMING" - Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from.
  , sPOTINSTRUMENTMETADATAInstrumentStatus :: !(Maybe Text) -- ^ "INSTRUMENT_STATUS" - The status of the symbol, we only poll / stream / connect to the ACTIVE ones, for the RETIRED / IGNORED / EXPIRED  one we no longer query for data.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromBackfillLastProxiedRestRequest :: !(Maybe A.Value) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST" - The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromBackfillRestUriLastRequestTs :: !(Maybe Int) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS" - The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromBackfillRestUriLastResponseTs :: !(Maybe Int) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS" - The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromBackfillRestUriNextRequestTs :: !(Maybe Int) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS" - The next time we expect to make a request for TRADE_SPOT on this instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromBlobLastProxiedRestRequest :: !(Maybe A.Value) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST" - The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromBlobRestUriLastRequestTs :: !(Maybe Int) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS" - The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromBlobRestUriLastResponseTs :: !(Maybe Int) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS" - The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromBlobRestUriNextRequestTs :: !(Maybe Int) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS" - The next time we expect to make a request for TRADE_SPOT on this instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromCalculatedLastProxiedRestRequest :: !(Maybe A.Value) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST" - The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromCalculatedRestUriLastRequestTs :: !(Maybe Int) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS" - The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromCalculatedRestUriLastResponseTs :: !(Maybe Int) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS" - The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromCalculatedRestUriNextRequestTs :: !(Maybe Int) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS" - The next time we expect to make a request for TRADE_SPOT on this instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromFixLastProxiedRestRequest :: !(Maybe A.Value) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST" - The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromFixRestUriLastRequestTs :: !(Maybe Int) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS" - The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromFixRestUriLastResponseTs :: !(Maybe Int) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS" - The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromFixRestUriNextRequestTs :: !(Maybe Int) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS" - The next time we expect to make a request for TRADE_SPOT on this instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromGoLastProxiedRestRequest :: !(Maybe A.Value) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST" - The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromGoRestUriLastRequestTs :: !(Maybe Int) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS" - The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromGoRestUriLastResponseTs :: !(Maybe Int) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS" - The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromGoRestUriNextRequestTs :: !(Maybe Int) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS" - The next time we expect to make a request for TRADE_SPOT on this instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromPollingLastProxiedRestRequest :: !(Maybe A.Value) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST" - The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromPollingRestUriLastRequestTs :: !(Maybe Int) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS" - The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromPollingRestUriLastResponseTs :: !(Maybe Int) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS" - The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromPollingRestUriNextRequestTs :: !(Maybe Int) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS" - The next time we expect to make a request for TRADE_SPOT on this instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromStreamingLastProxiedRestRequest :: !(Maybe A.Value) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST" - The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromStreamingRestUriLastRequestTs :: !(Maybe Int) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS" - The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromStreamingRestUriLastResponseTs :: !(Maybe Int) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS" - The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromStreamingRestUriNextRequestTs :: !(Maybe Int) -- ^ "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS" - The next time we expect to make a request for TRADE_SPOT on this instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotIsReadyForStreamingIntegration :: !(Maybe Bool) -- ^ "INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION" - This flags the exchange instrument as in ready to consume TRADE_SPOT via a streaming integration.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotRestUri :: !(Maybe Text) -- ^ "INSTRUMENT_TRADE_SPOT_REST_URI" - This is used to build up the request in some cases, this is where we put the id we use when querying for TRADE_SPOT.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotRestUrl :: !(Maybe Text) -- ^ "INSTRUMENT_TRADE_SPOT_REST_URL" - The URL we send to the proxy swarm to get TRADE_SPOT for the instrument.
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotStreamingSubscription :: !(Maybe Text) -- ^ "INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION" - This is used to build up the subscription in some cases, this is where we put the id we use when subscribing for TRADE_SPOT on this instrument.
  , sPOTINSTRUMENTMETADATALastConcurrentBatchOfTradesSpotMs :: !(Maybe Int) -- ^ "LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS" - The timestamp last encountered where the batch of trades from TRADES_SPOT all occured at the same time. This is an issue when making the next request that requires polling by timestamp as a start/from parameter
  , sPOTINSTRUMENTMETADATALastSeenOnBlobTs :: !(Maybe Int) -- ^ "LAST_SEEN_ON_BLOB_TS" - This is the last time instrument was seen on instrumentListSourceType BLOB.
  , sPOTINSTRUMENTMETADATALastSeenOnFixTs :: !(Maybe Int) -- ^ "LAST_SEEN_ON_FIX_TS" - This is the last time instrument was seen on instrumentListSourceType FIX.
  , sPOTINSTRUMENTMETADATALastSeenOnHardcodedTs :: !(Maybe Int) -- ^ "LAST_SEEN_ON_HARDCODED_TS" - This is the last time instrument was seen on instrumentListSourceType HARDCODED.
  , sPOTINSTRUMENTMETADATALastSeenOnIndexCompositionTs :: !(Maybe Int) -- ^ "LAST_SEEN_ON_INDEX_COMPOSITION_TS" - This is the last time instrument was seen on instrumentListSourceType INDEX_COMPOSITION.
  , sPOTINSTRUMENTMETADATALastSeenOnNsqTs :: !(Maybe Int) -- ^ "LAST_SEEN_ON_NSQ_TS" - This is the last time instrument was seen on instrumentListSourceType NSQ.
  , sPOTINSTRUMENTMETADATALastSeenOnPollingTs :: !(Maybe Int) -- ^ "LAST_SEEN_ON_POLLING_TS" - This is the last time instrument was seen on instrumentListSourceType POLLING.
  , sPOTINSTRUMENTMETADATALastSeenOnStreamingTs :: !(Maybe Int) -- ^ "LAST_SEEN_ON_STREAMING_TS" - This is the last time instrument was seen on instrumentListSourceType STREAMING.
  , sPOTINSTRUMENTMETADATALastTradeSpotFromBackfill :: !(Maybe A.Value) -- ^ "LAST_TRADE_SPOT_FROM_BACKFILL" - This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
  , sPOTINSTRUMENTMETADATALastTradeSpotFromBackfillExternal :: !(Maybe A.Value) -- ^ "LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL" - This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
  , sPOTINSTRUMENTMETADATALastTradeSpotFromBlob :: !(Maybe A.Value) -- ^ "LAST_TRADE_SPOT_FROM_BLOB" - This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
  , sPOTINSTRUMENTMETADATALastTradeSpotFromBlobExternal :: !(Maybe A.Value) -- ^ "LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL" - This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
  , sPOTINSTRUMENTMETADATALastTradeSpotFromCalculated :: !(Maybe A.Value) -- ^ "LAST_TRADE_SPOT_FROM_CALCULATED" - This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
  , sPOTINSTRUMENTMETADATALastTradeSpotFromCalculatedExternal :: !(Maybe A.Value) -- ^ "LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL" - This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
  , sPOTINSTRUMENTMETADATALastTradeSpotFromFix :: !(Maybe A.Value) -- ^ "LAST_TRADE_SPOT_FROM_FIX" - This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
  , sPOTINSTRUMENTMETADATALastTradeSpotFromFixExternal :: !(Maybe A.Value) -- ^ "LAST_TRADE_SPOT_FROM_FIX_EXTERNAL" - This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
  , sPOTINSTRUMENTMETADATALastTradeSpotFromGo :: !(Maybe A.Value) -- ^ "LAST_TRADE_SPOT_FROM_GO" - This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
  , sPOTINSTRUMENTMETADATALastTradeSpotFromGoExternal :: !(Maybe A.Value) -- ^ "LAST_TRADE_SPOT_FROM_GO_EXTERNAL" - This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
  , sPOTINSTRUMENTMETADATALastTradeSpotFromPolling :: !(Maybe A.Value) -- ^ "LAST_TRADE_SPOT_FROM_POLLING" - This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
  , sPOTINSTRUMENTMETADATALastTradeSpotFromPollingExternal :: !(Maybe A.Value) -- ^ "LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL" - This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
  , sPOTINSTRUMENTMETADATALastTradeSpotFromStreaming :: !(Maybe A.Value) -- ^ "LAST_TRADE_SPOT_FROM_STREAMING" - This is the last TRADE_SPOT that we have seen on the specific source type in internal format.
  , sPOTINSTRUMENTMETADATALastTradeSpotFromStreamingExternal :: !(Maybe A.Value) -- ^ "LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL" - This is the last TRADE_SPOT that we have seen on the specific trade source in external format.
  , sPOTINSTRUMENTMETADATAMetadataVersion :: !(Maybe Int) -- ^ "METADATA_VERSION" - The version of metadata, used for version conversions/migrates.
  , sPOTINSTRUMENTMETADATAProcessingTradesFromBlobStatus :: !(Maybe Text) -- ^ "PROCESSING_TRADES_FROM_BLOB_STATUS" - This states the status of blob migration for this intrument on this exchange.
  , sPOTINSTRUMENTMETADATATotalTradesSpot :: !(Maybe Int) -- ^ "TOTAL_TRADES_SPOT" - This is both the CCSEQ and the total TRADES_SPOT we have processed on this instrument
  , sPOTINSTRUMENTMETADATAUnstructuredTradeSpotFromBackfillInternalData :: !(Maybe A.Value) -- ^ "UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA" - This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
  , sPOTINSTRUMENTMETADATAUnstructuredTradeSpotFromBlobInternalData :: !(Maybe A.Value) -- ^ "UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA" - This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
  , sPOTINSTRUMENTMETADATAUnstructuredTradeSpotFromCalculatedInternalData :: !(Maybe A.Value) -- ^ "UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA" - This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
  , sPOTINSTRUMENTMETADATAUnstructuredTradeSpotFromFixInternalData :: !(Maybe A.Value) -- ^ "UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA" - This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
  , sPOTINSTRUMENTMETADATAUnstructuredTradeSpotFromGoInternalData :: !(Maybe A.Value) -- ^ "UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA" - This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
  , sPOTINSTRUMENTMETADATAUnstructuredTradeSpotFromPollingInternalData :: !(Maybe A.Value) -- ^ "UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA" - This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
  , sPOTINSTRUMENTMETADATAUnstructuredTradeSpotFromStreamingInternalData :: !(Maybe A.Value) -- ^ "UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA" - This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.
  } deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON SPOTINSTRUMENTMETADATA
instance A.FromJSON SPOTINSTRUMENTMETADATA where
  parseJSON = A.withObject "SPOTINSTRUMENTMETADATA" $ \o ->
    SPOTINSTRUMENTMETADATA
      <$> (o .:? "FIRST_SEEN_ON_BLOB_TS")
      <*> (o .:? "FIRST_SEEN_ON_FIX_TS")
      <*> (o .:? "FIRST_SEEN_ON_HARDCODED_TS")
      <*> (o .:? "FIRST_SEEN_ON_INDEX_COMPOSITION_TS")
      <*> (o .:? "FIRST_SEEN_ON_NSQ_TS")
      <*> (o .:? "FIRST_SEEN_ON_POLLING_TS")
      <*> (o .:? "FIRST_SEEN_ON_STREAMING_TS")
      <*> (o .:? "FIRST_TRADE_SPOT_FROM_BACKFILL")
      <*> (o .:? "FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL")
      <*> (o .:? "FIRST_TRADE_SPOT_FROM_BLOB")
      <*> (o .:? "FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL")
      <*> (o .:? "FIRST_TRADE_SPOT_FROM_CALCULATED")
      <*> (o .:? "FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL")
      <*> (o .:? "FIRST_TRADE_SPOT_FROM_FIX")
      <*> (o .:? "FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL")
      <*> (o .:? "FIRST_TRADE_SPOT_FROM_GO")
      <*> (o .:? "FIRST_TRADE_SPOT_FROM_GO_EXTERNAL")
      <*> (o .:? "FIRST_TRADE_SPOT_FROM_POLLING")
      <*> (o .:? "FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL")
      <*> (o .:? "FIRST_TRADE_SPOT_FROM_STREAMING")
      <*> (o .:? "FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL")
      <*> (o .:? "HOST_MIGRATION_DESTINATION")
      <*> (o .:? "HOST_MIGRATION_SOURCE")
      <*> (o .:? "HOST_MIGRATION_STATUS")
      <*> (o .:? "INSTRUMENT")
      <*> (o .:? "INSTRUMENT_EXTERNAL_DATA")
      <*> (o .:? "INSTRUMENT_MAPPING")
      <*> (o .:? "INSTRUMENT_MAPPING_HISTORY")
      <*> (o .:? "INSTRUMENT_SOURCE_BACKFILL")
      <*> (o .:? "INSTRUMENT_SOURCE_BLOB")
      <*> (o .:? "INSTRUMENT_SOURCE_CALCULATED")
      <*> (o .:? "INSTRUMENT_SOURCE_FIX")
      <*> (o .:? "INSTRUMENT_SOURCE_GO")
      <*> (o .:? "INSTRUMENT_SOURCE_POLLING")
      <*> (o .:? "INSTRUMENT_SOURCE_STREAMING")
      <*> (o .:? "INSTRUMENT_STATUS")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_REST_URI")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_REST_URL")
      <*> (o .:? "INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION")
      <*> (o .:? "LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS")
      <*> (o .:? "LAST_SEEN_ON_BLOB_TS")
      <*> (o .:? "LAST_SEEN_ON_FIX_TS")
      <*> (o .:? "LAST_SEEN_ON_HARDCODED_TS")
      <*> (o .:? "LAST_SEEN_ON_INDEX_COMPOSITION_TS")
      <*> (o .:? "LAST_SEEN_ON_NSQ_TS")
      <*> (o .:? "LAST_SEEN_ON_POLLING_TS")
      <*> (o .:? "LAST_SEEN_ON_STREAMING_TS")
      <*> (o .:? "LAST_TRADE_SPOT_FROM_BACKFILL")
      <*> (o .:? "LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL")
      <*> (o .:? "LAST_TRADE_SPOT_FROM_BLOB")
      <*> (o .:? "LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL")
      <*> (o .:? "LAST_TRADE_SPOT_FROM_CALCULATED")
      <*> (o .:? "LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL")
      <*> (o .:? "LAST_TRADE_SPOT_FROM_FIX")
      <*> (o .:? "LAST_TRADE_SPOT_FROM_FIX_EXTERNAL")
      <*> (o .:? "LAST_TRADE_SPOT_FROM_GO")
      <*> (o .:? "LAST_TRADE_SPOT_FROM_GO_EXTERNAL")
      <*> (o .:? "LAST_TRADE_SPOT_FROM_POLLING")
      <*> (o .:? "LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL")
      <*> (o .:? "LAST_TRADE_SPOT_FROM_STREAMING")
      <*> (o .:? "LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL")
      <*> (o .:? "METADATA_VERSION")
      <*> (o .:? "PROCESSING_TRADES_FROM_BLOB_STATUS")
      <*> (o .:? "TOTAL_TRADES_SPOT")
      <*> (o .:? "UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA")
      <*> (o .:? "UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA")
      <*> (o .:? "UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA")
      <*> (o .:? "UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA")
      <*> (o .:? "UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA")
      <*> (o .:? "UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA")
      <*> (o .:? "UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA")

-- | ToJSON SPOTINSTRUMENTMETADATA
instance A.ToJSON SPOTINSTRUMENTMETADATA where
  toJSON SPOTINSTRUMENTMETADATA {..} =
   _omitNulls
      [ "FIRST_SEEN_ON_BLOB_TS" .= sPOTINSTRUMENTMETADATAFirstSeenOnBlobTs
      , "FIRST_SEEN_ON_FIX_TS" .= sPOTINSTRUMENTMETADATAFirstSeenOnFixTs
      , "FIRST_SEEN_ON_HARDCODED_TS" .= sPOTINSTRUMENTMETADATAFirstSeenOnHardcodedTs
      , "FIRST_SEEN_ON_INDEX_COMPOSITION_TS" .= sPOTINSTRUMENTMETADATAFirstSeenOnIndexCompositionTs
      , "FIRST_SEEN_ON_NSQ_TS" .= sPOTINSTRUMENTMETADATAFirstSeenOnNsqTs
      , "FIRST_SEEN_ON_POLLING_TS" .= sPOTINSTRUMENTMETADATAFirstSeenOnPollingTs
      , "FIRST_SEEN_ON_STREAMING_TS" .= sPOTINSTRUMENTMETADATAFirstSeenOnStreamingTs
      , "FIRST_TRADE_SPOT_FROM_BACKFILL" .= sPOTINSTRUMENTMETADATAFirstTradeSpotFromBackfill
      , "FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL" .= sPOTINSTRUMENTMETADATAFirstTradeSpotFromBackfillExternal
      , "FIRST_TRADE_SPOT_FROM_BLOB" .= sPOTINSTRUMENTMETADATAFirstTradeSpotFromBlob
      , "FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL" .= sPOTINSTRUMENTMETADATAFirstTradeSpotFromBlobExternal
      , "FIRST_TRADE_SPOT_FROM_CALCULATED" .= sPOTINSTRUMENTMETADATAFirstTradeSpotFromCalculated
      , "FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL" .= sPOTINSTRUMENTMETADATAFirstTradeSpotFromCalculatedExternal
      , "FIRST_TRADE_SPOT_FROM_FIX" .= sPOTINSTRUMENTMETADATAFirstTradeSpotFromFix
      , "FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL" .= sPOTINSTRUMENTMETADATAFirstTradeSpotFromFixExternal
      , "FIRST_TRADE_SPOT_FROM_GO" .= sPOTINSTRUMENTMETADATAFirstTradeSpotFromGo
      , "FIRST_TRADE_SPOT_FROM_GO_EXTERNAL" .= sPOTINSTRUMENTMETADATAFirstTradeSpotFromGoExternal
      , "FIRST_TRADE_SPOT_FROM_POLLING" .= sPOTINSTRUMENTMETADATAFirstTradeSpotFromPolling
      , "FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL" .= sPOTINSTRUMENTMETADATAFirstTradeSpotFromPollingExternal
      , "FIRST_TRADE_SPOT_FROM_STREAMING" .= sPOTINSTRUMENTMETADATAFirstTradeSpotFromStreaming
      , "FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL" .= sPOTINSTRUMENTMETADATAFirstTradeSpotFromStreamingExternal
      , "HOST_MIGRATION_DESTINATION" .= sPOTINSTRUMENTMETADATAHostMigrationDestination
      , "HOST_MIGRATION_SOURCE" .= sPOTINSTRUMENTMETADATAHostMigrationSource
      , "HOST_MIGRATION_STATUS" .= sPOTINSTRUMENTMETADATAHostMigrationStatus
      , "INSTRUMENT" .= sPOTINSTRUMENTMETADATAInstrument
      , "INSTRUMENT_EXTERNAL_DATA" .= sPOTINSTRUMENTMETADATAInstrumentExternalData
      , "INSTRUMENT_MAPPING" .= sPOTINSTRUMENTMETADATAInstrumentMapping
      , "INSTRUMENT_MAPPING_HISTORY" .= sPOTINSTRUMENTMETADATAInstrumentMappingHistory
      , "INSTRUMENT_SOURCE_BACKFILL" .= sPOTINSTRUMENTMETADATAInstrumentSourceBackfill
      , "INSTRUMENT_SOURCE_BLOB" .= sPOTINSTRUMENTMETADATAInstrumentSourceBlob
      , "INSTRUMENT_SOURCE_CALCULATED" .= sPOTINSTRUMENTMETADATAInstrumentSourceCalculated
      , "INSTRUMENT_SOURCE_FIX" .= sPOTINSTRUMENTMETADATAInstrumentSourceFix
      , "INSTRUMENT_SOURCE_GO" .= sPOTINSTRUMENTMETADATAInstrumentSourceGo
      , "INSTRUMENT_SOURCE_POLLING" .= sPOTINSTRUMENTMETADATAInstrumentSourcePolling
      , "INSTRUMENT_SOURCE_STREAMING" .= sPOTINSTRUMENTMETADATAInstrumentSourceStreaming
      , "INSTRUMENT_STATUS" .= sPOTINSTRUMENTMETADATAInstrumentStatus
      , "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromBackfillLastProxiedRestRequest
      , "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromBackfillRestUriLastRequestTs
      , "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromBackfillRestUriLastResponseTs
      , "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromBackfillRestUriNextRequestTs
      , "INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromBlobLastProxiedRestRequest
      , "INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromBlobRestUriLastRequestTs
      , "INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromBlobRestUriLastResponseTs
      , "INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromBlobRestUriNextRequestTs
      , "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromCalculatedLastProxiedRestRequest
      , "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromCalculatedRestUriLastRequestTs
      , "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromCalculatedRestUriLastResponseTs
      , "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromCalculatedRestUriNextRequestTs
      , "INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromFixLastProxiedRestRequest
      , "INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromFixRestUriLastRequestTs
      , "INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromFixRestUriLastResponseTs
      , "INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromFixRestUriNextRequestTs
      , "INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromGoLastProxiedRestRequest
      , "INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromGoRestUriLastRequestTs
      , "INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromGoRestUriLastResponseTs
      , "INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromGoRestUriNextRequestTs
      , "INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromPollingLastProxiedRestRequest
      , "INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromPollingRestUriLastRequestTs
      , "INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromPollingRestUriLastResponseTs
      , "INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromPollingRestUriNextRequestTs
      , "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromStreamingLastProxiedRestRequest
      , "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromStreamingRestUriLastRequestTs
      , "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromStreamingRestUriLastResponseTs
      , "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromStreamingRestUriNextRequestTs
      , "INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotIsReadyForStreamingIntegration
      , "INSTRUMENT_TRADE_SPOT_REST_URI" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotRestUri
      , "INSTRUMENT_TRADE_SPOT_REST_URL" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotRestUrl
      , "INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION" .= sPOTINSTRUMENTMETADATAInstrumentTradeSpotStreamingSubscription
      , "LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS" .= sPOTINSTRUMENTMETADATALastConcurrentBatchOfTradesSpotMs
      , "LAST_SEEN_ON_BLOB_TS" .= sPOTINSTRUMENTMETADATALastSeenOnBlobTs
      , "LAST_SEEN_ON_FIX_TS" .= sPOTINSTRUMENTMETADATALastSeenOnFixTs
      , "LAST_SEEN_ON_HARDCODED_TS" .= sPOTINSTRUMENTMETADATALastSeenOnHardcodedTs
      , "LAST_SEEN_ON_INDEX_COMPOSITION_TS" .= sPOTINSTRUMENTMETADATALastSeenOnIndexCompositionTs
      , "LAST_SEEN_ON_NSQ_TS" .= sPOTINSTRUMENTMETADATALastSeenOnNsqTs
      , "LAST_SEEN_ON_POLLING_TS" .= sPOTINSTRUMENTMETADATALastSeenOnPollingTs
      , "LAST_SEEN_ON_STREAMING_TS" .= sPOTINSTRUMENTMETADATALastSeenOnStreamingTs
      , "LAST_TRADE_SPOT_FROM_BACKFILL" .= sPOTINSTRUMENTMETADATALastTradeSpotFromBackfill
      , "LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL" .= sPOTINSTRUMENTMETADATALastTradeSpotFromBackfillExternal
      , "LAST_TRADE_SPOT_FROM_BLOB" .= sPOTINSTRUMENTMETADATALastTradeSpotFromBlob
      , "LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL" .= sPOTINSTRUMENTMETADATALastTradeSpotFromBlobExternal
      , "LAST_TRADE_SPOT_FROM_CALCULATED" .= sPOTINSTRUMENTMETADATALastTradeSpotFromCalculated
      , "LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL" .= sPOTINSTRUMENTMETADATALastTradeSpotFromCalculatedExternal
      , "LAST_TRADE_SPOT_FROM_FIX" .= sPOTINSTRUMENTMETADATALastTradeSpotFromFix
      , "LAST_TRADE_SPOT_FROM_FIX_EXTERNAL" .= sPOTINSTRUMENTMETADATALastTradeSpotFromFixExternal
      , "LAST_TRADE_SPOT_FROM_GO" .= sPOTINSTRUMENTMETADATALastTradeSpotFromGo
      , "LAST_TRADE_SPOT_FROM_GO_EXTERNAL" .= sPOTINSTRUMENTMETADATALastTradeSpotFromGoExternal
      , "LAST_TRADE_SPOT_FROM_POLLING" .= sPOTINSTRUMENTMETADATALastTradeSpotFromPolling
      , "LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL" .= sPOTINSTRUMENTMETADATALastTradeSpotFromPollingExternal
      , "LAST_TRADE_SPOT_FROM_STREAMING" .= sPOTINSTRUMENTMETADATALastTradeSpotFromStreaming
      , "LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL" .= sPOTINSTRUMENTMETADATALastTradeSpotFromStreamingExternal
      , "METADATA_VERSION" .= sPOTINSTRUMENTMETADATAMetadataVersion
      , "PROCESSING_TRADES_FROM_BLOB_STATUS" .= sPOTINSTRUMENTMETADATAProcessingTradesFromBlobStatus
      , "TOTAL_TRADES_SPOT" .= sPOTINSTRUMENTMETADATATotalTradesSpot
      , "UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA" .= sPOTINSTRUMENTMETADATAUnstructuredTradeSpotFromBackfillInternalData
      , "UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA" .= sPOTINSTRUMENTMETADATAUnstructuredTradeSpotFromBlobInternalData
      , "UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA" .= sPOTINSTRUMENTMETADATAUnstructuredTradeSpotFromCalculatedInternalData
      , "UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA" .= sPOTINSTRUMENTMETADATAUnstructuredTradeSpotFromFixInternalData
      , "UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA" .= sPOTINSTRUMENTMETADATAUnstructuredTradeSpotFromGoInternalData
      , "UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA" .= sPOTINSTRUMENTMETADATAUnstructuredTradeSpotFromPollingInternalData
      , "UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA" .= sPOTINSTRUMENTMETADATAUnstructuredTradeSpotFromStreamingInternalData
      ]


-- | Construct a value of type 'SPOTINSTRUMENTMETADATA' (by applying it's required fields, if any)
mkSPOTINSTRUMENTMETADATA
  :: SPOTINSTRUMENTMETADATA
mkSPOTINSTRUMENTMETADATA =
  SPOTINSTRUMENTMETADATA
  { sPOTINSTRUMENTMETADATAFirstSeenOnBlobTs = Nothing
  , sPOTINSTRUMENTMETADATAFirstSeenOnFixTs = Nothing
  , sPOTINSTRUMENTMETADATAFirstSeenOnHardcodedTs = Nothing
  , sPOTINSTRUMENTMETADATAFirstSeenOnIndexCompositionTs = Nothing
  , sPOTINSTRUMENTMETADATAFirstSeenOnNsqTs = Nothing
  , sPOTINSTRUMENTMETADATAFirstSeenOnPollingTs = Nothing
  , sPOTINSTRUMENTMETADATAFirstSeenOnStreamingTs = Nothing
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromBackfill = Nothing
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromBackfillExternal = Nothing
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromBlob = Nothing
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromBlobExternal = Nothing
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromCalculated = Nothing
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromCalculatedExternal = Nothing
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromFix = Nothing
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromFixExternal = Nothing
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromGo = Nothing
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromGoExternal = Nothing
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromPolling = Nothing
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromPollingExternal = Nothing
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromStreaming = Nothing
  , sPOTINSTRUMENTMETADATAFirstTradeSpotFromStreamingExternal = Nothing
  , sPOTINSTRUMENTMETADATAHostMigrationDestination = Nothing
  , sPOTINSTRUMENTMETADATAHostMigrationSource = Nothing
  , sPOTINSTRUMENTMETADATAHostMigrationStatus = Nothing
  , sPOTINSTRUMENTMETADATAInstrument = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentExternalData = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentMapping = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentMappingHistory = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentSourceBackfill = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentSourceBlob = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentSourceCalculated = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentSourceFix = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentSourceGo = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentSourcePolling = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentSourceStreaming = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentStatus = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromBackfillLastProxiedRestRequest = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromBackfillRestUriLastRequestTs = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromBackfillRestUriLastResponseTs = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromBackfillRestUriNextRequestTs = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromBlobLastProxiedRestRequest = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromBlobRestUriLastRequestTs = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromBlobRestUriLastResponseTs = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromBlobRestUriNextRequestTs = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromCalculatedLastProxiedRestRequest = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromCalculatedRestUriLastRequestTs = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromCalculatedRestUriLastResponseTs = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromCalculatedRestUriNextRequestTs = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromFixLastProxiedRestRequest = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromFixRestUriLastRequestTs = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromFixRestUriLastResponseTs = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromFixRestUriNextRequestTs = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromGoLastProxiedRestRequest = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromGoRestUriLastRequestTs = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromGoRestUriLastResponseTs = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromGoRestUriNextRequestTs = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromPollingLastProxiedRestRequest = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromPollingRestUriLastRequestTs = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromPollingRestUriLastResponseTs = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromPollingRestUriNextRequestTs = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromStreamingLastProxiedRestRequest = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromStreamingRestUriLastRequestTs = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromStreamingRestUriLastResponseTs = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotFromStreamingRestUriNextRequestTs = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotIsReadyForStreamingIntegration = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotRestUri = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotRestUrl = Nothing
  , sPOTINSTRUMENTMETADATAInstrumentTradeSpotStreamingSubscription = Nothing
  , sPOTINSTRUMENTMETADATALastConcurrentBatchOfTradesSpotMs = Nothing
  , sPOTINSTRUMENTMETADATALastSeenOnBlobTs = Nothing
  , sPOTINSTRUMENTMETADATALastSeenOnFixTs = Nothing
  , sPOTINSTRUMENTMETADATALastSeenOnHardcodedTs = Nothing
  , sPOTINSTRUMENTMETADATALastSeenOnIndexCompositionTs = Nothing
  , sPOTINSTRUMENTMETADATALastSeenOnNsqTs = Nothing
  , sPOTINSTRUMENTMETADATALastSeenOnPollingTs = Nothing
  , sPOTINSTRUMENTMETADATALastSeenOnStreamingTs = Nothing
  , sPOTINSTRUMENTMETADATALastTradeSpotFromBackfill = Nothing
  , sPOTINSTRUMENTMETADATALastTradeSpotFromBackfillExternal = Nothing
  , sPOTINSTRUMENTMETADATALastTradeSpotFromBlob = Nothing
  , sPOTINSTRUMENTMETADATALastTradeSpotFromBlobExternal = Nothing
  , sPOTINSTRUMENTMETADATALastTradeSpotFromCalculated = Nothing
  , sPOTINSTRUMENTMETADATALastTradeSpotFromCalculatedExternal = Nothing
  , sPOTINSTRUMENTMETADATALastTradeSpotFromFix = Nothing
  , sPOTINSTRUMENTMETADATALastTradeSpotFromFixExternal = Nothing
  , sPOTINSTRUMENTMETADATALastTradeSpotFromGo = Nothing
  , sPOTINSTRUMENTMETADATALastTradeSpotFromGoExternal = Nothing
  , sPOTINSTRUMENTMETADATALastTradeSpotFromPolling = Nothing
  , sPOTINSTRUMENTMETADATALastTradeSpotFromPollingExternal = Nothing
  , sPOTINSTRUMENTMETADATALastTradeSpotFromStreaming = Nothing
  , sPOTINSTRUMENTMETADATALastTradeSpotFromStreamingExternal = Nothing
  , sPOTINSTRUMENTMETADATAMetadataVersion = Nothing
  , sPOTINSTRUMENTMETADATAProcessingTradesFromBlobStatus = Nothing
  , sPOTINSTRUMENTMETADATATotalTradesSpot = Nothing
  , sPOTINSTRUMENTMETADATAUnstructuredTradeSpotFromBackfillInternalData = Nothing
  , sPOTINSTRUMENTMETADATAUnstructuredTradeSpotFromBlobInternalData = Nothing
  , sPOTINSTRUMENTMETADATAUnstructuredTradeSpotFromCalculatedInternalData = Nothing
  , sPOTINSTRUMENTMETADATAUnstructuredTradeSpotFromFixInternalData = Nothing
  , sPOTINSTRUMENTMETADATAUnstructuredTradeSpotFromGoInternalData = Nothing
  , sPOTINSTRUMENTMETADATAUnstructuredTradeSpotFromPollingInternalData = Nothing
  , sPOTINSTRUMENTMETADATAUnstructuredTradeSpotFromStreamingInternalData = Nothing
  }

-- ** SPOTINSTRUMENTMETADATARESPONSE
-- | SPOTINSTRUMENTMETADATARESPONSE
data SPOTINSTRUMENTMETADATARESPONSE = SPOTINSTRUMENTMETADATARESPONSE
  { sPOTINSTRUMENTMETADATARESPONSEData :: !(Maybe (Map.Map String SPOTINSTRUMENTMETADATA)) -- ^ "Data"
  , sPOTINSTRUMENTMETADATARESPONSEErr :: !(Maybe SPOTINSTRUMENTMARKETDATARESPONSEErr) -- ^ "Err"
  } deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON SPOTINSTRUMENTMETADATARESPONSE
instance A.FromJSON SPOTINSTRUMENTMETADATARESPONSE where
  parseJSON = A.withObject "SPOTINSTRUMENTMETADATARESPONSE" $ \o ->
    SPOTINSTRUMENTMETADATARESPONSE
      <$> (o .:? "Data")
      <*> (o .:? "Err")

-- | ToJSON SPOTINSTRUMENTMETADATARESPONSE
instance A.ToJSON SPOTINSTRUMENTMETADATARESPONSE where
  toJSON SPOTINSTRUMENTMETADATARESPONSE {..} =
   _omitNulls
      [ "Data" .= sPOTINSTRUMENTMETADATARESPONSEData
      , "Err" .= sPOTINSTRUMENTMETADATARESPONSEErr
      ]


-- | Construct a value of type 'SPOTINSTRUMENTMETADATARESPONSE' (by applying it's required fields, if any)
mkSPOTINSTRUMENTMETADATARESPONSE
  :: SPOTINSTRUMENTMETADATARESPONSE
mkSPOTINSTRUMENTMETADATARESPONSE =
  SPOTINSTRUMENTMETADATARESPONSE
  { sPOTINSTRUMENTMETADATARESPONSEData = Nothing
  , sPOTINSTRUMENTMETADATARESPONSEErr = Nothing
  }

-- ** SPOTINSTRUMENTTRADE
-- | SPOTINSTRUMENTTRADE
data SPOTINSTRUMENTTRADE = SPOTINSTRUMENTTRADE
  { sPOTINSTRUMENTTRADEBase :: !(Maybe Text) -- ^ "BASE" - The mapped from asset (base / symbol/ coin). Only available on instruments that have been mapped (e.g. BTC).
  , sPOTINSTRUMENTTRADECcseq :: !(Maybe Int) -- ^ "CCSEQ" - Our internal sequence number for this trade, this is unique per market / exchange and trading pair. Should always be increasing by 1 for each new trade we discover, not in chronological order.
  , sPOTINSTRUMENTTRADEId :: !(Maybe Text) -- ^ "ID" - The trade ID as reported by the market / exchange. If the exchange does not provide a trade ID, this will be the timestamp of the trade + a number from 0 - 999. This preserves uniqueness, assuming there would never be more than 999 trades in any given second.
  , sPOTINSTRUMENTTRADEInstrument :: !(Maybe Text) -- ^ "INSTRUMENT" - The unmapped instrument ID as given by the exchange (e.g. BTCUSD, BTC_USD, XBT-ZUSD, BTC-USD).
  , sPOTINSTRUMENTTRADEMappedInstrument :: !(Maybe Text) -- ^ "MAPPED_INSTRUMENT" - The mapped instrument ID, as derived from our mapping rules. This takes the form: \&quot;BASE-QUOTE\&quot;. Only available on instruments that have been mapped (e.g. BTC-USD).
  , sPOTINSTRUMENTTRADEMarket :: !(Maybe Text) -- ^ "MARKET" - The market / exchange under consideration (e.g. Coinbase, Kraken, etc.).
  , sPOTINSTRUMENTTRADEPrice :: !(Maybe Int) -- ^ "PRICE" - The price in the to instrument (quote / counter symbol / coin) of the trade. For a BTC-USD trade, this is how much was paid for one BTC in USD. For futures, this will be the price of the contract.
  , sPOTINSTRUMENTTRADEQuantity :: !(Maybe Int) -- ^ "QUANTITY" - The volume of the trade, given in the from instrument (base symbol / coin/ contract). For a spot BTC-USD trade, this is how much BTC was traded at the trade price. For a futures BTCUSDPERP, this is the BTC equivalent for the contracts traded.
  , sPOTINSTRUMENTTRADEQuote :: !(Maybe Text) -- ^ "QUOTE" - The mapped to asset (quote / counter symbol / coin). Only available on instruments that have been mapped (e.g. USD).
  , sPOTINSTRUMENTTRADEQuoteQuantity :: !(Maybe Int) -- ^ "QUOTE_QUANTITY" - The volume of the trade, given in the to instrument (quote / counter symbol / coin). This is equivalent to QUANTITY * PRICE. E.g. for a BTC-USD trade, this is how much USD was paid in total for the volume of BTC traded. For futures this is the quote currency equivalent for the contracts traded.
  , sPOTINSTRUMENTTRADEReceivedTimestamp :: !(Maybe Int) -- ^ "RECEIVED_TIMESTAMP" - The timestamp in seconds that the trade was received. This varies from the trade taking place on the market by a few millisconds to a few seconds depending on the market / exchange API options / rate limits.
  , sPOTINSTRUMENTTRADEReceivedTimestampNs :: !(Maybe Int) -- ^ "RECEIVED_TIMESTAMP_NS" - The nanosecond part of the received timestamp.
  , sPOTINSTRUMENTTRADESide :: !(Maybe Text) -- ^ "SIDE" - The side of the trade: SELL, BUY or UNKNOWN. If the exchange / api does not provide a side, \&quot;UNKNOWN\&quot; will be returned.
  , sPOTINSTRUMENTTRADESource :: !(Maybe Text) -- ^ "SOURCE" - The source of the trade update: POLLING, STREAMING, GO, BLOB etc.
  , sPOTINSTRUMENTTRADETimestamp :: !(Maybe Int) -- ^ "TIMESTAMP" - The timestamp in seconds as reported by the market / exchange or the received timestamp if the market / exchange does not provide one.
  , sPOTINSTRUMENTTRADETimestampNs :: !(Maybe Int) -- ^ "TIMESTAMP_NS" - The nanosecond part of the reported timestamp.
  , sPOTINSTRUMENTTRADEType :: !(Maybe Text) -- ^ "TYPE" - The type of the message.
  } deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON SPOTINSTRUMENTTRADE
instance A.FromJSON SPOTINSTRUMENTTRADE where
  parseJSON = A.withObject "SPOTINSTRUMENTTRADE" $ \o ->
    SPOTINSTRUMENTTRADE
      <$> (o .:? "BASE")
      <*> (o .:? "CCSEQ")
      <*> (o .:? "ID")
      <*> (o .:? "INSTRUMENT")
      <*> (o .:? "MAPPED_INSTRUMENT")
      <*> (o .:? "MARKET")
      <*> (o .:? "PRICE")
      <*> (o .:? "QUANTITY")
      <*> (o .:? "QUOTE")
      <*> (o .:? "QUOTE_QUANTITY")
      <*> (o .:? "RECEIVED_TIMESTAMP")
      <*> (o .:? "RECEIVED_TIMESTAMP_NS")
      <*> (o .:? "SIDE")
      <*> (o .:? "SOURCE")
      <*> (o .:? "TIMESTAMP")
      <*> (o .:? "TIMESTAMP_NS")
      <*> (o .:? "TYPE")

-- | ToJSON SPOTINSTRUMENTTRADE
instance A.ToJSON SPOTINSTRUMENTTRADE where
  toJSON SPOTINSTRUMENTTRADE {..} =
   _omitNulls
      [ "BASE" .= sPOTINSTRUMENTTRADEBase
      , "CCSEQ" .= sPOTINSTRUMENTTRADECcseq
      , "ID" .= sPOTINSTRUMENTTRADEId
      , "INSTRUMENT" .= sPOTINSTRUMENTTRADEInstrument
      , "MAPPED_INSTRUMENT" .= sPOTINSTRUMENTTRADEMappedInstrument
      , "MARKET" .= sPOTINSTRUMENTTRADEMarket
      , "PRICE" .= sPOTINSTRUMENTTRADEPrice
      , "QUANTITY" .= sPOTINSTRUMENTTRADEQuantity
      , "QUOTE" .= sPOTINSTRUMENTTRADEQuote
      , "QUOTE_QUANTITY" .= sPOTINSTRUMENTTRADEQuoteQuantity
      , "RECEIVED_TIMESTAMP" .= sPOTINSTRUMENTTRADEReceivedTimestamp
      , "RECEIVED_TIMESTAMP_NS" .= sPOTINSTRUMENTTRADEReceivedTimestampNs
      , "SIDE" .= sPOTINSTRUMENTTRADESide
      , "SOURCE" .= sPOTINSTRUMENTTRADESource
      , "TIMESTAMP" .= sPOTINSTRUMENTTRADETimestamp
      , "TIMESTAMP_NS" .= sPOTINSTRUMENTTRADETimestampNs
      , "TYPE" .= sPOTINSTRUMENTTRADEType
      ]


-- | Construct a value of type 'SPOTINSTRUMENTTRADE' (by applying it's required fields, if any)
mkSPOTINSTRUMENTTRADE
  :: SPOTINSTRUMENTTRADE
mkSPOTINSTRUMENTTRADE =
  SPOTINSTRUMENTTRADE
  { sPOTINSTRUMENTTRADEBase = Nothing
  , sPOTINSTRUMENTTRADECcseq = Nothing
  , sPOTINSTRUMENTTRADEId = Nothing
  , sPOTINSTRUMENTTRADEInstrument = Nothing
  , sPOTINSTRUMENTTRADEMappedInstrument = Nothing
  , sPOTINSTRUMENTTRADEMarket = Nothing
  , sPOTINSTRUMENTTRADEPrice = Nothing
  , sPOTINSTRUMENTTRADEQuantity = Nothing
  , sPOTINSTRUMENTTRADEQuote = Nothing
  , sPOTINSTRUMENTTRADEQuoteQuantity = Nothing
  , sPOTINSTRUMENTTRADEReceivedTimestamp = Nothing
  , sPOTINSTRUMENTTRADEReceivedTimestampNs = Nothing
  , sPOTINSTRUMENTTRADESide = Nothing
  , sPOTINSTRUMENTTRADESource = Nothing
  , sPOTINSTRUMENTTRADETimestamp = Nothing
  , sPOTINSTRUMENTTRADETimestampNs = Nothing
  , sPOTINSTRUMENTTRADEType = Nothing
  }

-- ** SPOTINSTRUMENTTRADERESPONSE
-- | SPOTINSTRUMENTTRADERESPONSE
data SPOTINSTRUMENTTRADERESPONSE = SPOTINSTRUMENTTRADERESPONSE
  { sPOTINSTRUMENTTRADERESPONSEData :: !(Maybe [SPOTINSTRUMENTTRADE]) -- ^ "Data"
  , sPOTINSTRUMENTTRADERESPONSEErr :: !(Maybe A.Value) -- ^ "Err"
  } deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON SPOTINSTRUMENTTRADERESPONSE
instance A.FromJSON SPOTINSTRUMENTTRADERESPONSE where
  parseJSON = A.withObject "SPOTINSTRUMENTTRADERESPONSE" $ \o ->
    SPOTINSTRUMENTTRADERESPONSE
      <$> (o .:? "Data")
      <*> (o .:? "Err")

-- | ToJSON SPOTINSTRUMENTTRADERESPONSE
instance A.ToJSON SPOTINSTRUMENTTRADERESPONSE where
  toJSON SPOTINSTRUMENTTRADERESPONSE {..} =
   _omitNulls
      [ "Data" .= sPOTINSTRUMENTTRADERESPONSEData
      , "Err" .= sPOTINSTRUMENTTRADERESPONSEErr
      ]


-- | Construct a value of type 'SPOTINSTRUMENTTRADERESPONSE' (by applying it's required fields, if any)
mkSPOTINSTRUMENTTRADERESPONSE
  :: SPOTINSTRUMENTTRADERESPONSE
mkSPOTINSTRUMENTTRADERESPONSE =
  SPOTINSTRUMENTTRADERESPONSE
  { sPOTINSTRUMENTTRADERESPONSEData = Nothing
  , sPOTINSTRUMENTTRADERESPONSEErr = Nothing
  }


-- * Enums


-- ** E'Categories

-- | Enum of 'Text'
data E'Categories
  = E'Categories'1INCH -- ^ @"1INCH"@
  | E'Categories'AAVE -- ^ @"AAVE"@
  | E'Categories'ADA -- ^ @"ADA"@
  | E'Categories'ALGO -- ^ @"ALGO"@
  | E'Categories'ALTCOIN -- ^ @"ALTCOIN"@
  | E'Categories'ASIA -- ^ @"ASIA"@
  | E'Categories'ATOM -- ^ @"ATOM"@
  | E'Categories'AVAX -- ^ @"AVAX"@
  | E'Categories'AXS -- ^ @"AXS"@
  | E'Categories'BAL -- ^ @"BAL"@
  | E'Categories'BAT -- ^ @"BAT"@
  | E'Categories'BCH -- ^ @"BCH"@
  | E'Categories'BLOCKCHAIN -- ^ @"BLOCKCHAIN"@
  | E'Categories'BTC -- ^ @"BTC"@
  | E'Categories'BUSINESS -- ^ @"BUSINESS"@
  | E'Categories'COMMODITY -- ^ @"COMMODITY"@
  | E'Categories'COMP -- ^ @"COMP"@
  | E'Categories'CRV -- ^ @"CRV"@
  | E'Categories'DASH -- ^ @"DASH"@
  | E'Categories'DOGE -- ^ @"DOGE"@
  | E'Categories'DOT -- ^ @"DOT"@
  | E'Categories'ENJ -- ^ @"ENJ"@
  | E'Categories'ETC -- ^ @"ETC"@
  | E'Categories'ETH -- ^ @"ETH"@
  | E'Categories'EXCHANGE -- ^ @"EXCHANGE"@
  | E'Categories'FIAT -- ^ @"FIAT"@
  | E'Categories'FIL -- ^ @"FIL"@
  | E'Categories'FTM -- ^ @"FTM"@
  | E'Categories'ICO -- ^ @"ICO"@
  | E'Categories'KNC -- ^ @"KNC"@
  | E'Categories'LINK -- ^ @"LINK"@
  | E'Categories'LRC -- ^ @"LRC"@
  | E'Categories'LTC -- ^ @"LTC"@
  | E'Categories'LUNA -- ^ @"LUNA"@
  | E'Categories'LUNC -- ^ @"LUNC"@
  | E'Categories'MANA -- ^ @"MANA"@
  | E'Categories'MARKET -- ^ @"MARKET"@
  | E'Categories'MATIC -- ^ @"MATIC"@
  | E'Categories'MINING -- ^ @"MINING"@
  | E'Categories'MKR -- ^ @"MKR"@
  | E'Categories'REGULATION -- ^ @"REGULATION"@
  | E'Categories'REN -- ^ @"REN"@
  | E'Categories'SAND -- ^ @"SAND"@
  | E'Categories'SHIB -- ^ @"SHIB"@
  | E'Categories'SNX -- ^ @"SNX"@
  | E'Categories'SOL -- ^ @"SOL"@
  | E'Categories'SPONSORED -- ^ @"SPONSORED"@
  | E'Categories'SUSHI -- ^ @"SUSHI"@
  | E'Categories'TECHNOLOGY -- ^ @"TECHNOLOGY"@
  | E'Categories'TRADING -- ^ @"TRADING"@
  | E'Categories'TRX -- ^ @"TRX"@
  | E'Categories'UMA -- ^ @"UMA"@
  | E'Categories'UNI -- ^ @"UNI"@
  | E'Categories'USDT -- ^ @"USDT"@
  | E'Categories'WALLET -- ^ @"WALLET"@
  | E'Categories'XLM -- ^ @"XLM"@
  | E'Categories'XMR -- ^ @"XMR"@
  | E'Categories'XRP -- ^ @"XRP"@
  | E'Categories'XTZ -- ^ @"XTZ"@
  | E'Categories'YFI -- ^ @"YFI"@
  | E'Categories'ZEC -- ^ @"ZEC"@
  | E'Categories'ZRX -- ^ @"ZRX"@
  | E'Categories'Empty -- ^ @""@
  deriving (P.Show, P.Eq, P.Typeable, P.Ord, P.Bounded, P.Enum)

instance A.ToJSON E'Categories where toJSON = A.toJSON . fromE'Categories
instance A.FromJSON E'Categories where parseJSON o = P.either P.fail (pure . P.id) . toE'Categories =<< A.parseJSON o
instance WH.ToHttpApiData E'Categories where toQueryParam = WH.toQueryParam . fromE'Categories
instance WH.FromHttpApiData E'Categories where parseQueryParam o = WH.parseQueryParam o >>= P.left T.pack . toE'Categories
instance MimeRender MimeMultipartFormData E'Categories where mimeRender _ = mimeRenderDefaultMultipartFormData

-- | unwrap 'E'Categories' enum
fromE'Categories :: E'Categories -> Text
fromE'Categories = \case
  E'Categories'1INCH -> "1INCH"
  E'Categories'AAVE -> "AAVE"
  E'Categories'ADA -> "ADA"
  E'Categories'ALGO -> "ALGO"
  E'Categories'ALTCOIN -> "ALTCOIN"
  E'Categories'ASIA -> "ASIA"
  E'Categories'ATOM -> "ATOM"
  E'Categories'AVAX -> "AVAX"
  E'Categories'AXS -> "AXS"
  E'Categories'BAL -> "BAL"
  E'Categories'BAT -> "BAT"
  E'Categories'BCH -> "BCH"
  E'Categories'BLOCKCHAIN -> "BLOCKCHAIN"
  E'Categories'BTC -> "BTC"
  E'Categories'BUSINESS -> "BUSINESS"
  E'Categories'COMMODITY -> "COMMODITY"
  E'Categories'COMP -> "COMP"
  E'Categories'CRV -> "CRV"
  E'Categories'DASH -> "DASH"
  E'Categories'DOGE -> "DOGE"
  E'Categories'DOT -> "DOT"
  E'Categories'ENJ -> "ENJ"
  E'Categories'ETC -> "ETC"
  E'Categories'ETH -> "ETH"
  E'Categories'EXCHANGE -> "EXCHANGE"
  E'Categories'FIAT -> "FIAT"
  E'Categories'FIL -> "FIL"
  E'Categories'FTM -> "FTM"
  E'Categories'ICO -> "ICO"
  E'Categories'KNC -> "KNC"
  E'Categories'LINK -> "LINK"
  E'Categories'LRC -> "LRC"
  E'Categories'LTC -> "LTC"
  E'Categories'LUNA -> "LUNA"
  E'Categories'LUNC -> "LUNC"
  E'Categories'MANA -> "MANA"
  E'Categories'MARKET -> "MARKET"
  E'Categories'MATIC -> "MATIC"
  E'Categories'MINING -> "MINING"
  E'Categories'MKR -> "MKR"
  E'Categories'REGULATION -> "REGULATION"
  E'Categories'REN -> "REN"
  E'Categories'SAND -> "SAND"
  E'Categories'SHIB -> "SHIB"
  E'Categories'SNX -> "SNX"
  E'Categories'SOL -> "SOL"
  E'Categories'SPONSORED -> "SPONSORED"
  E'Categories'SUSHI -> "SUSHI"
  E'Categories'TECHNOLOGY -> "TECHNOLOGY"
  E'Categories'TRADING -> "TRADING"
  E'Categories'TRX -> "TRX"
  E'Categories'UMA -> "UMA"
  E'Categories'UNI -> "UNI"
  E'Categories'USDT -> "USDT"
  E'Categories'WALLET -> "WALLET"
  E'Categories'XLM -> "XLM"
  E'Categories'XMR -> "XMR"
  E'Categories'XRP -> "XRP"
  E'Categories'XTZ -> "XTZ"
  E'Categories'YFI -> "YFI"
  E'Categories'ZEC -> "ZEC"
  E'Categories'ZRX -> "ZRX"
  E'Categories'Empty -> ""

-- | parse 'E'Categories' enum
toE'Categories :: Text -> P.Either String E'Categories
toE'Categories = \case
  "1INCH" -> P.Right E'Categories'1INCH
  "AAVE" -> P.Right E'Categories'AAVE
  "ADA" -> P.Right E'Categories'ADA
  "ALGO" -> P.Right E'Categories'ALGO
  "ALTCOIN" -> P.Right E'Categories'ALTCOIN
  "ASIA" -> P.Right E'Categories'ASIA
  "ATOM" -> P.Right E'Categories'ATOM
  "AVAX" -> P.Right E'Categories'AVAX
  "AXS" -> P.Right E'Categories'AXS
  "BAL" -> P.Right E'Categories'BAL
  "BAT" -> P.Right E'Categories'BAT
  "BCH" -> P.Right E'Categories'BCH
  "BLOCKCHAIN" -> P.Right E'Categories'BLOCKCHAIN
  "BTC" -> P.Right E'Categories'BTC
  "BUSINESS" -> P.Right E'Categories'BUSINESS
  "COMMODITY" -> P.Right E'Categories'COMMODITY
  "COMP" -> P.Right E'Categories'COMP
  "CRV" -> P.Right E'Categories'CRV
  "DASH" -> P.Right E'Categories'DASH
  "DOGE" -> P.Right E'Categories'DOGE
  "DOT" -> P.Right E'Categories'DOT
  "ENJ" -> P.Right E'Categories'ENJ
  "ETC" -> P.Right E'Categories'ETC
  "ETH" -> P.Right E'Categories'ETH
  "EXCHANGE" -> P.Right E'Categories'EXCHANGE
  "FIAT" -> P.Right E'Categories'FIAT
  "FIL" -> P.Right E'Categories'FIL
  "FTM" -> P.Right E'Categories'FTM
  "ICO" -> P.Right E'Categories'ICO
  "KNC" -> P.Right E'Categories'KNC
  "LINK" -> P.Right E'Categories'LINK
  "LRC" -> P.Right E'Categories'LRC
  "LTC" -> P.Right E'Categories'LTC
  "LUNA" -> P.Right E'Categories'LUNA
  "LUNC" -> P.Right E'Categories'LUNC
  "MANA" -> P.Right E'Categories'MANA
  "MARKET" -> P.Right E'Categories'MARKET
  "MATIC" -> P.Right E'Categories'MATIC
  "MINING" -> P.Right E'Categories'MINING
  "MKR" -> P.Right E'Categories'MKR
  "REGULATION" -> P.Right E'Categories'REGULATION
  "REN" -> P.Right E'Categories'REN
  "SAND" -> P.Right E'Categories'SAND
  "SHIB" -> P.Right E'Categories'SHIB
  "SNX" -> P.Right E'Categories'SNX
  "SOL" -> P.Right E'Categories'SOL
  "SPONSORED" -> P.Right E'Categories'SPONSORED
  "SUSHI" -> P.Right E'Categories'SUSHI
  "TECHNOLOGY" -> P.Right E'Categories'TECHNOLOGY
  "TRADING" -> P.Right E'Categories'TRADING
  "TRX" -> P.Right E'Categories'TRX
  "UMA" -> P.Right E'Categories'UMA
  "UNI" -> P.Right E'Categories'UNI
  "USDT" -> P.Right E'Categories'USDT
  "WALLET" -> P.Right E'Categories'WALLET
  "XLM" -> P.Right E'Categories'XLM
  "XMR" -> P.Right E'Categories'XMR
  "XRP" -> P.Right E'Categories'XRP
  "XTZ" -> P.Right E'Categories'XTZ
  "YFI" -> P.Right E'Categories'YFI
  "ZEC" -> P.Right E'Categories'ZEC
  "ZRX" -> P.Right E'Categories'ZRX
  "" -> P.Right E'Categories'Empty
  s -> P.Left $ "toE'Categories: enum parse failure: " P.++ P.show s


-- ** E'InstrumentStatus

-- | Enum of 'Text'
data E'InstrumentStatus
  = E'InstrumentStatus'ACTIVE -- ^ @"ACTIVE"@
  | E'InstrumentStatus'IGNORED -- ^ @"IGNORED"@
  | E'InstrumentStatus'RETIRED -- ^ @"RETIRED"@
  | E'InstrumentStatus'EXPIRED -- ^ @"EXPIRED"@
  deriving (P.Show, P.Eq, P.Typeable, P.Ord, P.Bounded, P.Enum)

instance A.ToJSON E'InstrumentStatus where toJSON = A.toJSON . fromE'InstrumentStatus
instance A.FromJSON E'InstrumentStatus where parseJSON o = P.either P.fail (pure . P.id) . toE'InstrumentStatus =<< A.parseJSON o
instance WH.ToHttpApiData E'InstrumentStatus where toQueryParam = WH.toQueryParam . fromE'InstrumentStatus
instance WH.FromHttpApiData E'InstrumentStatus where parseQueryParam o = WH.parseQueryParam o >>= P.left T.pack . toE'InstrumentStatus
instance MimeRender MimeMultipartFormData E'InstrumentStatus where mimeRender _ = mimeRenderDefaultMultipartFormData

-- | unwrap 'E'InstrumentStatus' enum
fromE'InstrumentStatus :: E'InstrumentStatus -> Text
fromE'InstrumentStatus = \case
  E'InstrumentStatus'ACTIVE -> "ACTIVE"
  E'InstrumentStatus'IGNORED -> "IGNORED"
  E'InstrumentStatus'RETIRED -> "RETIRED"
  E'InstrumentStatus'EXPIRED -> "EXPIRED"

-- | parse 'E'InstrumentStatus' enum
toE'InstrumentStatus :: Text -> P.Either String E'InstrumentStatus
toE'InstrumentStatus = \case
  "ACTIVE" -> P.Right E'InstrumentStatus'ACTIVE
  "IGNORED" -> P.Right E'InstrumentStatus'IGNORED
  "RETIRED" -> P.Right E'InstrumentStatus'RETIRED
  "EXPIRED" -> P.Right E'InstrumentStatus'EXPIRED
  s -> P.Left $ "toE'InstrumentStatus: enum parse failure: " P.++ P.show s


-- ** E'Lang

-- | Enum of 'Text'
data E'Lang
  = E'Lang'EN -- ^ @"EN"@
  | E'Lang'ES -- ^ @"ES"@
  | E'Lang'PT -- ^ @"PT"@
  | E'Lang'Empty -- ^ @""@
  deriving (P.Show, P.Eq, P.Typeable, P.Ord, P.Bounded, P.Enum)

instance A.ToJSON E'Lang where toJSON = A.toJSON . fromE'Lang
instance A.FromJSON E'Lang where parseJSON o = P.either P.fail (pure . P.id) . toE'Lang =<< A.parseJSON o
instance WH.ToHttpApiData E'Lang where toQueryParam = WH.toQueryParam . fromE'Lang
instance WH.FromHttpApiData E'Lang where parseQueryParam o = WH.parseQueryParam o >>= P.left T.pack . toE'Lang
instance MimeRender MimeMultipartFormData E'Lang where mimeRender _ = mimeRenderDefaultMultipartFormData

-- | unwrap 'E'Lang' enum
fromE'Lang :: E'Lang -> Text
fromE'Lang = \case
  E'Lang'EN -> "EN"
  E'Lang'ES -> "ES"
  E'Lang'PT -> "PT"
  E'Lang'Empty -> ""

-- | parse 'E'Lang' enum
toE'Lang :: Text -> P.Either String E'Lang
toE'Lang = \case
  "EN" -> P.Right E'Lang'EN
  "ES" -> P.Right E'Lang'ES
  "PT" -> P.Right E'Lang'PT
  "" -> P.Right E'Lang'Empty
  s -> P.Left $ "toE'Lang: enum parse failure: " P.++ P.show s


-- ** E'MappingPriority

-- | Enum of 'Text'
data E'MappingPriority
  = E'MappingPriority'MAPPED_FIRST -- ^ @"CHECK_MAPPED_FIRST"@
  | E'MappingPriority'UNMAPPED_FIRST -- ^ @"CHECK_UNMAPPED_FIRST"@
  deriving (P.Show, P.Eq, P.Typeable, P.Ord, P.Bounded, P.Enum)

instance A.ToJSON E'MappingPriority where toJSON = A.toJSON . fromE'MappingPriority
instance A.FromJSON E'MappingPriority where parseJSON o = P.either P.fail (pure . P.id) . toE'MappingPriority =<< A.parseJSON o
instance WH.ToHttpApiData E'MappingPriority where toQueryParam = WH.toQueryParam . fromE'MappingPriority
instance WH.FromHttpApiData E'MappingPriority where parseQueryParam o = WH.parseQueryParam o >>= P.left T.pack . toE'MappingPriority
instance MimeRender MimeMultipartFormData E'MappingPriority where mimeRender _ = mimeRenderDefaultMultipartFormData

-- | unwrap 'E'MappingPriority' enum
fromE'MappingPriority :: E'MappingPriority -> Text
fromE'MappingPriority = \case
  E'MappingPriority'MAPPED_FIRST -> "CHECK_MAPPED_FIRST"
  E'MappingPriority'UNMAPPED_FIRST -> "CHECK_UNMAPPED_FIRST"

-- | parse 'E'MappingPriority' enum
toE'MappingPriority :: Text -> P.Either String E'MappingPriority
toE'MappingPriority = \case
  "CHECK_MAPPED_FIRST" -> P.Right E'MappingPriority'MAPPED_FIRST
  "CHECK_UNMAPPED_FIRST" -> P.Right E'MappingPriority'UNMAPPED_FIRST
  s -> P.Left $ "toE'MappingPriority: enum parse failure: " P.++ P.show s


-- ** E'ResponseFormat

-- | Enum of 'Text'
data E'ResponseFormat
  = E'ResponseFormat'JSON -- ^ @"JSON"@
  | E'ResponseFormat'CSV -- ^ @"CSV"@
  deriving (P.Show, P.Eq, P.Typeable, P.Ord, P.Bounded, P.Enum)

instance A.ToJSON E'ResponseFormat where toJSON = A.toJSON . fromE'ResponseFormat
instance A.FromJSON E'ResponseFormat where parseJSON o = P.either P.fail (pure . P.id) . toE'ResponseFormat =<< A.parseJSON o
instance WH.ToHttpApiData E'ResponseFormat where toQueryParam = WH.toQueryParam . fromE'ResponseFormat
instance WH.FromHttpApiData E'ResponseFormat where parseQueryParam o = WH.parseQueryParam o >>= P.left T.pack . toE'ResponseFormat
instance MimeRender MimeMultipartFormData E'ResponseFormat where mimeRender _ = mimeRenderDefaultMultipartFormData

-- | unwrap 'E'ResponseFormat' enum
fromE'ResponseFormat :: E'ResponseFormat -> Text
fromE'ResponseFormat = \case
  E'ResponseFormat'JSON -> "JSON"
  E'ResponseFormat'CSV -> "CSV"

-- | parse 'E'ResponseFormat' enum
toE'ResponseFormat :: Text -> P.Either String E'ResponseFormat
toE'ResponseFormat = \case
  "JSON" -> P.Right E'ResponseFormat'JSON
  "CSV" -> P.Right E'ResponseFormat'CSV
  s -> P.Left $ "toE'ResponseFormat: enum parse failure: " P.++ P.show s


-- ** E'SortBy

-- | Enum of 'Text'
data E'SortBy
  = E'SortBy'CREATED_ON -- ^ @"CREATED_ON"@
  | E'SortBy'UPDATED_ON -- ^ @"UPDATED_ON"@
  | E'SortBy'SYMBOL -- ^ @"SYMBOL"@
  deriving (P.Show, P.Eq, P.Typeable, P.Ord, P.Bounded, P.Enum)

instance A.ToJSON E'SortBy where toJSON = A.toJSON . fromE'SortBy
instance A.FromJSON E'SortBy where parseJSON o = P.either P.fail (pure . P.id) . toE'SortBy =<< A.parseJSON o
instance WH.ToHttpApiData E'SortBy where toQueryParam = WH.toQueryParam . fromE'SortBy
instance WH.FromHttpApiData E'SortBy where parseQueryParam o = WH.parseQueryParam o >>= P.left T.pack . toE'SortBy
instance MimeRender MimeMultipartFormData E'SortBy where mimeRender _ = mimeRenderDefaultMultipartFormData

-- | unwrap 'E'SortBy' enum
fromE'SortBy :: E'SortBy -> Text
fromE'SortBy = \case
  E'SortBy'CREATED_ON -> "CREATED_ON"
  E'SortBy'UPDATED_ON -> "UPDATED_ON"
  E'SortBy'SYMBOL -> "SYMBOL"

-- | parse 'E'SortBy' enum
toE'SortBy :: Text -> P.Either String E'SortBy
toE'SortBy = \case
  "CREATED_ON" -> P.Right E'SortBy'CREATED_ON
  "UPDATED_ON" -> P.Right E'SortBy'UPDATED_ON
  "SYMBOL" -> P.Right E'SortBy'SYMBOL
  s -> P.Left $ "toE'SortBy: enum parse failure: " P.++ P.show s


-- ** E'SortDirection

-- | Enum of 'Text'
data E'SortDirection
  = E'SortDirection'DESC -- ^ @"DESC"@
  | E'SortDirection'ASC -- ^ @"ASC"@
  deriving (P.Show, P.Eq, P.Typeable, P.Ord, P.Bounded, P.Enum)

instance A.ToJSON E'SortDirection where toJSON = A.toJSON . fromE'SortDirection
instance A.FromJSON E'SortDirection where parseJSON o = P.either P.fail (pure . P.id) . toE'SortDirection =<< A.parseJSON o
instance WH.ToHttpApiData E'SortDirection where toQueryParam = WH.toQueryParam . fromE'SortDirection
instance WH.FromHttpApiData E'SortDirection where parseQueryParam o = WH.parseQueryParam o >>= P.left T.pack . toE'SortDirection
instance MimeRender MimeMultipartFormData E'SortDirection where mimeRender _ = mimeRenderDefaultMultipartFormData

-- | unwrap 'E'SortDirection' enum
fromE'SortDirection :: E'SortDirection -> Text
fromE'SortDirection = \case
  E'SortDirection'DESC -> "DESC"
  E'SortDirection'ASC -> "ASC"

-- | parse 'E'SortDirection' enum
toE'SortDirection :: Text -> P.Either String E'SortDirection
toE'SortDirection = \case
  "DESC" -> P.Right E'SortDirection'DESC
  "ASC" -> P.Right E'SortDirection'ASC
  s -> P.Left $ "toE'SortDirection: enum parse failure: " P.++ P.show s


-- ** E'Status

-- | Enum of 'Text'
data E'Status
  = E'Status'ACTIVE -- ^ @"ACTIVE"@
  | E'Status'INACTIVE -- ^ @"INACTIVE"@
  | E'Status'Empty -- ^ @""@
  deriving (P.Show, P.Eq, P.Typeable, P.Ord, P.Bounded, P.Enum)

instance A.ToJSON E'Status where toJSON = A.toJSON . fromE'Status
instance A.FromJSON E'Status where parseJSON o = P.either P.fail (pure . P.id) . toE'Status =<< A.parseJSON o
instance WH.ToHttpApiData E'Status where toQueryParam = WH.toQueryParam . fromE'Status
instance WH.FromHttpApiData E'Status where parseQueryParam o = WH.parseQueryParam o >>= P.left T.pack . toE'Status
instance MimeRender MimeMultipartFormData E'Status where mimeRender _ = mimeRenderDefaultMultipartFormData

-- | unwrap 'E'Status' enum
fromE'Status :: E'Status -> Text
fromE'Status = \case
  E'Status'ACTIVE -> "ACTIVE"
  E'Status'INACTIVE -> "INACTIVE"
  E'Status'Empty -> ""

-- | parse 'E'Status' enum
toE'Status :: Text -> P.Either String E'Status
toE'Status = \case
  "ACTIVE" -> P.Right E'Status'ACTIVE
  "INACTIVE" -> P.Right E'Status'INACTIVE
  "" -> P.Right E'Status'Empty
  s -> P.Left $ "toE'Status: enum parse failure: " P.++ P.show s


-- ** E'Type

-- | Enum of 'Text'
data E'Type
  = E'Type'RSS -- ^ @"RSS"@
  | E'Type'API -- ^ @"API"@
  | E'Type'TWITTER -- ^ @"TWITTER"@
  | E'Type'Empty -- ^ @""@
  deriving (P.Show, P.Eq, P.Typeable, P.Ord, P.Bounded, P.Enum)

instance A.ToJSON E'Type where toJSON = A.toJSON . fromE'Type
instance A.FromJSON E'Type where parseJSON o = P.either P.fail (pure . P.id) . toE'Type =<< A.parseJSON o
instance WH.ToHttpApiData E'Type where toQueryParam = WH.toQueryParam . fromE'Type
instance WH.FromHttpApiData E'Type where parseQueryParam o = WH.parseQueryParam o >>= P.left T.pack . toE'Type
instance MimeRender MimeMultipartFormData E'Type where mimeRender _ = mimeRenderDefaultMultipartFormData

-- | unwrap 'E'Type' enum
fromE'Type :: E'Type -> Text
fromE'Type = \case
  E'Type'RSS -> "RSS"
  E'Type'API -> "API"
  E'Type'TWITTER -> "TWITTER"
  E'Type'Empty -> ""

-- | parse 'E'Type' enum
toE'Type :: Text -> P.Either String E'Type
toE'Type = \case
  "RSS" -> P.Right E'Type'RSS
  "API" -> P.Right E'Type'API
  "TWITTER" -> P.Right E'Type'TWITTER
  "" -> P.Right E'Type'Empty
  s -> P.Left $ "toE'Type: enum parse failure: " P.++ P.show s


-- * Auth Methods

-- ** AuthApiKeyApiKeyHeader
data AuthApiKeyApiKeyHeader =
  AuthApiKeyApiKeyHeader Text -- ^ secret
  deriving (P.Eq, P.Show, P.Typeable)

instance AuthMethod AuthApiKeyApiKeyHeader where
  applyAuthMethod _ a@(AuthApiKeyApiKeyHeader secret) req =
    P.pure $
    if (P.typeOf a `P.elem` rAuthTypes req)
      then req `setHeader` toHeader ("authorization", secret)
           & L.over rAuthTypesL (P.filter (/= P.typeOf a))
      else req

-- ** AuthApiKeyApiKeyQuery
data AuthApiKeyApiKeyQuery =
  AuthApiKeyApiKeyQuery Text -- ^ secret
  deriving (P.Eq, P.Show, P.Typeable)

instance AuthMethod AuthApiKeyApiKeyQuery where
  applyAuthMethod _ a@(AuthApiKeyApiKeyQuery secret) req =
    P.pure $
    if (P.typeOf a `P.elem` rAuthTypes req)
      then req `setQuery` toQuery ("api_key", Just secret)
           & L.over rAuthTypesL (P.filter (/= P.typeOf a))
      else req


