/**
 * CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry
 * CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: data@cryptocompare.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISPOT_INSTRUMENT_METADATA.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISPOT_INSTRUMENT_METADATA::OAISPOT_INSTRUMENT_METADATA(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISPOT_INSTRUMENT_METADATA::OAISPOT_INSTRUMENT_METADATA() {
    this->initializeModel();
}

OAISPOT_INSTRUMENT_METADATA::~OAISPOT_INSTRUMENT_METADATA() {}

void OAISPOT_INSTRUMENT_METADATA::initializeModel() {

    m_first_seen_on_blob_ts_isSet = false;
    m_first_seen_on_blob_ts_isValid = false;

    m_first_seen_on_fix_ts_isSet = false;
    m_first_seen_on_fix_ts_isValid = false;

    m_first_seen_on_hardcoded_ts_isSet = false;
    m_first_seen_on_hardcoded_ts_isValid = false;

    m_first_seen_on_index_composition_ts_isSet = false;
    m_first_seen_on_index_composition_ts_isValid = false;

    m_first_seen_on_nsq_ts_isSet = false;
    m_first_seen_on_nsq_ts_isValid = false;

    m_first_seen_on_polling_ts_isSet = false;
    m_first_seen_on_polling_ts_isValid = false;

    m_first_seen_on_streaming_ts_isSet = false;
    m_first_seen_on_streaming_ts_isValid = false;

    m_first_trade_spot_from_backfill_isSet = false;
    m_first_trade_spot_from_backfill_isValid = false;

    m_first_trade_spot_from_backfill_external_isSet = false;
    m_first_trade_spot_from_backfill_external_isValid = false;

    m_first_trade_spot_from_blob_isSet = false;
    m_first_trade_spot_from_blob_isValid = false;

    m_first_trade_spot_from_blob_external_isSet = false;
    m_first_trade_spot_from_blob_external_isValid = false;

    m_first_trade_spot_from_calculated_isSet = false;
    m_first_trade_spot_from_calculated_isValid = false;

    m_first_trade_spot_from_calculated_external_isSet = false;
    m_first_trade_spot_from_calculated_external_isValid = false;

    m_first_trade_spot_from_fix_isSet = false;
    m_first_trade_spot_from_fix_isValid = false;

    m_first_trade_spot_from_fix_external_isSet = false;
    m_first_trade_spot_from_fix_external_isValid = false;

    m_first_trade_spot_from_go_isSet = false;
    m_first_trade_spot_from_go_isValid = false;

    m_first_trade_spot_from_go_external_isSet = false;
    m_first_trade_spot_from_go_external_isValid = false;

    m_first_trade_spot_from_polling_isSet = false;
    m_first_trade_spot_from_polling_isValid = false;

    m_first_trade_spot_from_polling_external_isSet = false;
    m_first_trade_spot_from_polling_external_isValid = false;

    m_first_trade_spot_from_streaming_isSet = false;
    m_first_trade_spot_from_streaming_isValid = false;

    m_first_trade_spot_from_streaming_external_isSet = false;
    m_first_trade_spot_from_streaming_external_isValid = false;

    m_host_migration_destination_isSet = false;
    m_host_migration_destination_isValid = false;

    m_host_migration_source_isSet = false;
    m_host_migration_source_isValid = false;

    m_host_migration_status_isSet = false;
    m_host_migration_status_isValid = false;

    m_instrument_isSet = false;
    m_instrument_isValid = false;

    m_instrument_external_data_isSet = false;
    m_instrument_external_data_isValid = false;

    m_instrument_mapping_isSet = false;
    m_instrument_mapping_isValid = false;

    m_instrument_mapping_history_isSet = false;
    m_instrument_mapping_history_isValid = false;

    m_instrument_source_backfill_isSet = false;
    m_instrument_source_backfill_isValid = false;

    m_instrument_source_blob_isSet = false;
    m_instrument_source_blob_isValid = false;

    m_instrument_source_calculated_isSet = false;
    m_instrument_source_calculated_isValid = false;

    m_instrument_source_fix_isSet = false;
    m_instrument_source_fix_isValid = false;

    m_instrument_source_go_isSet = false;
    m_instrument_source_go_isValid = false;

    m_instrument_source_polling_isSet = false;
    m_instrument_source_polling_isValid = false;

    m_instrument_source_streaming_isSet = false;
    m_instrument_source_streaming_isValid = false;

    m_instrument_status_isSet = false;
    m_instrument_status_isValid = false;

    m_instrument_trade_spot_from_backfill_last_proxied_rest_request_isSet = false;
    m_instrument_trade_spot_from_backfill_last_proxied_rest_request_isValid = false;

    m_instrument_trade_spot_from_backfill_rest_uri_last_request_ts_isSet = false;
    m_instrument_trade_spot_from_backfill_rest_uri_last_request_ts_isValid = false;

    m_instrument_trade_spot_from_backfill_rest_uri_last_response_ts_isSet = false;
    m_instrument_trade_spot_from_backfill_rest_uri_last_response_ts_isValid = false;

    m_instrument_trade_spot_from_backfill_rest_uri_next_request_ts_isSet = false;
    m_instrument_trade_spot_from_backfill_rest_uri_next_request_ts_isValid = false;

    m_instrument_trade_spot_from_blob_last_proxied_rest_request_isSet = false;
    m_instrument_trade_spot_from_blob_last_proxied_rest_request_isValid = false;

    m_instrument_trade_spot_from_blob_rest_uri_last_request_ts_isSet = false;
    m_instrument_trade_spot_from_blob_rest_uri_last_request_ts_isValid = false;

    m_instrument_trade_spot_from_blob_rest_uri_last_response_ts_isSet = false;
    m_instrument_trade_spot_from_blob_rest_uri_last_response_ts_isValid = false;

    m_instrument_trade_spot_from_blob_rest_uri_next_request_ts_isSet = false;
    m_instrument_trade_spot_from_blob_rest_uri_next_request_ts_isValid = false;

    m_instrument_trade_spot_from_calculated_last_proxied_rest_request_isSet = false;
    m_instrument_trade_spot_from_calculated_last_proxied_rest_request_isValid = false;

    m_instrument_trade_spot_from_calculated_rest_uri_last_request_ts_isSet = false;
    m_instrument_trade_spot_from_calculated_rest_uri_last_request_ts_isValid = false;

    m_instrument_trade_spot_from_calculated_rest_uri_last_response_ts_isSet = false;
    m_instrument_trade_spot_from_calculated_rest_uri_last_response_ts_isValid = false;

    m_instrument_trade_spot_from_calculated_rest_uri_next_request_ts_isSet = false;
    m_instrument_trade_spot_from_calculated_rest_uri_next_request_ts_isValid = false;

    m_instrument_trade_spot_from_fix_last_proxied_rest_request_isSet = false;
    m_instrument_trade_spot_from_fix_last_proxied_rest_request_isValid = false;

    m_instrument_trade_spot_from_fix_rest_uri_last_request_ts_isSet = false;
    m_instrument_trade_spot_from_fix_rest_uri_last_request_ts_isValid = false;

    m_instrument_trade_spot_from_fix_rest_uri_last_response_ts_isSet = false;
    m_instrument_trade_spot_from_fix_rest_uri_last_response_ts_isValid = false;

    m_instrument_trade_spot_from_fix_rest_uri_next_request_ts_isSet = false;
    m_instrument_trade_spot_from_fix_rest_uri_next_request_ts_isValid = false;

    m_instrument_trade_spot_from_go_last_proxied_rest_request_isSet = false;
    m_instrument_trade_spot_from_go_last_proxied_rest_request_isValid = false;

    m_instrument_trade_spot_from_go_rest_uri_last_request_ts_isSet = false;
    m_instrument_trade_spot_from_go_rest_uri_last_request_ts_isValid = false;

    m_instrument_trade_spot_from_go_rest_uri_last_response_ts_isSet = false;
    m_instrument_trade_spot_from_go_rest_uri_last_response_ts_isValid = false;

    m_instrument_trade_spot_from_go_rest_uri_next_request_ts_isSet = false;
    m_instrument_trade_spot_from_go_rest_uri_next_request_ts_isValid = false;

    m_instrument_trade_spot_from_polling_last_proxied_rest_request_isSet = false;
    m_instrument_trade_spot_from_polling_last_proxied_rest_request_isValid = false;

    m_instrument_trade_spot_from_polling_rest_uri_last_request_ts_isSet = false;
    m_instrument_trade_spot_from_polling_rest_uri_last_request_ts_isValid = false;

    m_instrument_trade_spot_from_polling_rest_uri_last_response_ts_isSet = false;
    m_instrument_trade_spot_from_polling_rest_uri_last_response_ts_isValid = false;

    m_instrument_trade_spot_from_polling_rest_uri_next_request_ts_isSet = false;
    m_instrument_trade_spot_from_polling_rest_uri_next_request_ts_isValid = false;

    m_instrument_trade_spot_from_streaming_last_proxied_rest_request_isSet = false;
    m_instrument_trade_spot_from_streaming_last_proxied_rest_request_isValid = false;

    m_instrument_trade_spot_from_streaming_rest_uri_last_request_ts_isSet = false;
    m_instrument_trade_spot_from_streaming_rest_uri_last_request_ts_isValid = false;

    m_instrument_trade_spot_from_streaming_rest_uri_last_response_ts_isSet = false;
    m_instrument_trade_spot_from_streaming_rest_uri_last_response_ts_isValid = false;

    m_instrument_trade_spot_from_streaming_rest_uri_next_request_ts_isSet = false;
    m_instrument_trade_spot_from_streaming_rest_uri_next_request_ts_isValid = false;

    m_instrument_trade_spot_is_ready_for_streaming_integration_isSet = false;
    m_instrument_trade_spot_is_ready_for_streaming_integration_isValid = false;

    m_instrument_trade_spot_rest_uri_isSet = false;
    m_instrument_trade_spot_rest_uri_isValid = false;

    m_instrument_trade_spot_rest_url_isSet = false;
    m_instrument_trade_spot_rest_url_isValid = false;

    m_instrument_trade_spot_streaming_subscription_isSet = false;
    m_instrument_trade_spot_streaming_subscription_isValid = false;

    m_last_concurrent_batch_of_trades_spot_ms_isSet = false;
    m_last_concurrent_batch_of_trades_spot_ms_isValid = false;

    m_last_seen_on_blob_ts_isSet = false;
    m_last_seen_on_blob_ts_isValid = false;

    m_last_seen_on_fix_ts_isSet = false;
    m_last_seen_on_fix_ts_isValid = false;

    m_last_seen_on_hardcoded_ts_isSet = false;
    m_last_seen_on_hardcoded_ts_isValid = false;

    m_last_seen_on_index_composition_ts_isSet = false;
    m_last_seen_on_index_composition_ts_isValid = false;

    m_last_seen_on_nsq_ts_isSet = false;
    m_last_seen_on_nsq_ts_isValid = false;

    m_last_seen_on_polling_ts_isSet = false;
    m_last_seen_on_polling_ts_isValid = false;

    m_last_seen_on_streaming_ts_isSet = false;
    m_last_seen_on_streaming_ts_isValid = false;

    m_last_trade_spot_from_backfill_isSet = false;
    m_last_trade_spot_from_backfill_isValid = false;

    m_last_trade_spot_from_backfill_external_isSet = false;
    m_last_trade_spot_from_backfill_external_isValid = false;

    m_last_trade_spot_from_blob_isSet = false;
    m_last_trade_spot_from_blob_isValid = false;

    m_last_trade_spot_from_blob_external_isSet = false;
    m_last_trade_spot_from_blob_external_isValid = false;

    m_last_trade_spot_from_calculated_isSet = false;
    m_last_trade_spot_from_calculated_isValid = false;

    m_last_trade_spot_from_calculated_external_isSet = false;
    m_last_trade_spot_from_calculated_external_isValid = false;

    m_last_trade_spot_from_fix_isSet = false;
    m_last_trade_spot_from_fix_isValid = false;

    m_last_trade_spot_from_fix_external_isSet = false;
    m_last_trade_spot_from_fix_external_isValid = false;

    m_last_trade_spot_from_go_isSet = false;
    m_last_trade_spot_from_go_isValid = false;

    m_last_trade_spot_from_go_external_isSet = false;
    m_last_trade_spot_from_go_external_isValid = false;

    m_last_trade_spot_from_polling_isSet = false;
    m_last_trade_spot_from_polling_isValid = false;

    m_last_trade_spot_from_polling_external_isSet = false;
    m_last_trade_spot_from_polling_external_isValid = false;

    m_last_trade_spot_from_streaming_isSet = false;
    m_last_trade_spot_from_streaming_isValid = false;

    m_last_trade_spot_from_streaming_external_isSet = false;
    m_last_trade_spot_from_streaming_external_isValid = false;

    m_metadata_version_isSet = false;
    m_metadata_version_isValid = false;

    m_processing_trades_from_blob_status_isSet = false;
    m_processing_trades_from_blob_status_isValid = false;

    m_total_trades_spot_isSet = false;
    m_total_trades_spot_isValid = false;

    m_unstructured_trade_spot_from_backfill_internal_data_isSet = false;
    m_unstructured_trade_spot_from_backfill_internal_data_isValid = false;

    m_unstructured_trade_spot_from_blob_internal_data_isSet = false;
    m_unstructured_trade_spot_from_blob_internal_data_isValid = false;

    m_unstructured_trade_spot_from_calculated_internal_data_isSet = false;
    m_unstructured_trade_spot_from_calculated_internal_data_isValid = false;

    m_unstructured_trade_spot_from_fix_internal_data_isSet = false;
    m_unstructured_trade_spot_from_fix_internal_data_isValid = false;

    m_unstructured_trade_spot_from_go_internal_data_isSet = false;
    m_unstructured_trade_spot_from_go_internal_data_isValid = false;

    m_unstructured_trade_spot_from_polling_internal_data_isSet = false;
    m_unstructured_trade_spot_from_polling_internal_data_isValid = false;

    m_unstructured_trade_spot_from_streaming_internal_data_isSet = false;
    m_unstructured_trade_spot_from_streaming_internal_data_isValid = false;
}

void OAISPOT_INSTRUMENT_METADATA::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISPOT_INSTRUMENT_METADATA::fromJsonObject(QJsonObject json) {

    m_first_seen_on_blob_ts_isValid = ::OpenAPI::fromJsonValue(first_seen_on_blob_ts, json[QString("FIRST_SEEN_ON_BLOB_TS")]);
    m_first_seen_on_blob_ts_isSet = !json[QString("FIRST_SEEN_ON_BLOB_TS")].isNull() && m_first_seen_on_blob_ts_isValid;

    m_first_seen_on_fix_ts_isValid = ::OpenAPI::fromJsonValue(first_seen_on_fix_ts, json[QString("FIRST_SEEN_ON_FIX_TS")]);
    m_first_seen_on_fix_ts_isSet = !json[QString("FIRST_SEEN_ON_FIX_TS")].isNull() && m_first_seen_on_fix_ts_isValid;

    m_first_seen_on_hardcoded_ts_isValid = ::OpenAPI::fromJsonValue(first_seen_on_hardcoded_ts, json[QString("FIRST_SEEN_ON_HARDCODED_TS")]);
    m_first_seen_on_hardcoded_ts_isSet = !json[QString("FIRST_SEEN_ON_HARDCODED_TS")].isNull() && m_first_seen_on_hardcoded_ts_isValid;

    m_first_seen_on_index_composition_ts_isValid = ::OpenAPI::fromJsonValue(first_seen_on_index_composition_ts, json[QString("FIRST_SEEN_ON_INDEX_COMPOSITION_TS")]);
    m_first_seen_on_index_composition_ts_isSet = !json[QString("FIRST_SEEN_ON_INDEX_COMPOSITION_TS")].isNull() && m_first_seen_on_index_composition_ts_isValid;

    m_first_seen_on_nsq_ts_isValid = ::OpenAPI::fromJsonValue(first_seen_on_nsq_ts, json[QString("FIRST_SEEN_ON_NSQ_TS")]);
    m_first_seen_on_nsq_ts_isSet = !json[QString("FIRST_SEEN_ON_NSQ_TS")].isNull() && m_first_seen_on_nsq_ts_isValid;

    m_first_seen_on_polling_ts_isValid = ::OpenAPI::fromJsonValue(first_seen_on_polling_ts, json[QString("FIRST_SEEN_ON_POLLING_TS")]);
    m_first_seen_on_polling_ts_isSet = !json[QString("FIRST_SEEN_ON_POLLING_TS")].isNull() && m_first_seen_on_polling_ts_isValid;

    m_first_seen_on_streaming_ts_isValid = ::OpenAPI::fromJsonValue(first_seen_on_streaming_ts, json[QString("FIRST_SEEN_ON_STREAMING_TS")]);
    m_first_seen_on_streaming_ts_isSet = !json[QString("FIRST_SEEN_ON_STREAMING_TS")].isNull() && m_first_seen_on_streaming_ts_isValid;

    m_first_trade_spot_from_backfill_isValid = ::OpenAPI::fromJsonValue(first_trade_spot_from_backfill, json[QString("FIRST_TRADE_SPOT_FROM_BACKFILL")]);
    m_first_trade_spot_from_backfill_isSet = !json[QString("FIRST_TRADE_SPOT_FROM_BACKFILL")].isNull() && m_first_trade_spot_from_backfill_isValid;

    m_first_trade_spot_from_backfill_external_isValid = ::OpenAPI::fromJsonValue(first_trade_spot_from_backfill_external, json[QString("FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL")]);
    m_first_trade_spot_from_backfill_external_isSet = !json[QString("FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL")].isNull() && m_first_trade_spot_from_backfill_external_isValid;

    m_first_trade_spot_from_blob_isValid = ::OpenAPI::fromJsonValue(first_trade_spot_from_blob, json[QString("FIRST_TRADE_SPOT_FROM_BLOB")]);
    m_first_trade_spot_from_blob_isSet = !json[QString("FIRST_TRADE_SPOT_FROM_BLOB")].isNull() && m_first_trade_spot_from_blob_isValid;

    m_first_trade_spot_from_blob_external_isValid = ::OpenAPI::fromJsonValue(first_trade_spot_from_blob_external, json[QString("FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL")]);
    m_first_trade_spot_from_blob_external_isSet = !json[QString("FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL")].isNull() && m_first_trade_spot_from_blob_external_isValid;

    m_first_trade_spot_from_calculated_isValid = ::OpenAPI::fromJsonValue(first_trade_spot_from_calculated, json[QString("FIRST_TRADE_SPOT_FROM_CALCULATED")]);
    m_first_trade_spot_from_calculated_isSet = !json[QString("FIRST_TRADE_SPOT_FROM_CALCULATED")].isNull() && m_first_trade_spot_from_calculated_isValid;

    m_first_trade_spot_from_calculated_external_isValid = ::OpenAPI::fromJsonValue(first_trade_spot_from_calculated_external, json[QString("FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL")]);
    m_first_trade_spot_from_calculated_external_isSet = !json[QString("FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL")].isNull() && m_first_trade_spot_from_calculated_external_isValid;

    m_first_trade_spot_from_fix_isValid = ::OpenAPI::fromJsonValue(first_trade_spot_from_fix, json[QString("FIRST_TRADE_SPOT_FROM_FIX")]);
    m_first_trade_spot_from_fix_isSet = !json[QString("FIRST_TRADE_SPOT_FROM_FIX")].isNull() && m_first_trade_spot_from_fix_isValid;

    m_first_trade_spot_from_fix_external_isValid = ::OpenAPI::fromJsonValue(first_trade_spot_from_fix_external, json[QString("FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL")]);
    m_first_trade_spot_from_fix_external_isSet = !json[QString("FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL")].isNull() && m_first_trade_spot_from_fix_external_isValid;

    m_first_trade_spot_from_go_isValid = ::OpenAPI::fromJsonValue(first_trade_spot_from_go, json[QString("FIRST_TRADE_SPOT_FROM_GO")]);
    m_first_trade_spot_from_go_isSet = !json[QString("FIRST_TRADE_SPOT_FROM_GO")].isNull() && m_first_trade_spot_from_go_isValid;

    m_first_trade_spot_from_go_external_isValid = ::OpenAPI::fromJsonValue(first_trade_spot_from_go_external, json[QString("FIRST_TRADE_SPOT_FROM_GO_EXTERNAL")]);
    m_first_trade_spot_from_go_external_isSet = !json[QString("FIRST_TRADE_SPOT_FROM_GO_EXTERNAL")].isNull() && m_first_trade_spot_from_go_external_isValid;

    m_first_trade_spot_from_polling_isValid = ::OpenAPI::fromJsonValue(first_trade_spot_from_polling, json[QString("FIRST_TRADE_SPOT_FROM_POLLING")]);
    m_first_trade_spot_from_polling_isSet = !json[QString("FIRST_TRADE_SPOT_FROM_POLLING")].isNull() && m_first_trade_spot_from_polling_isValid;

    m_first_trade_spot_from_polling_external_isValid = ::OpenAPI::fromJsonValue(first_trade_spot_from_polling_external, json[QString("FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL")]);
    m_first_trade_spot_from_polling_external_isSet = !json[QString("FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL")].isNull() && m_first_trade_spot_from_polling_external_isValid;

    m_first_trade_spot_from_streaming_isValid = ::OpenAPI::fromJsonValue(first_trade_spot_from_streaming, json[QString("FIRST_TRADE_SPOT_FROM_STREAMING")]);
    m_first_trade_spot_from_streaming_isSet = !json[QString("FIRST_TRADE_SPOT_FROM_STREAMING")].isNull() && m_first_trade_spot_from_streaming_isValid;

    m_first_trade_spot_from_streaming_external_isValid = ::OpenAPI::fromJsonValue(first_trade_spot_from_streaming_external, json[QString("FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL")]);
    m_first_trade_spot_from_streaming_external_isSet = !json[QString("FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL")].isNull() && m_first_trade_spot_from_streaming_external_isValid;

    m_host_migration_destination_isValid = ::OpenAPI::fromJsonValue(host_migration_destination, json[QString("HOST_MIGRATION_DESTINATION")]);
    m_host_migration_destination_isSet = !json[QString("HOST_MIGRATION_DESTINATION")].isNull() && m_host_migration_destination_isValid;

    m_host_migration_source_isValid = ::OpenAPI::fromJsonValue(host_migration_source, json[QString("HOST_MIGRATION_SOURCE")]);
    m_host_migration_source_isSet = !json[QString("HOST_MIGRATION_SOURCE")].isNull() && m_host_migration_source_isValid;

    m_host_migration_status_isValid = ::OpenAPI::fromJsonValue(host_migration_status, json[QString("HOST_MIGRATION_STATUS")]);
    m_host_migration_status_isSet = !json[QString("HOST_MIGRATION_STATUS")].isNull() && m_host_migration_status_isValid;

    m_instrument_isValid = ::OpenAPI::fromJsonValue(instrument, json[QString("INSTRUMENT")]);
    m_instrument_isSet = !json[QString("INSTRUMENT")].isNull() && m_instrument_isValid;

    m_instrument_external_data_isValid = ::OpenAPI::fromJsonValue(instrument_external_data, json[QString("INSTRUMENT_EXTERNAL_DATA")]);
    m_instrument_external_data_isSet = !json[QString("INSTRUMENT_EXTERNAL_DATA")].isNull() && m_instrument_external_data_isValid;

    m_instrument_mapping_isValid = ::OpenAPI::fromJsonValue(instrument_mapping, json[QString("INSTRUMENT_MAPPING")]);
    m_instrument_mapping_isSet = !json[QString("INSTRUMENT_MAPPING")].isNull() && m_instrument_mapping_isValid;

    m_instrument_mapping_history_isValid = ::OpenAPI::fromJsonValue(instrument_mapping_history, json[QString("INSTRUMENT_MAPPING_HISTORY")]);
    m_instrument_mapping_history_isSet = !json[QString("INSTRUMENT_MAPPING_HISTORY")].isNull() && m_instrument_mapping_history_isValid;

    m_instrument_source_backfill_isValid = ::OpenAPI::fromJsonValue(instrument_source_backfill, json[QString("INSTRUMENT_SOURCE_BACKFILL")]);
    m_instrument_source_backfill_isSet = !json[QString("INSTRUMENT_SOURCE_BACKFILL")].isNull() && m_instrument_source_backfill_isValid;

    m_instrument_source_blob_isValid = ::OpenAPI::fromJsonValue(instrument_source_blob, json[QString("INSTRUMENT_SOURCE_BLOB")]);
    m_instrument_source_blob_isSet = !json[QString("INSTRUMENT_SOURCE_BLOB")].isNull() && m_instrument_source_blob_isValid;

    m_instrument_source_calculated_isValid = ::OpenAPI::fromJsonValue(instrument_source_calculated, json[QString("INSTRUMENT_SOURCE_CALCULATED")]);
    m_instrument_source_calculated_isSet = !json[QString("INSTRUMENT_SOURCE_CALCULATED")].isNull() && m_instrument_source_calculated_isValid;

    m_instrument_source_fix_isValid = ::OpenAPI::fromJsonValue(instrument_source_fix, json[QString("INSTRUMENT_SOURCE_FIX")]);
    m_instrument_source_fix_isSet = !json[QString("INSTRUMENT_SOURCE_FIX")].isNull() && m_instrument_source_fix_isValid;

    m_instrument_source_go_isValid = ::OpenAPI::fromJsonValue(instrument_source_go, json[QString("INSTRUMENT_SOURCE_GO")]);
    m_instrument_source_go_isSet = !json[QString("INSTRUMENT_SOURCE_GO")].isNull() && m_instrument_source_go_isValid;

    m_instrument_source_polling_isValid = ::OpenAPI::fromJsonValue(instrument_source_polling, json[QString("INSTRUMENT_SOURCE_POLLING")]);
    m_instrument_source_polling_isSet = !json[QString("INSTRUMENT_SOURCE_POLLING")].isNull() && m_instrument_source_polling_isValid;

    m_instrument_source_streaming_isValid = ::OpenAPI::fromJsonValue(instrument_source_streaming, json[QString("INSTRUMENT_SOURCE_STREAMING")]);
    m_instrument_source_streaming_isSet = !json[QString("INSTRUMENT_SOURCE_STREAMING")].isNull() && m_instrument_source_streaming_isValid;

    m_instrument_status_isValid = ::OpenAPI::fromJsonValue(instrument_status, json[QString("INSTRUMENT_STATUS")]);
    m_instrument_status_isSet = !json[QString("INSTRUMENT_STATUS")].isNull() && m_instrument_status_isValid;

    m_instrument_trade_spot_from_backfill_last_proxied_rest_request_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_backfill_last_proxied_rest_request, json[QString("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST")]);
    m_instrument_trade_spot_from_backfill_last_proxied_rest_request_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST")].isNull() && m_instrument_trade_spot_from_backfill_last_proxied_rest_request_isValid;

    m_instrument_trade_spot_from_backfill_rest_uri_last_request_ts_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_backfill_rest_uri_last_request_ts, json[QString("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS")]);
    m_instrument_trade_spot_from_backfill_rest_uri_last_request_ts_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS")].isNull() && m_instrument_trade_spot_from_backfill_rest_uri_last_request_ts_isValid;

    m_instrument_trade_spot_from_backfill_rest_uri_last_response_ts_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_backfill_rest_uri_last_response_ts, json[QString("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS")]);
    m_instrument_trade_spot_from_backfill_rest_uri_last_response_ts_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS")].isNull() && m_instrument_trade_spot_from_backfill_rest_uri_last_response_ts_isValid;

    m_instrument_trade_spot_from_backfill_rest_uri_next_request_ts_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_backfill_rest_uri_next_request_ts, json[QString("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS")]);
    m_instrument_trade_spot_from_backfill_rest_uri_next_request_ts_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS")].isNull() && m_instrument_trade_spot_from_backfill_rest_uri_next_request_ts_isValid;

    m_instrument_trade_spot_from_blob_last_proxied_rest_request_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_blob_last_proxied_rest_request, json[QString("INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST")]);
    m_instrument_trade_spot_from_blob_last_proxied_rest_request_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST")].isNull() && m_instrument_trade_spot_from_blob_last_proxied_rest_request_isValid;

    m_instrument_trade_spot_from_blob_rest_uri_last_request_ts_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_blob_rest_uri_last_request_ts, json[QString("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS")]);
    m_instrument_trade_spot_from_blob_rest_uri_last_request_ts_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS")].isNull() && m_instrument_trade_spot_from_blob_rest_uri_last_request_ts_isValid;

    m_instrument_trade_spot_from_blob_rest_uri_last_response_ts_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_blob_rest_uri_last_response_ts, json[QString("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS")]);
    m_instrument_trade_spot_from_blob_rest_uri_last_response_ts_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS")].isNull() && m_instrument_trade_spot_from_blob_rest_uri_last_response_ts_isValid;

    m_instrument_trade_spot_from_blob_rest_uri_next_request_ts_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_blob_rest_uri_next_request_ts, json[QString("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS")]);
    m_instrument_trade_spot_from_blob_rest_uri_next_request_ts_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS")].isNull() && m_instrument_trade_spot_from_blob_rest_uri_next_request_ts_isValid;

    m_instrument_trade_spot_from_calculated_last_proxied_rest_request_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_calculated_last_proxied_rest_request, json[QString("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST")]);
    m_instrument_trade_spot_from_calculated_last_proxied_rest_request_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST")].isNull() && m_instrument_trade_spot_from_calculated_last_proxied_rest_request_isValid;

    m_instrument_trade_spot_from_calculated_rest_uri_last_request_ts_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_calculated_rest_uri_last_request_ts, json[QString("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS")]);
    m_instrument_trade_spot_from_calculated_rest_uri_last_request_ts_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS")].isNull() && m_instrument_trade_spot_from_calculated_rest_uri_last_request_ts_isValid;

    m_instrument_trade_spot_from_calculated_rest_uri_last_response_ts_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_calculated_rest_uri_last_response_ts, json[QString("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS")]);
    m_instrument_trade_spot_from_calculated_rest_uri_last_response_ts_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS")].isNull() && m_instrument_trade_spot_from_calculated_rest_uri_last_response_ts_isValid;

    m_instrument_trade_spot_from_calculated_rest_uri_next_request_ts_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_calculated_rest_uri_next_request_ts, json[QString("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS")]);
    m_instrument_trade_spot_from_calculated_rest_uri_next_request_ts_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS")].isNull() && m_instrument_trade_spot_from_calculated_rest_uri_next_request_ts_isValid;

    m_instrument_trade_spot_from_fix_last_proxied_rest_request_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_fix_last_proxied_rest_request, json[QString("INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST")]);
    m_instrument_trade_spot_from_fix_last_proxied_rest_request_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST")].isNull() && m_instrument_trade_spot_from_fix_last_proxied_rest_request_isValid;

    m_instrument_trade_spot_from_fix_rest_uri_last_request_ts_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_fix_rest_uri_last_request_ts, json[QString("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS")]);
    m_instrument_trade_spot_from_fix_rest_uri_last_request_ts_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS")].isNull() && m_instrument_trade_spot_from_fix_rest_uri_last_request_ts_isValid;

    m_instrument_trade_spot_from_fix_rest_uri_last_response_ts_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_fix_rest_uri_last_response_ts, json[QString("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS")]);
    m_instrument_trade_spot_from_fix_rest_uri_last_response_ts_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS")].isNull() && m_instrument_trade_spot_from_fix_rest_uri_last_response_ts_isValid;

    m_instrument_trade_spot_from_fix_rest_uri_next_request_ts_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_fix_rest_uri_next_request_ts, json[QString("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS")]);
    m_instrument_trade_spot_from_fix_rest_uri_next_request_ts_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS")].isNull() && m_instrument_trade_spot_from_fix_rest_uri_next_request_ts_isValid;

    m_instrument_trade_spot_from_go_last_proxied_rest_request_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_go_last_proxied_rest_request, json[QString("INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST")]);
    m_instrument_trade_spot_from_go_last_proxied_rest_request_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST")].isNull() && m_instrument_trade_spot_from_go_last_proxied_rest_request_isValid;

    m_instrument_trade_spot_from_go_rest_uri_last_request_ts_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_go_rest_uri_last_request_ts, json[QString("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS")]);
    m_instrument_trade_spot_from_go_rest_uri_last_request_ts_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS")].isNull() && m_instrument_trade_spot_from_go_rest_uri_last_request_ts_isValid;

    m_instrument_trade_spot_from_go_rest_uri_last_response_ts_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_go_rest_uri_last_response_ts, json[QString("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS")]);
    m_instrument_trade_spot_from_go_rest_uri_last_response_ts_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS")].isNull() && m_instrument_trade_spot_from_go_rest_uri_last_response_ts_isValid;

    m_instrument_trade_spot_from_go_rest_uri_next_request_ts_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_go_rest_uri_next_request_ts, json[QString("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS")]);
    m_instrument_trade_spot_from_go_rest_uri_next_request_ts_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS")].isNull() && m_instrument_trade_spot_from_go_rest_uri_next_request_ts_isValid;

    m_instrument_trade_spot_from_polling_last_proxied_rest_request_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_polling_last_proxied_rest_request, json[QString("INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST")]);
    m_instrument_trade_spot_from_polling_last_proxied_rest_request_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST")].isNull() && m_instrument_trade_spot_from_polling_last_proxied_rest_request_isValid;

    m_instrument_trade_spot_from_polling_rest_uri_last_request_ts_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_polling_rest_uri_last_request_ts, json[QString("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS")]);
    m_instrument_trade_spot_from_polling_rest_uri_last_request_ts_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS")].isNull() && m_instrument_trade_spot_from_polling_rest_uri_last_request_ts_isValid;

    m_instrument_trade_spot_from_polling_rest_uri_last_response_ts_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_polling_rest_uri_last_response_ts, json[QString("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS")]);
    m_instrument_trade_spot_from_polling_rest_uri_last_response_ts_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS")].isNull() && m_instrument_trade_spot_from_polling_rest_uri_last_response_ts_isValid;

    m_instrument_trade_spot_from_polling_rest_uri_next_request_ts_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_polling_rest_uri_next_request_ts, json[QString("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS")]);
    m_instrument_trade_spot_from_polling_rest_uri_next_request_ts_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS")].isNull() && m_instrument_trade_spot_from_polling_rest_uri_next_request_ts_isValid;

    m_instrument_trade_spot_from_streaming_last_proxied_rest_request_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_streaming_last_proxied_rest_request, json[QString("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST")]);
    m_instrument_trade_spot_from_streaming_last_proxied_rest_request_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST")].isNull() && m_instrument_trade_spot_from_streaming_last_proxied_rest_request_isValid;

    m_instrument_trade_spot_from_streaming_rest_uri_last_request_ts_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_streaming_rest_uri_last_request_ts, json[QString("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS")]);
    m_instrument_trade_spot_from_streaming_rest_uri_last_request_ts_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS")].isNull() && m_instrument_trade_spot_from_streaming_rest_uri_last_request_ts_isValid;

    m_instrument_trade_spot_from_streaming_rest_uri_last_response_ts_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_streaming_rest_uri_last_response_ts, json[QString("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS")]);
    m_instrument_trade_spot_from_streaming_rest_uri_last_response_ts_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS")].isNull() && m_instrument_trade_spot_from_streaming_rest_uri_last_response_ts_isValid;

    m_instrument_trade_spot_from_streaming_rest_uri_next_request_ts_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_from_streaming_rest_uri_next_request_ts, json[QString("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS")]);
    m_instrument_trade_spot_from_streaming_rest_uri_next_request_ts_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS")].isNull() && m_instrument_trade_spot_from_streaming_rest_uri_next_request_ts_isValid;

    m_instrument_trade_spot_is_ready_for_streaming_integration_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_is_ready_for_streaming_integration, json[QString("INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION")]);
    m_instrument_trade_spot_is_ready_for_streaming_integration_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION")].isNull() && m_instrument_trade_spot_is_ready_for_streaming_integration_isValid;

    m_instrument_trade_spot_rest_uri_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_rest_uri, json[QString("INSTRUMENT_TRADE_SPOT_REST_URI")]);
    m_instrument_trade_spot_rest_uri_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_REST_URI")].isNull() && m_instrument_trade_spot_rest_uri_isValid;

    m_instrument_trade_spot_rest_url_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_rest_url, json[QString("INSTRUMENT_TRADE_SPOT_REST_URL")]);
    m_instrument_trade_spot_rest_url_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_REST_URL")].isNull() && m_instrument_trade_spot_rest_url_isValid;

    m_instrument_trade_spot_streaming_subscription_isValid = ::OpenAPI::fromJsonValue(instrument_trade_spot_streaming_subscription, json[QString("INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION")]);
    m_instrument_trade_spot_streaming_subscription_isSet = !json[QString("INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION")].isNull() && m_instrument_trade_spot_streaming_subscription_isValid;

    m_last_concurrent_batch_of_trades_spot_ms_isValid = ::OpenAPI::fromJsonValue(last_concurrent_batch_of_trades_spot_ms, json[QString("LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS")]);
    m_last_concurrent_batch_of_trades_spot_ms_isSet = !json[QString("LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS")].isNull() && m_last_concurrent_batch_of_trades_spot_ms_isValid;

    m_last_seen_on_blob_ts_isValid = ::OpenAPI::fromJsonValue(last_seen_on_blob_ts, json[QString("LAST_SEEN_ON_BLOB_TS")]);
    m_last_seen_on_blob_ts_isSet = !json[QString("LAST_SEEN_ON_BLOB_TS")].isNull() && m_last_seen_on_blob_ts_isValid;

    m_last_seen_on_fix_ts_isValid = ::OpenAPI::fromJsonValue(last_seen_on_fix_ts, json[QString("LAST_SEEN_ON_FIX_TS")]);
    m_last_seen_on_fix_ts_isSet = !json[QString("LAST_SEEN_ON_FIX_TS")].isNull() && m_last_seen_on_fix_ts_isValid;

    m_last_seen_on_hardcoded_ts_isValid = ::OpenAPI::fromJsonValue(last_seen_on_hardcoded_ts, json[QString("LAST_SEEN_ON_HARDCODED_TS")]);
    m_last_seen_on_hardcoded_ts_isSet = !json[QString("LAST_SEEN_ON_HARDCODED_TS")].isNull() && m_last_seen_on_hardcoded_ts_isValid;

    m_last_seen_on_index_composition_ts_isValid = ::OpenAPI::fromJsonValue(last_seen_on_index_composition_ts, json[QString("LAST_SEEN_ON_INDEX_COMPOSITION_TS")]);
    m_last_seen_on_index_composition_ts_isSet = !json[QString("LAST_SEEN_ON_INDEX_COMPOSITION_TS")].isNull() && m_last_seen_on_index_composition_ts_isValid;

    m_last_seen_on_nsq_ts_isValid = ::OpenAPI::fromJsonValue(last_seen_on_nsq_ts, json[QString("LAST_SEEN_ON_NSQ_TS")]);
    m_last_seen_on_nsq_ts_isSet = !json[QString("LAST_SEEN_ON_NSQ_TS")].isNull() && m_last_seen_on_nsq_ts_isValid;

    m_last_seen_on_polling_ts_isValid = ::OpenAPI::fromJsonValue(last_seen_on_polling_ts, json[QString("LAST_SEEN_ON_POLLING_TS")]);
    m_last_seen_on_polling_ts_isSet = !json[QString("LAST_SEEN_ON_POLLING_TS")].isNull() && m_last_seen_on_polling_ts_isValid;

    m_last_seen_on_streaming_ts_isValid = ::OpenAPI::fromJsonValue(last_seen_on_streaming_ts, json[QString("LAST_SEEN_ON_STREAMING_TS")]);
    m_last_seen_on_streaming_ts_isSet = !json[QString("LAST_SEEN_ON_STREAMING_TS")].isNull() && m_last_seen_on_streaming_ts_isValid;

    m_last_trade_spot_from_backfill_isValid = ::OpenAPI::fromJsonValue(last_trade_spot_from_backfill, json[QString("LAST_TRADE_SPOT_FROM_BACKFILL")]);
    m_last_trade_spot_from_backfill_isSet = !json[QString("LAST_TRADE_SPOT_FROM_BACKFILL")].isNull() && m_last_trade_spot_from_backfill_isValid;

    m_last_trade_spot_from_backfill_external_isValid = ::OpenAPI::fromJsonValue(last_trade_spot_from_backfill_external, json[QString("LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL")]);
    m_last_trade_spot_from_backfill_external_isSet = !json[QString("LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL")].isNull() && m_last_trade_spot_from_backfill_external_isValid;

    m_last_trade_spot_from_blob_isValid = ::OpenAPI::fromJsonValue(last_trade_spot_from_blob, json[QString("LAST_TRADE_SPOT_FROM_BLOB")]);
    m_last_trade_spot_from_blob_isSet = !json[QString("LAST_TRADE_SPOT_FROM_BLOB")].isNull() && m_last_trade_spot_from_blob_isValid;

    m_last_trade_spot_from_blob_external_isValid = ::OpenAPI::fromJsonValue(last_trade_spot_from_blob_external, json[QString("LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL")]);
    m_last_trade_spot_from_blob_external_isSet = !json[QString("LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL")].isNull() && m_last_trade_spot_from_blob_external_isValid;

    m_last_trade_spot_from_calculated_isValid = ::OpenAPI::fromJsonValue(last_trade_spot_from_calculated, json[QString("LAST_TRADE_SPOT_FROM_CALCULATED")]);
    m_last_trade_spot_from_calculated_isSet = !json[QString("LAST_TRADE_SPOT_FROM_CALCULATED")].isNull() && m_last_trade_spot_from_calculated_isValid;

    m_last_trade_spot_from_calculated_external_isValid = ::OpenAPI::fromJsonValue(last_trade_spot_from_calculated_external, json[QString("LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL")]);
    m_last_trade_spot_from_calculated_external_isSet = !json[QString("LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL")].isNull() && m_last_trade_spot_from_calculated_external_isValid;

    m_last_trade_spot_from_fix_isValid = ::OpenAPI::fromJsonValue(last_trade_spot_from_fix, json[QString("LAST_TRADE_SPOT_FROM_FIX")]);
    m_last_trade_spot_from_fix_isSet = !json[QString("LAST_TRADE_SPOT_FROM_FIX")].isNull() && m_last_trade_spot_from_fix_isValid;

    m_last_trade_spot_from_fix_external_isValid = ::OpenAPI::fromJsonValue(last_trade_spot_from_fix_external, json[QString("LAST_TRADE_SPOT_FROM_FIX_EXTERNAL")]);
    m_last_trade_spot_from_fix_external_isSet = !json[QString("LAST_TRADE_SPOT_FROM_FIX_EXTERNAL")].isNull() && m_last_trade_spot_from_fix_external_isValid;

    m_last_trade_spot_from_go_isValid = ::OpenAPI::fromJsonValue(last_trade_spot_from_go, json[QString("LAST_TRADE_SPOT_FROM_GO")]);
    m_last_trade_spot_from_go_isSet = !json[QString("LAST_TRADE_SPOT_FROM_GO")].isNull() && m_last_trade_spot_from_go_isValid;

    m_last_trade_spot_from_go_external_isValid = ::OpenAPI::fromJsonValue(last_trade_spot_from_go_external, json[QString("LAST_TRADE_SPOT_FROM_GO_EXTERNAL")]);
    m_last_trade_spot_from_go_external_isSet = !json[QString("LAST_TRADE_SPOT_FROM_GO_EXTERNAL")].isNull() && m_last_trade_spot_from_go_external_isValid;

    m_last_trade_spot_from_polling_isValid = ::OpenAPI::fromJsonValue(last_trade_spot_from_polling, json[QString("LAST_TRADE_SPOT_FROM_POLLING")]);
    m_last_trade_spot_from_polling_isSet = !json[QString("LAST_TRADE_SPOT_FROM_POLLING")].isNull() && m_last_trade_spot_from_polling_isValid;

    m_last_trade_spot_from_polling_external_isValid = ::OpenAPI::fromJsonValue(last_trade_spot_from_polling_external, json[QString("LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL")]);
    m_last_trade_spot_from_polling_external_isSet = !json[QString("LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL")].isNull() && m_last_trade_spot_from_polling_external_isValid;

    m_last_trade_spot_from_streaming_isValid = ::OpenAPI::fromJsonValue(last_trade_spot_from_streaming, json[QString("LAST_TRADE_SPOT_FROM_STREAMING")]);
    m_last_trade_spot_from_streaming_isSet = !json[QString("LAST_TRADE_SPOT_FROM_STREAMING")].isNull() && m_last_trade_spot_from_streaming_isValid;

    m_last_trade_spot_from_streaming_external_isValid = ::OpenAPI::fromJsonValue(last_trade_spot_from_streaming_external, json[QString("LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL")]);
    m_last_trade_spot_from_streaming_external_isSet = !json[QString("LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL")].isNull() && m_last_trade_spot_from_streaming_external_isValid;

    m_metadata_version_isValid = ::OpenAPI::fromJsonValue(metadata_version, json[QString("METADATA_VERSION")]);
    m_metadata_version_isSet = !json[QString("METADATA_VERSION")].isNull() && m_metadata_version_isValid;

    m_processing_trades_from_blob_status_isValid = ::OpenAPI::fromJsonValue(processing_trades_from_blob_status, json[QString("PROCESSING_TRADES_FROM_BLOB_STATUS")]);
    m_processing_trades_from_blob_status_isSet = !json[QString("PROCESSING_TRADES_FROM_BLOB_STATUS")].isNull() && m_processing_trades_from_blob_status_isValid;

    m_total_trades_spot_isValid = ::OpenAPI::fromJsonValue(total_trades_spot, json[QString("TOTAL_TRADES_SPOT")]);
    m_total_trades_spot_isSet = !json[QString("TOTAL_TRADES_SPOT")].isNull() && m_total_trades_spot_isValid;

    m_unstructured_trade_spot_from_backfill_internal_data_isValid = ::OpenAPI::fromJsonValue(unstructured_trade_spot_from_backfill_internal_data, json[QString("UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA")]);
    m_unstructured_trade_spot_from_backfill_internal_data_isSet = !json[QString("UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA")].isNull() && m_unstructured_trade_spot_from_backfill_internal_data_isValid;

    m_unstructured_trade_spot_from_blob_internal_data_isValid = ::OpenAPI::fromJsonValue(unstructured_trade_spot_from_blob_internal_data, json[QString("UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA")]);
    m_unstructured_trade_spot_from_blob_internal_data_isSet = !json[QString("UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA")].isNull() && m_unstructured_trade_spot_from_blob_internal_data_isValid;

    m_unstructured_trade_spot_from_calculated_internal_data_isValid = ::OpenAPI::fromJsonValue(unstructured_trade_spot_from_calculated_internal_data, json[QString("UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA")]);
    m_unstructured_trade_spot_from_calculated_internal_data_isSet = !json[QString("UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA")].isNull() && m_unstructured_trade_spot_from_calculated_internal_data_isValid;

    m_unstructured_trade_spot_from_fix_internal_data_isValid = ::OpenAPI::fromJsonValue(unstructured_trade_spot_from_fix_internal_data, json[QString("UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA")]);
    m_unstructured_trade_spot_from_fix_internal_data_isSet = !json[QString("UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA")].isNull() && m_unstructured_trade_spot_from_fix_internal_data_isValid;

    m_unstructured_trade_spot_from_go_internal_data_isValid = ::OpenAPI::fromJsonValue(unstructured_trade_spot_from_go_internal_data, json[QString("UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA")]);
    m_unstructured_trade_spot_from_go_internal_data_isSet = !json[QString("UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA")].isNull() && m_unstructured_trade_spot_from_go_internal_data_isValid;

    m_unstructured_trade_spot_from_polling_internal_data_isValid = ::OpenAPI::fromJsonValue(unstructured_trade_spot_from_polling_internal_data, json[QString("UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA")]);
    m_unstructured_trade_spot_from_polling_internal_data_isSet = !json[QString("UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA")].isNull() && m_unstructured_trade_spot_from_polling_internal_data_isValid;

    m_unstructured_trade_spot_from_streaming_internal_data_isValid = ::OpenAPI::fromJsonValue(unstructured_trade_spot_from_streaming_internal_data, json[QString("UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA")]);
    m_unstructured_trade_spot_from_streaming_internal_data_isSet = !json[QString("UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA")].isNull() && m_unstructured_trade_spot_from_streaming_internal_data_isValid;
}

QString OAISPOT_INSTRUMENT_METADATA::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISPOT_INSTRUMENT_METADATA::asJsonObject() const {
    QJsonObject obj;
    if (m_first_seen_on_blob_ts_isSet) {
        obj.insert(QString("FIRST_SEEN_ON_BLOB_TS"), ::OpenAPI::toJsonValue(first_seen_on_blob_ts));
    }
    if (m_first_seen_on_fix_ts_isSet) {
        obj.insert(QString("FIRST_SEEN_ON_FIX_TS"), ::OpenAPI::toJsonValue(first_seen_on_fix_ts));
    }
    if (m_first_seen_on_hardcoded_ts_isSet) {
        obj.insert(QString("FIRST_SEEN_ON_HARDCODED_TS"), ::OpenAPI::toJsonValue(first_seen_on_hardcoded_ts));
    }
    if (m_first_seen_on_index_composition_ts_isSet) {
        obj.insert(QString("FIRST_SEEN_ON_INDEX_COMPOSITION_TS"), ::OpenAPI::toJsonValue(first_seen_on_index_composition_ts));
    }
    if (m_first_seen_on_nsq_ts_isSet) {
        obj.insert(QString("FIRST_SEEN_ON_NSQ_TS"), ::OpenAPI::toJsonValue(first_seen_on_nsq_ts));
    }
    if (m_first_seen_on_polling_ts_isSet) {
        obj.insert(QString("FIRST_SEEN_ON_POLLING_TS"), ::OpenAPI::toJsonValue(first_seen_on_polling_ts));
    }
    if (m_first_seen_on_streaming_ts_isSet) {
        obj.insert(QString("FIRST_SEEN_ON_STREAMING_TS"), ::OpenAPI::toJsonValue(first_seen_on_streaming_ts));
    }
    if (m_first_trade_spot_from_backfill_isSet) {
        obj.insert(QString("FIRST_TRADE_SPOT_FROM_BACKFILL"), ::OpenAPI::toJsonValue(first_trade_spot_from_backfill));
    }
    if (m_first_trade_spot_from_backfill_external_isSet) {
        obj.insert(QString("FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL"), ::OpenAPI::toJsonValue(first_trade_spot_from_backfill_external));
    }
    if (m_first_trade_spot_from_blob_isSet) {
        obj.insert(QString("FIRST_TRADE_SPOT_FROM_BLOB"), ::OpenAPI::toJsonValue(first_trade_spot_from_blob));
    }
    if (m_first_trade_spot_from_blob_external_isSet) {
        obj.insert(QString("FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL"), ::OpenAPI::toJsonValue(first_trade_spot_from_blob_external));
    }
    if (m_first_trade_spot_from_calculated_isSet) {
        obj.insert(QString("FIRST_TRADE_SPOT_FROM_CALCULATED"), ::OpenAPI::toJsonValue(first_trade_spot_from_calculated));
    }
    if (m_first_trade_spot_from_calculated_external_isSet) {
        obj.insert(QString("FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL"), ::OpenAPI::toJsonValue(first_trade_spot_from_calculated_external));
    }
    if (m_first_trade_spot_from_fix_isSet) {
        obj.insert(QString("FIRST_TRADE_SPOT_FROM_FIX"), ::OpenAPI::toJsonValue(first_trade_spot_from_fix));
    }
    if (m_first_trade_spot_from_fix_external_isSet) {
        obj.insert(QString("FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL"), ::OpenAPI::toJsonValue(first_trade_spot_from_fix_external));
    }
    if (m_first_trade_spot_from_go_isSet) {
        obj.insert(QString("FIRST_TRADE_SPOT_FROM_GO"), ::OpenAPI::toJsonValue(first_trade_spot_from_go));
    }
    if (m_first_trade_spot_from_go_external_isSet) {
        obj.insert(QString("FIRST_TRADE_SPOT_FROM_GO_EXTERNAL"), ::OpenAPI::toJsonValue(first_trade_spot_from_go_external));
    }
    if (m_first_trade_spot_from_polling_isSet) {
        obj.insert(QString("FIRST_TRADE_SPOT_FROM_POLLING"), ::OpenAPI::toJsonValue(first_trade_spot_from_polling));
    }
    if (m_first_trade_spot_from_polling_external_isSet) {
        obj.insert(QString("FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL"), ::OpenAPI::toJsonValue(first_trade_spot_from_polling_external));
    }
    if (m_first_trade_spot_from_streaming_isSet) {
        obj.insert(QString("FIRST_TRADE_SPOT_FROM_STREAMING"), ::OpenAPI::toJsonValue(first_trade_spot_from_streaming));
    }
    if (m_first_trade_spot_from_streaming_external_isSet) {
        obj.insert(QString("FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL"), ::OpenAPI::toJsonValue(first_trade_spot_from_streaming_external));
    }
    if (m_host_migration_destination_isSet) {
        obj.insert(QString("HOST_MIGRATION_DESTINATION"), ::OpenAPI::toJsonValue(host_migration_destination));
    }
    if (m_host_migration_source_isSet) {
        obj.insert(QString("HOST_MIGRATION_SOURCE"), ::OpenAPI::toJsonValue(host_migration_source));
    }
    if (m_host_migration_status_isSet) {
        obj.insert(QString("HOST_MIGRATION_STATUS"), ::OpenAPI::toJsonValue(host_migration_status));
    }
    if (m_instrument_isSet) {
        obj.insert(QString("INSTRUMENT"), ::OpenAPI::toJsonValue(instrument));
    }
    if (m_instrument_external_data_isSet) {
        obj.insert(QString("INSTRUMENT_EXTERNAL_DATA"), ::OpenAPI::toJsonValue(instrument_external_data));
    }
    if (m_instrument_mapping_isSet) {
        obj.insert(QString("INSTRUMENT_MAPPING"), ::OpenAPI::toJsonValue(instrument_mapping));
    }
    if (instrument_mapping_history.size() > 0) {
        obj.insert(QString("INSTRUMENT_MAPPING_HISTORY"), ::OpenAPI::toJsonValue(instrument_mapping_history));
    }
    if (m_instrument_source_backfill_isSet) {
        obj.insert(QString("INSTRUMENT_SOURCE_BACKFILL"), ::OpenAPI::toJsonValue(instrument_source_backfill));
    }
    if (m_instrument_source_blob_isSet) {
        obj.insert(QString("INSTRUMENT_SOURCE_BLOB"), ::OpenAPI::toJsonValue(instrument_source_blob));
    }
    if (m_instrument_source_calculated_isSet) {
        obj.insert(QString("INSTRUMENT_SOURCE_CALCULATED"), ::OpenAPI::toJsonValue(instrument_source_calculated));
    }
    if (m_instrument_source_fix_isSet) {
        obj.insert(QString("INSTRUMENT_SOURCE_FIX"), ::OpenAPI::toJsonValue(instrument_source_fix));
    }
    if (m_instrument_source_go_isSet) {
        obj.insert(QString("INSTRUMENT_SOURCE_GO"), ::OpenAPI::toJsonValue(instrument_source_go));
    }
    if (m_instrument_source_polling_isSet) {
        obj.insert(QString("INSTRUMENT_SOURCE_POLLING"), ::OpenAPI::toJsonValue(instrument_source_polling));
    }
    if (m_instrument_source_streaming_isSet) {
        obj.insert(QString("INSTRUMENT_SOURCE_STREAMING"), ::OpenAPI::toJsonValue(instrument_source_streaming));
    }
    if (m_instrument_status_isSet) {
        obj.insert(QString("INSTRUMENT_STATUS"), ::OpenAPI::toJsonValue(instrument_status));
    }
    if (m_instrument_trade_spot_from_backfill_last_proxied_rest_request_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_backfill_last_proxied_rest_request));
    }
    if (m_instrument_trade_spot_from_backfill_rest_uri_last_request_ts_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_backfill_rest_uri_last_request_ts));
    }
    if (m_instrument_trade_spot_from_backfill_rest_uri_last_response_ts_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_backfill_rest_uri_last_response_ts));
    }
    if (m_instrument_trade_spot_from_backfill_rest_uri_next_request_ts_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_backfill_rest_uri_next_request_ts));
    }
    if (m_instrument_trade_spot_from_blob_last_proxied_rest_request_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_blob_last_proxied_rest_request));
    }
    if (m_instrument_trade_spot_from_blob_rest_uri_last_request_ts_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_blob_rest_uri_last_request_ts));
    }
    if (m_instrument_trade_spot_from_blob_rest_uri_last_response_ts_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_blob_rest_uri_last_response_ts));
    }
    if (m_instrument_trade_spot_from_blob_rest_uri_next_request_ts_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_blob_rest_uri_next_request_ts));
    }
    if (m_instrument_trade_spot_from_calculated_last_proxied_rest_request_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_calculated_last_proxied_rest_request));
    }
    if (m_instrument_trade_spot_from_calculated_rest_uri_last_request_ts_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_calculated_rest_uri_last_request_ts));
    }
    if (m_instrument_trade_spot_from_calculated_rest_uri_last_response_ts_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_calculated_rest_uri_last_response_ts));
    }
    if (m_instrument_trade_spot_from_calculated_rest_uri_next_request_ts_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_calculated_rest_uri_next_request_ts));
    }
    if (m_instrument_trade_spot_from_fix_last_proxied_rest_request_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_fix_last_proxied_rest_request));
    }
    if (m_instrument_trade_spot_from_fix_rest_uri_last_request_ts_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_fix_rest_uri_last_request_ts));
    }
    if (m_instrument_trade_spot_from_fix_rest_uri_last_response_ts_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_fix_rest_uri_last_response_ts));
    }
    if (m_instrument_trade_spot_from_fix_rest_uri_next_request_ts_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_fix_rest_uri_next_request_ts));
    }
    if (m_instrument_trade_spot_from_go_last_proxied_rest_request_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_go_last_proxied_rest_request));
    }
    if (m_instrument_trade_spot_from_go_rest_uri_last_request_ts_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_go_rest_uri_last_request_ts));
    }
    if (m_instrument_trade_spot_from_go_rest_uri_last_response_ts_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_go_rest_uri_last_response_ts));
    }
    if (m_instrument_trade_spot_from_go_rest_uri_next_request_ts_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_go_rest_uri_next_request_ts));
    }
    if (m_instrument_trade_spot_from_polling_last_proxied_rest_request_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_polling_last_proxied_rest_request));
    }
    if (m_instrument_trade_spot_from_polling_rest_uri_last_request_ts_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_polling_rest_uri_last_request_ts));
    }
    if (m_instrument_trade_spot_from_polling_rest_uri_last_response_ts_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_polling_rest_uri_last_response_ts));
    }
    if (m_instrument_trade_spot_from_polling_rest_uri_next_request_ts_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_polling_rest_uri_next_request_ts));
    }
    if (m_instrument_trade_spot_from_streaming_last_proxied_rest_request_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_streaming_last_proxied_rest_request));
    }
    if (m_instrument_trade_spot_from_streaming_rest_uri_last_request_ts_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_streaming_rest_uri_last_request_ts));
    }
    if (m_instrument_trade_spot_from_streaming_rest_uri_last_response_ts_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_streaming_rest_uri_last_response_ts));
    }
    if (m_instrument_trade_spot_from_streaming_rest_uri_next_request_ts_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS"), ::OpenAPI::toJsonValue(instrument_trade_spot_from_streaming_rest_uri_next_request_ts));
    }
    if (m_instrument_trade_spot_is_ready_for_streaming_integration_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION"), ::OpenAPI::toJsonValue(instrument_trade_spot_is_ready_for_streaming_integration));
    }
    if (m_instrument_trade_spot_rest_uri_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_REST_URI"), ::OpenAPI::toJsonValue(instrument_trade_spot_rest_uri));
    }
    if (m_instrument_trade_spot_rest_url_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_REST_URL"), ::OpenAPI::toJsonValue(instrument_trade_spot_rest_url));
    }
    if (m_instrument_trade_spot_streaming_subscription_isSet) {
        obj.insert(QString("INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION"), ::OpenAPI::toJsonValue(instrument_trade_spot_streaming_subscription));
    }
    if (m_last_concurrent_batch_of_trades_spot_ms_isSet) {
        obj.insert(QString("LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS"), ::OpenAPI::toJsonValue(last_concurrent_batch_of_trades_spot_ms));
    }
    if (m_last_seen_on_blob_ts_isSet) {
        obj.insert(QString("LAST_SEEN_ON_BLOB_TS"), ::OpenAPI::toJsonValue(last_seen_on_blob_ts));
    }
    if (m_last_seen_on_fix_ts_isSet) {
        obj.insert(QString("LAST_SEEN_ON_FIX_TS"), ::OpenAPI::toJsonValue(last_seen_on_fix_ts));
    }
    if (m_last_seen_on_hardcoded_ts_isSet) {
        obj.insert(QString("LAST_SEEN_ON_HARDCODED_TS"), ::OpenAPI::toJsonValue(last_seen_on_hardcoded_ts));
    }
    if (m_last_seen_on_index_composition_ts_isSet) {
        obj.insert(QString("LAST_SEEN_ON_INDEX_COMPOSITION_TS"), ::OpenAPI::toJsonValue(last_seen_on_index_composition_ts));
    }
    if (m_last_seen_on_nsq_ts_isSet) {
        obj.insert(QString("LAST_SEEN_ON_NSQ_TS"), ::OpenAPI::toJsonValue(last_seen_on_nsq_ts));
    }
    if (m_last_seen_on_polling_ts_isSet) {
        obj.insert(QString("LAST_SEEN_ON_POLLING_TS"), ::OpenAPI::toJsonValue(last_seen_on_polling_ts));
    }
    if (m_last_seen_on_streaming_ts_isSet) {
        obj.insert(QString("LAST_SEEN_ON_STREAMING_TS"), ::OpenAPI::toJsonValue(last_seen_on_streaming_ts));
    }
    if (m_last_trade_spot_from_backfill_isSet) {
        obj.insert(QString("LAST_TRADE_SPOT_FROM_BACKFILL"), ::OpenAPI::toJsonValue(last_trade_spot_from_backfill));
    }
    if (m_last_trade_spot_from_backfill_external_isSet) {
        obj.insert(QString("LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL"), ::OpenAPI::toJsonValue(last_trade_spot_from_backfill_external));
    }
    if (m_last_trade_spot_from_blob_isSet) {
        obj.insert(QString("LAST_TRADE_SPOT_FROM_BLOB"), ::OpenAPI::toJsonValue(last_trade_spot_from_blob));
    }
    if (m_last_trade_spot_from_blob_external_isSet) {
        obj.insert(QString("LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL"), ::OpenAPI::toJsonValue(last_trade_spot_from_blob_external));
    }
    if (m_last_trade_spot_from_calculated_isSet) {
        obj.insert(QString("LAST_TRADE_SPOT_FROM_CALCULATED"), ::OpenAPI::toJsonValue(last_trade_spot_from_calculated));
    }
    if (m_last_trade_spot_from_calculated_external_isSet) {
        obj.insert(QString("LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL"), ::OpenAPI::toJsonValue(last_trade_spot_from_calculated_external));
    }
    if (m_last_trade_spot_from_fix_isSet) {
        obj.insert(QString("LAST_TRADE_SPOT_FROM_FIX"), ::OpenAPI::toJsonValue(last_trade_spot_from_fix));
    }
    if (m_last_trade_spot_from_fix_external_isSet) {
        obj.insert(QString("LAST_TRADE_SPOT_FROM_FIX_EXTERNAL"), ::OpenAPI::toJsonValue(last_trade_spot_from_fix_external));
    }
    if (m_last_trade_spot_from_go_isSet) {
        obj.insert(QString("LAST_TRADE_SPOT_FROM_GO"), ::OpenAPI::toJsonValue(last_trade_spot_from_go));
    }
    if (m_last_trade_spot_from_go_external_isSet) {
        obj.insert(QString("LAST_TRADE_SPOT_FROM_GO_EXTERNAL"), ::OpenAPI::toJsonValue(last_trade_spot_from_go_external));
    }
    if (m_last_trade_spot_from_polling_isSet) {
        obj.insert(QString("LAST_TRADE_SPOT_FROM_POLLING"), ::OpenAPI::toJsonValue(last_trade_spot_from_polling));
    }
    if (m_last_trade_spot_from_polling_external_isSet) {
        obj.insert(QString("LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL"), ::OpenAPI::toJsonValue(last_trade_spot_from_polling_external));
    }
    if (m_last_trade_spot_from_streaming_isSet) {
        obj.insert(QString("LAST_TRADE_SPOT_FROM_STREAMING"), ::OpenAPI::toJsonValue(last_trade_spot_from_streaming));
    }
    if (m_last_trade_spot_from_streaming_external_isSet) {
        obj.insert(QString("LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL"), ::OpenAPI::toJsonValue(last_trade_spot_from_streaming_external));
    }
    if (m_metadata_version_isSet) {
        obj.insert(QString("METADATA_VERSION"), ::OpenAPI::toJsonValue(metadata_version));
    }
    if (m_processing_trades_from_blob_status_isSet) {
        obj.insert(QString("PROCESSING_TRADES_FROM_BLOB_STATUS"), ::OpenAPI::toJsonValue(processing_trades_from_blob_status));
    }
    if (m_total_trades_spot_isSet) {
        obj.insert(QString("TOTAL_TRADES_SPOT"), ::OpenAPI::toJsonValue(total_trades_spot));
    }
    if (m_unstructured_trade_spot_from_backfill_internal_data_isSet) {
        obj.insert(QString("UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA"), ::OpenAPI::toJsonValue(unstructured_trade_spot_from_backfill_internal_data));
    }
    if (m_unstructured_trade_spot_from_blob_internal_data_isSet) {
        obj.insert(QString("UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA"), ::OpenAPI::toJsonValue(unstructured_trade_spot_from_blob_internal_data));
    }
    if (m_unstructured_trade_spot_from_calculated_internal_data_isSet) {
        obj.insert(QString("UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA"), ::OpenAPI::toJsonValue(unstructured_trade_spot_from_calculated_internal_data));
    }
    if (m_unstructured_trade_spot_from_fix_internal_data_isSet) {
        obj.insert(QString("UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA"), ::OpenAPI::toJsonValue(unstructured_trade_spot_from_fix_internal_data));
    }
    if (m_unstructured_trade_spot_from_go_internal_data_isSet) {
        obj.insert(QString("UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA"), ::OpenAPI::toJsonValue(unstructured_trade_spot_from_go_internal_data));
    }
    if (m_unstructured_trade_spot_from_polling_internal_data_isSet) {
        obj.insert(QString("UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA"), ::OpenAPI::toJsonValue(unstructured_trade_spot_from_polling_internal_data));
    }
    if (m_unstructured_trade_spot_from_streaming_internal_data_isSet) {
        obj.insert(QString("UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA"), ::OpenAPI::toJsonValue(unstructured_trade_spot_from_streaming_internal_data));
    }
    return obj;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getFirstSeenOnBlobTs() const {
    return first_seen_on_blob_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setFirstSeenOnBlobTs(const qint32 &first_seen_on_blob_ts) {
    this->first_seen_on_blob_ts = first_seen_on_blob_ts;
    this->m_first_seen_on_blob_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_seen_on_blob_ts_Set() const{
    return m_first_seen_on_blob_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_seen_on_blob_ts_Valid() const{
    return m_first_seen_on_blob_ts_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getFirstSeenOnFixTs() const {
    return first_seen_on_fix_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setFirstSeenOnFixTs(const qint32 &first_seen_on_fix_ts) {
    this->first_seen_on_fix_ts = first_seen_on_fix_ts;
    this->m_first_seen_on_fix_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_seen_on_fix_ts_Set() const{
    return m_first_seen_on_fix_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_seen_on_fix_ts_Valid() const{
    return m_first_seen_on_fix_ts_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getFirstSeenOnHardcodedTs() const {
    return first_seen_on_hardcoded_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setFirstSeenOnHardcodedTs(const qint32 &first_seen_on_hardcoded_ts) {
    this->first_seen_on_hardcoded_ts = first_seen_on_hardcoded_ts;
    this->m_first_seen_on_hardcoded_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_seen_on_hardcoded_ts_Set() const{
    return m_first_seen_on_hardcoded_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_seen_on_hardcoded_ts_Valid() const{
    return m_first_seen_on_hardcoded_ts_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getFirstSeenOnIndexCompositionTs() const {
    return first_seen_on_index_composition_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setFirstSeenOnIndexCompositionTs(const qint32 &first_seen_on_index_composition_ts) {
    this->first_seen_on_index_composition_ts = first_seen_on_index_composition_ts;
    this->m_first_seen_on_index_composition_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_seen_on_index_composition_ts_Set() const{
    return m_first_seen_on_index_composition_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_seen_on_index_composition_ts_Valid() const{
    return m_first_seen_on_index_composition_ts_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getFirstSeenOnNsqTs() const {
    return first_seen_on_nsq_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setFirstSeenOnNsqTs(const qint32 &first_seen_on_nsq_ts) {
    this->first_seen_on_nsq_ts = first_seen_on_nsq_ts;
    this->m_first_seen_on_nsq_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_seen_on_nsq_ts_Set() const{
    return m_first_seen_on_nsq_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_seen_on_nsq_ts_Valid() const{
    return m_first_seen_on_nsq_ts_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getFirstSeenOnPollingTs() const {
    return first_seen_on_polling_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setFirstSeenOnPollingTs(const qint32 &first_seen_on_polling_ts) {
    this->first_seen_on_polling_ts = first_seen_on_polling_ts;
    this->m_first_seen_on_polling_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_seen_on_polling_ts_Set() const{
    return m_first_seen_on_polling_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_seen_on_polling_ts_Valid() const{
    return m_first_seen_on_polling_ts_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getFirstSeenOnStreamingTs() const {
    return first_seen_on_streaming_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setFirstSeenOnStreamingTs(const qint32 &first_seen_on_streaming_ts) {
    this->first_seen_on_streaming_ts = first_seen_on_streaming_ts;
    this->m_first_seen_on_streaming_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_seen_on_streaming_ts_Set() const{
    return m_first_seen_on_streaming_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_seen_on_streaming_ts_Valid() const{
    return m_first_seen_on_streaming_ts_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getFirstTradeSpotFromBackfill() const {
    return first_trade_spot_from_backfill;
}
void OAISPOT_INSTRUMENT_METADATA::setFirstTradeSpotFromBackfill(const OAIObject &first_trade_spot_from_backfill) {
    this->first_trade_spot_from_backfill = first_trade_spot_from_backfill;
    this->m_first_trade_spot_from_backfill_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_backfill_Set() const{
    return m_first_trade_spot_from_backfill_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_backfill_Valid() const{
    return m_first_trade_spot_from_backfill_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getFirstTradeSpotFromBackfillExternal() const {
    return first_trade_spot_from_backfill_external;
}
void OAISPOT_INSTRUMENT_METADATA::setFirstTradeSpotFromBackfillExternal(const OAIObject &first_trade_spot_from_backfill_external) {
    this->first_trade_spot_from_backfill_external = first_trade_spot_from_backfill_external;
    this->m_first_trade_spot_from_backfill_external_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_backfill_external_Set() const{
    return m_first_trade_spot_from_backfill_external_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_backfill_external_Valid() const{
    return m_first_trade_spot_from_backfill_external_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getFirstTradeSpotFromBlob() const {
    return first_trade_spot_from_blob;
}
void OAISPOT_INSTRUMENT_METADATA::setFirstTradeSpotFromBlob(const OAIObject &first_trade_spot_from_blob) {
    this->first_trade_spot_from_blob = first_trade_spot_from_blob;
    this->m_first_trade_spot_from_blob_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_blob_Set() const{
    return m_first_trade_spot_from_blob_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_blob_Valid() const{
    return m_first_trade_spot_from_blob_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getFirstTradeSpotFromBlobExternal() const {
    return first_trade_spot_from_blob_external;
}
void OAISPOT_INSTRUMENT_METADATA::setFirstTradeSpotFromBlobExternal(const OAIObject &first_trade_spot_from_blob_external) {
    this->first_trade_spot_from_blob_external = first_trade_spot_from_blob_external;
    this->m_first_trade_spot_from_blob_external_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_blob_external_Set() const{
    return m_first_trade_spot_from_blob_external_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_blob_external_Valid() const{
    return m_first_trade_spot_from_blob_external_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getFirstTradeSpotFromCalculated() const {
    return first_trade_spot_from_calculated;
}
void OAISPOT_INSTRUMENT_METADATA::setFirstTradeSpotFromCalculated(const OAIObject &first_trade_spot_from_calculated) {
    this->first_trade_spot_from_calculated = first_trade_spot_from_calculated;
    this->m_first_trade_spot_from_calculated_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_calculated_Set() const{
    return m_first_trade_spot_from_calculated_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_calculated_Valid() const{
    return m_first_trade_spot_from_calculated_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getFirstTradeSpotFromCalculatedExternal() const {
    return first_trade_spot_from_calculated_external;
}
void OAISPOT_INSTRUMENT_METADATA::setFirstTradeSpotFromCalculatedExternal(const OAIObject &first_trade_spot_from_calculated_external) {
    this->first_trade_spot_from_calculated_external = first_trade_spot_from_calculated_external;
    this->m_first_trade_spot_from_calculated_external_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_calculated_external_Set() const{
    return m_first_trade_spot_from_calculated_external_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_calculated_external_Valid() const{
    return m_first_trade_spot_from_calculated_external_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getFirstTradeSpotFromFix() const {
    return first_trade_spot_from_fix;
}
void OAISPOT_INSTRUMENT_METADATA::setFirstTradeSpotFromFix(const OAIObject &first_trade_spot_from_fix) {
    this->first_trade_spot_from_fix = first_trade_spot_from_fix;
    this->m_first_trade_spot_from_fix_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_fix_Set() const{
    return m_first_trade_spot_from_fix_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_fix_Valid() const{
    return m_first_trade_spot_from_fix_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getFirstTradeSpotFromFixExternal() const {
    return first_trade_spot_from_fix_external;
}
void OAISPOT_INSTRUMENT_METADATA::setFirstTradeSpotFromFixExternal(const OAIObject &first_trade_spot_from_fix_external) {
    this->first_trade_spot_from_fix_external = first_trade_spot_from_fix_external;
    this->m_first_trade_spot_from_fix_external_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_fix_external_Set() const{
    return m_first_trade_spot_from_fix_external_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_fix_external_Valid() const{
    return m_first_trade_spot_from_fix_external_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getFirstTradeSpotFromGo() const {
    return first_trade_spot_from_go;
}
void OAISPOT_INSTRUMENT_METADATA::setFirstTradeSpotFromGo(const OAIObject &first_trade_spot_from_go) {
    this->first_trade_spot_from_go = first_trade_spot_from_go;
    this->m_first_trade_spot_from_go_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_go_Set() const{
    return m_first_trade_spot_from_go_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_go_Valid() const{
    return m_first_trade_spot_from_go_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getFirstTradeSpotFromGoExternal() const {
    return first_trade_spot_from_go_external;
}
void OAISPOT_INSTRUMENT_METADATA::setFirstTradeSpotFromGoExternal(const OAIObject &first_trade_spot_from_go_external) {
    this->first_trade_spot_from_go_external = first_trade_spot_from_go_external;
    this->m_first_trade_spot_from_go_external_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_go_external_Set() const{
    return m_first_trade_spot_from_go_external_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_go_external_Valid() const{
    return m_first_trade_spot_from_go_external_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getFirstTradeSpotFromPolling() const {
    return first_trade_spot_from_polling;
}
void OAISPOT_INSTRUMENT_METADATA::setFirstTradeSpotFromPolling(const OAIObject &first_trade_spot_from_polling) {
    this->first_trade_spot_from_polling = first_trade_spot_from_polling;
    this->m_first_trade_spot_from_polling_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_polling_Set() const{
    return m_first_trade_spot_from_polling_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_polling_Valid() const{
    return m_first_trade_spot_from_polling_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getFirstTradeSpotFromPollingExternal() const {
    return first_trade_spot_from_polling_external;
}
void OAISPOT_INSTRUMENT_METADATA::setFirstTradeSpotFromPollingExternal(const OAIObject &first_trade_spot_from_polling_external) {
    this->first_trade_spot_from_polling_external = first_trade_spot_from_polling_external;
    this->m_first_trade_spot_from_polling_external_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_polling_external_Set() const{
    return m_first_trade_spot_from_polling_external_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_polling_external_Valid() const{
    return m_first_trade_spot_from_polling_external_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getFirstTradeSpotFromStreaming() const {
    return first_trade_spot_from_streaming;
}
void OAISPOT_INSTRUMENT_METADATA::setFirstTradeSpotFromStreaming(const OAIObject &first_trade_spot_from_streaming) {
    this->first_trade_spot_from_streaming = first_trade_spot_from_streaming;
    this->m_first_trade_spot_from_streaming_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_streaming_Set() const{
    return m_first_trade_spot_from_streaming_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_streaming_Valid() const{
    return m_first_trade_spot_from_streaming_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getFirstTradeSpotFromStreamingExternal() const {
    return first_trade_spot_from_streaming_external;
}
void OAISPOT_INSTRUMENT_METADATA::setFirstTradeSpotFromStreamingExternal(const OAIObject &first_trade_spot_from_streaming_external) {
    this->first_trade_spot_from_streaming_external = first_trade_spot_from_streaming_external;
    this->m_first_trade_spot_from_streaming_external_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_streaming_external_Set() const{
    return m_first_trade_spot_from_streaming_external_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_first_trade_spot_from_streaming_external_Valid() const{
    return m_first_trade_spot_from_streaming_external_isValid;
}

QString OAISPOT_INSTRUMENT_METADATA::getHostMigrationDestination() const {
    return host_migration_destination;
}
void OAISPOT_INSTRUMENT_METADATA::setHostMigrationDestination(const QString &host_migration_destination) {
    this->host_migration_destination = host_migration_destination;
    this->m_host_migration_destination_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_host_migration_destination_Set() const{
    return m_host_migration_destination_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_host_migration_destination_Valid() const{
    return m_host_migration_destination_isValid;
}

QString OAISPOT_INSTRUMENT_METADATA::getHostMigrationSource() const {
    return host_migration_source;
}
void OAISPOT_INSTRUMENT_METADATA::setHostMigrationSource(const QString &host_migration_source) {
    this->host_migration_source = host_migration_source;
    this->m_host_migration_source_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_host_migration_source_Set() const{
    return m_host_migration_source_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_host_migration_source_Valid() const{
    return m_host_migration_source_isValid;
}

QString OAISPOT_INSTRUMENT_METADATA::getHostMigrationStatus() const {
    return host_migration_status;
}
void OAISPOT_INSTRUMENT_METADATA::setHostMigrationStatus(const QString &host_migration_status) {
    this->host_migration_status = host_migration_status;
    this->m_host_migration_status_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_host_migration_status_Set() const{
    return m_host_migration_status_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_host_migration_status_Valid() const{
    return m_host_migration_status_isValid;
}

QString OAISPOT_INSTRUMENT_METADATA::getInstrument() const {
    return instrument;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrument(const QString &instrument) {
    this->instrument = instrument;
    this->m_instrument_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_Set() const{
    return m_instrument_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_Valid() const{
    return m_instrument_isValid;
}

QString OAISPOT_INSTRUMENT_METADATA::getInstrumentExternalData() const {
    return instrument_external_data;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentExternalData(const QString &instrument_external_data) {
    this->instrument_external_data = instrument_external_data;
    this->m_instrument_external_data_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_external_data_Set() const{
    return m_instrument_external_data_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_external_data_Valid() const{
    return m_instrument_external_data_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getInstrumentMapping() const {
    return instrument_mapping;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentMapping(const OAIObject &instrument_mapping) {
    this->instrument_mapping = instrument_mapping;
    this->m_instrument_mapping_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_mapping_Set() const{
    return m_instrument_mapping_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_mapping_Valid() const{
    return m_instrument_mapping_isValid;
}

QList<QString> OAISPOT_INSTRUMENT_METADATA::getInstrumentMappingHistory() const {
    return instrument_mapping_history;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentMappingHistory(const QList<QString> &instrument_mapping_history) {
    this->instrument_mapping_history = instrument_mapping_history;
    this->m_instrument_mapping_history_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_mapping_history_Set() const{
    return m_instrument_mapping_history_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_mapping_history_Valid() const{
    return m_instrument_mapping_history_isValid;
}

QString OAISPOT_INSTRUMENT_METADATA::getInstrumentSourceBackfill() const {
    return instrument_source_backfill;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentSourceBackfill(const QString &instrument_source_backfill) {
    this->instrument_source_backfill = instrument_source_backfill;
    this->m_instrument_source_backfill_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_source_backfill_Set() const{
    return m_instrument_source_backfill_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_source_backfill_Valid() const{
    return m_instrument_source_backfill_isValid;
}

QString OAISPOT_INSTRUMENT_METADATA::getInstrumentSourceBlob() const {
    return instrument_source_blob;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentSourceBlob(const QString &instrument_source_blob) {
    this->instrument_source_blob = instrument_source_blob;
    this->m_instrument_source_blob_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_source_blob_Set() const{
    return m_instrument_source_blob_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_source_blob_Valid() const{
    return m_instrument_source_blob_isValid;
}

QString OAISPOT_INSTRUMENT_METADATA::getInstrumentSourceCalculated() const {
    return instrument_source_calculated;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentSourceCalculated(const QString &instrument_source_calculated) {
    this->instrument_source_calculated = instrument_source_calculated;
    this->m_instrument_source_calculated_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_source_calculated_Set() const{
    return m_instrument_source_calculated_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_source_calculated_Valid() const{
    return m_instrument_source_calculated_isValid;
}

QString OAISPOT_INSTRUMENT_METADATA::getInstrumentSourceFix() const {
    return instrument_source_fix;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentSourceFix(const QString &instrument_source_fix) {
    this->instrument_source_fix = instrument_source_fix;
    this->m_instrument_source_fix_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_source_fix_Set() const{
    return m_instrument_source_fix_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_source_fix_Valid() const{
    return m_instrument_source_fix_isValid;
}

QString OAISPOT_INSTRUMENT_METADATA::getInstrumentSourceGo() const {
    return instrument_source_go;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentSourceGo(const QString &instrument_source_go) {
    this->instrument_source_go = instrument_source_go;
    this->m_instrument_source_go_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_source_go_Set() const{
    return m_instrument_source_go_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_source_go_Valid() const{
    return m_instrument_source_go_isValid;
}

QString OAISPOT_INSTRUMENT_METADATA::getInstrumentSourcePolling() const {
    return instrument_source_polling;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentSourcePolling(const QString &instrument_source_polling) {
    this->instrument_source_polling = instrument_source_polling;
    this->m_instrument_source_polling_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_source_polling_Set() const{
    return m_instrument_source_polling_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_source_polling_Valid() const{
    return m_instrument_source_polling_isValid;
}

QString OAISPOT_INSTRUMENT_METADATA::getInstrumentSourceStreaming() const {
    return instrument_source_streaming;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentSourceStreaming(const QString &instrument_source_streaming) {
    this->instrument_source_streaming = instrument_source_streaming;
    this->m_instrument_source_streaming_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_source_streaming_Set() const{
    return m_instrument_source_streaming_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_source_streaming_Valid() const{
    return m_instrument_source_streaming_isValid;
}

QString OAISPOT_INSTRUMENT_METADATA::getInstrumentStatus() const {
    return instrument_status;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentStatus(const QString &instrument_status) {
    this->instrument_status = instrument_status;
    this->m_instrument_status_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_status_Set() const{
    return m_instrument_status_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_status_Valid() const{
    return m_instrument_status_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromBackfillLastProxiedRestRequest() const {
    return instrument_trade_spot_from_backfill_last_proxied_rest_request;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromBackfillLastProxiedRestRequest(const OAIObject &instrument_trade_spot_from_backfill_last_proxied_rest_request) {
    this->instrument_trade_spot_from_backfill_last_proxied_rest_request = instrument_trade_spot_from_backfill_last_proxied_rest_request;
    this->m_instrument_trade_spot_from_backfill_last_proxied_rest_request_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_backfill_last_proxied_rest_request_Set() const{
    return m_instrument_trade_spot_from_backfill_last_proxied_rest_request_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_backfill_last_proxied_rest_request_Valid() const{
    return m_instrument_trade_spot_from_backfill_last_proxied_rest_request_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromBackfillRestUriLastRequestTs() const {
    return instrument_trade_spot_from_backfill_rest_uri_last_request_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromBackfillRestUriLastRequestTs(const qint32 &instrument_trade_spot_from_backfill_rest_uri_last_request_ts) {
    this->instrument_trade_spot_from_backfill_rest_uri_last_request_ts = instrument_trade_spot_from_backfill_rest_uri_last_request_ts;
    this->m_instrument_trade_spot_from_backfill_rest_uri_last_request_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_backfill_rest_uri_last_request_ts_Set() const{
    return m_instrument_trade_spot_from_backfill_rest_uri_last_request_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_backfill_rest_uri_last_request_ts_Valid() const{
    return m_instrument_trade_spot_from_backfill_rest_uri_last_request_ts_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromBackfillRestUriLastResponseTs() const {
    return instrument_trade_spot_from_backfill_rest_uri_last_response_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromBackfillRestUriLastResponseTs(const qint32 &instrument_trade_spot_from_backfill_rest_uri_last_response_ts) {
    this->instrument_trade_spot_from_backfill_rest_uri_last_response_ts = instrument_trade_spot_from_backfill_rest_uri_last_response_ts;
    this->m_instrument_trade_spot_from_backfill_rest_uri_last_response_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_backfill_rest_uri_last_response_ts_Set() const{
    return m_instrument_trade_spot_from_backfill_rest_uri_last_response_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_backfill_rest_uri_last_response_ts_Valid() const{
    return m_instrument_trade_spot_from_backfill_rest_uri_last_response_ts_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromBackfillRestUriNextRequestTs() const {
    return instrument_trade_spot_from_backfill_rest_uri_next_request_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromBackfillRestUriNextRequestTs(const qint32 &instrument_trade_spot_from_backfill_rest_uri_next_request_ts) {
    this->instrument_trade_spot_from_backfill_rest_uri_next_request_ts = instrument_trade_spot_from_backfill_rest_uri_next_request_ts;
    this->m_instrument_trade_spot_from_backfill_rest_uri_next_request_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_backfill_rest_uri_next_request_ts_Set() const{
    return m_instrument_trade_spot_from_backfill_rest_uri_next_request_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_backfill_rest_uri_next_request_ts_Valid() const{
    return m_instrument_trade_spot_from_backfill_rest_uri_next_request_ts_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromBlobLastProxiedRestRequest() const {
    return instrument_trade_spot_from_blob_last_proxied_rest_request;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromBlobLastProxiedRestRequest(const OAIObject &instrument_trade_spot_from_blob_last_proxied_rest_request) {
    this->instrument_trade_spot_from_blob_last_proxied_rest_request = instrument_trade_spot_from_blob_last_proxied_rest_request;
    this->m_instrument_trade_spot_from_blob_last_proxied_rest_request_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_blob_last_proxied_rest_request_Set() const{
    return m_instrument_trade_spot_from_blob_last_proxied_rest_request_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_blob_last_proxied_rest_request_Valid() const{
    return m_instrument_trade_spot_from_blob_last_proxied_rest_request_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromBlobRestUriLastRequestTs() const {
    return instrument_trade_spot_from_blob_rest_uri_last_request_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromBlobRestUriLastRequestTs(const qint32 &instrument_trade_spot_from_blob_rest_uri_last_request_ts) {
    this->instrument_trade_spot_from_blob_rest_uri_last_request_ts = instrument_trade_spot_from_blob_rest_uri_last_request_ts;
    this->m_instrument_trade_spot_from_blob_rest_uri_last_request_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_blob_rest_uri_last_request_ts_Set() const{
    return m_instrument_trade_spot_from_blob_rest_uri_last_request_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_blob_rest_uri_last_request_ts_Valid() const{
    return m_instrument_trade_spot_from_blob_rest_uri_last_request_ts_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromBlobRestUriLastResponseTs() const {
    return instrument_trade_spot_from_blob_rest_uri_last_response_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromBlobRestUriLastResponseTs(const qint32 &instrument_trade_spot_from_blob_rest_uri_last_response_ts) {
    this->instrument_trade_spot_from_blob_rest_uri_last_response_ts = instrument_trade_spot_from_blob_rest_uri_last_response_ts;
    this->m_instrument_trade_spot_from_blob_rest_uri_last_response_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_blob_rest_uri_last_response_ts_Set() const{
    return m_instrument_trade_spot_from_blob_rest_uri_last_response_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_blob_rest_uri_last_response_ts_Valid() const{
    return m_instrument_trade_spot_from_blob_rest_uri_last_response_ts_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromBlobRestUriNextRequestTs() const {
    return instrument_trade_spot_from_blob_rest_uri_next_request_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromBlobRestUriNextRequestTs(const qint32 &instrument_trade_spot_from_blob_rest_uri_next_request_ts) {
    this->instrument_trade_spot_from_blob_rest_uri_next_request_ts = instrument_trade_spot_from_blob_rest_uri_next_request_ts;
    this->m_instrument_trade_spot_from_blob_rest_uri_next_request_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_blob_rest_uri_next_request_ts_Set() const{
    return m_instrument_trade_spot_from_blob_rest_uri_next_request_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_blob_rest_uri_next_request_ts_Valid() const{
    return m_instrument_trade_spot_from_blob_rest_uri_next_request_ts_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromCalculatedLastProxiedRestRequest() const {
    return instrument_trade_spot_from_calculated_last_proxied_rest_request;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromCalculatedLastProxiedRestRequest(const OAIObject &instrument_trade_spot_from_calculated_last_proxied_rest_request) {
    this->instrument_trade_spot_from_calculated_last_proxied_rest_request = instrument_trade_spot_from_calculated_last_proxied_rest_request;
    this->m_instrument_trade_spot_from_calculated_last_proxied_rest_request_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_calculated_last_proxied_rest_request_Set() const{
    return m_instrument_trade_spot_from_calculated_last_proxied_rest_request_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_calculated_last_proxied_rest_request_Valid() const{
    return m_instrument_trade_spot_from_calculated_last_proxied_rest_request_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromCalculatedRestUriLastRequestTs() const {
    return instrument_trade_spot_from_calculated_rest_uri_last_request_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromCalculatedRestUriLastRequestTs(const qint32 &instrument_trade_spot_from_calculated_rest_uri_last_request_ts) {
    this->instrument_trade_spot_from_calculated_rest_uri_last_request_ts = instrument_trade_spot_from_calculated_rest_uri_last_request_ts;
    this->m_instrument_trade_spot_from_calculated_rest_uri_last_request_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_calculated_rest_uri_last_request_ts_Set() const{
    return m_instrument_trade_spot_from_calculated_rest_uri_last_request_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_calculated_rest_uri_last_request_ts_Valid() const{
    return m_instrument_trade_spot_from_calculated_rest_uri_last_request_ts_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromCalculatedRestUriLastResponseTs() const {
    return instrument_trade_spot_from_calculated_rest_uri_last_response_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromCalculatedRestUriLastResponseTs(const qint32 &instrument_trade_spot_from_calculated_rest_uri_last_response_ts) {
    this->instrument_trade_spot_from_calculated_rest_uri_last_response_ts = instrument_trade_spot_from_calculated_rest_uri_last_response_ts;
    this->m_instrument_trade_spot_from_calculated_rest_uri_last_response_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_calculated_rest_uri_last_response_ts_Set() const{
    return m_instrument_trade_spot_from_calculated_rest_uri_last_response_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_calculated_rest_uri_last_response_ts_Valid() const{
    return m_instrument_trade_spot_from_calculated_rest_uri_last_response_ts_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromCalculatedRestUriNextRequestTs() const {
    return instrument_trade_spot_from_calculated_rest_uri_next_request_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromCalculatedRestUriNextRequestTs(const qint32 &instrument_trade_spot_from_calculated_rest_uri_next_request_ts) {
    this->instrument_trade_spot_from_calculated_rest_uri_next_request_ts = instrument_trade_spot_from_calculated_rest_uri_next_request_ts;
    this->m_instrument_trade_spot_from_calculated_rest_uri_next_request_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_calculated_rest_uri_next_request_ts_Set() const{
    return m_instrument_trade_spot_from_calculated_rest_uri_next_request_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_calculated_rest_uri_next_request_ts_Valid() const{
    return m_instrument_trade_spot_from_calculated_rest_uri_next_request_ts_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromFixLastProxiedRestRequest() const {
    return instrument_trade_spot_from_fix_last_proxied_rest_request;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromFixLastProxiedRestRequest(const OAIObject &instrument_trade_spot_from_fix_last_proxied_rest_request) {
    this->instrument_trade_spot_from_fix_last_proxied_rest_request = instrument_trade_spot_from_fix_last_proxied_rest_request;
    this->m_instrument_trade_spot_from_fix_last_proxied_rest_request_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_fix_last_proxied_rest_request_Set() const{
    return m_instrument_trade_spot_from_fix_last_proxied_rest_request_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_fix_last_proxied_rest_request_Valid() const{
    return m_instrument_trade_spot_from_fix_last_proxied_rest_request_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromFixRestUriLastRequestTs() const {
    return instrument_trade_spot_from_fix_rest_uri_last_request_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromFixRestUriLastRequestTs(const qint32 &instrument_trade_spot_from_fix_rest_uri_last_request_ts) {
    this->instrument_trade_spot_from_fix_rest_uri_last_request_ts = instrument_trade_spot_from_fix_rest_uri_last_request_ts;
    this->m_instrument_trade_spot_from_fix_rest_uri_last_request_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_fix_rest_uri_last_request_ts_Set() const{
    return m_instrument_trade_spot_from_fix_rest_uri_last_request_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_fix_rest_uri_last_request_ts_Valid() const{
    return m_instrument_trade_spot_from_fix_rest_uri_last_request_ts_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromFixRestUriLastResponseTs() const {
    return instrument_trade_spot_from_fix_rest_uri_last_response_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromFixRestUriLastResponseTs(const qint32 &instrument_trade_spot_from_fix_rest_uri_last_response_ts) {
    this->instrument_trade_spot_from_fix_rest_uri_last_response_ts = instrument_trade_spot_from_fix_rest_uri_last_response_ts;
    this->m_instrument_trade_spot_from_fix_rest_uri_last_response_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_fix_rest_uri_last_response_ts_Set() const{
    return m_instrument_trade_spot_from_fix_rest_uri_last_response_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_fix_rest_uri_last_response_ts_Valid() const{
    return m_instrument_trade_spot_from_fix_rest_uri_last_response_ts_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromFixRestUriNextRequestTs() const {
    return instrument_trade_spot_from_fix_rest_uri_next_request_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromFixRestUriNextRequestTs(const qint32 &instrument_trade_spot_from_fix_rest_uri_next_request_ts) {
    this->instrument_trade_spot_from_fix_rest_uri_next_request_ts = instrument_trade_spot_from_fix_rest_uri_next_request_ts;
    this->m_instrument_trade_spot_from_fix_rest_uri_next_request_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_fix_rest_uri_next_request_ts_Set() const{
    return m_instrument_trade_spot_from_fix_rest_uri_next_request_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_fix_rest_uri_next_request_ts_Valid() const{
    return m_instrument_trade_spot_from_fix_rest_uri_next_request_ts_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromGoLastProxiedRestRequest() const {
    return instrument_trade_spot_from_go_last_proxied_rest_request;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromGoLastProxiedRestRequest(const OAIObject &instrument_trade_spot_from_go_last_proxied_rest_request) {
    this->instrument_trade_spot_from_go_last_proxied_rest_request = instrument_trade_spot_from_go_last_proxied_rest_request;
    this->m_instrument_trade_spot_from_go_last_proxied_rest_request_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_go_last_proxied_rest_request_Set() const{
    return m_instrument_trade_spot_from_go_last_proxied_rest_request_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_go_last_proxied_rest_request_Valid() const{
    return m_instrument_trade_spot_from_go_last_proxied_rest_request_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromGoRestUriLastRequestTs() const {
    return instrument_trade_spot_from_go_rest_uri_last_request_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromGoRestUriLastRequestTs(const qint32 &instrument_trade_spot_from_go_rest_uri_last_request_ts) {
    this->instrument_trade_spot_from_go_rest_uri_last_request_ts = instrument_trade_spot_from_go_rest_uri_last_request_ts;
    this->m_instrument_trade_spot_from_go_rest_uri_last_request_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_go_rest_uri_last_request_ts_Set() const{
    return m_instrument_trade_spot_from_go_rest_uri_last_request_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_go_rest_uri_last_request_ts_Valid() const{
    return m_instrument_trade_spot_from_go_rest_uri_last_request_ts_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromGoRestUriLastResponseTs() const {
    return instrument_trade_spot_from_go_rest_uri_last_response_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromGoRestUriLastResponseTs(const qint32 &instrument_trade_spot_from_go_rest_uri_last_response_ts) {
    this->instrument_trade_spot_from_go_rest_uri_last_response_ts = instrument_trade_spot_from_go_rest_uri_last_response_ts;
    this->m_instrument_trade_spot_from_go_rest_uri_last_response_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_go_rest_uri_last_response_ts_Set() const{
    return m_instrument_trade_spot_from_go_rest_uri_last_response_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_go_rest_uri_last_response_ts_Valid() const{
    return m_instrument_trade_spot_from_go_rest_uri_last_response_ts_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromGoRestUriNextRequestTs() const {
    return instrument_trade_spot_from_go_rest_uri_next_request_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromGoRestUriNextRequestTs(const qint32 &instrument_trade_spot_from_go_rest_uri_next_request_ts) {
    this->instrument_trade_spot_from_go_rest_uri_next_request_ts = instrument_trade_spot_from_go_rest_uri_next_request_ts;
    this->m_instrument_trade_spot_from_go_rest_uri_next_request_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_go_rest_uri_next_request_ts_Set() const{
    return m_instrument_trade_spot_from_go_rest_uri_next_request_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_go_rest_uri_next_request_ts_Valid() const{
    return m_instrument_trade_spot_from_go_rest_uri_next_request_ts_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromPollingLastProxiedRestRequest() const {
    return instrument_trade_spot_from_polling_last_proxied_rest_request;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromPollingLastProxiedRestRequest(const OAIObject &instrument_trade_spot_from_polling_last_proxied_rest_request) {
    this->instrument_trade_spot_from_polling_last_proxied_rest_request = instrument_trade_spot_from_polling_last_proxied_rest_request;
    this->m_instrument_trade_spot_from_polling_last_proxied_rest_request_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_polling_last_proxied_rest_request_Set() const{
    return m_instrument_trade_spot_from_polling_last_proxied_rest_request_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_polling_last_proxied_rest_request_Valid() const{
    return m_instrument_trade_spot_from_polling_last_proxied_rest_request_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromPollingRestUriLastRequestTs() const {
    return instrument_trade_spot_from_polling_rest_uri_last_request_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromPollingRestUriLastRequestTs(const qint32 &instrument_trade_spot_from_polling_rest_uri_last_request_ts) {
    this->instrument_trade_spot_from_polling_rest_uri_last_request_ts = instrument_trade_spot_from_polling_rest_uri_last_request_ts;
    this->m_instrument_trade_spot_from_polling_rest_uri_last_request_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_polling_rest_uri_last_request_ts_Set() const{
    return m_instrument_trade_spot_from_polling_rest_uri_last_request_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_polling_rest_uri_last_request_ts_Valid() const{
    return m_instrument_trade_spot_from_polling_rest_uri_last_request_ts_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromPollingRestUriLastResponseTs() const {
    return instrument_trade_spot_from_polling_rest_uri_last_response_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromPollingRestUriLastResponseTs(const qint32 &instrument_trade_spot_from_polling_rest_uri_last_response_ts) {
    this->instrument_trade_spot_from_polling_rest_uri_last_response_ts = instrument_trade_spot_from_polling_rest_uri_last_response_ts;
    this->m_instrument_trade_spot_from_polling_rest_uri_last_response_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_polling_rest_uri_last_response_ts_Set() const{
    return m_instrument_trade_spot_from_polling_rest_uri_last_response_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_polling_rest_uri_last_response_ts_Valid() const{
    return m_instrument_trade_spot_from_polling_rest_uri_last_response_ts_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromPollingRestUriNextRequestTs() const {
    return instrument_trade_spot_from_polling_rest_uri_next_request_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromPollingRestUriNextRequestTs(const qint32 &instrument_trade_spot_from_polling_rest_uri_next_request_ts) {
    this->instrument_trade_spot_from_polling_rest_uri_next_request_ts = instrument_trade_spot_from_polling_rest_uri_next_request_ts;
    this->m_instrument_trade_spot_from_polling_rest_uri_next_request_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_polling_rest_uri_next_request_ts_Set() const{
    return m_instrument_trade_spot_from_polling_rest_uri_next_request_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_polling_rest_uri_next_request_ts_Valid() const{
    return m_instrument_trade_spot_from_polling_rest_uri_next_request_ts_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromStreamingLastProxiedRestRequest() const {
    return instrument_trade_spot_from_streaming_last_proxied_rest_request;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromStreamingLastProxiedRestRequest(const OAIObject &instrument_trade_spot_from_streaming_last_proxied_rest_request) {
    this->instrument_trade_spot_from_streaming_last_proxied_rest_request = instrument_trade_spot_from_streaming_last_proxied_rest_request;
    this->m_instrument_trade_spot_from_streaming_last_proxied_rest_request_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_streaming_last_proxied_rest_request_Set() const{
    return m_instrument_trade_spot_from_streaming_last_proxied_rest_request_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_streaming_last_proxied_rest_request_Valid() const{
    return m_instrument_trade_spot_from_streaming_last_proxied_rest_request_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromStreamingRestUriLastRequestTs() const {
    return instrument_trade_spot_from_streaming_rest_uri_last_request_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromStreamingRestUriLastRequestTs(const qint32 &instrument_trade_spot_from_streaming_rest_uri_last_request_ts) {
    this->instrument_trade_spot_from_streaming_rest_uri_last_request_ts = instrument_trade_spot_from_streaming_rest_uri_last_request_ts;
    this->m_instrument_trade_spot_from_streaming_rest_uri_last_request_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_streaming_rest_uri_last_request_ts_Set() const{
    return m_instrument_trade_spot_from_streaming_rest_uri_last_request_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_streaming_rest_uri_last_request_ts_Valid() const{
    return m_instrument_trade_spot_from_streaming_rest_uri_last_request_ts_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromStreamingRestUriLastResponseTs() const {
    return instrument_trade_spot_from_streaming_rest_uri_last_response_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromStreamingRestUriLastResponseTs(const qint32 &instrument_trade_spot_from_streaming_rest_uri_last_response_ts) {
    this->instrument_trade_spot_from_streaming_rest_uri_last_response_ts = instrument_trade_spot_from_streaming_rest_uri_last_response_ts;
    this->m_instrument_trade_spot_from_streaming_rest_uri_last_response_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_streaming_rest_uri_last_response_ts_Set() const{
    return m_instrument_trade_spot_from_streaming_rest_uri_last_response_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_streaming_rest_uri_last_response_ts_Valid() const{
    return m_instrument_trade_spot_from_streaming_rest_uri_last_response_ts_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotFromStreamingRestUriNextRequestTs() const {
    return instrument_trade_spot_from_streaming_rest_uri_next_request_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotFromStreamingRestUriNextRequestTs(const qint32 &instrument_trade_spot_from_streaming_rest_uri_next_request_ts) {
    this->instrument_trade_spot_from_streaming_rest_uri_next_request_ts = instrument_trade_spot_from_streaming_rest_uri_next_request_ts;
    this->m_instrument_trade_spot_from_streaming_rest_uri_next_request_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_streaming_rest_uri_next_request_ts_Set() const{
    return m_instrument_trade_spot_from_streaming_rest_uri_next_request_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_from_streaming_rest_uri_next_request_ts_Valid() const{
    return m_instrument_trade_spot_from_streaming_rest_uri_next_request_ts_isValid;
}

bool OAISPOT_INSTRUMENT_METADATA::isInstrumentTradeSpotIsReadyForStreamingIntegration() const {
    return instrument_trade_spot_is_ready_for_streaming_integration;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotIsReadyForStreamingIntegration(const bool &instrument_trade_spot_is_ready_for_streaming_integration) {
    this->instrument_trade_spot_is_ready_for_streaming_integration = instrument_trade_spot_is_ready_for_streaming_integration;
    this->m_instrument_trade_spot_is_ready_for_streaming_integration_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_is_ready_for_streaming_integration_Set() const{
    return m_instrument_trade_spot_is_ready_for_streaming_integration_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_is_ready_for_streaming_integration_Valid() const{
    return m_instrument_trade_spot_is_ready_for_streaming_integration_isValid;
}

QString OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotRestUri() const {
    return instrument_trade_spot_rest_uri;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotRestUri(const QString &instrument_trade_spot_rest_uri) {
    this->instrument_trade_spot_rest_uri = instrument_trade_spot_rest_uri;
    this->m_instrument_trade_spot_rest_uri_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_rest_uri_Set() const{
    return m_instrument_trade_spot_rest_uri_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_rest_uri_Valid() const{
    return m_instrument_trade_spot_rest_uri_isValid;
}

QString OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotRestUrl() const {
    return instrument_trade_spot_rest_url;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotRestUrl(const QString &instrument_trade_spot_rest_url) {
    this->instrument_trade_spot_rest_url = instrument_trade_spot_rest_url;
    this->m_instrument_trade_spot_rest_url_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_rest_url_Set() const{
    return m_instrument_trade_spot_rest_url_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_rest_url_Valid() const{
    return m_instrument_trade_spot_rest_url_isValid;
}

QString OAISPOT_INSTRUMENT_METADATA::getInstrumentTradeSpotStreamingSubscription() const {
    return instrument_trade_spot_streaming_subscription;
}
void OAISPOT_INSTRUMENT_METADATA::setInstrumentTradeSpotStreamingSubscription(const QString &instrument_trade_spot_streaming_subscription) {
    this->instrument_trade_spot_streaming_subscription = instrument_trade_spot_streaming_subscription;
    this->m_instrument_trade_spot_streaming_subscription_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_streaming_subscription_Set() const{
    return m_instrument_trade_spot_streaming_subscription_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_instrument_trade_spot_streaming_subscription_Valid() const{
    return m_instrument_trade_spot_streaming_subscription_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getLastConcurrentBatchOfTradesSpotMs() const {
    return last_concurrent_batch_of_trades_spot_ms;
}
void OAISPOT_INSTRUMENT_METADATA::setLastConcurrentBatchOfTradesSpotMs(const qint32 &last_concurrent_batch_of_trades_spot_ms) {
    this->last_concurrent_batch_of_trades_spot_ms = last_concurrent_batch_of_trades_spot_ms;
    this->m_last_concurrent_batch_of_trades_spot_ms_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_concurrent_batch_of_trades_spot_ms_Set() const{
    return m_last_concurrent_batch_of_trades_spot_ms_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_concurrent_batch_of_trades_spot_ms_Valid() const{
    return m_last_concurrent_batch_of_trades_spot_ms_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getLastSeenOnBlobTs() const {
    return last_seen_on_blob_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setLastSeenOnBlobTs(const qint32 &last_seen_on_blob_ts) {
    this->last_seen_on_blob_ts = last_seen_on_blob_ts;
    this->m_last_seen_on_blob_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_seen_on_blob_ts_Set() const{
    return m_last_seen_on_blob_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_seen_on_blob_ts_Valid() const{
    return m_last_seen_on_blob_ts_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getLastSeenOnFixTs() const {
    return last_seen_on_fix_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setLastSeenOnFixTs(const qint32 &last_seen_on_fix_ts) {
    this->last_seen_on_fix_ts = last_seen_on_fix_ts;
    this->m_last_seen_on_fix_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_seen_on_fix_ts_Set() const{
    return m_last_seen_on_fix_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_seen_on_fix_ts_Valid() const{
    return m_last_seen_on_fix_ts_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getLastSeenOnHardcodedTs() const {
    return last_seen_on_hardcoded_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setLastSeenOnHardcodedTs(const qint32 &last_seen_on_hardcoded_ts) {
    this->last_seen_on_hardcoded_ts = last_seen_on_hardcoded_ts;
    this->m_last_seen_on_hardcoded_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_seen_on_hardcoded_ts_Set() const{
    return m_last_seen_on_hardcoded_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_seen_on_hardcoded_ts_Valid() const{
    return m_last_seen_on_hardcoded_ts_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getLastSeenOnIndexCompositionTs() const {
    return last_seen_on_index_composition_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setLastSeenOnIndexCompositionTs(const qint32 &last_seen_on_index_composition_ts) {
    this->last_seen_on_index_composition_ts = last_seen_on_index_composition_ts;
    this->m_last_seen_on_index_composition_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_seen_on_index_composition_ts_Set() const{
    return m_last_seen_on_index_composition_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_seen_on_index_composition_ts_Valid() const{
    return m_last_seen_on_index_composition_ts_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getLastSeenOnNsqTs() const {
    return last_seen_on_nsq_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setLastSeenOnNsqTs(const qint32 &last_seen_on_nsq_ts) {
    this->last_seen_on_nsq_ts = last_seen_on_nsq_ts;
    this->m_last_seen_on_nsq_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_seen_on_nsq_ts_Set() const{
    return m_last_seen_on_nsq_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_seen_on_nsq_ts_Valid() const{
    return m_last_seen_on_nsq_ts_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getLastSeenOnPollingTs() const {
    return last_seen_on_polling_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setLastSeenOnPollingTs(const qint32 &last_seen_on_polling_ts) {
    this->last_seen_on_polling_ts = last_seen_on_polling_ts;
    this->m_last_seen_on_polling_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_seen_on_polling_ts_Set() const{
    return m_last_seen_on_polling_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_seen_on_polling_ts_Valid() const{
    return m_last_seen_on_polling_ts_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getLastSeenOnStreamingTs() const {
    return last_seen_on_streaming_ts;
}
void OAISPOT_INSTRUMENT_METADATA::setLastSeenOnStreamingTs(const qint32 &last_seen_on_streaming_ts) {
    this->last_seen_on_streaming_ts = last_seen_on_streaming_ts;
    this->m_last_seen_on_streaming_ts_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_seen_on_streaming_ts_Set() const{
    return m_last_seen_on_streaming_ts_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_seen_on_streaming_ts_Valid() const{
    return m_last_seen_on_streaming_ts_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getLastTradeSpotFromBackfill() const {
    return last_trade_spot_from_backfill;
}
void OAISPOT_INSTRUMENT_METADATA::setLastTradeSpotFromBackfill(const OAIObject &last_trade_spot_from_backfill) {
    this->last_trade_spot_from_backfill = last_trade_spot_from_backfill;
    this->m_last_trade_spot_from_backfill_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_backfill_Set() const{
    return m_last_trade_spot_from_backfill_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_backfill_Valid() const{
    return m_last_trade_spot_from_backfill_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getLastTradeSpotFromBackfillExternal() const {
    return last_trade_spot_from_backfill_external;
}
void OAISPOT_INSTRUMENT_METADATA::setLastTradeSpotFromBackfillExternal(const OAIObject &last_trade_spot_from_backfill_external) {
    this->last_trade_spot_from_backfill_external = last_trade_spot_from_backfill_external;
    this->m_last_trade_spot_from_backfill_external_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_backfill_external_Set() const{
    return m_last_trade_spot_from_backfill_external_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_backfill_external_Valid() const{
    return m_last_trade_spot_from_backfill_external_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getLastTradeSpotFromBlob() const {
    return last_trade_spot_from_blob;
}
void OAISPOT_INSTRUMENT_METADATA::setLastTradeSpotFromBlob(const OAIObject &last_trade_spot_from_blob) {
    this->last_trade_spot_from_blob = last_trade_spot_from_blob;
    this->m_last_trade_spot_from_blob_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_blob_Set() const{
    return m_last_trade_spot_from_blob_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_blob_Valid() const{
    return m_last_trade_spot_from_blob_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getLastTradeSpotFromBlobExternal() const {
    return last_trade_spot_from_blob_external;
}
void OAISPOT_INSTRUMENT_METADATA::setLastTradeSpotFromBlobExternal(const OAIObject &last_trade_spot_from_blob_external) {
    this->last_trade_spot_from_blob_external = last_trade_spot_from_blob_external;
    this->m_last_trade_spot_from_blob_external_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_blob_external_Set() const{
    return m_last_trade_spot_from_blob_external_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_blob_external_Valid() const{
    return m_last_trade_spot_from_blob_external_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getLastTradeSpotFromCalculated() const {
    return last_trade_spot_from_calculated;
}
void OAISPOT_INSTRUMENT_METADATA::setLastTradeSpotFromCalculated(const OAIObject &last_trade_spot_from_calculated) {
    this->last_trade_spot_from_calculated = last_trade_spot_from_calculated;
    this->m_last_trade_spot_from_calculated_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_calculated_Set() const{
    return m_last_trade_spot_from_calculated_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_calculated_Valid() const{
    return m_last_trade_spot_from_calculated_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getLastTradeSpotFromCalculatedExternal() const {
    return last_trade_spot_from_calculated_external;
}
void OAISPOT_INSTRUMENT_METADATA::setLastTradeSpotFromCalculatedExternal(const OAIObject &last_trade_spot_from_calculated_external) {
    this->last_trade_spot_from_calculated_external = last_trade_spot_from_calculated_external;
    this->m_last_trade_spot_from_calculated_external_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_calculated_external_Set() const{
    return m_last_trade_spot_from_calculated_external_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_calculated_external_Valid() const{
    return m_last_trade_spot_from_calculated_external_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getLastTradeSpotFromFix() const {
    return last_trade_spot_from_fix;
}
void OAISPOT_INSTRUMENT_METADATA::setLastTradeSpotFromFix(const OAIObject &last_trade_spot_from_fix) {
    this->last_trade_spot_from_fix = last_trade_spot_from_fix;
    this->m_last_trade_spot_from_fix_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_fix_Set() const{
    return m_last_trade_spot_from_fix_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_fix_Valid() const{
    return m_last_trade_spot_from_fix_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getLastTradeSpotFromFixExternal() const {
    return last_trade_spot_from_fix_external;
}
void OAISPOT_INSTRUMENT_METADATA::setLastTradeSpotFromFixExternal(const OAIObject &last_trade_spot_from_fix_external) {
    this->last_trade_spot_from_fix_external = last_trade_spot_from_fix_external;
    this->m_last_trade_spot_from_fix_external_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_fix_external_Set() const{
    return m_last_trade_spot_from_fix_external_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_fix_external_Valid() const{
    return m_last_trade_spot_from_fix_external_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getLastTradeSpotFromGo() const {
    return last_trade_spot_from_go;
}
void OAISPOT_INSTRUMENT_METADATA::setLastTradeSpotFromGo(const OAIObject &last_trade_spot_from_go) {
    this->last_trade_spot_from_go = last_trade_spot_from_go;
    this->m_last_trade_spot_from_go_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_go_Set() const{
    return m_last_trade_spot_from_go_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_go_Valid() const{
    return m_last_trade_spot_from_go_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getLastTradeSpotFromGoExternal() const {
    return last_trade_spot_from_go_external;
}
void OAISPOT_INSTRUMENT_METADATA::setLastTradeSpotFromGoExternal(const OAIObject &last_trade_spot_from_go_external) {
    this->last_trade_spot_from_go_external = last_trade_spot_from_go_external;
    this->m_last_trade_spot_from_go_external_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_go_external_Set() const{
    return m_last_trade_spot_from_go_external_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_go_external_Valid() const{
    return m_last_trade_spot_from_go_external_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getLastTradeSpotFromPolling() const {
    return last_trade_spot_from_polling;
}
void OAISPOT_INSTRUMENT_METADATA::setLastTradeSpotFromPolling(const OAIObject &last_trade_spot_from_polling) {
    this->last_trade_spot_from_polling = last_trade_spot_from_polling;
    this->m_last_trade_spot_from_polling_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_polling_Set() const{
    return m_last_trade_spot_from_polling_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_polling_Valid() const{
    return m_last_trade_spot_from_polling_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getLastTradeSpotFromPollingExternal() const {
    return last_trade_spot_from_polling_external;
}
void OAISPOT_INSTRUMENT_METADATA::setLastTradeSpotFromPollingExternal(const OAIObject &last_trade_spot_from_polling_external) {
    this->last_trade_spot_from_polling_external = last_trade_spot_from_polling_external;
    this->m_last_trade_spot_from_polling_external_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_polling_external_Set() const{
    return m_last_trade_spot_from_polling_external_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_polling_external_Valid() const{
    return m_last_trade_spot_from_polling_external_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getLastTradeSpotFromStreaming() const {
    return last_trade_spot_from_streaming;
}
void OAISPOT_INSTRUMENT_METADATA::setLastTradeSpotFromStreaming(const OAIObject &last_trade_spot_from_streaming) {
    this->last_trade_spot_from_streaming = last_trade_spot_from_streaming;
    this->m_last_trade_spot_from_streaming_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_streaming_Set() const{
    return m_last_trade_spot_from_streaming_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_streaming_Valid() const{
    return m_last_trade_spot_from_streaming_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getLastTradeSpotFromStreamingExternal() const {
    return last_trade_spot_from_streaming_external;
}
void OAISPOT_INSTRUMENT_METADATA::setLastTradeSpotFromStreamingExternal(const OAIObject &last_trade_spot_from_streaming_external) {
    this->last_trade_spot_from_streaming_external = last_trade_spot_from_streaming_external;
    this->m_last_trade_spot_from_streaming_external_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_streaming_external_Set() const{
    return m_last_trade_spot_from_streaming_external_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_last_trade_spot_from_streaming_external_Valid() const{
    return m_last_trade_spot_from_streaming_external_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getMetadataVersion() const {
    return metadata_version;
}
void OAISPOT_INSTRUMENT_METADATA::setMetadataVersion(const qint32 &metadata_version) {
    this->metadata_version = metadata_version;
    this->m_metadata_version_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_metadata_version_Set() const{
    return m_metadata_version_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_metadata_version_Valid() const{
    return m_metadata_version_isValid;
}

QString OAISPOT_INSTRUMENT_METADATA::getProcessingTradesFromBlobStatus() const {
    return processing_trades_from_blob_status;
}
void OAISPOT_INSTRUMENT_METADATA::setProcessingTradesFromBlobStatus(const QString &processing_trades_from_blob_status) {
    this->processing_trades_from_blob_status = processing_trades_from_blob_status;
    this->m_processing_trades_from_blob_status_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_processing_trades_from_blob_status_Set() const{
    return m_processing_trades_from_blob_status_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_processing_trades_from_blob_status_Valid() const{
    return m_processing_trades_from_blob_status_isValid;
}

qint32 OAISPOT_INSTRUMENT_METADATA::getTotalTradesSpot() const {
    return total_trades_spot;
}
void OAISPOT_INSTRUMENT_METADATA::setTotalTradesSpot(const qint32 &total_trades_spot) {
    this->total_trades_spot = total_trades_spot;
    this->m_total_trades_spot_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_total_trades_spot_Set() const{
    return m_total_trades_spot_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_total_trades_spot_Valid() const{
    return m_total_trades_spot_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getUnstructuredTradeSpotFromBackfillInternalData() const {
    return unstructured_trade_spot_from_backfill_internal_data;
}
void OAISPOT_INSTRUMENT_METADATA::setUnstructuredTradeSpotFromBackfillInternalData(const OAIObject &unstructured_trade_spot_from_backfill_internal_data) {
    this->unstructured_trade_spot_from_backfill_internal_data = unstructured_trade_spot_from_backfill_internal_data;
    this->m_unstructured_trade_spot_from_backfill_internal_data_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_unstructured_trade_spot_from_backfill_internal_data_Set() const{
    return m_unstructured_trade_spot_from_backfill_internal_data_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_unstructured_trade_spot_from_backfill_internal_data_Valid() const{
    return m_unstructured_trade_spot_from_backfill_internal_data_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getUnstructuredTradeSpotFromBlobInternalData() const {
    return unstructured_trade_spot_from_blob_internal_data;
}
void OAISPOT_INSTRUMENT_METADATA::setUnstructuredTradeSpotFromBlobInternalData(const OAIObject &unstructured_trade_spot_from_blob_internal_data) {
    this->unstructured_trade_spot_from_blob_internal_data = unstructured_trade_spot_from_blob_internal_data;
    this->m_unstructured_trade_spot_from_blob_internal_data_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_unstructured_trade_spot_from_blob_internal_data_Set() const{
    return m_unstructured_trade_spot_from_blob_internal_data_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_unstructured_trade_spot_from_blob_internal_data_Valid() const{
    return m_unstructured_trade_spot_from_blob_internal_data_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getUnstructuredTradeSpotFromCalculatedInternalData() const {
    return unstructured_trade_spot_from_calculated_internal_data;
}
void OAISPOT_INSTRUMENT_METADATA::setUnstructuredTradeSpotFromCalculatedInternalData(const OAIObject &unstructured_trade_spot_from_calculated_internal_data) {
    this->unstructured_trade_spot_from_calculated_internal_data = unstructured_trade_spot_from_calculated_internal_data;
    this->m_unstructured_trade_spot_from_calculated_internal_data_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_unstructured_trade_spot_from_calculated_internal_data_Set() const{
    return m_unstructured_trade_spot_from_calculated_internal_data_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_unstructured_trade_spot_from_calculated_internal_data_Valid() const{
    return m_unstructured_trade_spot_from_calculated_internal_data_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getUnstructuredTradeSpotFromFixInternalData() const {
    return unstructured_trade_spot_from_fix_internal_data;
}
void OAISPOT_INSTRUMENT_METADATA::setUnstructuredTradeSpotFromFixInternalData(const OAIObject &unstructured_trade_spot_from_fix_internal_data) {
    this->unstructured_trade_spot_from_fix_internal_data = unstructured_trade_spot_from_fix_internal_data;
    this->m_unstructured_trade_spot_from_fix_internal_data_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_unstructured_trade_spot_from_fix_internal_data_Set() const{
    return m_unstructured_trade_spot_from_fix_internal_data_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_unstructured_trade_spot_from_fix_internal_data_Valid() const{
    return m_unstructured_trade_spot_from_fix_internal_data_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getUnstructuredTradeSpotFromGoInternalData() const {
    return unstructured_trade_spot_from_go_internal_data;
}
void OAISPOT_INSTRUMENT_METADATA::setUnstructuredTradeSpotFromGoInternalData(const OAIObject &unstructured_trade_spot_from_go_internal_data) {
    this->unstructured_trade_spot_from_go_internal_data = unstructured_trade_spot_from_go_internal_data;
    this->m_unstructured_trade_spot_from_go_internal_data_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_unstructured_trade_spot_from_go_internal_data_Set() const{
    return m_unstructured_trade_spot_from_go_internal_data_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_unstructured_trade_spot_from_go_internal_data_Valid() const{
    return m_unstructured_trade_spot_from_go_internal_data_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getUnstructuredTradeSpotFromPollingInternalData() const {
    return unstructured_trade_spot_from_polling_internal_data;
}
void OAISPOT_INSTRUMENT_METADATA::setUnstructuredTradeSpotFromPollingInternalData(const OAIObject &unstructured_trade_spot_from_polling_internal_data) {
    this->unstructured_trade_spot_from_polling_internal_data = unstructured_trade_spot_from_polling_internal_data;
    this->m_unstructured_trade_spot_from_polling_internal_data_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_unstructured_trade_spot_from_polling_internal_data_Set() const{
    return m_unstructured_trade_spot_from_polling_internal_data_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_unstructured_trade_spot_from_polling_internal_data_Valid() const{
    return m_unstructured_trade_spot_from_polling_internal_data_isValid;
}

OAIObject OAISPOT_INSTRUMENT_METADATA::getUnstructuredTradeSpotFromStreamingInternalData() const {
    return unstructured_trade_spot_from_streaming_internal_data;
}
void OAISPOT_INSTRUMENT_METADATA::setUnstructuredTradeSpotFromStreamingInternalData(const OAIObject &unstructured_trade_spot_from_streaming_internal_data) {
    this->unstructured_trade_spot_from_streaming_internal_data = unstructured_trade_spot_from_streaming_internal_data;
    this->m_unstructured_trade_spot_from_streaming_internal_data_isSet = true;
}

bool OAISPOT_INSTRUMENT_METADATA::is_unstructured_trade_spot_from_streaming_internal_data_Set() const{
    return m_unstructured_trade_spot_from_streaming_internal_data_isSet;
}

bool OAISPOT_INSTRUMENT_METADATA::is_unstructured_trade_spot_from_streaming_internal_data_Valid() const{
    return m_unstructured_trade_spot_from_streaming_internal_data_isValid;
}

bool OAISPOT_INSTRUMENT_METADATA::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_first_seen_on_blob_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_seen_on_fix_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_seen_on_hardcoded_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_seen_on_index_composition_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_seen_on_nsq_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_seen_on_polling_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_seen_on_streaming_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_trade_spot_from_backfill_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_trade_spot_from_backfill_external_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_trade_spot_from_blob_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_trade_spot_from_blob_external_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_trade_spot_from_calculated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_trade_spot_from_calculated_external_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_trade_spot_from_fix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_trade_spot_from_fix_external_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_trade_spot_from_go_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_trade_spot_from_go_external_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_trade_spot_from_polling_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_trade_spot_from_polling_external_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_trade_spot_from_streaming_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_trade_spot_from_streaming_external_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_host_migration_destination_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_host_migration_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_host_migration_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_external_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_mapping_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (instrument_mapping_history.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_source_backfill_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_source_blob_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_source_calculated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_source_fix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_source_go_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_source_polling_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_source_streaming_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_backfill_last_proxied_rest_request_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_backfill_rest_uri_last_request_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_backfill_rest_uri_last_response_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_backfill_rest_uri_next_request_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_blob_last_proxied_rest_request_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_blob_rest_uri_last_request_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_blob_rest_uri_last_response_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_blob_rest_uri_next_request_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_calculated_last_proxied_rest_request_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_calculated_rest_uri_last_request_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_calculated_rest_uri_last_response_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_calculated_rest_uri_next_request_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_fix_last_proxied_rest_request_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_fix_rest_uri_last_request_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_fix_rest_uri_last_response_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_fix_rest_uri_next_request_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_go_last_proxied_rest_request_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_go_rest_uri_last_request_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_go_rest_uri_last_response_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_go_rest_uri_next_request_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_polling_last_proxied_rest_request_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_polling_rest_uri_last_request_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_polling_rest_uri_last_response_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_polling_rest_uri_next_request_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_streaming_last_proxied_rest_request_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_streaming_rest_uri_last_request_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_streaming_rest_uri_last_response_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_from_streaming_rest_uri_next_request_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_is_ready_for_streaming_integration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_rest_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_rest_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instrument_trade_spot_streaming_subscription_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_concurrent_batch_of_trades_spot_ms_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_seen_on_blob_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_seen_on_fix_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_seen_on_hardcoded_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_seen_on_index_composition_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_seen_on_nsq_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_seen_on_polling_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_seen_on_streaming_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_trade_spot_from_backfill_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_trade_spot_from_backfill_external_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_trade_spot_from_blob_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_trade_spot_from_blob_external_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_trade_spot_from_calculated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_trade_spot_from_calculated_external_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_trade_spot_from_fix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_trade_spot_from_fix_external_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_trade_spot_from_go_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_trade_spot_from_go_external_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_trade_spot_from_polling_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_trade_spot_from_polling_external_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_trade_spot_from_streaming_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_trade_spot_from_streaming_external_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_processing_trades_from_blob_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_trades_spot_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unstructured_trade_spot_from_backfill_internal_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unstructured_trade_spot_from_blob_internal_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unstructured_trade_spot_from_calculated_internal_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unstructured_trade_spot_from_fix_internal_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unstructured_trade_spot_from_go_internal_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unstructured_trade_spot_from_polling_internal_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unstructured_trade_spot_from_streaming_internal_data_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISPOT_INSTRUMENT_METADATA::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
