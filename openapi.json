{
    "openapi": "3.0.3",
    "info": {
      "title": "CryptoCompare Market, Index, Reference Data, News and Overview Metrcis API for the Cryptocurrency Industry",
      "description": "CryptoCompare is the world's leading digital asset data company, providing services that cater to corporate, government and retail clients. Our main reference index is widely recognized as a reliable benchmark, and we have been authorized by the Financial Conduct Authority (FCA) in the United Kingdom to operate as a benchmark administrator. In addition to catering to corporate, government, and retail clients, we offer a range of services including comprehensive market data for cryptocurrency exchanges in both the centralized and decentralized finance sectors, as well as individual asset data on custodians, supported platforms, and privacy solutions. Our offerings include price, volume, trade, and orderbook updates, as well as historical OHLCV data.",
      "termsOfService": "https://www.cryptocompare.com/terms-conditions/",
      "contact": {
        "name": "API Support",
        "url": "https://cryptocompare.zendesk.com/hc/en-gb/requests/new",
        "email": "data@cryptocompare.com"
      },
      "license": {
        "name": "CryptoCompare API License Agreement",
        "url": "https://www.cryptocompare.com/api-licence-agreement/"
      },
      "version": "2.1.1"
    },
    "servers": [
      {
        "url": "https://data-api.cryptocompare.com",
        "description": "The production API load balancer URL for all cryptocurrency data queries."
      }
    ],
    "paths": {
      "/spot/v1/latest/instrument/metadata": {
        "summary": "Instrument Metadata",
        "description": "Use to get metadata for a given array of instruments on a specific market. Metadata includes the instrument current status, first and last seen dates, and a mapping data regarding the instrument. This can be used to cross-reference the instrument's data with other systems that use different identifier schemes.",
        "get": {
          "tags": [
            "Spot"
          ],
          "operationId": "spot_v1_latest_instrument_metadata",
          "x-section": "Spot",
          "x-subsection": "General",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              },
              "example": "coinbase"
            },
            {
              "name": "instruments",
              "in": "query",
              "description": "A comma separated array of mapped and/or unmapped instruments to retrieve for a specific market (you can use either the instrument XXBTZUSD or mapped instrument (base - quote) BTC-USD on kraken as an example). We first check each instrument against the mapped list and then against the unmapped list but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "minItems": 1,
                "maxItems": 25,
                "items": {
                  "type": "string"
                }
              },
              "example": [
                "BTC-USD",
                "ETH-USD"
              ]
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting metadata entries you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: STATUS,INTERNAL,GENERAL,MIGRATION,SOURCE",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "METADATA_VERSION": {
                              "type": "integer",
                              "description": "The version of metadata, used for version conversions/migrates.",
                              "default": 4,
                              "example": 4
                            },
                            "INSTRUMENT_STATUS": {
                              "type": "string",
                              "description": "The status of the symbol, we only poll / stream / connect to the ACTIVE ones, for the RETIRED / IGNORED / EXPIRED  one we no longer query for data.",
                              "default": "ACTIVE",
                              "example": "ACTIVE"
                            },
                            "INSTRUMENT": {
                              "type": "string",
                              "description": "The instrument ID as it is on the exchange with small modifications - we do not allow the following characters inside isntrument ids: ,/&?"
                            },
                            "INSTRUMENT_MAPPING": {
                              "type": "object",
                              "description": "The current mapping information for this instrument",
                              "properties": {},
                              "default": {},
                              "example": {}
                            },
                            "INSTRUMENT_MAPPING_HISTORY": {
                              "type": "array",
                              "description": "Historical mapping information for this instrument",
                              "items": {
                                "type": "string"
                              },
                              "default": [],
                              "example": []
                            },
                            "INSTRUMENT_EXTERNAL_DATA": {
                              "type": "string",
                              "description": "The full data we get from the polling endpoint for this specific instrument. This is a JSON stringified object with different properties per exchange."
                            },
                            "PROCESSING_TRADES_FROM_BLOB_STATUS": {
                              "type": "string",
                              "description": "This states the status of blob migration for this intrument on this exchange."
                            },
                            "HOST_MIGRATION_STATUS": {
                              "type": "string",
                              "description": "The migration status of the symbol, we only poll / stream / connect empty or SETTLED"
                            },
                            "HOST_MIGRATION_SOURCE": {
                              "type": "string",
                              "description": "The migration source vm hostname."
                            },
                            "HOST_MIGRATION_DESTINATION": {
                              "type": "string",
                              "description": "The migration destination vm hostname."
                            },
                            "INSTRUMENT_TRADE_SPOT_REST_URI": {
                              "type": "string",
                              "description": "This is used to build up the request in some cases, this is where we put the id we use when querying for TRADE_SPOT."
                            },
                            "INSTRUMENT_TRADE_SPOT_REST_URL": {
                              "type": "string",
                              "description": "The URL we send to the proxy swarm to get TRADE_SPOT for the instrument."
                            },
                            "INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION": {
                              "type": "string",
                              "description": "This is used to build up the subscription in some cases, this is where we put the id we use when subscribing for TRADE_SPOT on this instrument."
                            },
                            "INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION": {
                              "type": "boolean",
                              "description": "This flags the exchange instrument as in ready to consume TRADE_SPOT via a streaming integration.",
                              "default": false,
                              "example": false
                            },
                            "TOTAL_TRADES_SPOT": {
                              "type": "integer",
                              "description": "This is both the CCSEQ and the total TRADES_SPOT we have processed on this instrument"
                            },
                            "LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS": {
                              "type": "integer",
                              "description": "The timestamp last encountered where the batch of trades from TRADES_SPOT all occured at the same time. This is an issue when making the next request that requires polling by timestamp as a start/from parameter"
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS": {
                              "type": "integer",
                              "description": "The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument."
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS": {
                              "type": "integer",
                              "description": "The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument."
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS": {
                              "type": "integer",
                              "description": "The next time we expect to make a request for TRADE_SPOT on this instrument."
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST": {
                              "type": "object",
                              "description": "The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.",
                              "properties": {}
                            },
                            "FIRST_TRADE_SPOT_FROM_POLLING": {
                              "type": "object",
                              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in internal format.",
                              "properties": {}
                            },
                            "LAST_TRADE_SPOT_FROM_POLLING": {
                              "type": "object",
                              "description": "This is the last TRADE_SPOT that we have seen on the specific source type in internal format.",
                              "properties": {}
                            },
                            "FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL": {
                              "type": "object",
                              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in external format.",
                              "properties": {}
                            },
                            "LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL": {
                              "type": "object",
                              "description": "This is the last TRADE_SPOT that we have seen on the specific trade source in external format.",
                              "properties": {}
                            },
                            "UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA": {
                              "type": "object",
                              "description": "This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.",
                              "properties": {}
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS": {
                              "type": "integer",
                              "description": "The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument."
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS": {
                              "type": "integer",
                              "description": "The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument."
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS": {
                              "type": "integer",
                              "description": "The next time we expect to make a request for TRADE_SPOT on this instrument."
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST": {
                              "type": "object",
                              "description": "The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.",
                              "properties": {}
                            },
                            "FIRST_TRADE_SPOT_FROM_STREAMING": {
                              "type": "object",
                              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in internal format.",
                              "properties": {}
                            },
                            "LAST_TRADE_SPOT_FROM_STREAMING": {
                              "type": "object",
                              "description": "This is the last TRADE_SPOT that we have seen on the specific source type in internal format.",
                              "properties": {}
                            },
                            "FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL": {
                              "type": "object",
                              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in external format.",
                              "properties": {}
                            },
                            "LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL": {
                              "type": "object",
                              "description": "This is the last TRADE_SPOT that we have seen on the specific trade source in external format.",
                              "properties": {}
                            },
                            "UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA": {
                              "type": "object",
                              "description": "This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.",
                              "properties": {}
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS": {
                              "type": "integer",
                              "description": "The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument."
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS": {
                              "type": "integer",
                              "description": "The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument."
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS": {
                              "type": "integer",
                              "description": "The next time we expect to make a request for TRADE_SPOT on this instrument."
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST": {
                              "type": "object",
                              "description": "The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.",
                              "properties": {}
                            },
                            "FIRST_TRADE_SPOT_FROM_GO": {
                              "type": "object",
                              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in internal format.",
                              "properties": {}
                            },
                            "LAST_TRADE_SPOT_FROM_GO": {
                              "type": "object",
                              "description": "This is the last TRADE_SPOT that we have seen on the specific source type in internal format.",
                              "properties": {}
                            },
                            "FIRST_TRADE_SPOT_FROM_GO_EXTERNAL": {
                              "type": "object",
                              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in external format.",
                              "properties": {}
                            },
                            "LAST_TRADE_SPOT_FROM_GO_EXTERNAL": {
                              "type": "object",
                              "description": "This is the last TRADE_SPOT that we have seen on the specific trade source in external format.",
                              "properties": {}
                            },
                            "UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA": {
                              "type": "object",
                              "description": "This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.",
                              "properties": {}
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS": {
                              "type": "integer",
                              "description": "The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument."
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS": {
                              "type": "integer",
                              "description": "The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument."
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS": {
                              "type": "integer",
                              "description": "The next time we expect to make a request for TRADE_SPOT on this instrument."
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST": {
                              "type": "object",
                              "description": "The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.",
                              "properties": {}
                            },
                            "FIRST_TRADE_SPOT_FROM_BLOB": {
                              "type": "object",
                              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in internal format.",
                              "properties": {}
                            },
                            "LAST_TRADE_SPOT_FROM_BLOB": {
                              "type": "object",
                              "description": "This is the last TRADE_SPOT that we have seen on the specific source type in internal format.",
                              "properties": {}
                            },
                            "FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL": {
                              "type": "object",
                              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in external format.",
                              "properties": {}
                            },
                            "LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL": {
                              "type": "object",
                              "description": "This is the last TRADE_SPOT that we have seen on the specific trade source in external format.",
                              "properties": {}
                            },
                            "UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA": {
                              "type": "object",
                              "description": "This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.",
                              "properties": {}
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS": {
                              "type": "integer",
                              "description": "The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument."
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS": {
                              "type": "integer",
                              "description": "The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument."
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS": {
                              "type": "integer",
                              "description": "The next time we expect to make a request for TRADE_SPOT on this instrument."
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST": {
                              "type": "object",
                              "description": "The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.",
                              "properties": {}
                            },
                            "FIRST_TRADE_SPOT_FROM_CALCULATED": {
                              "type": "object",
                              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in internal format.",
                              "properties": {}
                            },
                            "LAST_TRADE_SPOT_FROM_CALCULATED": {
                              "type": "object",
                              "description": "This is the last TRADE_SPOT that we have seen on the specific source type in internal format.",
                              "properties": {}
                            },
                            "FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL": {
                              "type": "object",
                              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in external format.",
                              "properties": {}
                            },
                            "LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL": {
                              "type": "object",
                              "description": "This is the last TRADE_SPOT that we have seen on the specific trade source in external format.",
                              "properties": {}
                            },
                            "UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA": {
                              "type": "object",
                              "description": "This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.",
                              "properties": {}
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS": {
                              "type": "integer",
                              "description": "The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument."
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS": {
                              "type": "integer",
                              "description": "The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument."
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS": {
                              "type": "integer",
                              "description": "The next time we expect to make a request for TRADE_SPOT on this instrument."
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST": {
                              "type": "object",
                              "description": "The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.",
                              "properties": {}
                            },
                            "FIRST_TRADE_SPOT_FROM_BACKFILL": {
                              "type": "object",
                              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in internal format.",
                              "properties": {}
                            },
                            "LAST_TRADE_SPOT_FROM_BACKFILL": {
                              "type": "object",
                              "description": "This is the last TRADE_SPOT that we have seen on the specific source type in internal format.",
                              "properties": {}
                            },
                            "FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL": {
                              "type": "object",
                              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in external format.",
                              "properties": {}
                            },
                            "LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL": {
                              "type": "object",
                              "description": "This is the last TRADE_SPOT that we have seen on the specific trade source in external format.",
                              "properties": {}
                            },
                            "UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA": {
                              "type": "object",
                              "description": "This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.",
                              "properties": {}
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS": {
                              "type": "integer",
                              "description": "The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument."
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS": {
                              "type": "integer",
                              "description": "The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument."
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS": {
                              "type": "integer",
                              "description": "The next time we expect to make a request for TRADE_SPOT on this instrument."
                            },
                            "INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST": {
                              "type": "object",
                              "description": "The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.",
                              "properties": {}
                            },
                            "FIRST_TRADE_SPOT_FROM_FIX": {
                              "type": "object",
                              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in internal format.",
                              "properties": {}
                            },
                            "LAST_TRADE_SPOT_FROM_FIX": {
                              "type": "object",
                              "description": "This is the last TRADE_SPOT that we have seen on the specific source type in internal format.",
                              "properties": {}
                            },
                            "FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL": {
                              "type": "object",
                              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in external format.",
                              "properties": {}
                            },
                            "LAST_TRADE_SPOT_FROM_FIX_EXTERNAL": {
                              "type": "object",
                              "description": "This is the last TRADE_SPOT that we have seen on the specific trade source in external format.",
                              "properties": {}
                            },
                            "UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA": {
                              "type": "object",
                              "description": "This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.",
                              "properties": {}
                            },
                            "INSTRUMENT_SOURCE_POLLING": {
                              "type": "string",
                              "description": "Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from."
                            },
                            "INSTRUMENT_SOURCE_STREAMING": {
                              "type": "string",
                              "description": "Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from."
                            },
                            "INSTRUMENT_SOURCE_GO": {
                              "type": "string",
                              "description": "Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from."
                            },
                            "INSTRUMENT_SOURCE_BLOB": {
                              "type": "string",
                              "description": "Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from."
                            },
                            "INSTRUMENT_SOURCE_CALCULATED": {
                              "type": "string",
                              "description": "Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from."
                            },
                            "INSTRUMENT_SOURCE_BACKFILL": {
                              "type": "string",
                              "description": "Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from."
                            },
                            "INSTRUMENT_SOURCE_FIX": {
                              "type": "string",
                              "description": "Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from."
                            },
                            "FIRST_SEEN_ON_POLLING_TS": {
                              "type": "integer",
                              "description": "This is the first time instrument was seen on instrumentListSourceType POLLING."
                            },
                            "LAST_SEEN_ON_POLLING_TS": {
                              "type": "integer",
                              "description": "This is the last time instrument was seen on instrumentListSourceType POLLING."
                            },
                            "FIRST_SEEN_ON_STREAMING_TS": {
                              "type": "integer",
                              "description": "This is the first time instrument was seen on instrumentListSourceType STREAMING."
                            },
                            "LAST_SEEN_ON_STREAMING_TS": {
                              "type": "integer",
                              "description": "This is the last time instrument was seen on instrumentListSourceType STREAMING."
                            },
                            "FIRST_SEEN_ON_NSQ_TS": {
                              "type": "integer",
                              "description": "This is the first time instrument was seen on instrumentListSourceType NSQ."
                            },
                            "LAST_SEEN_ON_NSQ_TS": {
                              "type": "integer",
                              "description": "This is the last time instrument was seen on instrumentListSourceType NSQ."
                            },
                            "FIRST_SEEN_ON_BLOB_TS": {
                              "type": "integer",
                              "description": "This is the first time instrument was seen on instrumentListSourceType BLOB."
                            },
                            "LAST_SEEN_ON_BLOB_TS": {
                              "type": "integer",
                              "description": "This is the last time instrument was seen on instrumentListSourceType BLOB."
                            },
                            "FIRST_SEEN_ON_HARDCODED_TS": {
                              "type": "integer",
                              "description": "This is the first time instrument was seen on instrumentListSourceType HARDCODED."
                            },
                            "LAST_SEEN_ON_HARDCODED_TS": {
                              "type": "integer",
                              "description": "This is the last time instrument was seen on instrumentListSourceType HARDCODED."
                            },
                            "FIRST_SEEN_ON_INDEX_COMPOSITION_TS": {
                              "type": "integer",
                              "description": "This is the first time instrument was seen on instrumentListSourceType INDEX_COMPOSITION."
                            },
                            "LAST_SEEN_ON_INDEX_COMPOSITION_TS": {
                              "type": "integer",
                              "description": "This is the last time instrument was seen on instrumentListSourceType INDEX_COMPOSITION."
                            },
                            "FIRST_SEEN_ON_FIX_TS": {
                              "type": "integer",
                              "description": "This is the first time instrument was seen on instrumentListSourceType FIX."
                            },
                            "LAST_SEEN_ON_FIX_TS": {
                              "type": "integer",
                              "description": "This is the last time instrument was seen on instrumentListSourceType FIX."
                            }
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: instruments parameter. One or multiple instruments on coinbase not integrated yet or not supported. Instruments are case sensitive, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets/instruments endpoint for a list of all the supported TRADE_SPOT market and instrument combinations. Invalid instruments: INSTRUMENT-DOES-NOT-EXIST"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "instruments"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "INSTRUMENT-DOES-NOT-EXIST"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/spot/v1/markets": {
        "summary": "Markets",
        "description": "",
        "get": {
          "tags": [
            "Spot"
          ],
          "operationId": "spot_v1_markets",
          "x-section": "Spot",
          "x-subsection": "General",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "",
                "minLength": 0,
                "maxLength": 30
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/spot/v1/markets/instruments": {
        "summary": "Markets + Instruments",
        "description": "",
        "get": {
          "tags": [
            "Spot"
          ],
          "operationId": "spot_v1_markets_instruments",
          "x-section": "Spot",
          "x-subsection": "General",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "",
                "minLength": 0,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped instrument to retrieve on a specific market.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "",
                "minLength": 0,
                "maxLength": 30
              }
            },
            {
              "name": "instrument_status",
              "in": "query",
              "description": "The status of the instrument, can be one of the following: ACTIVE, IGNORED, RETIRED, EXPIRED",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [
                  "ACTIVE",
                  "IGNORED",
                  "RETIRED",
                  "EXPIRED"
                ],
                "items": {
                  "type": "string",
                  "enum": [
                    "ACTIVE",
                    "IGNORED",
                    "RETIRED",
                    "EXPIRED"
                  ]
                }
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/spot/v1/markets/instruments/unmapped": {
        "summary": "Markets + Instruments Unmapped",
        "description": "",
        "get": {
          "tags": [
            "Spot"
          ],
          "operationId": "spot_v1_markets_instruments_unmapped",
          "x-section": "Spot",
          "x-subsection": "General",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "",
                "minLength": 0,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The unmapped instrument to retrieve on a specific market.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "",
                "minLength": 0,
                "maxLength": 300
              }
            },
            {
              "name": "instrument_status",
              "in": "query",
              "description": "The status of the instrument, can be one of the following: ACTIVE, IGNORED, RETIRED, EXPIRED",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [
                  "ACTIVE",
                  "IGNORED",
                  "RETIRED",
                  "EXPIRED"
                ],
                "items": {
                  "type": "string",
                  "enum": [
                    "ACTIVE",
                    "IGNORED",
                    "RETIRED",
                    "EXPIRED"
                  ]
                }
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/spot/v1/latest/tick": {
        "summary": "Instrument Latest Tick",
        "description": "",
        "get": {
          "tags": [
            "Spot"
          ],
          "operationId": "spot_v1_latest_tick",
          "x-section": "Spot",
          "x-subsection": "Trade",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instruments",
              "in": "query",
              "description": "A comma separated array of mapped and/or unmapped instruments to retrieve for a specific market (you can use either the instrument XXBTZUSD or mapped instrument (base - quote) BTC-USD on kraken as an example). We first check each instrument against the mapped list and then against the unmapped list but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "minItems": 1,
                "maxItems": 25,
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting tick data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,MAPPING,VALUE,LAST_UPDATE,LAST_PROCESSED,TOP_OF_BOOK,CURRENT_HOUR,CURRENT_DAY,CURRENT_WEEK,CURRENT_MONTH,CURRENT_YEAR,MOVING_24_HOUR,MOVING_7_DAY,MOVING_30_DAY,MOVING_90_DAY,MOVING_180_DAY,MOVING_365_DAY,LIFETIME",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "TYPE": {
                              "type": "string",
                              "description": "The type of the message."
                            },
                            "MARKET": {
                              "type": "string",
                              "description": "The market / exchange under consideration (e.g. coinbase, kraken, etc)."
                            },
                            "INSTRUMENT": {
                              "type": "string",
                              "description": "The unmapped instrument ID"
                            },
                            "MAPPED_INSTRUMENT": {
                              "type": "string",
                              "description": "The mapped instrument ID, derived from our mapping rules. This takes the form: \"BASE-QUOTE\" (e.g. BTC-USD). Only available on instruments that have been mapped."
                            },
                            "BASE": {
                              "type": "string",
                              "description": "The mapped from asset (base / symbol/ coin), e.g. BTC. Only available on instruments that have been mapped."
                            },
                            "QUOTE": {
                              "type": "string",
                              "description": "The mapped to asset (quote / counter symbol / coin), e.g. USD. Only available on instruments that have been mapped."
                            },
                            "CCSEQ": {
                              "type": "integer",
                              "description": "Our internal sequence number for this tick update. This is unique per market / exchange and trading pair / instrument. It will always be increasing by 1 for each new tick update we send."
                            },
                            "PRICE": {
                              "type": "integer",
                              "description": "The price in the to asset (quote / number symbol / coin) of the latest trade. I.e. for a BTC-USD trade, how much was paid for one BTC in USD)."
                            },
                            "PRICE_FLAG": {
                              "type": "string",
                              "description": "The flag indicating whether the price has increased, decreased, or not changed"
                            },
                            "PRICE_LAST_UPDATE_TS": {
                              "type": "integer",
                              "description": "The timestamp in seconds as reported by the market / exchange. If the market /exchange does not provide this information, the received timestamp will be returned."
                            },
                            "LAST_TRADE_QUANTITY": {
                              "type": "integer",
                              "description": "The quantity of the latest trade in the from symbol (base / coin)."
                            },
                            "LAST_TRADE_QUOTE_QUANTITY": {
                              "type": "integer",
                              "description": "The volume of the latest trade in the to asset / quote."
                            },
                            "LAST_TRADE_ID": {
                              "type": "string",
                              "description": "The ID of the latest trade."
                            },
                            "LAST_TRADE_CCSEQ": {
                              "type": "string",
                              "description": "The CCSEQ of the latest trade."
                            },
                            "LAST_TRADE_SIDE": {
                              "type": "string",
                              "description": "The side of the latest trade."
                            },
                            "LAST_PROCESSED_TRADE_TS": {
                              "type": "integer",
                              "description": "The timestamp in seconds that the last trade was processed, as reported by the market / exchange. If the market / exchange does not provide this information, the timestamp that the trade was received will be returned."
                            },
                            "LAST_PROCESSED_TRADE_PRICE": {
                              "type": "integer",
                              "description": "The price in the quote asset of the last trade processed, as reported by the market / exchange."
                            },
                            "LAST_PROCESSED_TRADE_QUANTITY": {
                              "type": "integer",
                              "description": "The quantity of the last processed trade in the from symbol (base / coin)."
                            },
                            "LAST_PROCESSED_TRADE_QUOTE_QUANTITY": {
                              "type": "integer",
                              "description": "The  volume of the last processed trade in the to asset / quote."
                            },
                            "LAST_PROCESSED_TRADE_SIDE": {
                              "type": "string",
                              "description": "The side of the last processed trade."
                            },
                            "LAST_PROCESSED_TRADE_CCSEQ": {
                              "type": "string",
                              "description": "The CCSEQ of the latest trade."
                            },
                            "TOP_BID_PRICE": {
                              "type": "integer",
                              "description": "The price of the top bid in the to asset (quote / numberer symbol / coin). For a BTC-USD order book, this will be the highest price a person is willing to pay for some BTC in USD, as quoted for 1 full BTC."
                            },
                            "TOP_BID_QUANTITY": {
                              "type": "integer",
                              "description": "The quantity of the top bid in the from asset (base / coin). For a BTC-USD order book , this will be the amount of BTC someone is willing to buy at the best price."
                            },
                            "TOP_BID_LAST_UPDATE_TS": {
                              "type": "integer",
                              "description": "The timestamp in seconds of the last time the top bid was updated, as reported by the market / exchange. If the market / exchange does not provide this information, the received timestamp will be returned."
                            },
                            "TOP_ASK_PRICE": {
                              "type": "integer",
                              "description": "The price of the top ask in the to asset (quote / numberer symbol / coin). For a BTC-USD order book, this will be the best price someone is willing to sell some BTC in USD, as quoted for 1 full BTC."
                            },
                            "TOP_ASK_QUANTITY": {
                              "type": "integer",
                              "description": "The quantity of the top ask in the from asset (base / coin). For a BTC-USD order book, this will be the amount of BTC a person is willing to sell at the best price."
                            },
                            "TOP_ASK_LAST_UPDATE_TS": {
                              "type": "integer",
                              "description": "The timestamp in seconds of the last time the top ask was updated, as reported by the market / exchange. If the market / exchange does not provide this information, the received timestamp will be returned."
                            },
                            "CURRENT_HOUR_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all trade quantities from the start of the current hour until now. Given in the base asset."
                            },
                            "CURRENT_HOUR_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all buy trade quantities from the start of the current hour until now. Given in the base asset."
                            },
                            "CURRENT_HOUR_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all sell trade quantities from the start of the current hour until now. Given in the base asset."
                            },
                            "CURRENT_HOUR_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all trade quote quantities from the start of the current hour until now. Given in the base asset."
                            },
                            "CURRENT_HOUR_QUOTE_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all trade quote quantities from the start of the current hour until now. Given in the quote asset."
                            },
                            "CURRENT_HOUR_QUOTE_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all buy trade quote quantities from the start of the current hour until now. Given in the quote asset."
                            },
                            "CURRENT_HOUR_QUOTE_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all sell trade quote quantities from the start of the current hour until now. Given in the quote asset."
                            },
                            "CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all unknown trade quote quantities from the start of the current hour until now. Given in the quote asset."
                            },
                            "CURRENT_HOUR_OPEN": {
                              "type": "integer",
                              "description": "The open price for the current hour, this is based on the closest trade occurring before the start of the current hour. Given in the quote asset."
                            },
                            "CURRENT_HOUR_HIGH": {
                              "type": "integer",
                              "description": "The highest trade price of the current hour. If there were no updates in the time period, the open price will be given. Given in the quote asset."
                            },
                            "CURRENT_HOUR_LOW": {
                              "type": "integer",
                              "description": "The lowest trade price of the current hour. If there were no updates in the time period, the open price will be given. Given in the quote asset."
                            },
                            "CURRENT_HOUR_TOTAL_TRADES": {
                              "type": "integer",
                              "description": "The total number of trades that have occurred since the start of the current hour."
                            },
                            "CURRENT_HOUR_TOTAL_TRADES_BUY": {
                              "type": "integer",
                              "description": "The total number of buy trades since the start of the current hour."
                            },
                            "CURRENT_HOUR_TOTAL_TRADES_SELL": {
                              "type": "integer",
                              "description": "The total number of sell trades since the start of the current hour."
                            },
                            "CURRENT_HOUR_TOTAL_TRADES_UNKNOWN": {
                              "type": "integer",
                              "description": "The total number of unknown trades since the start of the current hour."
                            },
                            "CURRENT_DAY_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset."
                            },
                            "CURRENT_DAY_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all buy trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset."
                            },
                            "CURRENT_DAY_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all sell trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset."
                            },
                            "CURRENT_DAY_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all unknown trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset."
                            },
                            "CURRENT_DAY_QUOTE_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset."
                            },
                            "CURRENT_DAY_QUOTE_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all buy trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset."
                            },
                            "CURRENT_DAY_QUOTE_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all sell trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset."
                            },
                            "CURRENT_DAY_QUOTE_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all unknown trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset."
                            },
                            "CURRENT_DAY_OPEN": {
                              "type": "integer",
                              "description": "The open price for the current day, this is based on the closest trade occurring before the start of the current day (00:00:00 GMT/UTC). Given in the quote asset."
                            },
                            "CURRENT_DAY_HIGH": {
                              "type": "integer",
                              "description": "The highest trade price of the current day (00:00:00 GMT/UTC). If there were no updates in the time period, the open price will be given. Given in the quote asset."
                            },
                            "CURRENT_DAY_LOW": {
                              "type": "integer",
                              "description": "The lowest trade price of the current day (00:00:00 GMT/UTC). If there were no updates in the time period, the open price will be given. Given in the quote asset."
                            },
                            "CURRENT_DAY_TOTAL_TRADES": {
                              "type": "integer",
                              "description": "The total number of trades that have occurred since the start of the current day (00:00:00 GMT/UTC)."
                            },
                            "CURRENT_DAY_TOTAL_TRADES_BUY": {
                              "type": "integer",
                              "description": "The total number of buy trades since the start of the current day (00:00:00 GMT/UTC)."
                            },
                            "CURRENT_DAY_TOTAL_TRADES_SELL": {
                              "type": "integer",
                              "description": "The total number of sell trades since the start of the current day (00:00:00 GMT/UTC)."
                            },
                            "CURRENT_DAY_TOTAL_TRADES_UNKNOWN": {
                              "type": "integer",
                              "description": "The total number of unknown trades since the start of the current day (00:00:00 GMT/UTC)."
                            },
                            "CURRENT_WEEK_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset."
                            },
                            "CURRENT_WEEK_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all buy trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset."
                            },
                            "CURRENT_WEEK_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all sell trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset."
                            },
                            "CURRENT_WEEK_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all unknown trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset."
                            },
                            "CURRENT_WEEK_QUOTE_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset."
                            },
                            "CURRENT_WEEK_QUOTE_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all buy trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset."
                            },
                            "CURRENT_WEEK_QUOTE_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all sell trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset."
                            },
                            "CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all unknown trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset."
                            },
                            "CURRENT_WEEK_OPEN": {
                              "type": "integer",
                              "description": "The price of the closest trade to Monday (00:00:00 GMT/UTC) of this week. In a highly liquid market, this would be the last trade that happened on the previous Sunday at (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full weekly value. Given in the quote asset."
                            },
                            "CURRENT_WEEK_HIGH": {
                              "type": "integer",
                              "description": "The highest traded price of the week excluding the current day. The period will run from Monday - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the week. If today is Monday, this value will be the same as CURRENT_WEEK_OPEN. Given in the quote asset."
                            },
                            "CURRENT_WEEK_LOW": {
                              "type": "integer",
                              "description": "The lowest traded price of the week excluding the current day. The period will run from Monday - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the week. If today is Monday, this value will be CURRENT_WEEK_LOW. Given in the quote asset."
                            },
                            "CURRENT_WEEK_TOTAL_TRADES": {
                              "type": "integer",
                              "description": "The total number of trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0."
                            },
                            "CURRENT_WEEK_TOTAL_TRADES_BUY": {
                              "type": "integer",
                              "description": "The total number of buy trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0."
                            },
                            "CURRENT_WEEK_TOTAL_TRADES_SELL": {
                              "type": "integer",
                              "description": "The total number of sell trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0."
                            },
                            "CURRENT_WEEK_TOTAL_TRADES_UNKNOWN": {
                              "type": "integer",
                              "description": "The total number of unknown trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0."
                            },
                            "CURRENT_MONTH_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset."
                            },
                            "CURRENT_MONTH_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all buy trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset."
                            },
                            "CURRENT_MONTH_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all sell trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset."
                            },
                            "CURRENT_MONTH_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all unknown trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset."
                            },
                            "CURRENT_MONTH_QUOTE_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset."
                            },
                            "CURRENT_MONTH_QUOTE_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all buy trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset."
                            },
                            "CURRENT_MONTH_QUOTE_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all sell trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset."
                            },
                            "CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all unknown trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset."
                            },
                            "CURRENT_MONTH_OPEN": {
                              "type": "integer",
                              "description": "The price of the closest trade to the 1st day (00:00:00 GMT/UTC) of this month. In a highly liquid market, this would be the last trade that happened on the previous month at (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full monthly value. Given in the quote asset."
                            },
                            "CURRENT_MONTH_HIGH": {
                              "type": "integer",
                              "description": "The highest traded price of the month excluding the current day. The period will run from the 1st of the month - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the month. If today is the 1st of the month, this value will be CURRENT_MONTH_OPEN. Given in the quote asset."
                            },
                            "CURRENT_MONTH_LOW": {
                              "type": "integer",
                              "description": "The lowest traded price of the month excluding the current day. The period will run from the 1st of the month - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the month. If today is the 1st of the month, this value will be CURRENT_MONTH_OPEN. Given in the quote asset."
                            },
                            "CURRENT_MONTH_TOTAL_TRADES": {
                              "type": "integer",
                              "description": "The total number of trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0."
                            },
                            "CURRENT_MONTH_TOTAL_TRADES_BUY": {
                              "type": "integer",
                              "description": "The total number of buy trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0."
                            },
                            "CURRENT_MONTH_TOTAL_TRADES_SELL": {
                              "type": "integer",
                              "description": "The total number of sell trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0."
                            },
                            "CURRENT_MONTH_TOTAL_TRADES_UNKNOWN": {
                              "type": "integer",
                              "description": "The total number of unknown trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0."
                            },
                            "CURRENT_YEAR_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset."
                            },
                            "CURRENT_YEAR_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all buy trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset."
                            },
                            "CURRENT_YEAR_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all sell trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset."
                            },
                            "CURRENT_YEAR_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all unknown trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset."
                            },
                            "CURRENT_YEAR_QUOTE_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset."
                            },
                            "CURRENT_YEAR_QUOTE_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all buy trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset."
                            },
                            "CURRENT_YEAR_QUOTE_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all sell trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset."
                            },
                            "CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all unknown trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset."
                            },
                            "CURRENT_YEAR_OPEN": {
                              "type": "integer",
                              "description": "The price of the closest trade to the 1st of January (00:00:00 GMT/UTC) of this year. In a highly liquid market, this would be the last trade that happened on on the 31st of December of the previous year (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full yearly value. Given in the quote asset."
                            },
                            "CURRENT_YEAR_HIGH": {
                              "type": "integer",
                              "description": "The highest traded price of the year excluding the current day. The period runs from the 1st of January - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the year. If today is the 1st of January, this value will be CURRENT_YEAR_OPEN. Given in the quote asset."
                            },
                            "CURRENT_YEAR_LOW": {
                              "type": "integer",
                              "description": "The lowest traded price of the year excluding the current day. The period runs from the 1st of January - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the year. If today is the 1st of January, this value will be CURRENT_YEAR_OPEN. Given in the quote asset."
                            },
                            "CURRENT_YEAR_TOTAL_TRADES": {
                              "type": "integer",
                              "description": "The total number of trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0."
                            },
                            "CURRENT_YEAR_TOTAL_TRADES_BUY": {
                              "type": "integer",
                              "description": "The total number of buy trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0."
                            },
                            "CURRENT_YEAR_TOTAL_TRADES_SELL": {
                              "type": "integer",
                              "description": "The total number of sell trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0."
                            },
                            "CURRENT_YEAR_TOTAL_TRADES_UNKNOWN": {
                              "type": "integer",
                              "description": "The total number of unknown trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0."
                            },
                            "MOVING_24_HOUR_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset."
                            },
                            "MOVING_24_HOUR_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all buy trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset."
                            },
                            "MOVING_24_HOUR_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all sell trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset."
                            },
                            "MOVING_24_HOUR_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all unknown trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset."
                            },
                            "MOVING_24_HOUR_QUOTE_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset."
                            },
                            "MOVING_24_HOUR_QUOTE_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all buy trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset."
                            },
                            "MOVING_24_HOUR_QUOTE_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all sell trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset."
                            },
                            "MOVING_24_HOUR_QUOTE_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all unknown trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset."
                            },
                            "MOVING_24_HOUR_OPEN": {
                              "type": "integer",
                              "description": "The price of the closest trade to the period start date (23 hours + current hour ago). This will always be supplied and there is no need to do any calculation to get the full 24 hour value. Given in the quote asset."
                            },
                            "MOVING_24_HOUR_HIGH": {
                              "type": "integer",
                              "description": "The highest traded price of the period. Here, the period runs from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset."
                            },
                            "MOVING_24_HOUR_LOW": {
                              "type": "integer",
                              "description": "The lowest traded price of the period. Here, the period runs from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset."
                            },
                            "MOVING_24_HOUR_TOTAL_TRADES": {
                              "type": "integer",
                              "description": "The total number of trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total)."
                            },
                            "MOVING_24_HOUR_TOTAL_TRADES_BUY": {
                              "type": "integer",
                              "description": "The total number of buy trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total)."
                            },
                            "MOVING_24_HOUR_TOTAL_TRADES_SELL": {
                              "type": "integer",
                              "description": "The total number of sell trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total)."
                            },
                            "MOVING_24_HOUR_TOTAL_TRADES_UNKNOWN": {
                              "type": "integer",
                              "description": "The total number of unknown trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total)."
                            },
                            "MOVING_7_DAY_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset."
                            },
                            "MOVING_7_DAY_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all buy trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset."
                            },
                            "MOVING_7_DAY_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all sell trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset."
                            },
                            "MOVING_7_DAY_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all unknown trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset."
                            },
                            "MOVING_7_DAY_QUOTE_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset."
                            },
                            "MOVING_7_DAY_QUOTE_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all buy trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset."
                            },
                            "MOVING_7_DAY_QUOTE_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all sell trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset."
                            },
                            "MOVING_7_DAY_QUOTE_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all unknown trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset."
                            },
                            "MOVING_7_DAY_OPEN": {
                              "type": "integer",
                              "description": "The price of the closest trade to the period start date (6 days + current day - 00:00:00 GMT/UTC to now). This will always be supplied and there is no need to do any calculation to get the full 7 day value. Given in the quote asset."
                            },
                            "MOVING_7_DAY_HIGH": {
                              "type": "integer",
                              "description": "The highest traded price of the period. Here, the period runs from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset."
                            },
                            "MOVING_7_DAY_LOW": {
                              "type": "integer",
                              "description": "The lowest traded price of the period. Here, the period runs from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset."
                            },
                            "MOVING_7_DAY_TOTAL_TRADES": {
                              "type": "integer",
                              "description": "The total number of trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total)."
                            },
                            "MOVING_7_DAY_TOTAL_TRADES_BUY": {
                              "type": "integer",
                              "description": "The total number of buy trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total)."
                            },
                            "MOVING_7_DAY_TOTAL_TRADES_SELL": {
                              "type": "integer",
                              "description": "The total number of sell trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total)."
                            },
                            "MOVING_7_DAY_TOTAL_TRADES_UNKNOWN": {
                              "type": "integer",
                              "description": "The total number of unknown trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total)."
                            },
                            "MOVING_30_DAY_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset."
                            },
                            "MOVING_30_DAY_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all buy trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset."
                            },
                            "MOVING_30_DAY_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all sell trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset."
                            },
                            "MOVING_30_DAY_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all unknown trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset."
                            },
                            "MOVING_30_DAY_QUOTE_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset."
                            },
                            "MOVING_30_DAY_QUOTE_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all buy trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset."
                            },
                            "MOVING_30_DAY_QUOTE_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all sell trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset."
                            },
                            "MOVING_30_DAY_QUOTE_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all unknown trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset."
                            },
                            "MOVING_30_DAY_OPEN": {
                              "type": "integer",
                              "description": "The price of the closest trade to the period start date (29 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 30 day value. Given in the quote asset."
                            },
                            "MOVING_30_DAY_HIGH": {
                              "type": "integer",
                              "description": "The highest traded price of the period. Here, the period runs from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset."
                            },
                            "MOVING_30_DAY_LOW": {
                              "type": "integer",
                              "description": "The lowest traded price of the period. Here, the period runs from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset."
                            },
                            "MOVING_30_DAY_TOTAL_TRADES": {
                              "type": "integer",
                              "description": "The total number of trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total)."
                            },
                            "MOVING_30_DAY_TOTAL_TRADES_BUY": {
                              "type": "integer",
                              "description": "The total number of buy trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total)."
                            },
                            "MOVING_30_DAY_TOTAL_TRADES_SELL": {
                              "type": "integer",
                              "description": "The total number of sell trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total)."
                            },
                            "MOVING_30_DAY_TOTAL_TRADES_UNKNOWN": {
                              "type": "integer",
                              "description": "The total number of unknown trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total)."
                            },
                            "MOVING_90_DAY_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset."
                            },
                            "MOVING_90_DAY_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset."
                            },
                            "MOVING_90_DAY_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all sell trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset."
                            },
                            "MOVING_90_DAY_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all unknown trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset."
                            },
                            "MOVING_90_DAY_QUOTE_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset."
                            },
                            "MOVING_90_DAY_QUOTE_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all buy trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset."
                            },
                            "MOVING_90_DAY_QUOTE_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all sell trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset."
                            },
                            "MOVING_90_DAY_QUOTE_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all unknown trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset."
                            },
                            "MOVING_90_DAY_OPEN": {
                              "type": "integer",
                              "description": "The price of the closest trade to the period start date (89 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 90 day value. Given in the quote asset."
                            },
                            "MOVING_90_DAY_HIGH": {
                              "type": "integer",
                              "description": "The highest value between the MOVING_90_DAY_OPEN and the highest traded price of the period. Here, the period runs from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset."
                            },
                            "MOVING_90_DAY_LOW": {
                              "type": "integer",
                              "description": "The lowest traded price of the period. Here, the period runs from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset."
                            },
                            "MOVING_90_DAY_TOTAL_TRADES": {
                              "type": "integer",
                              "description": "The total number of trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total)."
                            },
                            "MOVING_90_DAY_TOTAL_TRADES_BUY": {
                              "type": "integer",
                              "description": "The total number of buy trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total)."
                            },
                            "MOVING_90_DAY_TOTAL_TRADES_SELL": {
                              "type": "integer",
                              "description": "The total number of sell trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total)."
                            },
                            "MOVING_90_DAY_TOTAL_TRADES_UNKNOWN": {
                              "type": "integer",
                              "description": "The total number of unknown trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total)."
                            },
                            "MOVING_180_DAY_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset."
                            },
                            "MOVING_180_DAY_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset."
                            },
                            "MOVING_180_DAY_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all sell trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset."
                            },
                            "MOVING_180_DAY_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all unknown trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset."
                            },
                            "MOVING_180_DAY_QUOTE_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset."
                            },
                            "MOVING_180_DAY_QUOTE_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all buy trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset."
                            },
                            "MOVING_180_DAY_QUOTE_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all sell trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset."
                            },
                            "MOVING_180_DAY_QUOTE_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all unknown trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset."
                            },
                            "MOVING_180_DAY_OPEN": {
                              "type": "integer",
                              "description": "The price of the closest trade to the period start date (179 days + current day - 00:00:00 GMT/UTC to now). This will always be supplied and there is no need to do any calculation to get the full 180 day value. Given in the quote asset."
                            },
                            "MOVING_180_DAY_HIGH": {
                              "type": "integer",
                              "description": "The  highest traded price of the period. Here, the period runs from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset."
                            },
                            "MOVING_180_DAY_LOW": {
                              "type": "integer",
                              "description": "The lowest traded price of the period. Here, the period runs from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset."
                            },
                            "MOVING_180_DAY_TOTAL_TRADES": {
                              "type": "integer",
                              "description": "The total number of trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total)."
                            },
                            "MOVING_180_DAY_TOTAL_TRADES_BUY": {
                              "type": "integer",
                              "description": "The total number of buy trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total)."
                            },
                            "MOVING_180_DAY_TOTAL_TRADES_SELL": {
                              "type": "integer",
                              "description": "The total number of sell trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total)."
                            },
                            "MOVING_180_DAY_TOTAL_TRADES_UNKNOWN": {
                              "type": "integer",
                              "description": "The total number of unknown trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total)."
                            },
                            "MOVING_365_DAY_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset."
                            },
                            "MOVING_365_DAY_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset."
                            },
                            "MOVING_365_DAY_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all sell trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset."
                            },
                            "MOVING_365_DAY_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all unknown trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset."
                            },
                            "MOVING_365_DAY_QUOTE_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset."
                            },
                            "MOVING_365_DAY_QUOTE_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all buy trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset."
                            },
                            "MOVING_365_DAY_QUOTE_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all sell trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset."
                            },
                            "MOVING_365_DAY_QUOTE_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all unknown trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset."
                            },
                            "MOVING_365_DAY_OPEN": {
                              "type": "integer",
                              "description": "The price of the closest trade to the period start date (364 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 365 day value. Given in the quote asset."
                            },
                            "MOVING_365_DAY_HIGH": {
                              "type": "integer",
                              "description": "The highest price of the period. Here, the period runs from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset."
                            },
                            "MOVING_365_DAY_LOW": {
                              "type": "integer",
                              "description": "The lowest traded price of the period. Here, the period runs from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset."
                            },
                            "MOVING_365_DAY_TOTAL_TRADES": {
                              "type": "integer",
                              "description": "The total number of trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total)."
                            },
                            "MOVING_365_DAY_TOTAL_TRADES_BUY": {
                              "type": "integer",
                              "description": "The total number of buy trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total)."
                            },
                            "MOVING_365_DAY_TOTAL_TRADES_SELL": {
                              "type": "integer",
                              "description": "The total number of sell trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total)."
                            },
                            "MOVING_365_DAY_TOTAL_TRADES_UNKNOWN": {
                              "type": "integer",
                              "description": "The total number of unknown trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total)."
                            },
                            "LIFETIME_FIRST_TRADE_TS": {
                              "type": "integer",
                              "description": "The timestamp of the first trade ever recorded for the instrument"
                            },
                            "LIFETIME_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all trade quantities of all the trades of this instrument. Given in the base asset."
                            },
                            "LIFETIME_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all buy trade quantities of all the trades of this instrument. Given in the base asset."
                            },
                            "LIFETIME_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all sell trade quantities of all the trades of this instrument. Given in the base asset."
                            },
                            "LIFETIME_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all unknown trade quantities of all the trades of this instrument. Given in the base asset."
                            },
                            "LIFETIME_QUOTE_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all trade quote quantities of all the trades of this instrument. Given in the quote asset."
                            },
                            "LIFETIME_QUOTE_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all buy trade quote quantities of all the trades of this instrument. Given in the quote asset."
                            },
                            "LIFETIME_QUOTE_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all sell trade quote quantities of all the trades of this instrument. Given in the quote asset."
                            },
                            "LIFETIME_QUOTE_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all unknown trade quote quantities of all the trades of this instrument. Given in the quote asset."
                            },
                            "LIFETIME_OPEN": {
                              "type": "integer",
                              "description": "The price of the first trade of the instrument. Given in the quote asset."
                            },
                            "LIFETIME_HIGH": {
                              "type": "integer",
                              "description": "The price of the highest trade ever executed for this instrument. Given in the quote asset."
                            },
                            "LIFETIME_HIGH_TS": {
                              "type": "integer",
                              "description": "The the timestamp of the highest trade ever executed for this instrument. Given in the quote asset."
                            },
                            "LIFETIME_LOW": {
                              "type": "integer",
                              "description": "The price of the lowest trade ever executed for this instrument. Given in the quote asset."
                            },
                            "LIFETIME_LOW_TS": {
                              "type": "integer",
                              "description": "The timestamp of the lowest trade ever executed for this instrument. Given in the quote asset."
                            },
                            "LIFETIME_TOTAL_TRADES": {
                              "type": "integer",
                              "description": "The total number of all trades that have ever been executed for this instrument."
                            },
                            "LIFETIME_TOTAL_TRADES_BUY": {
                              "type": "integer",
                              "description": "The total number of all buy trades that have ever been executed for this instrument."
                            },
                            "LIFETIME_TOTAL_TRADES_SELL": {
                              "type": "integer",
                              "description": "The total number of all sell trades that have ever been executed for this instrument."
                            },
                            "LIFETIME_TOTAL_TRADES_UNKNOWN": {
                              "type": "integer",
                              "description": "The total number of all unknown trades that have ever been executed for this instrument."
                            }
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: instruments parameter. One or multiple instruments on coinbase not integrated yet or not supported. Instruments are case sensitive, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets/instruments endpoint for a list of all the supported TRADE_SPOT market and instrument combinations. Invalid instruments: INSTRUMENT-DOES-NOT-EXIST"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "instruments"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "INSTRUMENT-DOES-NOT-EXIST"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/spot/v1/historical/days": {
        "summary": "Historical OHLCV+ Day",
        "description": "",
        "get": {
          "tags": [
            "Spot"
          ],
          "operationId": "spot_v1_historical_days",
          "x-section": "Spot",
          "x-subsection": "Trade",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting historical entries you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,MAPPING,OHLC,OHLC_TRADE,TRADE,VOLUME",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The number of data points to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 30,
                "minimum": 1,
                "maximum": 5000
              }
            },
            {
              "name": "to_ts",
              "in": "query",
              "description": "Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "aggregate",
              "in": "query",
              "description": "The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "maximum": 30
              }
            },
            {
              "name": "fill",
              "in": "query",
              "description": "Boolean value, if set to false or 0 we will not return data points for periods with no trading activity.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "UNIT": {
                              "type": "string",
                              "description": "The unit of the historical period update: MINUTE for minute, HOUR for hour and DAY for day."
                            },
                            "TIMESTAMP": {
                              "type": "integer",
                              "description": "The timestamp in seconds of the beginning of the histo period. For minute it would be every minute at the beginning of the minute, for hour it would be the start of the hour and for daily it is 00:00 GMT."
                            },
                            "TYPE": {
                              "type": "string",
                              "description": "The type of the message."
                            },
                            "MARKET": {
                              "type": "string",
                              "description": "The market / exchange under consideration (e.g. gemini, kraken, coinbase, etc)."
                            },
                            "INSTRUMENT": {
                              "type": "string",
                              "description": "The unmapped instrument ID"
                            },
                            "MAPPED_INSTRUMENT": {
                              "type": "string",
                              "description": "The instrument ID, as derived from our mapping rules. This takes the form \"BASE-QUOTE\" (e.g. BTC-USD). Only available on instruments that have been mapped."
                            },
                            "BASE": {
                              "type": "string",
                              "description": "The mapped from asset (base / symbol/ coin) (e.g. BTC). Only available on instruments that have mapping."
                            },
                            "QUOTE": {
                              "type": "string",
                              "description": "The mapped to asset (quote / counter symbol / coin) (e.g. USD). Only available on instruments that have mapping."
                            },
                            "OPEN": {
                              "type": "integer",
                              "description": "The open price for the historical period, this is based on the closest trade before the period start."
                            },
                            "HIGH": {
                              "type": "integer",
                              "description": "The highest trade price in the time period. If there were no trades in the time period, the open price will be given."
                            },
                            "LOW": {
                              "type": "integer",
                              "description": "The lowest trade price in the time period. If there were no trades in the time period, the open price will be given."
                            },
                            "CLOSE": {
                              "type": "integer",
                              "description": "The price of the last trade in this time period. If there were no trades in the time period, the open price will be given."
                            },
                            "FIRST_TRADE_TIMESTAMP": {
                              "type": "integer",
                              "description": "The timestamp, in seconds, of the first trade in this time perio. This is only available when there is at least one trade in the time period."
                            },
                            "LAST_TRADE_TIMESTAMP": {
                              "type": "integer",
                              "description": "The timestamp, in seconds, of the last trade in this time period. This is only available when there is at least one trade in the time period."
                            },
                            "FIRST_TRADE_PRICE": {
                              "type": "integer",
                              "description": "The price of the first trade in the time period. This is only available when there is at least one trade in the time period."
                            },
                            "HIGH_TRADE_PRICE": {
                              "type": "integer",
                              "description": "The highest value of the trades in the time period. This is only available when there is at least one trade in the time period."
                            },
                            "HIGH_TRADE_TIMESTAMP": {
                              "type": "integer",
                              "description": "The timestamp, in seconds, of the highest trade in the time period. This is only available when there is at least one trade in the time period."
                            },
                            "LOW_TRADE_PRICE": {
                              "type": "integer",
                              "description": "The lowest value of the trades in the time period. This is only available when there is at least one trade in the time period."
                            },
                            "LOW_TRADE_TIMESTAMP": {
                              "type": "integer",
                              "description": "The timestamp, in seconds, of the lowest trade in the time period. This is only available when there is at least one trade in the time period."
                            },
                            "LAST_TRADE_PRICE": {
                              "type": "integer",
                              "description": "The last trade price in the time period. This is only available when there is at least one trade in the time period."
                            },
                            "TOTAL_TRADES": {
                              "type": "integer",
                              "description": "The total number of trades seen in this time period. If there were no trades in the time period, 0 will be returned."
                            },
                            "TOTAL_TRADES_BUY": {
                              "type": "integer",
                              "description": "The total number of BUY trades seen in this time period. If there were no trades in the time period, 0 will be returned."
                            },
                            "TOTAL_TRADES_SELL": {
                              "type": "integer",
                              "description": "The total number of SELL trades seen in this time period. If there were no trades in the time period, 0 will be returned."
                            },
                            "TOTAL_TRADES_UNKNOWN": {
                              "type": "integer",
                              "description": "The total number of UNKNOWN trades seen in this time period. If there were no trades in the time period, 0 will be returned."
                            },
                            "VOLUME": {
                              "type": "integer",
                              "description": "The sum of all the trade volumes in the from asset (base symbol / coin) for the time period. If there were no trades in the time period, 0 will be returned."
                            },
                            "QUOTE_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all the trade volumes in the To asset (quote/counter symbol/coin) for the time period. If there were no trades in the time period, 0 will be returned."
                            },
                            "VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all the BUY trade volumes in the from asset (base symbol / coin) for the time period."
                            },
                            "QUOTE_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all the BUY trade volumes in the to asset (quote/counter symbol/coin) for the time period."
                            },
                            "VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all the SELL trade volumes in the from asset (base symbol / coin) for the time period."
                            },
                            "QUOTE_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all the SELL trade volumes in the To asset (quote/counter symbol/coin) for the time period."
                            },
                            "VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all the UNKNOWN trade volumes in the from asset (base symbol / coin) for the time period."
                            },
                            "QUOTE_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all the UNKNOWN trade volumes in the To asset (quote/counter symbol/coin) for the time period."
                            }
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/spot/v1/historical/hours": {
        "summary": "Historical OHLCV+ Hour",
        "description": "",
        "get": {
          "tags": [
            "Spot"
          ],
          "operationId": "spot_v1_historical_hours",
          "x-section": "Spot",
          "x-subsection": "Trade",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting historical entries you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,MAPPING,OHLC,OHLC_TRADE,TRADE,VOLUME",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The number of data points to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 30,
                "minimum": 1,
                "maximum": 2000
              }
            },
            {
              "name": "to_ts",
              "in": "query",
              "description": "Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "aggregate",
              "in": "query",
              "description": "The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "maximum": 30
              }
            },
            {
              "name": "fill",
              "in": "query",
              "description": "Boolean value, if set to false or 0 we will not return data points for periods with no trading activity.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "UNIT": {
                              "type": "string",
                              "description": "The unit of the historical period update: MINUTE for minute, HOUR for hour and DAY for day."
                            },
                            "TIMESTAMP": {
                              "type": "integer",
                              "description": "The timestamp in seconds of the beginning of the histo period. For minute it would be every minute at the beginning of the minute, for hour it would be the start of the hour and for daily it is 00:00 GMT."
                            },
                            "TYPE": {
                              "type": "string",
                              "description": "The type of the message."
                            },
                            "MARKET": {
                              "type": "string",
                              "description": "The market / exchange under consideration (e.g. gemini, kraken, coinbase, etc)."
                            },
                            "INSTRUMENT": {
                              "type": "string",
                              "description": "The unmapped instrument ID"
                            },
                            "MAPPED_INSTRUMENT": {
                              "type": "string",
                              "description": "The instrument ID, as derived from our mapping rules. This takes the form \"BASE-QUOTE\" (e.g. BTC-USD). Only available on instruments that have been mapped."
                            },
                            "BASE": {
                              "type": "string",
                              "description": "The mapped from asset (base / symbol/ coin) (e.g. BTC). Only available on instruments that have mapping."
                            },
                            "QUOTE": {
                              "type": "string",
                              "description": "The mapped to asset (quote / counter symbol / coin) (e.g. USD). Only available on instruments that have mapping."
                            },
                            "OPEN": {
                              "type": "integer",
                              "description": "The open price for the historical period, this is based on the closest trade before the period start."
                            },
                            "HIGH": {
                              "type": "integer",
                              "description": "The highest trade price in the time period. If there were no trades in the time period, the open price will be given."
                            },
                            "LOW": {
                              "type": "integer",
                              "description": "The lowest trade price in the time period. If there were no trades in the time period, the open price will be given."
                            },
                            "CLOSE": {
                              "type": "integer",
                              "description": "The price of the last trade in this time period. If there were no trades in the time period, the open price will be given."
                            },
                            "FIRST_TRADE_TIMESTAMP": {
                              "type": "integer",
                              "description": "The timestamp, in seconds, of the first trade in this time perio. This is only available when there is at least one trade in the time period."
                            },
                            "LAST_TRADE_TIMESTAMP": {
                              "type": "integer",
                              "description": "The timestamp, in seconds, of the last trade in this time period. This is only available when there is at least one trade in the time period."
                            },
                            "FIRST_TRADE_PRICE": {
                              "type": "integer",
                              "description": "The price of the first trade in the time period. This is only available when there is at least one trade in the time period."
                            },
                            "HIGH_TRADE_PRICE": {
                              "type": "integer",
                              "description": "The highest value of the trades in the time period. This is only available when there is at least one trade in the time period."
                            },
                            "HIGH_TRADE_TIMESTAMP": {
                              "type": "integer",
                              "description": "The timestamp, in seconds, of the highest trade in the time period. This is only available when there is at least one trade in the time period."
                            },
                            "LOW_TRADE_PRICE": {
                              "type": "integer",
                              "description": "The lowest value of the trades in the time period. This is only available when there is at least one trade in the time period."
                            },
                            "LOW_TRADE_TIMESTAMP": {
                              "type": "integer",
                              "description": "The timestamp, in seconds, of the lowest trade in the time period. This is only available when there is at least one trade in the time period."
                            },
                            "LAST_TRADE_PRICE": {
                              "type": "integer",
                              "description": "The last trade price in the time period. This is only available when there is at least one trade in the time period."
                            },
                            "TOTAL_TRADES": {
                              "type": "integer",
                              "description": "The total number of trades seen in this time period. If there were no trades in the time period, 0 will be returned."
                            },
                            "TOTAL_TRADES_BUY": {
                              "type": "integer",
                              "description": "The total number of BUY trades seen in this time period. If there were no trades in the time period, 0 will be returned."
                            },
                            "TOTAL_TRADES_SELL": {
                              "type": "integer",
                              "description": "The total number of SELL trades seen in this time period. If there were no trades in the time period, 0 will be returned."
                            },
                            "TOTAL_TRADES_UNKNOWN": {
                              "type": "integer",
                              "description": "The total number of UNKNOWN trades seen in this time period. If there were no trades in the time period, 0 will be returned."
                            },
                            "VOLUME": {
                              "type": "integer",
                              "description": "The sum of all the trade volumes in the from asset (base symbol / coin) for the time period. If there were no trades in the time period, 0 will be returned."
                            },
                            "QUOTE_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all the trade volumes in the To asset (quote/counter symbol/coin) for the time period. If there were no trades in the time period, 0 will be returned."
                            },
                            "VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all the BUY trade volumes in the from asset (base symbol / coin) for the time period."
                            },
                            "QUOTE_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all the BUY trade volumes in the to asset (quote/counter symbol/coin) for the time period."
                            },
                            "VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all the SELL trade volumes in the from asset (base symbol / coin) for the time period."
                            },
                            "QUOTE_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all the SELL trade volumes in the To asset (quote/counter symbol/coin) for the time period."
                            },
                            "VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all the UNKNOWN trade volumes in the from asset (base symbol / coin) for the time period."
                            },
                            "QUOTE_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all the UNKNOWN trade volumes in the To asset (quote/counter symbol/coin) for the time period."
                            }
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/spot/v1/historical/minutes": {
        "summary": "Historical OHLCV+ Minute",
        "description": "",
        "get": {
          "tags": [
            "Spot"
          ],
          "operationId": "spot_v1_historical_minutes",
          "x-section": "Spot",
          "x-subsection": "Trade",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting historical entries you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,MAPPING,OHLC,OHLC_TRADE,TRADE,VOLUME",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The number of data points to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 30,
                "minimum": 1,
                "maximum": 2000
              }
            },
            {
              "name": "to_ts",
              "in": "query",
              "description": "Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "aggregate",
              "in": "query",
              "description": "The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "maximum": 30
              }
            },
            {
              "name": "fill",
              "in": "query",
              "description": "Boolean value, if set to false or 0 we will not return data points for periods with no trading activity.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "UNIT": {
                              "type": "string",
                              "description": "The unit of the historical period update: MINUTE for minute, HOUR for hour and DAY for day."
                            },
                            "TIMESTAMP": {
                              "type": "integer",
                              "description": "The timestamp in seconds of the beginning of the histo period. For minute it would be every minute at the beginning of the minute, for hour it would be the start of the hour and for daily it is 00:00 GMT."
                            },
                            "TYPE": {
                              "type": "string",
                              "description": "The type of the message."
                            },
                            "MARKET": {
                              "type": "string",
                              "description": "The market / exchange under consideration (e.g. gemini, kraken, coinbase, etc)."
                            },
                            "INSTRUMENT": {
                              "type": "string",
                              "description": "The unmapped instrument ID"
                            },
                            "MAPPED_INSTRUMENT": {
                              "type": "string",
                              "description": "The instrument ID, as derived from our mapping rules. This takes the form \"BASE-QUOTE\" (e.g. BTC-USD). Only available on instruments that have been mapped."
                            },
                            "BASE": {
                              "type": "string",
                              "description": "The mapped from asset (base / symbol/ coin) (e.g. BTC). Only available on instruments that have mapping."
                            },
                            "QUOTE": {
                              "type": "string",
                              "description": "The mapped to asset (quote / counter symbol / coin) (e.g. USD). Only available on instruments that have mapping."
                            },
                            "OPEN": {
                              "type": "integer",
                              "description": "The open price for the historical period, this is based on the closest trade before the period start."
                            },
                            "HIGH": {
                              "type": "integer",
                              "description": "The highest trade price in the time period. If there were no trades in the time period, the open price will be given."
                            },
                            "LOW": {
                              "type": "integer",
                              "description": "The lowest trade price in the time period. If there were no trades in the time period, the open price will be given."
                            },
                            "CLOSE": {
                              "type": "integer",
                              "description": "The price of the last trade in this time period. If there were no trades in the time period, the open price will be given."
                            },
                            "FIRST_TRADE_TIMESTAMP": {
                              "type": "integer",
                              "description": "The timestamp, in seconds, of the first trade in this time perio. This is only available when there is at least one trade in the time period."
                            },
                            "LAST_TRADE_TIMESTAMP": {
                              "type": "integer",
                              "description": "The timestamp, in seconds, of the last trade in this time period. This is only available when there is at least one trade in the time period."
                            },
                            "FIRST_TRADE_PRICE": {
                              "type": "integer",
                              "description": "The price of the first trade in the time period. This is only available when there is at least one trade in the time period."
                            },
                            "HIGH_TRADE_PRICE": {
                              "type": "integer",
                              "description": "The highest value of the trades in the time period. This is only available when there is at least one trade in the time period."
                            },
                            "HIGH_TRADE_TIMESTAMP": {
                              "type": "integer",
                              "description": "The timestamp, in seconds, of the highest trade in the time period. This is only available when there is at least one trade in the time period."
                            },
                            "LOW_TRADE_PRICE": {
                              "type": "integer",
                              "description": "The lowest value of the trades in the time period. This is only available when there is at least one trade in the time period."
                            },
                            "LOW_TRADE_TIMESTAMP": {
                              "type": "integer",
                              "description": "The timestamp, in seconds, of the lowest trade in the time period. This is only available when there is at least one trade in the time period."
                            },
                            "LAST_TRADE_PRICE": {
                              "type": "integer",
                              "description": "The last trade price in the time period. This is only available when there is at least one trade in the time period."
                            },
                            "TOTAL_TRADES": {
                              "type": "integer",
                              "description": "The total number of trades seen in this time period. If there were no trades in the time period, 0 will be returned."
                            },
                            "TOTAL_TRADES_BUY": {
                              "type": "integer",
                              "description": "The total number of BUY trades seen in this time period. If there were no trades in the time period, 0 will be returned."
                            },
                            "TOTAL_TRADES_SELL": {
                              "type": "integer",
                              "description": "The total number of SELL trades seen in this time period. If there were no trades in the time period, 0 will be returned."
                            },
                            "TOTAL_TRADES_UNKNOWN": {
                              "type": "integer",
                              "description": "The total number of UNKNOWN trades seen in this time period. If there were no trades in the time period, 0 will be returned."
                            },
                            "VOLUME": {
                              "type": "integer",
                              "description": "The sum of all the trade volumes in the from asset (base symbol / coin) for the time period. If there were no trades in the time period, 0 will be returned."
                            },
                            "QUOTE_VOLUME": {
                              "type": "integer",
                              "description": "The sum of all the trade volumes in the To asset (quote/counter symbol/coin) for the time period. If there were no trades in the time period, 0 will be returned."
                            },
                            "VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all the BUY trade volumes in the from asset (base symbol / coin) for the time period."
                            },
                            "QUOTE_VOLUME_BUY": {
                              "type": "integer",
                              "description": "The sum of all the BUY trade volumes in the to asset (quote/counter symbol/coin) for the time period."
                            },
                            "VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all the SELL trade volumes in the from asset (base symbol / coin) for the time period."
                            },
                            "QUOTE_VOLUME_SELL": {
                              "type": "integer",
                              "description": "The sum of all the SELL trade volumes in the To asset (quote/counter symbol/coin) for the time period."
                            },
                            "VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all the UNKNOWN trade volumes in the from asset (base symbol / coin) for the time period."
                            },
                            "QUOTE_VOLUME_UNKNOWN": {
                              "type": "integer",
                              "description": "The sum of all the UNKNOWN trade volumes in the To asset (quote/counter symbol/coin) for the time period."
                            }
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/spot/v1/historical/trades": {
        "summary": "Historical Trades By Timestamp",
        "description": "",
        "get": {
          "tags": [
            "Spot"
          ],
          "operationId": "spot_v1_historical_trades",
          "x-section": "Spot",
          "x-subsection": "Trade",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "after_ts",
              "in": "query",
              "description": "Unix timestamp in seconds of the earliest trade in the response.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "minimum": 0
              }
            },
            {
              "name": "last_ccseq",
              "in": "query",
              "description": "The CCSEQ of the last message seen in the previous request. Useful for pagination within messages that happened in the same second. It will look though the messages in the same second and discard all messages until it reaches the CCSEQ from the last_ccseq parameter. If the CCSEQ is not part of that second, it will discard all messages in the second and only return messages starting from the next second onwards. When starting an integration with our API, on the first request, you should either not send a value for this paramater (defaults to 0 and does not discard any messages) or send 0. After you get a response use the TIMESTAMP and CCSEQ from the last message in the response. Pass the TIMESTAMP in the after_ts parameter and the CCSEQ in the last_ccseq parameter on your next request.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 0,
                "minimum": 0
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The maximum number of trades to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 100,
                "minimum": 1,
                "maximum": 5000
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            },
            {
              "name": "return_404_on_empty_response",
              "in": "query",
              "description": "If set to false (default) then when there are no items to return, you will get a response status code of 200 and an empty JSON array or a CSV file with just the header. If set to true then when there are no items you will get a 404 status code for both JSON and CSV response_formats.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "TYPE": {
                              "type": "string",
                              "description": "The type of the message."
                            },
                            "MARKET": {
                              "type": "string",
                              "description": "The market / exchange under consideration (e.g. Coinbase, Kraken, etc.)."
                            },
                            "INSTRUMENT": {
                              "type": "string",
                              "description": "The unmapped instrument ID as given by the exchange (e.g. BTCUSD, BTC_USD, XBT-ZUSD, BTC-USD)."
                            },
                            "MAPPED_INSTRUMENT": {
                              "type": "string",
                              "description": "The mapped instrument ID, as derived from our mapping rules. This takes the form: \"BASE-QUOTE\". Only available on instruments that have been mapped (e.g. BTC-USD)."
                            },
                            "BASE": {
                              "type": "string",
                              "description": "The mapped from asset (base / symbol/ coin). Only available on instruments that have been mapped (e.g. BTC)."
                            },
                            "QUOTE": {
                              "type": "string",
                              "description": "The mapped to asset (quote / counter symbol / coin). Only available on instruments that have been mapped (e.g. USD)."
                            },
                            "SIDE": {
                              "type": "string",
                              "description": "The side of the trade: SELL, BUY or UNKNOWN. If the exchange / api does not provide a side, \"UNKNOWN\" will be returned."
                            },
                            "ID": {
                              "type": "string",
                              "description": "The trade ID as reported by the market / exchange. If the exchange does not provide a trade ID, this will be the timestamp of the trade + a number from 0 - 999. This preserves uniqueness, assuming there would never be more than 999 trades in any given second."
                            },
                            "TIMESTAMP": {
                              "type": "integer",
                              "description": "The timestamp in seconds as reported by the market / exchange or the received timestamp if the market / exchange does not provide one."
                            },
                            "TIMESTAMP_NS": {
                              "type": "integer",
                              "description": "The nanosecond part of the reported timestamp."
                            },
                            "RECEIVED_TIMESTAMP": {
                              "type": "integer",
                              "description": "The timestamp in seconds that the trade was received. This varies from the trade taking place on the market by a few millisconds to a few seconds depending on the market / exchange API options / rate limits."
                            },
                            "RECEIVED_TIMESTAMP_NS": {
                              "type": "integer",
                              "description": "The nanosecond part of the received timestamp."
                            },
                            "QUANTITY": {
                              "type": "integer",
                              "description": "The volume of the trade, given in the from instrument (base symbol / coin/ contract). For a spot BTC-USD trade, this is how much BTC was traded at the trade price. For a futures BTCUSDPERP, this is the BTC equivalent for the contracts traded."
                            },
                            "PRICE": {
                              "type": "integer",
                              "description": "The price in the to instrument (quote / counter symbol / coin) of the trade. For a BTC-USD trade, this is how much was paid for one BTC in USD. For futures, this will be the price of the contract."
                            },
                            "QUOTE_QUANTITY": {
                              "type": "integer",
                              "description": "The volume of the trade, given in the to instrument (quote / counter symbol / coin). This is equivalent to QUANTITY * PRICE. E.g. for a BTC-USD trade, this is how much USD was paid in total for the volume of BTC traded. For futures this is the quote currency equivalent for the contracts traded."
                            },
                            "SOURCE": {
                              "type": "string",
                              "description": "The source of the trade update: POLLING, STREAMING, GO, BLOB etc."
                            },
                            "CCSEQ": {
                              "type": "integer",
                              "description": "Our internal sequence number for this trade, this is unique per market / exchange and trading pair. Should always be increasing by 1 for each new trade we discover, not in chronological order."
                            }
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "api_key_query": []
            },
            {
              "api_key_header": []
            }
          ]
        }
      },
      "/spot/v1/historical/trades/hour": {
        "summary": "Historical Trades By Hour",
        "description": "You should use this endpoint to get a full hour of historical trades when catching up. For latest trades use the /spot/v1/historical/trades endpoint.",
        "get": {
          "tags": [
            "Spot"
          ],
          "operationId": "spot_v1_historical_trades_hour",
          "x-section": "Spot",
          "x-subsection": "Trade",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "hour_ts",
              "in": "query",
              "description": "Unix timestamp in seconds for the hour containing the trades you are interested in. You can pass any timestamp within an hour but we will round it down the the full hour timestmap and return all trades in that hour.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "minimum": 0
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            },
            {
              "name": "return_404_on_empty_response",
              "in": "query",
              "description": "If set to false (default) then when there are no items to return, you will get a response status code of 200 and an empty JSON array or a CSV file with just the header. If set to true then when there are no items you will get a 404 status code for both JSON and CSV response_formats.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "TYPE": {
                              "type": "string",
                              "description": "The type of the message."
                            },
                            "MARKET": {
                              "type": "string",
                              "description": "The market / exchange under consideration (e.g. Coinbase, Kraken, etc.)."
                            },
                            "INSTRUMENT": {
                              "type": "string",
                              "description": "The unmapped instrument ID as given by the exchange (e.g. BTCUSD, BTC_USD, XBT-ZUSD, BTC-USD)."
                            },
                            "MAPPED_INSTRUMENT": {
                              "type": "string",
                              "description": "The mapped instrument ID, as derived from our mapping rules. This takes the form: \"BASE-QUOTE\". Only available on instruments that have been mapped (e.g. BTC-USD)."
                            },
                            "BASE": {
                              "type": "string",
                              "description": "The mapped from asset (base / symbol/ coin). Only available on instruments that have been mapped (e.g. BTC)."
                            },
                            "QUOTE": {
                              "type": "string",
                              "description": "The mapped to asset (quote / counter symbol / coin). Only available on instruments that have been mapped (e.g. USD)."
                            },
                            "SIDE": {
                              "type": "string",
                              "description": "The side of the trade: SELL, BUY or UNKNOWN. If the exchange / api does not provide a side, \"UNKNOWN\" will be returned."
                            },
                            "ID": {
                              "type": "string",
                              "description": "The trade ID as reported by the market / exchange. If the exchange does not provide a trade ID, this will be the timestamp of the trade + a number from 0 - 999. This preserves uniqueness, assuming there would never be more than 999 trades in any given second."
                            },
                            "TIMESTAMP": {
                              "type": "integer",
                              "description": "The timestamp in seconds as reported by the market / exchange or the received timestamp if the market / exchange does not provide one."
                            },
                            "TIMESTAMP_NS": {
                              "type": "integer",
                              "description": "The nanosecond part of the reported timestamp."
                            },
                            "RECEIVED_TIMESTAMP": {
                              "type": "integer",
                              "description": "The timestamp in seconds that the trade was received. This varies from the trade taking place on the market by a few millisconds to a few seconds depending on the market / exchange API options / rate limits."
                            },
                            "RECEIVED_TIMESTAMP_NS": {
                              "type": "integer",
                              "description": "The nanosecond part of the received timestamp."
                            },
                            "QUANTITY": {
                              "type": "integer",
                              "description": "The volume of the trade, given in the from instrument (base symbol / coin/ contract). For a spot BTC-USD trade, this is how much BTC was traded at the trade price. For a futures BTCUSDPERP, this is the BTC equivalent for the contracts traded."
                            },
                            "PRICE": {
                              "type": "integer",
                              "description": "The price in the to instrument (quote / counter symbol / coin) of the trade. For a BTC-USD trade, this is how much was paid for one BTC in USD. For futures, this will be the price of the contract."
                            },
                            "QUOTE_QUANTITY": {
                              "type": "integer",
                              "description": "The volume of the trade, given in the to instrument (quote / counter symbol / coin). This is equivalent to QUANTITY * PRICE. E.g. for a BTC-USD trade, this is how much USD was paid in total for the volume of BTC traded. For futures this is the quote currency equivalent for the contracts traded."
                            },
                            "SOURCE": {
                              "type": "string",
                              "description": "The source of the trade update: POLLING, STREAMING, GO, BLOB etc."
                            },
                            "CCSEQ": {
                              "type": "integer",
                              "description": "Our internal sequence number for this trade, this is unique per market / exchange and trading pair. Should always be increasing by 1 for each new trade we discover, not in chronological order."
                            }
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "api_key_query": []
            },
            {
              "api_key_header": []
            }
          ]
        }
      },
      "/spot/v1/historical/orderbook/l2/snapshot/minute": {
        "summary": "Historical Order Book L2 Snapshot By Minute",
        "description": "",
        "get": {
          "tags": [
            "Spot"
          ],
          "operationId": "spot_v1_historical_orderbook_l2_snapshot_minute",
          "x-section": "Spot",
          "x-subsection": "Order Book",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "minute_ts",
              "in": "query",
              "description": "Unix timestamp in seconds for the minute of the orderbook snapshot you are interested in. You can pass any timestamp within a minute but we will round it down the the full minute timestmap and return the orderbook l2 snapshot at that minute.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "depth",
              "in": "query",
              "description": "The number of top bids and asks to return.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 50,
                "minimum": 1,
                "maximum": 20000
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "api_key_query": []
            },
            {
              "api_key_header": []
            }
          ]
        }
      },
      "/futures/v1/latest/instrument/metadata": {
        "summary": "Futures (V1) Instrument Latest Metadata",
        "description": "",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "futures_v1_latest_instrument_metadata",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instruments",
              "in": "query",
              "description": "A comma separated array of mapped and/or unmapped instruments to retrieve for a specific market (you can use either the instrument XXBTZUSD or mapped instrument (base - quote) BTC-USD on kraken as an example). We first check each instrument against the mapped list and then against the unmapped list but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "minItems": 1,
                "maxItems": 25,
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting metadata entries you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: STATUS,INTERNAL,GENERAL,MIGRATION,SOURCE",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/futures/v1/latest/tick": {
        "summary": "Futures (V1) Instrument Latest Tick",
        "description": "",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "futures_v1_latest_tick",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instruments",
              "in": "query",
              "description": "A comma separated array of mapped and/or unmapped instruments to retrieve for a specific market (you can use either the instrument XXBTZUSD or mapped instrument (base - quote) BTC-USD on kraken as an example). We first check each instrument against the mapped list and then against the unmapped list but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "minItems": 1,
                "maxItems": 25,
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting tick data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,MAPPING,VALUE,LAST_UPDATE,TOP_OF_BOOK,CURRENT_HOUR,CURRENT_DAY,CURRENT_WEEK,CURRENT_MONTH,CURRENT_YEAR,MOVING_24_HOUR,MOVING_7_DAY,MOVING_30_DAY,MOVING_90_DAY,MOVING_180_DAY,MOVING_365_DAY,LIFETIME",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/futures/v1/latest/open-interest/tick": {
        "summary": "Futures (V1) Instrument Latest Open Interest Tick",
        "description": "",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "futures_v1_latest_open_interest_tick",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instruments",
              "in": "query",
              "description": "A comma separated array of mapped and/or unmapped instruments to retrieve for a specific market (you can use either the instrument XXBTZUSD or mapped instrument (base - quote) BTC-USD on kraken as an example). We first check each instrument against the mapped list and then against the unmapped list but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "minItems": 1,
                "maxItems": 25,
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting tick data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,MAPPING,VALUE,LAST_UPDATE,CURRENT_HOUR,CURRENT_DAY,CURRENT_WEEK,CURRENT_MONTH,CURRENT_YEAR,MOVING_24_HOUR,MOVING_7_DAY,MOVING_30_DAY,MOVING_90_DAY,MOVING_180_DAY,MOVING_365_DAY,LIFETIME",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/futures/v1/latest/funding-rate/tick": {
        "summary": "Futures (V1) Instrument Latest Funding Rate Tick",
        "description": "Funding rate is only available for PERPETUAL instruments.",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "futures_v1_latest_funding_rate_tick",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instruments",
              "in": "query",
              "description": "A comma separated array of mapped and/or unmapped instruments to retrieve for a specific market (you can use either the instrument XXBTZUSD or mapped instrument (base - quote) BTC-USD on kraken as an example). We first check each instrument against the mapped list and then against the unmapped list but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "minItems": 1,
                "maxItems": 25,
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting tick data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,MAPPING,VALUE,LAST_UPDATE,CURRENT_HOUR,CURRENT_DAY,CURRENT_WEEK,CURRENT_MONTH,CURRENT_YEAR,MOVING_24_HOUR,MOVING_7_DAY,MOVING_30_DAY,MOVING_90_DAY,MOVING_180_DAY,MOVING_365_DAY,LIFETIME",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/futures/v1/historical/days": {
        "summary": "Futures (V1) OHLCV+ Days",
        "description": "",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "futures_v1_historical_days",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting historical entries you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,MAPPING,OHLC,OHLC_TRADE,TRADE,VOLUME",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The number of data points to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 30,
                "minimum": 1,
                "maximum": 5000
              }
            },
            {
              "name": "to_ts",
              "in": "query",
              "description": "Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "aggregate",
              "in": "query",
              "description": "The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "maximum": 30
              }
            },
            {
              "name": "fill",
              "in": "query",
              "description": "Boolean value, if set to false or 0 we will not return data points for periods with no trading activity.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/futures/v1/historical/open-interest/days": {
        "summary": "Futures (V1) OHLCV+ Open Interest Days",
        "description": "",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "futures_v1_historical_open_interest_days",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting historical entries you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,MAPPING,OHLC,OHLC_MESSAGE,MESSAGE",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The number of data points to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 30,
                "minimum": 1,
                "maximum": 5000
              }
            },
            {
              "name": "to_ts",
              "in": "query",
              "description": "Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "aggregate",
              "in": "query",
              "description": "The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "maximum": 30
              }
            },
            {
              "name": "fill",
              "in": "query",
              "description": "Boolean value, if set to false or 0 we will not return data points for periods with no trading activity.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/futures/v1/historical/funding-rate/days": {
        "summary": "Futures (V1) OHLCV+ Funding Rate Days",
        "description": "Funding rate is only available for PERPETUAL instruments.",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "futures_v1_historical_funding_rate_days",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting historical entries you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,MAPPING,VALUE,OHLC,OHLC_MESSAGE,MESSAGE",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The number of data points to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 30,
                "minimum": 1,
                "maximum": 5000
              }
            },
            {
              "name": "to_ts",
              "in": "query",
              "description": "Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "aggregate",
              "in": "query",
              "description": "The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "maximum": 30
              }
            },
            {
              "name": "fill",
              "in": "query",
              "description": "Boolean value, if set to false or 0 we will not return data points for periods with no trading activity.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/futures/v1/historical/hours": {
        "summary": "Futures (V1) OHLCV+ Hours",
        "description": "",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "futures_v1_historical_hours",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting historical entries you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,MAPPING,OHLC,OHLC_TRADE,TRADE,VOLUME",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The number of data points to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 30,
                "minimum": 1,
                "maximum": 2000
              }
            },
            {
              "name": "to_ts",
              "in": "query",
              "description": "Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "aggregate",
              "in": "query",
              "description": "The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "maximum": 30
              }
            },
            {
              "name": "fill",
              "in": "query",
              "description": "Boolean value, if set to false or 0 we will not return data points for periods with no trading activity.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/futures/v1/historical/open-interest/hours": {
        "summary": "Futures (V1) OHLCV+ Open Interest Hours",
        "description": "",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "futures_v1_historical_open_interest_hours",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting historical entries you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,MAPPING,OHLC,OHLC_MESSAGE,MESSAGE",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The number of data points to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 30,
                "minimum": 1,
                "maximum": 2000
              }
            },
            {
              "name": "to_ts",
              "in": "query",
              "description": "Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "aggregate",
              "in": "query",
              "description": "The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "maximum": 30
              }
            },
            {
              "name": "fill",
              "in": "query",
              "description": "Boolean value, if set to false or 0 we will not return data points for periods with no trading activity.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/futures/v1/historical/funding-rate/hours": {
        "summary": "Futures (V1) OHLCV+ Funding Rate Hours",
        "description": "Funding rate is only available for PERPETUAL instruments.",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "futures_v1_historical_funding_rate_hours",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting historical entries you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,MAPPING,VALUE,OHLC,OHLC_MESSAGE,MESSAGE",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The number of data points to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 30,
                "minimum": 1,
                "maximum": 2000
              }
            },
            {
              "name": "to_ts",
              "in": "query",
              "description": "Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "aggregate",
              "in": "query",
              "description": "The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "maximum": 30
              }
            },
            {
              "name": "fill",
              "in": "query",
              "description": "Boolean value, if set to false or 0 we will not return data points for periods with no trading activity.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/futures/v1/historical/minutes": {
        "summary": "Futures (V1) OHLCV+ Minutes",
        "description": "",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "futures_v1_historical_minutes",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting historical entries you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,MAPPING,OHLC,OHLC_TRADE,TRADE,VOLUME",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The number of data points to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 30,
                "minimum": 1,
                "maximum": 2000
              }
            },
            {
              "name": "to_ts",
              "in": "query",
              "description": "Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "aggregate",
              "in": "query",
              "description": "The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "maximum": 30
              }
            },
            {
              "name": "fill",
              "in": "query",
              "description": "Boolean value, if set to false or 0 we will not return data points for periods with no trading activity.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/futures/v1/historical/open-interest/minutes": {
        "summary": "Futures (V1) OHLCV+ Open Interest Minutes",
        "description": "",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "futures_v1_historical_open_interest_minutes",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting historical entries you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,MAPPING,OHLC,OHLC_MESSAGE,MESSAGE",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The number of data points to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 30,
                "minimum": 1,
                "maximum": 2000
              }
            },
            {
              "name": "to_ts",
              "in": "query",
              "description": "Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "aggregate",
              "in": "query",
              "description": "The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "maximum": 30
              }
            },
            {
              "name": "fill",
              "in": "query",
              "description": "Boolean value, if set to false or 0 we will not return data points for periods with no trading activity.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/futures/v1/historical/funding-rate/minutes": {
        "summary": "Futures (V1) OHLCV+ Funding Rate Minutes",
        "description": "Funding rate is only available for PERPETUAL instruments.",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "futures_v1_historical_funding_rate_minutes",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting historical entries you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,MAPPING,VALUE,OHLC,OHLC_MESSAGE,MESSAGE",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The number of data points to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 30,
                "minimum": 1,
                "maximum": 2000
              }
            },
            {
              "name": "to_ts",
              "in": "query",
              "description": "Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "aggregate",
              "in": "query",
              "description": "The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "maximum": 30
              }
            },
            {
              "name": "fill",
              "in": "query",
              "description": "Boolean value, if set to false or 0 we will not return data points for periods with no trading activity.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/futures/v1/historical/trades/hour": {
        "summary": "Futures (V1) Historical Trades by Hour Timestamp",
        "description": "You should use this endpoint get a full hour of historical trades when catching up. For latest trades use the /futures/v1/historical/trades endpoint.",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "futures_v1_historical_trades_hour",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "hour_ts",
              "in": "query",
              "description": "Unix timestamp in seconds for the hour containing the trades you are interested in. You can pass any timestamp within an hour but we will round it down the the full hour timestmap and return all trades in that hour.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "minimum": 0
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            },
            {
              "name": "return_404_on_empty_response",
              "in": "query",
              "description": "If set to false (default) then when there are no items to return, you will get a response status code of 200 and an empty JSON array or a CSV file with just the header. If set to true then when there are no items you will get a 404 status code for both JSON and CSV response_formats.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "api_key_query": []
            },
            {
              "api_key_header": []
            }
          ]
        }
      },
      "/futures/v1/historical/open-interest-messages/hour": {
        "summary": "Futures (V1) Historical Open Interest Messages by Hour Timestamp",
        "description": "TYou should use this endpoint to get a full hour of historical open interest messages when catching up. For latest open interest messages use the /futures/v1/historical/open-interest-messages endpoint.",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "futures_v1_historical_open_interest_messages_hour",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "hour_ts",
              "in": "query",
              "description": "Unix timestamp in seconds for the hour containing the open interest updates you are interested in. You can pass any timestamp in the hour but we will round it down the the full hour timestmap and return all open interest updates in that hour.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "minimum": 0
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            },
            {
              "name": "return_404_on_empty_response",
              "in": "query",
              "description": "If set to false (default) then when there are no items to return, you will get a response status code of 200 and an empty JSON array or a CSV file with just the header. If set to true then when there are no items you will get a 404 status code for both JSON and CSV response_formats.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "api_key_query": []
            },
            {
              "api_key_header": []
            }
          ]
        }
      },
      "/futures/v1/historical/funding-rate-messages/hour": {
        "summary": "Futures (V1) Historical Funding Rate Messages by Hour Timestamp",
        "description": "Funding rate is only available for PERPETUAL instruments. You should use this endpoint to get a full hour of historical funding rate messages when catching up. For latest funding rate messages use the /futures/v1/historical/funding-rate-messages endpoint.",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "futures_v1_historical_funding_rate_messages_hour",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "hour_ts",
              "in": "query",
              "description": "Unix timestamp in seconds for the hour containing the funding rate updates you are interested in. You can pass any timestamp in the hour but we will round it down the the full hour timestmap and return all funding rate updates in that hour.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "minimum": 0
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            },
            {
              "name": "return_404_on_empty_response",
              "in": "query",
              "description": "If set to false (default) then when there are no items to return, you will get a response status code of 200 and an empty JSON array or a CSV file with just the header. If set to true then when there are no items you will get a 404 status code for both JSON and CSV response_formats.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "api_key_query": []
            },
            {
              "api_key_header": []
            }
          ]
        }
      },
      "/futures/v1/historical/trades": {
        "summary": "Futures (V1) Historical Trades",
        "description": "",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "futures_v1_historical_trades",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "after_ts",
              "in": "query",
              "description": "Unix timestamp in seconds of the earliest trade in the response.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "minimum": 0
              }
            },
            {
              "name": "last_ccseq",
              "in": "query",
              "description": "The CCSEQ of the last message seen in the previous request. Useful for pagination within messages that happened in the same second. It will look though the messages in the same second and discard all messages until it reaches the CCSEQ from the last_ccseq parameter. If the CCSEQ is not part of that second, it will discard all messages in the second and only return messages starting from the next second onwards. When starting an integration with our API, on the first request, you should either not send a value for this paramater (defaults to 0 and does not discard any messages) or send 0. After you get a response use the TIMESTAMP and CCSEQ from the last message in the response. Pass the TIMESTAMP in the after_ts parameter and the CCSEQ in the last_ccseq parameter on your next request.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 0,
                "minimum": 0
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The maximum number of trades to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 100,
                "minimum": 1,
                "maximum": 5000
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            },
            {
              "name": "return_404_on_empty_response",
              "in": "query",
              "description": "If set to false (default) then when there are no items to return, you will get a response status code of 200 and an empty JSON array or a CSV file with just the header. If set to true then when there are no items you will get a 404 status code for both JSON and CSV response_formats.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "api_key_query": []
            },
            {
              "api_key_header": []
            }
          ]
        }
      },
      "/futures/v1/historical/open-interest-messages": {
        "summary": "Futures (V1) Historical Open Interest Messages",
        "description": "",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "futures_v1_historical_open_interest_messages",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "after_ts",
              "in": "query",
              "description": "Unix timestamp in seconds of the earliest open interest message in the response",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "minimum": 0
              }
            },
            {
              "name": "last_ccseq",
              "in": "query",
              "description": "The CCSEQ of the last message seen in the previous request. Useful for pagination within messages that happened in the same second. It will look though the messages in the same second and discard all messages until it reaches the CCSEQ from the last_ccseq parameter. If the CCSEQ is not part of that second, it will discard all messages in the second and only return messages starting from the next second onwards. When starting an integration with our API, on the first request, you should either not send a value for this paramater (defaults to 0 and does not discard any messages) or send 0. After you get a response use the TIMESTAMP and CCSEQ from the last message in the response. Pass the TIMESTAMP in the after_ts parameter and the CCSEQ in the last_ccseq parameter on your next request.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 0,
                "minimum": 0
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The maximum number of open interest messages to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 100,
                "minimum": 1,
                "maximum": 5000
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            },
            {
              "name": "return_404_on_empty_response",
              "in": "query",
              "description": "If set to false (default) then when there are no items to return, you will get a response status code of 200 and an empty JSON array or a CSV file with just the header. If set to true then when there are no items you will get a 404 status code for both JSON and CSV response_formats.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "api_key_query": []
            },
            {
              "api_key_header": []
            }
          ]
        }
      },
      "/futures/v1/historical/funding-rate-messages": {
        "summary": "Futures (V1) Historical Funding Rate Messages",
        "description": "Funding rate is only available for PERPETUAL instruments.",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "futures_v1_historical_funding_rate_messages",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "after_ts",
              "in": "query",
              "description": "Unix timestamp in seconds of the earliest funding rate message in the response",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "minimum": 0
              }
            },
            {
              "name": "last_ccseq",
              "in": "query",
              "description": "The CCSEQ of the last message seen in the previous request. Useful for pagination within messages that happened in the same second. It will look though the messages in the same second and discard all messages until it reaches the CCSEQ from the last_ccseq parameter. If the CCSEQ is not part of that second, it will discard all messages in the second and only return messages starting from the next second onwards. When starting an integration with our API, on the first request, you should either not send a value for this paramater (defaults to 0 and does not discard any messages) or send 0. After you get a response use the TIMESTAMP and CCSEQ from the last message in the response. Pass the TIMESTAMP in the after_ts parameter and the CCSEQ in the last_ccseq parameter on your next request.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 0,
                "minimum": 0
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The maximum number of funding rate messages to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 100,
                "minimum": 1,
                "maximum": 5000
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            },
            {
              "name": "return_404_on_empty_response",
              "in": "query",
              "description": "If set to false (default) then when there are no items to return, you will get a response status code of 200 and an empty JSON array or a CSV file with just the header. If set to true then when there are no items you will get a 404 status code for both JSON and CSV response_formats.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "api_key_query": []
            },
            {
              "api_key_header": []
            }
          ]
        }
      },
      "/futures/v1/markets": {
        "summary": "Futures (V1) Available Markets",
        "description": "",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "futures_v1_markets",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "",
                "minLength": 0,
                "maxLength": 30
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/futures/v1/markets/instruments": {
        "summary": "Futures (V1) Available Markets and Instruments",
        "description": "",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "futures_v1_markets_instruments",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "",
                "minLength": 0,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped instrument to retrieve on a specific market.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "",
                "minLength": 0,
                "maxLength": 30
              }
            },
            {
              "name": "instrument_status",
              "in": "query",
              "description": "The status of the instrument, can be one of the following: ACTIVE, IGNORED, RETIRED, EXPIRED",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string",
                  "enum": [
                    "ACTIVE",
                    "IGNORED",
                    "RETIRED",
                    "EXPIRED"
                  ]
                }
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/futures/v1/markets/instruments/unmapped": {
        "summary": "Futures (V1) Available Markets and Unmapped Instruments",
        "description": "",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "futures_v1_markets_instruments_unmapped",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "",
                "minLength": 0,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The unmapped instrument to retrieve on a specific market.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "",
                "minLength": 0,
                "maxLength": 30
              }
            },
            {
              "name": "instrument_status",
              "in": "query",
              "description": "The status of the instrument, can be one of the following: ACTIVE, IGNORED, RETIRED, EXPIRED",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string",
                  "enum": [
                    "ACTIVE",
                    "IGNORED",
                    "RETIRED",
                    "EXPIRED"
                  ]
                }
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/index/v1/latest/instrument/metadata": {
        "summary": "Index (V1) Instrument Latest Metadata",
        "description": "",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "index_v1_latest_instrument_metadata",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instruments",
              "in": "query",
              "description": "A comma separated array of mapped and/or unmapped instruments to retrieve for a specific market (you can use either the instrument XXBTZUSD or mapped instrument (base - quote) BTC-USD on kraken as an example). We first check each instrument against the mapped list and then against the unmapped list but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "minItems": 1,
                "maxItems": 25,
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting metadata entries you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: STATUS,INTERNAL,GENERAL,MIGRATION,SOURCE",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/index/v1/latest/tick": {
        "summary": "Index (V1) Instrument Latest Tick",
        "description": "",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "index_v1_latest_tick",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instruments",
              "in": "query",
              "description": "A comma separated array of mapped and/or unmapped instruments to retrieve for a specific market (you can use either the instrument XXBTZUSD or mapped instrument (base - quote) BTC-USD on kraken as an example). We first check each instrument against the mapped list and then against the unmapped list but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "minItems": 1,
                "maxItems": 25,
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting tick data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,VALUE,LAST_UPDATE,CURRENT_HOUR,CURRENT_DAY,CURRENT_WEEK,CURRENT_MONTH,CURRENT_YEAR,MOVING_24_HOUR,MOVING_7_DAY,MOVING_30_DAY,MOVING_90_DAY,MOVING_180_DAY,MOVING_365_DAY,LIFETIME",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/index/v1/historical/days": {
        "summary": "Index (V1) OHLCV+ Days",
        "description": "",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "index_v1_historical_days",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting historical entries you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,OHLC,OHLC_MESSAGE,MESSAGE,VOLUME",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The number of data points to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 30,
                "minimum": 1,
                "maximum": 5000
              }
            },
            {
              "name": "to_ts",
              "in": "query",
              "description": "Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "aggregate",
              "in": "query",
              "description": "The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "maximum": 30
              }
            },
            {
              "name": "fill",
              "in": "query",
              "description": "Boolean value, if set to false or 0 we will not return data points for periods with no trading activity.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/index/v1/historical/hours": {
        "summary": "Index (V1) OHLCV+ Hours",
        "description": "",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "index_v1_historical_hours",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting historical entries you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,OHLC,OHLC_MESSAGE,MESSAGE,VOLUME",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The number of data points to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 30,
                "minimum": 1,
                "maximum": 2000
              }
            },
            {
              "name": "to_ts",
              "in": "query",
              "description": "Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "aggregate",
              "in": "query",
              "description": "The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "maximum": 30
              }
            },
            {
              "name": "fill",
              "in": "query",
              "description": "Boolean value, if set to false or 0 we will not return data points for periods with no trading activity.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/index/v1/historical/minutes": {
        "summary": "Index (V1) OHLCV+ Minutes",
        "description": "",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "index_v1_historical_minutes",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting historical entries you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,OHLC,OHLC_MESSAGE,MESSAGE,VOLUME",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The number of data points to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 30,
                "minimum": 1,
                "maximum": 2000
              }
            },
            {
              "name": "to_ts",
              "in": "query",
              "description": "Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "aggregate",
              "in": "query",
              "description": "The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "maximum": 30
              }
            },
            {
              "name": "fill",
              "in": "query",
              "description": "Boolean value, if set to false or 0 we will not return data points for periods with no trading activity.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/index/v1/historical/messages/hour": {
        "summary": "Index (V1) Historical Messages by Hour Timestamp",
        "description": "You should use this endpoint to get a full hour of historical messages when catching up. For latest messages use the /index/v1/historical/messages endpoint.",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "index_v1_historical_messages_hour",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "hour_ts",
              "in": "query",
              "description": "Unix timestamp in seconds for the hour containing the index updates you are interested in. You can pass any timestamp in the hour but we will round it down the the full hour timestmap and return all index updates in that hour.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "minimum": 0
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            },
            {
              "name": "return_404_on_empty_response",
              "in": "query",
              "description": "If set to false (default) then when there are no items to return, you will get a response status code of 200 and an empty JSON array or a CSV file with just the header. If set to true then when there are no items you will get a 404 status code for both JSON and CSV response_formats.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "api_key_query": []
            },
            {
              "api_key_header": []
            }
          ]
        }
      },
      "/index/v1/historical/messages": {
        "summary": "Index (V1) Historical Messages",
        "description": "",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "index_v1_historical_messages",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "after_ts",
              "in": "query",
              "description": "Unix timestamp in seconds of the earliest index message in the response",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "minimum": 0
              }
            },
            {
              "name": "last_ccseq",
              "in": "query",
              "description": "The CCSEQ of the last message seen in the previous request. Useful for pagination within messages that happened in the same second. It will look though the messages in the same second and discard all messages until it reaches the CCSEQ from the last_ccseq parameter. If the CCSEQ is not part of that second, it will discard all messages in the second and only return messages starting from the next second onwards. When starting an integration with our API, on the first request, you should either not send a value for this paramater (defaults to 0 and does not discard any messages) or send 0. After you get a response use the TIMESTAMP and CCSEQ from the last message in the response. Pass the TIMESTAMP in the after_ts parameter and the CCSEQ in the last_ccseq parameter on your next request.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 0,
                "minimum": 0
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The maximum number of index messages to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 100,
                "minimum": 1,
                "maximum": 5000
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            },
            {
              "name": "return_404_on_empty_response",
              "in": "query",
              "description": "If set to false (default) then when there are no items to return, you will get a response status code of 200 and an empty JSON array or a CSV file with just the header. If set to true then when there are no items you will get a 404 status code for both JSON and CSV response_formats.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "api_key_query": []
            },
            {
              "api_key_header": []
            }
          ]
        }
      },
      "/index/v1/markets": {
        "summary": "Index (V1) Available Markets",
        "description": "",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "index_v1_markets",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "",
                "minLength": 0,
                "maxLength": 30
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/index/v1/markets/instruments": {
        "summary": "Index (V1) Available Markets and Instruments",
        "description": "",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "index_v1_markets_instruments",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "",
                "minLength": 0,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped instrument to retrieve on a specific market.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "",
                "minLength": 0,
                "maxLength": 30
              }
            },
            {
              "name": "instrument_status",
              "in": "query",
              "description": "The status of the instrument, can be one of the following: ACTIVE, IGNORED, RETIRED, EXPIRED",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string",
                  "enum": [
                    "ACTIVE",
                    "IGNORED",
                    "RETIRED",
                    "EXPIRED"
                  ]
                }
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/index/v1/markets/instruments/unmapped": {
        "summary": "Index (V1) Available Markets and Unmapped Instruments",
        "description": "",
        "get": {
          "tags": [
            "Futures"
          ],
          "operationId": "index_v1_markets_instruments_unmapped",
          "x-section": "Futures",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "",
                "minLength": 0,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The unmapped instrument to retrieve on a specific market.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "",
                "minLength": 0,
                "maxLength": 30
              }
            },
            {
              "name": "instrument_status",
              "in": "query",
              "description": "The status of the instrument, can be one of the following: ACTIVE, IGNORED, RETIRED, EXPIRED",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string",
                  "enum": [
                    "ACTIVE",
                    "IGNORED",
                    "RETIRED",
                    "EXPIRED"
                  ]
                }
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/index/cc/v1/latest/instrument/metadata": {
        "summary": "Index (V1) Instrument Latest Metadata",
        "description": "",
        "get": {
          "tags": [
            "Reference Rates"
          ],
          "operationId": "index_cc_v1_latest_instrument_metadata",
          "x-section": "Reference Rates",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instruments",
              "in": "query",
              "description": "A comma separated array of mapped and/or unmapped instruments to retrieve for a specific market (you can use either the instrument XXBTZUSD or mapped instrument (base - quote) BTC-USD on kraken as an example). We first check each instrument against the mapped list and then against the unmapped list but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "minItems": 1,
                "maxItems": 25,
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting metadata entries you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: STATUS,INTERNAL,GENERAL,MIGRATION,SOURCE",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/index/cc/v1/latest/tick": {
        "summary": "Index (V1) Instrument Latest Tick",
        "description": "",
        "get": {
          "tags": [
            "Reference Rates"
          ],
          "operationId": "index_cc_v1_latest_tick",
          "x-section": "Reference Rates",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instruments",
              "in": "query",
              "description": "A comma separated array of mapped and/or unmapped instruments to retrieve for a specific market (you can use either the instrument XXBTZUSD or mapped instrument (base - quote) BTC-USD on kraken as an example). We first check each instrument against the mapped list and then against the unmapped list but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "minItems": 1,
                "maxItems": 25,
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting tick data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,VALUE,LAST_UPDATE,CURRENT_HOUR,CURRENT_DAY,CURRENT_WEEK,CURRENT_MONTH,CURRENT_YEAR,MOVING_24_HOUR,MOVING_7_DAY,MOVING_30_DAY,MOVING_90_DAY,MOVING_180_DAY,MOVING_365_DAY,LIFETIME",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/index/cc/v1/historical/days": {
        "summary": "Index (V1) OHLCV+ Days",
        "description": "",
        "get": {
          "tags": [
            "Reference Rates"
          ],
          "operationId": "index_cc_v1_historical_days",
          "x-section": "Reference Rates",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting historical entries you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,OHLC,OHLC_MESSAGE,MESSAGE,VOLUME",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The number of data points to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 30,
                "minimum": 1,
                "maximum": 5000
              }
            },
            {
              "name": "to_ts",
              "in": "query",
              "description": "Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "aggregate",
              "in": "query",
              "description": "The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "maximum": 30
              }
            },
            {
              "name": "fill",
              "in": "query",
              "description": "Boolean value, if set to false or 0 we will not return data points for periods with no trading activity.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/index/cc/v1/historical/hours": {
        "summary": "Index (V1) OHLCV+ Hours",
        "description": "",
        "get": {
          "tags": [
            "Reference Rates"
          ],
          "operationId": "index_cc_v1_historical_hours",
          "x-section": "Reference Rates",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting historical entries you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,OHLC,OHLC_MESSAGE,MESSAGE,VOLUME",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The number of data points to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 30,
                "minimum": 1,
                "maximum": 2000
              }
            },
            {
              "name": "to_ts",
              "in": "query",
              "description": "Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "aggregate",
              "in": "query",
              "description": "The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "maximum": 30
              }
            },
            {
              "name": "fill",
              "in": "query",
              "description": "Boolean value, if set to false or 0 we will not return data points for periods with no trading activity.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/index/cc/v1/historical/minutes": {
        "summary": "Index (V1) OHLCV+ Minutes",
        "description": "",
        "get": {
          "tags": [
            "Reference Rates"
          ],
          "operationId": "index_cc_v1_historical_minutes",
          "x-section": "Reference Rates",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting historical entries you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,OHLC,OHLC_MESSAGE,MESSAGE,VOLUME",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The number of data points to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 30,
                "minimum": 1,
                "maximum": 2000
              }
            },
            {
              "name": "to_ts",
              "in": "query",
              "description": "Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "aggregate",
              "in": "query",
              "description": "The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "maximum": 30
              }
            },
            {
              "name": "fill",
              "in": "query",
              "description": "Boolean value, if set to false or 0 we will not return data points for periods with no trading activity.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/index/cc/v1/historical/messages/hour": {
        "summary": "Index (V1) Historical Messages by Hour Timestamp",
        "description": "You should use this endpoint to get a full hour of historical messages when catching up. For latest messages use the /index/cc/v1/historical/messages endpoint.",
        "get": {
          "tags": [
            "Reference Rates"
          ],
          "operationId": "index_cc_v1_historical_messages_hour",
          "x-section": "Reference Rates",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "hour_ts",
              "in": "query",
              "description": "Unix timestamp in seconds for the hour containing the index updates you are interested in. You can pass any timestamp in the hour but we will round it down the the full hour timestmap and return all index updates in that hour.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "minimum": 0
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            },
            {
              "name": "return_404_on_empty_response",
              "in": "query",
              "description": "If set to false (default) then when there are no items to return, you will get a response status code of 200 and an empty JSON array or a CSV file with just the header. If set to true then when there are no items you will get a 404 status code for both JSON and CSV response_formats.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "api_key_query": []
            },
            {
              "api_key_header": []
            }
          ]
        }
      },
      "/index/cc/v1/historical/messages": {
        "summary": "Index (V1) Historical Messages",
        "description": "",
        "get": {
          "tags": [
            "Reference Rates"
          ],
          "operationId": "index_cc_v1_historical_messages",
          "x-section": "Reference Rates",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 2,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped or unmapped instrument to retrieve on a specific market. We first check the instrument against the mapped list and then against the unmapped list \n        but you can use the mapping_priority param to check the unmapped list first.",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "after_ts",
              "in": "query",
              "description": "Unix timestamp in seconds of the earliest index message in the response",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "minimum": 0
              }
            },
            {
              "name": "last_ccseq",
              "in": "query",
              "description": "The CCSEQ of the last message seen in the previous request. Useful for pagination within messages that happened in the same second. It will look though the messages in the same second and discard all messages until it reaches the CCSEQ from the last_ccseq parameter. If the CCSEQ is not part of that second, it will discard all messages in the second and only return messages starting from the next second onwards. When starting an integration with our API, on the first request, you should either not send a value for this paramater (defaults to 0 and does not discard any messages) or send 0. After you get a response use the TIMESTAMP and CCSEQ from the last message in the response. Pass the TIMESTAMP in the after_ts parameter and the CCSEQ in the last_ccseq parameter on your next request.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 0,
                "minimum": 0
              }
            },
            {
              "name": "mapping_priority",
              "in": "query",
              "description": "The mapping priority of the instrument. It is set to CHECK_MAPPED_FIRST by default. It can be one of the following: CHECK_MAPPED_FIRST,CHECK_UNMAPPED_FIRST",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CHECK_MAPPED_FIRST",
                "enum": [
                  "CHECK_MAPPED_FIRST",
                  "CHECK_UNMAPPED_FIRST"
                ]
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The maximum number of index messages to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 100,
                "minimum": 1,
                "maximum": 5000
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            },
            {
              "name": "return_404_on_empty_response",
              "in": "query",
              "description": "If set to false (default) then when there are no items to return, you will get a response status code of 200 and an empty JSON array or a CSV file with just the header. If set to true then when there are no items you will get a 404 status code for both JSON and CSV response_formats.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "api_key_query": []
            },
            {
              "api_key_header": []
            }
          ]
        }
      },
      "/index/cc/v1/markets": {
        "summary": "Index (V1) Available Markets",
        "description": "",
        "get": {
          "tags": [
            "Reference Rates"
          ],
          "operationId": "index_cc_v1_markets",
          "x-section": "Reference Rates",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "",
                "minLength": 0,
                "maxLength": 30
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/index/cc/v1/markets/instruments": {
        "summary": "Index (V1) Available Markets and Instruments",
        "description": "",
        "get": {
          "tags": [
            "Reference Rates"
          ],
          "operationId": "index_cc_v1_markets_instruments",
          "x-section": "Reference Rates",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "",
                "minLength": 0,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The mapped instrument to retrieve on a specific market.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "",
                "minLength": 0,
                "maxLength": 30
              }
            },
            {
              "name": "instrument_status",
              "in": "query",
              "description": "The status of the instrument, can be one of the following: ACTIVE, IGNORED, RETIRED, EXPIRED",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string",
                  "enum": [
                    "ACTIVE",
                    "IGNORED",
                    "RETIRED",
                    "EXPIRED"
                  ]
                }
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/index/cc/v1/markets/instruments/unmapped": {
        "summary": "Index (V1) Available Markets and Unmapped Instruments",
        "description": "",
        "get": {
          "tags": [
            "Reference Rates"
          ],
          "operationId": "index_cc_v1_markets_instruments_unmapped",
          "x-section": "Reference Rates",
          "parameters": [
            {
              "name": "market",
              "in": "query",
              "description": "The exchange to obtain data from",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "",
                "minLength": 0,
                "maxLength": 30
              }
            },
            {
              "name": "instrument",
              "in": "query",
              "description": "The unmapped instrument to retrieve on a specific market.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "",
                "minLength": 0,
                "maxLength": 30
              }
            },
            {
              "name": "instrument_status",
              "in": "query",
              "description": "The status of the instrument, can be one of the following: ACTIVE, IGNORED, RETIRED, EXPIRED",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string",
                  "enum": [
                    "ACTIVE",
                    "IGNORED",
                    "RETIRED",
                    "EXPIRED"
                  ]
                }
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/overview/v1/latest/marketcap/all/tick": {
        "summary": "Overview (V1) MarketCap Tick",
        "description": "",
        "get": {
          "tags": [
            "Overview"
          ],
          "operationId": "overview_v1_latest_marketcap_all_tick",
          "x-section": "Overview",
          "parameters": [
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting all market cap tick data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,VALUE,LAST_UPDATE,CURRENT_HOUR,CURRENT_DAY,MOVING_24_HOUR",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/overview/v1/historical/marketcap/all/assets/days": {
        "summary": "Overview (V1) Historical MarketCap Days",
        "description": "",
        "get": {
          "tags": [
            "Overview"
          ],
          "operationId": "overview_v1_historical_marketcap_all_assets_days",
          "x-section": "Overview",
          "parameters": [
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting all market cap historical data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,OHLC,VOLUME",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The number of data points to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 30,
                "minimum": 1,
                "maximum": 2000
              }
            },
            {
              "name": "to_ts",
              "in": "query",
              "description": "Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "aggregate",
              "in": "query",
              "description": "The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "maximum": 30
              }
            },
            {
              "name": "fill",
              "in": "query",
              "description": "Boolean value, if set to false or 0 we will not return data points for periods with no trading activity.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/overview/v1/historical/marketcap/all/assets/hours": {
        "summary": "Overview (V1) Historical MarketCap Hours",
        "description": "",
        "get": {
          "tags": [
            "Overview"
          ],
          "operationId": "overview_v1_historical_marketcap_all_assets_hours",
          "x-section": "Overview",
          "parameters": [
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting all market cap historical data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,OHLC,VOLUME",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The number of data points to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 30,
                "minimum": 1,
                "maximum": 2000
              }
            },
            {
              "name": "to_ts",
              "in": "query",
              "description": "Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "aggregate",
              "in": "query",
              "description": "The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "maximum": 30
              }
            },
            {
              "name": "fill",
              "in": "query",
              "description": "Boolean value, if set to false or 0 we will not return data points for periods with no trading activity.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/overview/v1/latest/marketcap/ftw/tick": {
        "summary": "Overview (V1) FTW Universe MarketCap Tick",
        "description": "",
        "get": {
          "tags": [
            "Overview"
          ],
          "operationId": "overview_v1_latest_marketcap_ftw_tick",
          "x-section": "Overview",
          "parameters": [
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting ftw universe market cap tick data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,VALUE,LAST_UPDATE,CURRENT_HOUR,CURRENT_DAY,MOVING_24_HOUR",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/overview/v1/historical/marketcap/ftw/assets/days": {
        "summary": "Overview (V1) Historical FTW Universe MarketCap Days",
        "description": "",
        "get": {
          "tags": [
            "Overview"
          ],
          "operationId": "overview_v1_historical_marketcap_ftw_assets_days",
          "x-section": "Overview",
          "parameters": [
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting ftw universe market cap historical data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,OHLC,VOLUME",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The number of data points to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 30,
                "minimum": 1,
                "maximum": 2000
              }
            },
            {
              "name": "to_ts",
              "in": "query",
              "description": "Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "aggregate",
              "in": "query",
              "description": "The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "maximum": 30
              }
            },
            {
              "name": "fill",
              "in": "query",
              "description": "Boolean value, if set to false or 0 we will not return data points for periods with no trading activity.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/overview/v1/historical/marketcap/ftw/assets/hours": {
        "summary": "Overview (V1) Historical FTW Universe MarketCap Hours",
        "description": "",
        "get": {
          "tags": [
            "Overview"
          ],
          "operationId": "overview_v1_historical_marketcap_ftw_assets_hours",
          "x-section": "Overview",
          "parameters": [
            {
              "name": "groups",
              "in": "query",
              "description": "When requesting ftw universe market cap historical data you can fiter by specific groups of interest. To do so just pass the groups of interest into the URL as a comma separted list. If left empty it will get all data that you account is allowed to access. The groups available are: ID,OHLC,VOLUME",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The number of data points to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 30,
                "minimum": 1,
                "maximum": 2000
              }
            },
            {
              "name": "to_ts",
              "in": "query",
              "description": "Returns historical data before this unix timestamp. If you want to get all the available historical data, you can use limit=2000 and keep going back in time using the to_ts param. You can then keep requesting batches using: &limit=2000&to_ts={the earliest unix timestamp received}",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "aggregate",
              "in": "query",
              "description": "The number of points to aggregate for each returned value. E.g. passing 5 on a minute histo data endpoint will return data at 5 minute intervals. You are still limited to a maximum of 2000 minute points so the maximum you can get is 400 5 minutes interval entries",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "maximum": 30
              }
            },
            {
              "name": "fill",
              "in": "query",
              "description": "Boolean value, if set to false or 0 we will not return data points for periods with no trading activity.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "boolean",
                "default": true
              }
            },
            {
              "name": "response_format",
              "in": "query",
              "description": "The format of the data response in uppercase. It can be one of the following: JSON,CSV",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "JSON",
                "enum": [
                  "JSON",
                  "CSV"
                ]
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/news/v1/source/list": {
        "summary": "Source: List",
        "description": "Get news sources",
        "get": {
          "tags": [
            "News"
          ],
          "operationId": "news_v1_source_list",
          "x-section": "News",
          "parameters": [
            {
              "name": "lang",
              "in": "query",
              "description": "The article source Preferred language - English (EN), Portuguese (PT), Espanol (ES)",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "EN",
                "enum": [
                  "EN",
                  "ES",
                  "PT",
                  ""
                ],
                "minLength": 1
              }
            },
            {
              "name": "type",
              "in": "query",
              "description": "RSS, API, TWITTER",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "RSS",
                "enum": [
                  "RSS",
                  "API",
                  "TWITTER",
                  ""
                ],
                "minLength": 1
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "The status for the  article source entry. Allowed values: ACTIVE, INACTIVE",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "ACTIVE",
                "enum": [
                  "ACTIVE",
                  "INACTIVE",
                  ""
                ],
                "minLength": 1
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/news/v1/category/list": {
        "summary": "Category: List",
        "description": "Get news categories",
        "get": {
          "tags": [
            "News"
          ],
          "operationId": "news_v1_category_list",
          "x-section": "News",
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/news/v1/article/list": {
        "summary": "Article: List",
        "description": "Get news articles",
        "get": {
          "tags": [
            "News"
          ],
          "operationId": "news_v1_article_list",
          "x-section": "News",
          "parameters": [
            {
              "name": "source_ids",
              "in": "query",
              "description": "Get articles from specific sources; either by their ids or keys",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [
                  ""
                ],
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "lang",
              "in": "query",
              "description": "The article Preferred language - English (EN), Portuguese (PT), Espanol (ES)",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "EN",
                "enum": [
                  "EN",
                  "ES",
                  "PT",
                  ""
                ],
                "minLength": 1
              }
            },
            {
              "name": "categories",
              "in": "query",
              "description": "News article categories to return",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [
                  ""
                ],
                "maxItems": 200,
                "items": {
                  "type": "string",
                  "enum": [
                    "1INCH",
                    "AAVE",
                    "ADA",
                    "ALGO",
                    "ALTCOIN",
                    "ASIA",
                    "ATOM",
                    "AVAX",
                    "AXS",
                    "BAL",
                    "BAT",
                    "BCH",
                    "BLOCKCHAIN",
                    "BTC",
                    "BUSINESS",
                    "COMMODITY",
                    "COMP",
                    "CRV",
                    "DASH",
                    "DOGE",
                    "DOT",
                    "ENJ",
                    "ETC",
                    "ETH",
                    "EXCHANGE",
                    "FIAT",
                    "FIL",
                    "FTM",
                    "ICO",
                    "KNC",
                    "LINK",
                    "LRC",
                    "LTC",
                    "LUNA",
                    "LUNC",
                    "MANA",
                    "MARKET",
                    "MATIC",
                    "MINING",
                    "MKR",
                    "REGULATION",
                    "REN",
                    "SAND",
                    "SHIB",
                    "SNX",
                    "SOL",
                    "SPONSORED",
                    "SUSHI",
                    "TECHNOLOGY",
                    "TRADING",
                    "TRX",
                    "UMA",
                    "UNI",
                    "USDT",
                    "WALLET",
                    "XLM",
                    "XMR",
                    "XRP",
                    "XTZ",
                    "YFI",
                    "ZEC",
                    "ZRX",
                    ""
                  ]
                }
              }
            },
            {
              "name": "exclude_categories",
              "in": "query",
              "description": "News article categories to exclude from results",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "array",
                "default": [
                  ""
                ],
                "maxItems": 200,
                "items": {
                  "type": "string",
                  "enum": [
                    "1INCH",
                    "AAVE",
                    "ADA",
                    "ALGO",
                    "ALTCOIN",
                    "ASIA",
                    "ATOM",
                    "AVAX",
                    "AXS",
                    "BAL",
                    "BAT",
                    "BCH",
                    "BLOCKCHAIN",
                    "BTC",
                    "BUSINESS",
                    "COMMODITY",
                    "COMP",
                    "CRV",
                    "DASH",
                    "DOGE",
                    "DOT",
                    "ENJ",
                    "ETC",
                    "ETH",
                    "EXCHANGE",
                    "FIAT",
                    "FIL",
                    "FTM",
                    "ICO",
                    "KNC",
                    "LINK",
                    "LRC",
                    "LTC",
                    "LUNA",
                    "LUNC",
                    "MANA",
                    "MARKET",
                    "MATIC",
                    "MINING",
                    "MKR",
                    "REGULATION",
                    "REN",
                    "SAND",
                    "SHIB",
                    "SNX",
                    "SOL",
                    "SPONSORED",
                    "SUSHI",
                    "TECHNOLOGY",
                    "TRADING",
                    "TRX",
                    "UMA",
                    "UNI",
                    "USDT",
                    "WALLET",
                    "XLM",
                    "XMR",
                    "XRP",
                    "XTZ",
                    "YFI",
                    "ZEC",
                    "ZRX",
                    ""
                  ]
                }
              }
            },
            {
              "name": "to_ts",
              "in": "query",
              "description": "Articles published on or before this timestamp",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": -1
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/asset/v1/data/by/symbol": {
        "summary": "Asset: By Symbol",
        "description": "Get overall asset info for a specific asset by symbol.",
        "get": {
          "tags": [
            "Asset"
          ],
          "operationId": "asset_v1_data_by_symbol",
          "x-section": "Asset",
          "parameters": [
            {
              "name": "asset_symbol",
              "in": "query",
              "description": "The asset symbol you are interested in",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100
              }
            },
            {
              "name": "groups",
              "in": "query",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "",
                "minLength": 0,
                "maxLength": 2000
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/asset/v1/data/by/id": {
        "summary": "Asset: By Id",
        "description": "Get overall asset info for a specific asset by asset id.",
        "get": {
          "tags": [
            "Asset"
          ],
          "operationId": "asset_v1_data_by_id",
          "x-section": "Asset",
          "parameters": [
            {
              "name": "asset_id",
              "in": "query",
              "description": "The asset id you are interested in",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "groups",
              "in": "query",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "",
                "minLength": 0,
                "maxLength": 2000
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/asset/v1/data/by/address": {
        "summary": "Asset: By Smart Contract Address",
        "description": "Get overall asset info for a specific asset by smart contract address and chain symbol.",
        "get": {
          "tags": [
            "Asset"
          ],
          "operationId": "asset_v1_data_by_address",
          "x-section": "Asset",
          "parameters": [
            {
              "name": "address",
              "in": "query",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 500
              }
            },
            {
              "name": "chain_symbol",
              "in": "query",
              "required": true,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100
              }
            },
            {
              "name": "groups",
              "in": "query",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "",
                "minLength": 0,
                "maxLength": 2000
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/asset/v1/top/list": {
        "summary": "Asset: Top List",
        "description": "Return a list of asset data sorted and filtered based on requested parameters.",
        "get": {
          "tags": [
            "Asset"
          ],
          "operationId": "asset_v1_top_list",
          "x-section": "Asset",
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "description": "The page number for the request to get {page_size} coins at the time.",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 1,
                "minimum": 1,
                "maximum": 100
              }
            },
            {
              "name": "page_size",
              "in": "query",
              "description": "The number of items returned per page",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "integer",
                "default": 100,
                "minimum": 10,
                "maximum": 100
              }
            },
            {
              "name": "asset_type",
              "in": "query",
              "description": "The asset class/type",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": ""
              }
            },
            {
              "name": "sort_by",
              "in": "query",
              "description": "Sort by field ( CREATED_ON,UPDATED_ON,SYMBOL )",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "CREATED_ON",
                "enum": [
                  "CREATED_ON",
                  "UPDATED_ON",
                  "SYMBOL"
                ]
              }
            },
            {
              "name": "sort_direction",
              "in": "query",
              "description": "Sort direction ( DESC,ASC )",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "DESC",
                "enum": [
                  "DESC",
                  "ASC"
                ]
              }
            },
            {
              "name": "groups",
              "in": "query",
              "required": false,
              "explode": false,
              "style": "form",
              "deprecated": false,
              "schema": {
                "type": "string",
                "default": "",
                "minLength": 0,
                "maxLength": 2000
              }
            }
          ],
          "deprecated": false,
          "responses": {
            "200": {
              "description": "Success response from the API.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {
                          "NO_DATA": {
                            "type": "string",
                            "description": "The endpoint does not have a reponse defined",
                            "example": "Please add a ResponseObject on the endpoint!"
                          }
                        }
                      },
                      "Err": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The 400 error occurs when some of the data sent is malformed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The 401 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The 403 error occurs when you don't use a valid API Key on an endpoint that requires authetication.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The 404 error can either be returned when some/all of parameters sent are not found within our system. This could be beacuse parameters like market, instrument, news source, symbol, asset_id etc. are invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "405": {
              "description": "The 405 error occurs the user tries to use a http method (GET,POST,PUT etc) that is not supported.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "The 429 error occurs when you go over the API Key limit. Rate limits are eforced on a second (resets every second), minute (resers every minute), hour (resets every hour), day (resets every day) and month (resets every month) granularity. You can upgrade your account and access higher rate limits.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The 500 error occurs our API is up but does not know how to / can't handle the request.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "502": {
              "description": "The 502 error occurs when our API is not running. This error is returned by our proxy / load balancer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "503": {
              "description": "The 503 error occurs when there is an issue with one of our data sources and we can't even return a partial answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Data": {
                        "type": "object",
                        "properties": {}
                      },
                      "Err": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "A public facing error type. If you want to treat a specific error use the type.",
                            "format": "int32",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "description": "A message describing the error",
                            "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                          },
                          "other_info": {
                            "type": "object",
                            "properties": {
                              "param": {
                                "type": "string",
                                "description": "The parameter that is resposible for the error",
                                "example": "market"
                              },
                              "values": {
                                "type": "array",
                                "description": "The values resposible for the error",
                                "example": [
                                  "test_market_does_not_exist"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "GENERIC_RESPONSE": {
          "type": "object",
          "properties": {
            "Data": {
              "type": "object",
              "properties": {
                "NO_DATA": {
                  "type": "string",
                  "description": "The endpoint does not have a reponse defined",
                  "example": "Please add a ResponseObject on the endpoint!"
                }
              }
            },
            "Err": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "Error": {
          "type": "object",
          "properties": {
            "Data": {
              "type": "object",
              "properties": {}
            },
            "Err": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "integer",
                  "description": "A public facing error type. If you want to treat a specific error use the type.",
                  "format": "int32",
                  "example": 1
                },
                "message": {
                  "type": "string",
                  "description": "A message describing the error",
                  "example": "Not found: market parameter. Value test_market_does_not_exist not integrated yet. We list all markets in lowercase and transform the parameter sent, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets endpoint for a list of all the supported TRADE_SPOT markets"
                },
                "other_info": {
                  "type": "object",
                  "properties": {
                    "param": {
                      "type": "string",
                      "description": "The parameter that is resposible for the error",
                      "example": "market"
                    },
                    "values": {
                      "type": "array",
                      "description": "The values resposible for the error",
                      "example": [
                        "test_market_does_not_exist"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "SPOT_INSTRUMENT_METADATA": {
          "type": "object",
          "properties": {
            "METADATA_VERSION": {
              "type": "integer",
              "description": "The version of metadata, used for version conversions/migrates.",
              "default": 4,
              "example": 4
            },
            "INSTRUMENT_STATUS": {
              "type": "string",
              "description": "The status of the symbol, we only poll / stream / connect to the ACTIVE ones, for the RETIRED / IGNORED / EXPIRED  one we no longer query for data.",
              "default": "ACTIVE",
              "example": "ACTIVE"
            },
            "INSTRUMENT": {
              "type": "string",
              "description": "The instrument ID as it is on the exchange with small modifications - we do not allow the following characters inside isntrument ids: ,/&?"
            },
            "INSTRUMENT_MAPPING": {
              "type": "object",
              "description": "The current mapping information for this instrument",
              "properties": {},
              "default": {},
              "example": {}
            },
            "INSTRUMENT_MAPPING_HISTORY": {
              "type": "array",
              "description": "Historical mapping information for this instrument",
              "items": {
                "type": "string"
              },
              "default": [],
              "example": []
            },
            "INSTRUMENT_EXTERNAL_DATA": {
              "type": "string",
              "description": "The full data we get from the polling endpoint for this specific instrument. This is a JSON stringified object with different properties per exchange."
            },
            "PROCESSING_TRADES_FROM_BLOB_STATUS": {
              "type": "string",
              "description": "This states the status of blob migration for this intrument on this exchange."
            },
            "HOST_MIGRATION_STATUS": {
              "type": "string",
              "description": "The migration status of the symbol, we only poll / stream / connect empty or SETTLED"
            },
            "HOST_MIGRATION_SOURCE": {
              "type": "string",
              "description": "The migration source vm hostname."
            },
            "HOST_MIGRATION_DESTINATION": {
              "type": "string",
              "description": "The migration destination vm hostname."
            },
            "INSTRUMENT_TRADE_SPOT_REST_URI": {
              "type": "string",
              "description": "This is used to build up the request in some cases, this is where we put the id we use when querying for TRADE_SPOT."
            },
            "INSTRUMENT_TRADE_SPOT_REST_URL": {
              "type": "string",
              "description": "The URL we send to the proxy swarm to get TRADE_SPOT for the instrument."
            },
            "INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION": {
              "type": "string",
              "description": "This is used to build up the subscription in some cases, this is where we put the id we use when subscribing for TRADE_SPOT on this instrument."
            },
            "INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION": {
              "type": "boolean",
              "description": "This flags the exchange instrument as in ready to consume TRADE_SPOT via a streaming integration.",
              "default": false,
              "example": false
            },
            "TOTAL_TRADES_SPOT": {
              "type": "integer",
              "description": "This is both the CCSEQ and the total TRADES_SPOT we have processed on this instrument"
            },
            "LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS": {
              "type": "integer",
              "description": "The timestamp last encountered where the batch of trades from TRADES_SPOT all occured at the same time. This is an issue when making the next request that requires polling by timestamp as a start/from parameter"
            },
            "INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS": {
              "type": "integer",
              "description": "The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument."
            },
            "INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS": {
              "type": "integer",
              "description": "The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument."
            },
            "INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS": {
              "type": "integer",
              "description": "The next time we expect to make a request for TRADE_SPOT on this instrument."
            },
            "INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST": {
              "type": "object",
              "description": "The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.",
              "properties": {}
            },
            "FIRST_TRADE_SPOT_FROM_POLLING": {
              "type": "object",
              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in internal format.",
              "properties": {}
            },
            "LAST_TRADE_SPOT_FROM_POLLING": {
              "type": "object",
              "description": "This is the last TRADE_SPOT that we have seen on the specific source type in internal format.",
              "properties": {}
            },
            "FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL": {
              "type": "object",
              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in external format.",
              "properties": {}
            },
            "LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL": {
              "type": "object",
              "description": "This is the last TRADE_SPOT that we have seen on the specific trade source in external format.",
              "properties": {}
            },
            "UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA": {
              "type": "object",
              "description": "This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.",
              "properties": {}
            },
            "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS": {
              "type": "integer",
              "description": "The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument."
            },
            "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS": {
              "type": "integer",
              "description": "The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument."
            },
            "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS": {
              "type": "integer",
              "description": "The next time we expect to make a request for TRADE_SPOT on this instrument."
            },
            "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST": {
              "type": "object",
              "description": "The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.",
              "properties": {}
            },
            "FIRST_TRADE_SPOT_FROM_STREAMING": {
              "type": "object",
              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in internal format.",
              "properties": {}
            },
            "LAST_TRADE_SPOT_FROM_STREAMING": {
              "type": "object",
              "description": "This is the last TRADE_SPOT that we have seen on the specific source type in internal format.",
              "properties": {}
            },
            "FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL": {
              "type": "object",
              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in external format.",
              "properties": {}
            },
            "LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL": {
              "type": "object",
              "description": "This is the last TRADE_SPOT that we have seen on the specific trade source in external format.",
              "properties": {}
            },
            "UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA": {
              "type": "object",
              "description": "This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.",
              "properties": {}
            },
            "INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS": {
              "type": "integer",
              "description": "The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument."
            },
            "INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS": {
              "type": "integer",
              "description": "The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument."
            },
            "INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS": {
              "type": "integer",
              "description": "The next time we expect to make a request for TRADE_SPOT on this instrument."
            },
            "INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST": {
              "type": "object",
              "description": "The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.",
              "properties": {}
            },
            "FIRST_TRADE_SPOT_FROM_GO": {
              "type": "object",
              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in internal format.",
              "properties": {}
            },
            "LAST_TRADE_SPOT_FROM_GO": {
              "type": "object",
              "description": "This is the last TRADE_SPOT that we have seen on the specific source type in internal format.",
              "properties": {}
            },
            "FIRST_TRADE_SPOT_FROM_GO_EXTERNAL": {
              "type": "object",
              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in external format.",
              "properties": {}
            },
            "LAST_TRADE_SPOT_FROM_GO_EXTERNAL": {
              "type": "object",
              "description": "This is the last TRADE_SPOT that we have seen on the specific trade source in external format.",
              "properties": {}
            },
            "UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA": {
              "type": "object",
              "description": "This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.",
              "properties": {}
            },
            "INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS": {
              "type": "integer",
              "description": "The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument."
            },
            "INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS": {
              "type": "integer",
              "description": "The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument."
            },
            "INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS": {
              "type": "integer",
              "description": "The next time we expect to make a request for TRADE_SPOT on this instrument."
            },
            "INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST": {
              "type": "object",
              "description": "The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.",
              "properties": {}
            },
            "FIRST_TRADE_SPOT_FROM_BLOB": {
              "type": "object",
              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in internal format.",
              "properties": {}
            },
            "LAST_TRADE_SPOT_FROM_BLOB": {
              "type": "object",
              "description": "This is the last TRADE_SPOT that we have seen on the specific source type in internal format.",
              "properties": {}
            },
            "FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL": {
              "type": "object",
              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in external format.",
              "properties": {}
            },
            "LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL": {
              "type": "object",
              "description": "This is the last TRADE_SPOT that we have seen on the specific trade source in external format.",
              "properties": {}
            },
            "UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA": {
              "type": "object",
              "description": "This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.",
              "properties": {}
            },
            "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS": {
              "type": "integer",
              "description": "The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument."
            },
            "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS": {
              "type": "integer",
              "description": "The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument."
            },
            "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS": {
              "type": "integer",
              "description": "The next time we expect to make a request for TRADE_SPOT on this instrument."
            },
            "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST": {
              "type": "object",
              "description": "The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.",
              "properties": {}
            },
            "FIRST_TRADE_SPOT_FROM_CALCULATED": {
              "type": "object",
              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in internal format.",
              "properties": {}
            },
            "LAST_TRADE_SPOT_FROM_CALCULATED": {
              "type": "object",
              "description": "This is the last TRADE_SPOT that we have seen on the specific source type in internal format.",
              "properties": {}
            },
            "FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL": {
              "type": "object",
              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in external format.",
              "properties": {}
            },
            "LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL": {
              "type": "object",
              "description": "This is the last TRADE_SPOT that we have seen on the specific trade source in external format.",
              "properties": {}
            },
            "UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA": {
              "type": "object",
              "description": "This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.",
              "properties": {}
            },
            "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS": {
              "type": "integer",
              "description": "The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument."
            },
            "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS": {
              "type": "integer",
              "description": "The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument."
            },
            "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS": {
              "type": "integer",
              "description": "The next time we expect to make a request for TRADE_SPOT on this instrument."
            },
            "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST": {
              "type": "object",
              "description": "The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.",
              "properties": {}
            },
            "FIRST_TRADE_SPOT_FROM_BACKFILL": {
              "type": "object",
              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in internal format.",
              "properties": {}
            },
            "LAST_TRADE_SPOT_FROM_BACKFILL": {
              "type": "object",
              "description": "This is the last TRADE_SPOT that we have seen on the specific source type in internal format.",
              "properties": {}
            },
            "FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL": {
              "type": "object",
              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in external format.",
              "properties": {}
            },
            "LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL": {
              "type": "object",
              "description": "This is the last TRADE_SPOT that we have seen on the specific trade source in external format.",
              "properties": {}
            },
            "UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA": {
              "type": "object",
              "description": "This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.",
              "properties": {}
            },
            "INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS": {
              "type": "integer",
              "description": "The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument."
            },
            "INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS": {
              "type": "integer",
              "description": "The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument."
            },
            "INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS": {
              "type": "integer",
              "description": "The next time we expect to make a request for TRADE_SPOT on this instrument."
            },
            "INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST": {
              "type": "object",
              "description": "The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.",
              "properties": {}
            },
            "FIRST_TRADE_SPOT_FROM_FIX": {
              "type": "object",
              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in internal format.",
              "properties": {}
            },
            "LAST_TRADE_SPOT_FROM_FIX": {
              "type": "object",
              "description": "This is the last TRADE_SPOT that we have seen on the specific source type in internal format.",
              "properties": {}
            },
            "FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL": {
              "type": "object",
              "description": "This is the first TRADE_SPOT that we have seen on the specific source type in external format.",
              "properties": {}
            },
            "LAST_TRADE_SPOT_FROM_FIX_EXTERNAL": {
              "type": "object",
              "description": "This is the last TRADE_SPOT that we have seen on the specific trade source in external format.",
              "properties": {}
            },
            "UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA": {
              "type": "object",
              "description": "This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.",
              "properties": {}
            },
            "INSTRUMENT_SOURCE_POLLING": {
              "type": "string",
              "description": "Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from."
            },
            "INSTRUMENT_SOURCE_STREAMING": {
              "type": "string",
              "description": "Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from."
            },
            "INSTRUMENT_SOURCE_GO": {
              "type": "string",
              "description": "Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from."
            },
            "INSTRUMENT_SOURCE_BLOB": {
              "type": "string",
              "description": "Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from."
            },
            "INSTRUMENT_SOURCE_CALCULATED": {
              "type": "string",
              "description": "Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from."
            },
            "INSTRUMENT_SOURCE_BACKFILL": {
              "type": "string",
              "description": "Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from."
            },
            "INSTRUMENT_SOURCE_FIX": {
              "type": "string",
              "description": "Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from."
            },
            "FIRST_SEEN_ON_POLLING_TS": {
              "type": "integer",
              "description": "This is the first time instrument was seen on instrumentListSourceType POLLING."
            },
            "LAST_SEEN_ON_POLLING_TS": {
              "type": "integer",
              "description": "This is the last time instrument was seen on instrumentListSourceType POLLING."
            },
            "FIRST_SEEN_ON_STREAMING_TS": {
              "type": "integer",
              "description": "This is the first time instrument was seen on instrumentListSourceType STREAMING."
            },
            "LAST_SEEN_ON_STREAMING_TS": {
              "type": "integer",
              "description": "This is the last time instrument was seen on instrumentListSourceType STREAMING."
            },
            "FIRST_SEEN_ON_NSQ_TS": {
              "type": "integer",
              "description": "This is the first time instrument was seen on instrumentListSourceType NSQ."
            },
            "LAST_SEEN_ON_NSQ_TS": {
              "type": "integer",
              "description": "This is the last time instrument was seen on instrumentListSourceType NSQ."
            },
            "FIRST_SEEN_ON_BLOB_TS": {
              "type": "integer",
              "description": "This is the first time instrument was seen on instrumentListSourceType BLOB."
            },
            "LAST_SEEN_ON_BLOB_TS": {
              "type": "integer",
              "description": "This is the last time instrument was seen on instrumentListSourceType BLOB."
            },
            "FIRST_SEEN_ON_HARDCODED_TS": {
              "type": "integer",
              "description": "This is the first time instrument was seen on instrumentListSourceType HARDCODED."
            },
            "LAST_SEEN_ON_HARDCODED_TS": {
              "type": "integer",
              "description": "This is the last time instrument was seen on instrumentListSourceType HARDCODED."
            },
            "FIRST_SEEN_ON_INDEX_COMPOSITION_TS": {
              "type": "integer",
              "description": "This is the first time instrument was seen on instrumentListSourceType INDEX_COMPOSITION."
            },
            "LAST_SEEN_ON_INDEX_COMPOSITION_TS": {
              "type": "integer",
              "description": "This is the last time instrument was seen on instrumentListSourceType INDEX_COMPOSITION."
            },
            "FIRST_SEEN_ON_FIX_TS": {
              "type": "integer",
              "description": "This is the first time instrument was seen on instrumentListSourceType FIX."
            },
            "LAST_SEEN_ON_FIX_TS": {
              "type": "integer",
              "description": "This is the last time instrument was seen on instrumentListSourceType FIX."
            }
          }
        },
        "SPOT_INSTRUMENT_METADATA_RESPONSE": {
          "type": "object",
          "properties": {
            "Data": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "METADATA_VERSION": {
                    "type": "integer",
                    "description": "The version of metadata, used for version conversions/migrates.",
                    "default": 4,
                    "example": 4
                  },
                  "INSTRUMENT_STATUS": {
                    "type": "string",
                    "description": "The status of the symbol, we only poll / stream / connect to the ACTIVE ones, for the RETIRED / IGNORED / EXPIRED  one we no longer query for data.",
                    "default": "ACTIVE",
                    "example": "ACTIVE"
                  },
                  "INSTRUMENT": {
                    "type": "string",
                    "description": "The instrument ID as it is on the exchange with small modifications - we do not allow the following characters inside isntrument ids: ,/&?"
                  },
                  "INSTRUMENT_MAPPING": {
                    "type": "object",
                    "description": "The current mapping information for this instrument",
                    "properties": {},
                    "default": {},
                    "example": {}
                  },
                  "INSTRUMENT_MAPPING_HISTORY": {
                    "type": "array",
                    "description": "Historical mapping information for this instrument",
                    "items": {
                      "type": "string"
                    },
                    "default": [],
                    "example": []
                  },
                  "INSTRUMENT_EXTERNAL_DATA": {
                    "type": "string",
                    "description": "The full data we get from the polling endpoint for this specific instrument. This is a JSON stringified object with different properties per exchange."
                  },
                  "PROCESSING_TRADES_FROM_BLOB_STATUS": {
                    "type": "string",
                    "description": "This states the status of blob migration for this intrument on this exchange."
                  },
                  "HOST_MIGRATION_STATUS": {
                    "type": "string",
                    "description": "The migration status of the symbol, we only poll / stream / connect empty or SETTLED"
                  },
                  "HOST_MIGRATION_SOURCE": {
                    "type": "string",
                    "description": "The migration source vm hostname."
                  },
                  "HOST_MIGRATION_DESTINATION": {
                    "type": "string",
                    "description": "The migration destination vm hostname."
                  },
                  "INSTRUMENT_TRADE_SPOT_REST_URI": {
                    "type": "string",
                    "description": "This is used to build up the request in some cases, this is where we put the id we use when querying for TRADE_SPOT."
                  },
                  "INSTRUMENT_TRADE_SPOT_REST_URL": {
                    "type": "string",
                    "description": "The URL we send to the proxy swarm to get TRADE_SPOT for the instrument."
                  },
                  "INSTRUMENT_TRADE_SPOT_STREAMING_SUBSCRIPTION": {
                    "type": "string",
                    "description": "This is used to build up the subscription in some cases, this is where we put the id we use when subscribing for TRADE_SPOT on this instrument."
                  },
                  "INSTRUMENT_TRADE_SPOT_IS_READY_FOR_STREAMING_INTEGRATION": {
                    "type": "boolean",
                    "description": "This flags the exchange instrument as in ready to consume TRADE_SPOT via a streaming integration.",
                    "default": false,
                    "example": false
                  },
                  "TOTAL_TRADES_SPOT": {
                    "type": "integer",
                    "description": "This is both the CCSEQ and the total TRADES_SPOT we have processed on this instrument"
                  },
                  "LAST_CONCURRENT_BATCH_OF_TRADES_SPOT_MS": {
                    "type": "integer",
                    "description": "The timestamp last encountered where the batch of trades from TRADES_SPOT all occured at the same time. This is an issue when making the next request that requires polling by timestamp as a start/from parameter"
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_RESPONSE_TS": {
                    "type": "integer",
                    "description": "The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument."
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_LAST_REQUEST_TS": {
                    "type": "integer",
                    "description": "The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument."
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_POLLING_REST_URI_NEXT_REQUEST_TS": {
                    "type": "integer",
                    "description": "The next time we expect to make a request for TRADE_SPOT on this instrument."
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_POLLING_LAST_PROXIED_REST_REQUEST": {
                    "type": "object",
                    "description": "The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.",
                    "properties": {}
                  },
                  "FIRST_TRADE_SPOT_FROM_POLLING": {
                    "type": "object",
                    "description": "This is the first TRADE_SPOT that we have seen on the specific source type in internal format.",
                    "properties": {}
                  },
                  "LAST_TRADE_SPOT_FROM_POLLING": {
                    "type": "object",
                    "description": "This is the last TRADE_SPOT that we have seen on the specific source type in internal format.",
                    "properties": {}
                  },
                  "FIRST_TRADE_SPOT_FROM_POLLING_EXTERNAL": {
                    "type": "object",
                    "description": "This is the first TRADE_SPOT that we have seen on the specific source type in external format.",
                    "properties": {}
                  },
                  "LAST_TRADE_SPOT_FROM_POLLING_EXTERNAL": {
                    "type": "object",
                    "description": "This is the last TRADE_SPOT that we have seen on the specific trade source in external format.",
                    "properties": {}
                  },
                  "UNSTRUCTURED_TRADE_SPOT_FROM_POLLING_INTERNAL_DATA": {
                    "type": "object",
                    "description": "This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.",
                    "properties": {}
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_RESPONSE_TS": {
                    "type": "integer",
                    "description": "The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument."
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_LAST_REQUEST_TS": {
                    "type": "integer",
                    "description": "The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument."
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_REST_URI_NEXT_REQUEST_TS": {
                    "type": "integer",
                    "description": "The next time we expect to make a request for TRADE_SPOT on this instrument."
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_STREAMING_LAST_PROXIED_REST_REQUEST": {
                    "type": "object",
                    "description": "The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.",
                    "properties": {}
                  },
                  "FIRST_TRADE_SPOT_FROM_STREAMING": {
                    "type": "object",
                    "description": "This is the first TRADE_SPOT that we have seen on the specific source type in internal format.",
                    "properties": {}
                  },
                  "LAST_TRADE_SPOT_FROM_STREAMING": {
                    "type": "object",
                    "description": "This is the last TRADE_SPOT that we have seen on the specific source type in internal format.",
                    "properties": {}
                  },
                  "FIRST_TRADE_SPOT_FROM_STREAMING_EXTERNAL": {
                    "type": "object",
                    "description": "This is the first TRADE_SPOT that we have seen on the specific source type in external format.",
                    "properties": {}
                  },
                  "LAST_TRADE_SPOT_FROM_STREAMING_EXTERNAL": {
                    "type": "object",
                    "description": "This is the last TRADE_SPOT that we have seen on the specific trade source in external format.",
                    "properties": {}
                  },
                  "UNSTRUCTURED_TRADE_SPOT_FROM_STREAMING_INTERNAL_DATA": {
                    "type": "object",
                    "description": "This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.",
                    "properties": {}
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_RESPONSE_TS": {
                    "type": "integer",
                    "description": "The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument."
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_LAST_REQUEST_TS": {
                    "type": "integer",
                    "description": "The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument."
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_GO_REST_URI_NEXT_REQUEST_TS": {
                    "type": "integer",
                    "description": "The next time we expect to make a request for TRADE_SPOT on this instrument."
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_GO_LAST_PROXIED_REST_REQUEST": {
                    "type": "object",
                    "description": "The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.",
                    "properties": {}
                  },
                  "FIRST_TRADE_SPOT_FROM_GO": {
                    "type": "object",
                    "description": "This is the first TRADE_SPOT that we have seen on the specific source type in internal format.",
                    "properties": {}
                  },
                  "LAST_TRADE_SPOT_FROM_GO": {
                    "type": "object",
                    "description": "This is the last TRADE_SPOT that we have seen on the specific source type in internal format.",
                    "properties": {}
                  },
                  "FIRST_TRADE_SPOT_FROM_GO_EXTERNAL": {
                    "type": "object",
                    "description": "This is the first TRADE_SPOT that we have seen on the specific source type in external format.",
                    "properties": {}
                  },
                  "LAST_TRADE_SPOT_FROM_GO_EXTERNAL": {
                    "type": "object",
                    "description": "This is the last TRADE_SPOT that we have seen on the specific trade source in external format.",
                    "properties": {}
                  },
                  "UNSTRUCTURED_TRADE_SPOT_FROM_GO_INTERNAL_DATA": {
                    "type": "object",
                    "description": "This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.",
                    "properties": {}
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_RESPONSE_TS": {
                    "type": "integer",
                    "description": "The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument."
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_LAST_REQUEST_TS": {
                    "type": "integer",
                    "description": "The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument."
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_BLOB_REST_URI_NEXT_REQUEST_TS": {
                    "type": "integer",
                    "description": "The next time we expect to make a request for TRADE_SPOT on this instrument."
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_BLOB_LAST_PROXIED_REST_REQUEST": {
                    "type": "object",
                    "description": "The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.",
                    "properties": {}
                  },
                  "FIRST_TRADE_SPOT_FROM_BLOB": {
                    "type": "object",
                    "description": "This is the first TRADE_SPOT that we have seen on the specific source type in internal format.",
                    "properties": {}
                  },
                  "LAST_TRADE_SPOT_FROM_BLOB": {
                    "type": "object",
                    "description": "This is the last TRADE_SPOT that we have seen on the specific source type in internal format.",
                    "properties": {}
                  },
                  "FIRST_TRADE_SPOT_FROM_BLOB_EXTERNAL": {
                    "type": "object",
                    "description": "This is the first TRADE_SPOT that we have seen on the specific source type in external format.",
                    "properties": {}
                  },
                  "LAST_TRADE_SPOT_FROM_BLOB_EXTERNAL": {
                    "type": "object",
                    "description": "This is the last TRADE_SPOT that we have seen on the specific trade source in external format.",
                    "properties": {}
                  },
                  "UNSTRUCTURED_TRADE_SPOT_FROM_BLOB_INTERNAL_DATA": {
                    "type": "object",
                    "description": "This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.",
                    "properties": {}
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_RESPONSE_TS": {
                    "type": "integer",
                    "description": "The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument."
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_LAST_REQUEST_TS": {
                    "type": "integer",
                    "description": "The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument."
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_REST_URI_NEXT_REQUEST_TS": {
                    "type": "integer",
                    "description": "The next time we expect to make a request for TRADE_SPOT on this instrument."
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_CALCULATED_LAST_PROXIED_REST_REQUEST": {
                    "type": "object",
                    "description": "The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.",
                    "properties": {}
                  },
                  "FIRST_TRADE_SPOT_FROM_CALCULATED": {
                    "type": "object",
                    "description": "This is the first TRADE_SPOT that we have seen on the specific source type in internal format.",
                    "properties": {}
                  },
                  "LAST_TRADE_SPOT_FROM_CALCULATED": {
                    "type": "object",
                    "description": "This is the last TRADE_SPOT that we have seen on the specific source type in internal format.",
                    "properties": {}
                  },
                  "FIRST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL": {
                    "type": "object",
                    "description": "This is the first TRADE_SPOT that we have seen on the specific source type in external format.",
                    "properties": {}
                  },
                  "LAST_TRADE_SPOT_FROM_CALCULATED_EXTERNAL": {
                    "type": "object",
                    "description": "This is the last TRADE_SPOT that we have seen on the specific trade source in external format.",
                    "properties": {}
                  },
                  "UNSTRUCTURED_TRADE_SPOT_FROM_CALCULATED_INTERNAL_DATA": {
                    "type": "object",
                    "description": "This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.",
                    "properties": {}
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_RESPONSE_TS": {
                    "type": "integer",
                    "description": "The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument."
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_LAST_REQUEST_TS": {
                    "type": "integer",
                    "description": "The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument."
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_REST_URI_NEXT_REQUEST_TS": {
                    "type": "integer",
                    "description": "The next time we expect to make a request for TRADE_SPOT on this instrument."
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_BACKFILL_LAST_PROXIED_REST_REQUEST": {
                    "type": "object",
                    "description": "The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.",
                    "properties": {}
                  },
                  "FIRST_TRADE_SPOT_FROM_BACKFILL": {
                    "type": "object",
                    "description": "This is the first TRADE_SPOT that we have seen on the specific source type in internal format.",
                    "properties": {}
                  },
                  "LAST_TRADE_SPOT_FROM_BACKFILL": {
                    "type": "object",
                    "description": "This is the last TRADE_SPOT that we have seen on the specific source type in internal format.",
                    "properties": {}
                  },
                  "FIRST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL": {
                    "type": "object",
                    "description": "This is the first TRADE_SPOT that we have seen on the specific source type in external format.",
                    "properties": {}
                  },
                  "LAST_TRADE_SPOT_FROM_BACKFILL_EXTERNAL": {
                    "type": "object",
                    "description": "This is the last TRADE_SPOT that we have seen on the specific trade source in external format.",
                    "properties": {}
                  },
                  "UNSTRUCTURED_TRADE_SPOT_FROM_BACKFILL_INTERNAL_DATA": {
                    "type": "object",
                    "description": "This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.",
                    "properties": {}
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_RESPONSE_TS": {
                    "type": "integer",
                    "description": "The last time we received a request from the proxy swarm with TRADE_SPOT for this instrument."
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_LAST_REQUEST_TS": {
                    "type": "integer",
                    "description": "The last time we sent a request to the proxy swarm to get TRADE_SPOT for the instrument."
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_FIX_REST_URI_NEXT_REQUEST_TS": {
                    "type": "integer",
                    "description": "The next time we expect to make a request for TRADE_SPOT on this instrument."
                  },
                  "INSTRUMENT_TRADE_SPOT_FROM_FIX_LAST_PROXIED_REST_REQUEST": {
                    "type": "object",
                    "description": "The last proxied REST request we sent to the proxy swarm to get TRADE_SPOT for the instrument.",
                    "properties": {}
                  },
                  "FIRST_TRADE_SPOT_FROM_FIX": {
                    "type": "object",
                    "description": "This is the first TRADE_SPOT that we have seen on the specific source type in internal format.",
                    "properties": {}
                  },
                  "LAST_TRADE_SPOT_FROM_FIX": {
                    "type": "object",
                    "description": "This is the last TRADE_SPOT that we have seen on the specific source type in internal format.",
                    "properties": {}
                  },
                  "FIRST_TRADE_SPOT_FROM_FIX_EXTERNAL": {
                    "type": "object",
                    "description": "This is the first TRADE_SPOT that we have seen on the specific source type in external format.",
                    "properties": {}
                  },
                  "LAST_TRADE_SPOT_FROM_FIX_EXTERNAL": {
                    "type": "object",
                    "description": "This is the last TRADE_SPOT that we have seen on the specific trade source in external format.",
                    "properties": {}
                  },
                  "UNSTRUCTURED_TRADE_SPOT_FROM_FIX_INTERNAL_DATA": {
                    "type": "object",
                    "description": "This is any extra helper TRADE_SPOT data that we would need for creating polling requests or subscribing with non standard information and anything that is very specific to one exchange API/Integration and it does not fit any of the other existing fields and is definitly only updated or written in only one service.",
                    "properties": {}
                  },
                  "INSTRUMENT_SOURCE_POLLING": {
                    "type": "string",
                    "description": "Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from."
                  },
                  "INSTRUMENT_SOURCE_STREAMING": {
                    "type": "string",
                    "description": "Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from."
                  },
                  "INSTRUMENT_SOURCE_GO": {
                    "type": "string",
                    "description": "Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from."
                  },
                  "INSTRUMENT_SOURCE_BLOB": {
                    "type": "string",
                    "description": "Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from."
                  },
                  "INSTRUMENT_SOURCE_CALCULATED": {
                    "type": "string",
                    "description": "Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from."
                  },
                  "INSTRUMENT_SOURCE_BACKFILL": {
                    "type": "string",
                    "description": "Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from."
                  },
                  "INSTRUMENT_SOURCE_FIX": {
                    "type": "string",
                    "description": "Where do we get the instrument id / INSTRUMENT_{messageName}_REST_URI / INSTRUMENT_{messageName}_STREAMING_SUBSCRIPTION etc from."
                  },
                  "FIRST_SEEN_ON_POLLING_TS": {
                    "type": "integer",
                    "description": "This is the first time instrument was seen on instrumentListSourceType POLLING."
                  },
                  "LAST_SEEN_ON_POLLING_TS": {
                    "type": "integer",
                    "description": "This is the last time instrument was seen on instrumentListSourceType POLLING."
                  },
                  "FIRST_SEEN_ON_STREAMING_TS": {
                    "type": "integer",
                    "description": "This is the first time instrument was seen on instrumentListSourceType STREAMING."
                  },
                  "LAST_SEEN_ON_STREAMING_TS": {
                    "type": "integer",
                    "description": "This is the last time instrument was seen on instrumentListSourceType STREAMING."
                  },
                  "FIRST_SEEN_ON_NSQ_TS": {
                    "type": "integer",
                    "description": "This is the first time instrument was seen on instrumentListSourceType NSQ."
                  },
                  "LAST_SEEN_ON_NSQ_TS": {
                    "type": "integer",
                    "description": "This is the last time instrument was seen on instrumentListSourceType NSQ."
                  },
                  "FIRST_SEEN_ON_BLOB_TS": {
                    "type": "integer",
                    "description": "This is the first time instrument was seen on instrumentListSourceType BLOB."
                  },
                  "LAST_SEEN_ON_BLOB_TS": {
                    "type": "integer",
                    "description": "This is the last time instrument was seen on instrumentListSourceType BLOB."
                  },
                  "FIRST_SEEN_ON_HARDCODED_TS": {
                    "type": "integer",
                    "description": "This is the first time instrument was seen on instrumentListSourceType HARDCODED."
                  },
                  "LAST_SEEN_ON_HARDCODED_TS": {
                    "type": "integer",
                    "description": "This is the last time instrument was seen on instrumentListSourceType HARDCODED."
                  },
                  "FIRST_SEEN_ON_INDEX_COMPOSITION_TS": {
                    "type": "integer",
                    "description": "This is the first time instrument was seen on instrumentListSourceType INDEX_COMPOSITION."
                  },
                  "LAST_SEEN_ON_INDEX_COMPOSITION_TS": {
                    "type": "integer",
                    "description": "This is the last time instrument was seen on instrumentListSourceType INDEX_COMPOSITION."
                  },
                  "FIRST_SEEN_ON_FIX_TS": {
                    "type": "integer",
                    "description": "This is the first time instrument was seen on instrumentListSourceType FIX."
                  },
                  "LAST_SEEN_ON_FIX_TS": {
                    "type": "integer",
                    "description": "This is the last time instrument was seen on instrumentListSourceType FIX."
                  }
                }
              }
            },
            "Err": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "integer",
                  "description": "A public facing error type. If you want to treat a specific error use the type.",
                  "format": "int32",
                  "example": 1
                },
                "message": {
                  "type": "string",
                  "description": "A message describing the error",
                  "example": "Not found: instruments parameter. One or multiple instruments on coinbase not integrated yet or not supported. Instruments are case sensitive, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets/instruments endpoint for a list of all the supported TRADE_SPOT market and instrument combinations. Invalid instruments: INSTRUMENT-DOES-NOT-EXIST"
                },
                "other_info": {
                  "type": "object",
                  "properties": {
                    "param": {
                      "type": "string",
                      "description": "The parameter that is resposible for the error",
                      "example": "instruments"
                    },
                    "values": {
                      "type": "array",
                      "description": "The values resposible for the error",
                      "example": [
                        "INSTRUMENT-DOES-NOT-EXIST"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "SPOT_INSTRUMENT_MARKET_DATA": {
          "type": "object",
          "properties": {
            "TYPE": {
              "type": "string",
              "description": "The type of the message."
            },
            "MARKET": {
              "type": "string",
              "description": "The market / exchange under consideration (e.g. coinbase, kraken, etc)."
            },
            "INSTRUMENT": {
              "type": "string",
              "description": "The unmapped instrument ID"
            },
            "MAPPED_INSTRUMENT": {
              "type": "string",
              "description": "The mapped instrument ID, derived from our mapping rules. This takes the form: \"BASE-QUOTE\" (e.g. BTC-USD). Only available on instruments that have been mapped."
            },
            "BASE": {
              "type": "string",
              "description": "The mapped from asset (base / symbol/ coin), e.g. BTC. Only available on instruments that have been mapped."
            },
            "QUOTE": {
              "type": "string",
              "description": "The mapped to asset (quote / counter symbol / coin), e.g. USD. Only available on instruments that have been mapped."
            },
            "CCSEQ": {
              "type": "integer",
              "description": "Our internal sequence number for this tick update. This is unique per market / exchange and trading pair / instrument. It will always be increasing by 1 for each new tick update we send."
            },
            "PRICE": {
              "type": "integer",
              "description": "The price in the to asset (quote / number symbol / coin) of the latest trade. I.e. for a BTC-USD trade, how much was paid for one BTC in USD)."
            },
            "PRICE_FLAG": {
              "type": "string",
              "description": "The flag indicating whether the price has increased, decreased, or not changed"
            },
            "PRICE_LAST_UPDATE_TS": {
              "type": "integer",
              "description": "The timestamp in seconds as reported by the market / exchange. If the market /exchange does not provide this information, the received timestamp will be returned."
            },
            "LAST_TRADE_QUANTITY": {
              "type": "integer",
              "description": "The quantity of the latest trade in the from symbol (base / coin)."
            },
            "LAST_TRADE_QUOTE_QUANTITY": {
              "type": "integer",
              "description": "The volume of the latest trade in the to asset / quote."
            },
            "LAST_TRADE_ID": {
              "type": "string",
              "description": "The ID of the latest trade."
            },
            "LAST_TRADE_CCSEQ": {
              "type": "string",
              "description": "The CCSEQ of the latest trade."
            },
            "LAST_TRADE_SIDE": {
              "type": "string",
              "description": "The side of the latest trade."
            },
            "LAST_PROCESSED_TRADE_TS": {
              "type": "integer",
              "description": "The timestamp in seconds that the last trade was processed, as reported by the market / exchange. If the market / exchange does not provide this information, the timestamp that the trade was received will be returned."
            },
            "LAST_PROCESSED_TRADE_PRICE": {
              "type": "integer",
              "description": "The price in the quote asset of the last trade processed, as reported by the market / exchange."
            },
            "LAST_PROCESSED_TRADE_QUANTITY": {
              "type": "integer",
              "description": "The quantity of the last processed trade in the from symbol (base / coin)."
            },
            "LAST_PROCESSED_TRADE_QUOTE_QUANTITY": {
              "type": "integer",
              "description": "The  volume of the last processed trade in the to asset / quote."
            },
            "LAST_PROCESSED_TRADE_SIDE": {
              "type": "string",
              "description": "The side of the last processed trade."
            },
            "LAST_PROCESSED_TRADE_CCSEQ": {
              "type": "string",
              "description": "The CCSEQ of the latest trade."
            },
            "TOP_BID_PRICE": {
              "type": "integer",
              "description": "The price of the top bid in the to asset (quote / numberer symbol / coin). For a BTC-USD order book, this will be the highest price a person is willing to pay for some BTC in USD, as quoted for 1 full BTC."
            },
            "TOP_BID_QUANTITY": {
              "type": "integer",
              "description": "The quantity of the top bid in the from asset (base / coin). For a BTC-USD order book , this will be the amount of BTC someone is willing to buy at the best price."
            },
            "TOP_BID_LAST_UPDATE_TS": {
              "type": "integer",
              "description": "The timestamp in seconds of the last time the top bid was updated, as reported by the market / exchange. If the market / exchange does not provide this information, the received timestamp will be returned."
            },
            "TOP_ASK_PRICE": {
              "type": "integer",
              "description": "The price of the top ask in the to asset (quote / numberer symbol / coin). For a BTC-USD order book, this will be the best price someone is willing to sell some BTC in USD, as quoted for 1 full BTC."
            },
            "TOP_ASK_QUANTITY": {
              "type": "integer",
              "description": "The quantity of the top ask in the from asset (base / coin). For a BTC-USD order book, this will be the amount of BTC a person is willing to sell at the best price."
            },
            "TOP_ASK_LAST_UPDATE_TS": {
              "type": "integer",
              "description": "The timestamp in seconds of the last time the top ask was updated, as reported by the market / exchange. If the market / exchange does not provide this information, the received timestamp will be returned."
            },
            "CURRENT_HOUR_VOLUME": {
              "type": "integer",
              "description": "The sum of all trade quantities from the start of the current hour until now. Given in the base asset."
            },
            "CURRENT_HOUR_VOLUME_BUY": {
              "type": "integer",
              "description": "The sum of all buy trade quantities from the start of the current hour until now. Given in the base asset."
            },
            "CURRENT_HOUR_VOLUME_SELL": {
              "type": "integer",
              "description": "The sum of all sell trade quantities from the start of the current hour until now. Given in the base asset."
            },
            "CURRENT_HOUR_VOLUME_UNKNOWN": {
              "type": "integer",
              "description": "The sum of all trade quote quantities from the start of the current hour until now. Given in the base asset."
            },
            "CURRENT_HOUR_QUOTE_VOLUME": {
              "type": "integer",
              "description": "The sum of all trade quote quantities from the start of the current hour until now. Given in the quote asset."
            },
            "CURRENT_HOUR_QUOTE_VOLUME_BUY": {
              "type": "integer",
              "description": "The sum of all buy trade quote quantities from the start of the current hour until now. Given in the quote asset."
            },
            "CURRENT_HOUR_QUOTE_VOLUME_SELL": {
              "type": "integer",
              "description": "The sum of all sell trade quote quantities from the start of the current hour until now. Given in the quote asset."
            },
            "CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN": {
              "type": "integer",
              "description": "The sum of all unknown trade quote quantities from the start of the current hour until now. Given in the quote asset."
            },
            "CURRENT_HOUR_OPEN": {
              "type": "integer",
              "description": "The open price for the current hour, this is based on the closest trade occurring before the start of the current hour. Given in the quote asset."
            },
            "CURRENT_HOUR_HIGH": {
              "type": "integer",
              "description": "The highest trade price of the current hour. If there were no updates in the time period, the open price will be given. Given in the quote asset."
            },
            "CURRENT_HOUR_LOW": {
              "type": "integer",
              "description": "The lowest trade price of the current hour. If there were no updates in the time period, the open price will be given. Given in the quote asset."
            },
            "CURRENT_HOUR_TOTAL_TRADES": {
              "type": "integer",
              "description": "The total number of trades that have occurred since the start of the current hour."
            },
            "CURRENT_HOUR_TOTAL_TRADES_BUY": {
              "type": "integer",
              "description": "The total number of buy trades since the start of the current hour."
            },
            "CURRENT_HOUR_TOTAL_TRADES_SELL": {
              "type": "integer",
              "description": "The total number of sell trades since the start of the current hour."
            },
            "CURRENT_HOUR_TOTAL_TRADES_UNKNOWN": {
              "type": "integer",
              "description": "The total number of unknown trades since the start of the current hour."
            },
            "CURRENT_DAY_VOLUME": {
              "type": "integer",
              "description": "The sum of all trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset."
            },
            "CURRENT_DAY_VOLUME_BUY": {
              "type": "integer",
              "description": "The sum of all buy trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset."
            },
            "CURRENT_DAY_VOLUME_SELL": {
              "type": "integer",
              "description": "The sum of all sell trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset."
            },
            "CURRENT_DAY_VOLUME_UNKNOWN": {
              "type": "integer",
              "description": "The sum of all unknown trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset."
            },
            "CURRENT_DAY_QUOTE_VOLUME": {
              "type": "integer",
              "description": "The sum of all trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset."
            },
            "CURRENT_DAY_QUOTE_VOLUME_BUY": {
              "type": "integer",
              "description": "The sum of all buy trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset."
            },
            "CURRENT_DAY_QUOTE_VOLUME_SELL": {
              "type": "integer",
              "description": "The sum of all sell trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset."
            },
            "CURRENT_DAY_QUOTE_VOLUME_UNKNOWN": {
              "type": "integer",
              "description": "The sum of all unknown trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset."
            },
            "CURRENT_DAY_OPEN": {
              "type": "integer",
              "description": "The open price for the current day, this is based on the closest trade occurring before the start of the current day (00:00:00 GMT/UTC). Given in the quote asset."
            },
            "CURRENT_DAY_HIGH": {
              "type": "integer",
              "description": "The highest trade price of the current day (00:00:00 GMT/UTC). If there were no updates in the time period, the open price will be given. Given in the quote asset."
            },
            "CURRENT_DAY_LOW": {
              "type": "integer",
              "description": "The lowest trade price of the current day (00:00:00 GMT/UTC). If there were no updates in the time period, the open price will be given. Given in the quote asset."
            },
            "CURRENT_DAY_TOTAL_TRADES": {
              "type": "integer",
              "description": "The total number of trades that have occurred since the start of the current day (00:00:00 GMT/UTC)."
            },
            "CURRENT_DAY_TOTAL_TRADES_BUY": {
              "type": "integer",
              "description": "The total number of buy trades since the start of the current day (00:00:00 GMT/UTC)."
            },
            "CURRENT_DAY_TOTAL_TRADES_SELL": {
              "type": "integer",
              "description": "The total number of sell trades since the start of the current day (00:00:00 GMT/UTC)."
            },
            "CURRENT_DAY_TOTAL_TRADES_UNKNOWN": {
              "type": "integer",
              "description": "The total number of unknown trades since the start of the current day (00:00:00 GMT/UTC)."
            },
            "CURRENT_WEEK_VOLUME": {
              "type": "integer",
              "description": "The sum of all trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset."
            },
            "CURRENT_WEEK_VOLUME_BUY": {
              "type": "integer",
              "description": "The sum of all buy trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset."
            },
            "CURRENT_WEEK_VOLUME_SELL": {
              "type": "integer",
              "description": "The sum of all sell trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset."
            },
            "CURRENT_WEEK_VOLUME_UNKNOWN": {
              "type": "integer",
              "description": "The sum of all unknown trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset."
            },
            "CURRENT_WEEK_QUOTE_VOLUME": {
              "type": "integer",
              "description": "The sum of all trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset."
            },
            "CURRENT_WEEK_QUOTE_VOLUME_BUY": {
              "type": "integer",
              "description": "The sum of all buy trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset."
            },
            "CURRENT_WEEK_QUOTE_VOLUME_SELL": {
              "type": "integer",
              "description": "The sum of all sell trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset."
            },
            "CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN": {
              "type": "integer",
              "description": "The sum of all unknown trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset."
            },
            "CURRENT_WEEK_OPEN": {
              "type": "integer",
              "description": "The price of the closest trade to Monday (00:00:00 GMT/UTC) of this week. In a highly liquid market, this would be the last trade that happened on the previous Sunday at (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full weekly value. Given in the quote asset."
            },
            "CURRENT_WEEK_HIGH": {
              "type": "integer",
              "description": "The highest traded price of the week excluding the current day. The period will run from Monday - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the week. If today is Monday, this value will be the same as CURRENT_WEEK_OPEN. Given in the quote asset."
            },
            "CURRENT_WEEK_LOW": {
              "type": "integer",
              "description": "The lowest traded price of the week excluding the current day. The period will run from Monday - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the week. If today is Monday, this value will be CURRENT_WEEK_LOW. Given in the quote asset."
            },
            "CURRENT_WEEK_TOTAL_TRADES": {
              "type": "integer",
              "description": "The total number of trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0."
            },
            "CURRENT_WEEK_TOTAL_TRADES_BUY": {
              "type": "integer",
              "description": "The total number of buy trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0."
            },
            "CURRENT_WEEK_TOTAL_TRADES_SELL": {
              "type": "integer",
              "description": "The total number of sell trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0."
            },
            "CURRENT_WEEK_TOTAL_TRADES_UNKNOWN": {
              "type": "integer",
              "description": "The total number of unknown trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0."
            },
            "CURRENT_MONTH_VOLUME": {
              "type": "integer",
              "description": "The sum of all trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset."
            },
            "CURRENT_MONTH_VOLUME_BUY": {
              "type": "integer",
              "description": "The sum of all buy trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset."
            },
            "CURRENT_MONTH_VOLUME_SELL": {
              "type": "integer",
              "description": "The sum of all sell trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset."
            },
            "CURRENT_MONTH_VOLUME_UNKNOWN": {
              "type": "integer",
              "description": "The sum of all unknown trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset."
            },
            "CURRENT_MONTH_QUOTE_VOLUME": {
              "type": "integer",
              "description": "The sum of all trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset."
            },
            "CURRENT_MONTH_QUOTE_VOLUME_BUY": {
              "type": "integer",
              "description": "The sum of all buy trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset."
            },
            "CURRENT_MONTH_QUOTE_VOLUME_SELL": {
              "type": "integer",
              "description": "The sum of all sell trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset."
            },
            "CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN": {
              "type": "integer",
              "description": "The sum of all unknown trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset."
            },
            "CURRENT_MONTH_OPEN": {
              "type": "integer",
              "description": "The price of the closest trade to the 1st day (00:00:00 GMT/UTC) of this month. In a highly liquid market, this would be the last trade that happened on the previous month at (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full monthly value. Given in the quote asset."
            },
            "CURRENT_MONTH_HIGH": {
              "type": "integer",
              "description": "The highest traded price of the month excluding the current day. The period will run from the 1st of the month - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the month. If today is the 1st of the month, this value will be CURRENT_MONTH_OPEN. Given in the quote asset."
            },
            "CURRENT_MONTH_LOW": {
              "type": "integer",
              "description": "The lowest traded price of the month excluding the current day. The period will run from the 1st of the month - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the month. If today is the 1st of the month, this value will be CURRENT_MONTH_OPEN. Given in the quote asset."
            },
            "CURRENT_MONTH_TOTAL_TRADES": {
              "type": "integer",
              "description": "The total number of trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0."
            },
            "CURRENT_MONTH_TOTAL_TRADES_BUY": {
              "type": "integer",
              "description": "The total number of buy trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0."
            },
            "CURRENT_MONTH_TOTAL_TRADES_SELL": {
              "type": "integer",
              "description": "The total number of sell trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0."
            },
            "CURRENT_MONTH_TOTAL_TRADES_UNKNOWN": {
              "type": "integer",
              "description": "The total number of unknown trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0."
            },
            "CURRENT_YEAR_VOLUME": {
              "type": "integer",
              "description": "The sum of all trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset."
            },
            "CURRENT_YEAR_VOLUME_BUY": {
              "type": "integer",
              "description": "The sum of all buy trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset."
            },
            "CURRENT_YEAR_VOLUME_SELL": {
              "type": "integer",
              "description": "The sum of all sell trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset."
            },
            "CURRENT_YEAR_VOLUME_UNKNOWN": {
              "type": "integer",
              "description": "The sum of all unknown trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset."
            },
            "CURRENT_YEAR_QUOTE_VOLUME": {
              "type": "integer",
              "description": "The sum of all trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset."
            },
            "CURRENT_YEAR_QUOTE_VOLUME_BUY": {
              "type": "integer",
              "description": "The sum of all buy trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset."
            },
            "CURRENT_YEAR_QUOTE_VOLUME_SELL": {
              "type": "integer",
              "description": "The sum of all sell trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset."
            },
            "CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN": {
              "type": "integer",
              "description": "The sum of all unknown trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset."
            },
            "CURRENT_YEAR_OPEN": {
              "type": "integer",
              "description": "The price of the closest trade to the 1st of January (00:00:00 GMT/UTC) of this year. In a highly liquid market, this would be the last trade that happened on on the 31st of December of the previous year (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full yearly value. Given in the quote asset."
            },
            "CURRENT_YEAR_HIGH": {
              "type": "integer",
              "description": "The highest traded price of the year excluding the current day. The period runs from the 1st of January - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the year. If today is the 1st of January, this value will be CURRENT_YEAR_OPEN. Given in the quote asset."
            },
            "CURRENT_YEAR_LOW": {
              "type": "integer",
              "description": "The lowest traded price of the year excluding the current day. The period runs from the 1st of January - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the year. If today is the 1st of January, this value will be CURRENT_YEAR_OPEN. Given in the quote asset."
            },
            "CURRENT_YEAR_TOTAL_TRADES": {
              "type": "integer",
              "description": "The total number of trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0."
            },
            "CURRENT_YEAR_TOTAL_TRADES_BUY": {
              "type": "integer",
              "description": "The total number of buy trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0."
            },
            "CURRENT_YEAR_TOTAL_TRADES_SELL": {
              "type": "integer",
              "description": "The total number of sell trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0."
            },
            "CURRENT_YEAR_TOTAL_TRADES_UNKNOWN": {
              "type": "integer",
              "description": "The total number of unknown trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0."
            },
            "MOVING_24_HOUR_VOLUME": {
              "type": "integer",
              "description": "The sum of all trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset."
            },
            "MOVING_24_HOUR_VOLUME_BUY": {
              "type": "integer",
              "description": "The sum of all buy trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset."
            },
            "MOVING_24_HOUR_VOLUME_SELL": {
              "type": "integer",
              "description": "The sum of all sell trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset."
            },
            "MOVING_24_HOUR_VOLUME_UNKNOWN": {
              "type": "integer",
              "description": "The sum of all unknown trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset."
            },
            "MOVING_24_HOUR_QUOTE_VOLUME": {
              "type": "integer",
              "description": "The sum of all trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset."
            },
            "MOVING_24_HOUR_QUOTE_VOLUME_BUY": {
              "type": "integer",
              "description": "The sum of all buy trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset."
            },
            "MOVING_24_HOUR_QUOTE_VOLUME_SELL": {
              "type": "integer",
              "description": "The sum of all sell trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset."
            },
            "MOVING_24_HOUR_QUOTE_VOLUME_UNKNOWN": {
              "type": "integer",
              "description": "The sum of all unknown trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset."
            },
            "MOVING_24_HOUR_OPEN": {
              "type": "integer",
              "description": "The price of the closest trade to the period start date (23 hours + current hour ago). This will always be supplied and there is no need to do any calculation to get the full 24 hour value. Given in the quote asset."
            },
            "MOVING_24_HOUR_HIGH": {
              "type": "integer",
              "description": "The highest traded price of the period. Here, the period runs from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset."
            },
            "MOVING_24_HOUR_LOW": {
              "type": "integer",
              "description": "The lowest traded price of the period. Here, the period runs from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset."
            },
            "MOVING_24_HOUR_TOTAL_TRADES": {
              "type": "integer",
              "description": "The total number of trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total)."
            },
            "MOVING_24_HOUR_TOTAL_TRADES_BUY": {
              "type": "integer",
              "description": "The total number of buy trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total)."
            },
            "MOVING_24_HOUR_TOTAL_TRADES_SELL": {
              "type": "integer",
              "description": "The total number of sell trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total)."
            },
            "MOVING_24_HOUR_TOTAL_TRADES_UNKNOWN": {
              "type": "integer",
              "description": "The total number of unknown trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total)."
            },
            "MOVING_7_DAY_VOLUME": {
              "type": "integer",
              "description": "The sum of all trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset."
            },
            "MOVING_7_DAY_VOLUME_BUY": {
              "type": "integer",
              "description": "The sum of all buy trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset."
            },
            "MOVING_7_DAY_VOLUME_SELL": {
              "type": "integer",
              "description": "The sum of all sell trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset."
            },
            "MOVING_7_DAY_VOLUME_UNKNOWN": {
              "type": "integer",
              "description": "The sum of all unknown trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset."
            },
            "MOVING_7_DAY_QUOTE_VOLUME": {
              "type": "integer",
              "description": "The sum of all trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset."
            },
            "MOVING_7_DAY_QUOTE_VOLUME_BUY": {
              "type": "integer",
              "description": "The sum of all buy trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset."
            },
            "MOVING_7_DAY_QUOTE_VOLUME_SELL": {
              "type": "integer",
              "description": "The sum of all sell trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset."
            },
            "MOVING_7_DAY_QUOTE_VOLUME_UNKNOWN": {
              "type": "integer",
              "description": "The sum of all unknown trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset."
            },
            "MOVING_7_DAY_OPEN": {
              "type": "integer",
              "description": "The price of the closest trade to the period start date (6 days + current day - 00:00:00 GMT/UTC to now). This will always be supplied and there is no need to do any calculation to get the full 7 day value. Given in the quote asset."
            },
            "MOVING_7_DAY_HIGH": {
              "type": "integer",
              "description": "The highest traded price of the period. Here, the period runs from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset."
            },
            "MOVING_7_DAY_LOW": {
              "type": "integer",
              "description": "The lowest traded price of the period. Here, the period runs from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset."
            },
            "MOVING_7_DAY_TOTAL_TRADES": {
              "type": "integer",
              "description": "The total number of trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total)."
            },
            "MOVING_7_DAY_TOTAL_TRADES_BUY": {
              "type": "integer",
              "description": "The total number of buy trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total)."
            },
            "MOVING_7_DAY_TOTAL_TRADES_SELL": {
              "type": "integer",
              "description": "The total number of sell trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total)."
            },
            "MOVING_7_DAY_TOTAL_TRADES_UNKNOWN": {
              "type": "integer",
              "description": "The total number of unknown trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total)."
            },
            "MOVING_30_DAY_VOLUME": {
              "type": "integer",
              "description": "The sum of all trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset."
            },
            "MOVING_30_DAY_VOLUME_BUY": {
              "type": "integer",
              "description": "The sum of all buy trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset."
            },
            "MOVING_30_DAY_VOLUME_SELL": {
              "type": "integer",
              "description": "The sum of all sell trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset."
            },
            "MOVING_30_DAY_VOLUME_UNKNOWN": {
              "type": "integer",
              "description": "The sum of all unknown trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset."
            },
            "MOVING_30_DAY_QUOTE_VOLUME": {
              "type": "integer",
              "description": "The sum of all trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset."
            },
            "MOVING_30_DAY_QUOTE_VOLUME_BUY": {
              "type": "integer",
              "description": "The sum of all buy trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset."
            },
            "MOVING_30_DAY_QUOTE_VOLUME_SELL": {
              "type": "integer",
              "description": "The sum of all sell trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset."
            },
            "MOVING_30_DAY_QUOTE_VOLUME_UNKNOWN": {
              "type": "integer",
              "description": "The sum of all unknown trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset."
            },
            "MOVING_30_DAY_OPEN": {
              "type": "integer",
              "description": "The price of the closest trade to the period start date (29 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 30 day value. Given in the quote asset."
            },
            "MOVING_30_DAY_HIGH": {
              "type": "integer",
              "description": "The highest traded price of the period. Here, the period runs from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset."
            },
            "MOVING_30_DAY_LOW": {
              "type": "integer",
              "description": "The lowest traded price of the period. Here, the period runs from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset."
            },
            "MOVING_30_DAY_TOTAL_TRADES": {
              "type": "integer",
              "description": "The total number of trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total)."
            },
            "MOVING_30_DAY_TOTAL_TRADES_BUY": {
              "type": "integer",
              "description": "The total number of buy trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total)."
            },
            "MOVING_30_DAY_TOTAL_TRADES_SELL": {
              "type": "integer",
              "description": "The total number of sell trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total)."
            },
            "MOVING_30_DAY_TOTAL_TRADES_UNKNOWN": {
              "type": "integer",
              "description": "The total number of unknown trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total)."
            },
            "MOVING_90_DAY_VOLUME": {
              "type": "integer",
              "description": "The sum of all trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset."
            },
            "MOVING_90_DAY_VOLUME_BUY": {
              "type": "integer",
              "description": "The sum of all trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset."
            },
            "MOVING_90_DAY_VOLUME_SELL": {
              "type": "integer",
              "description": "The sum of all sell trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset."
            },
            "MOVING_90_DAY_VOLUME_UNKNOWN": {
              "type": "integer",
              "description": "The sum of all unknown trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset."
            },
            "MOVING_90_DAY_QUOTE_VOLUME": {
              "type": "integer",
              "description": "The sum of all trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset."
            },
            "MOVING_90_DAY_QUOTE_VOLUME_BUY": {
              "type": "integer",
              "description": "The sum of all buy trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset."
            },
            "MOVING_90_DAY_QUOTE_VOLUME_SELL": {
              "type": "integer",
              "description": "The sum of all sell trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset."
            },
            "MOVING_90_DAY_QUOTE_VOLUME_UNKNOWN": {
              "type": "integer",
              "description": "The sum of all unknown trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset."
            },
            "MOVING_90_DAY_OPEN": {
              "type": "integer",
              "description": "The price of the closest trade to the period start date (89 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 90 day value. Given in the quote asset."
            },
            "MOVING_90_DAY_HIGH": {
              "type": "integer",
              "description": "The highest value between the MOVING_90_DAY_OPEN and the highest traded price of the period. Here, the period runs from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset."
            },
            "MOVING_90_DAY_LOW": {
              "type": "integer",
              "description": "The lowest traded price of the period. Here, the period runs from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset."
            },
            "MOVING_90_DAY_TOTAL_TRADES": {
              "type": "integer",
              "description": "The total number of trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total)."
            },
            "MOVING_90_DAY_TOTAL_TRADES_BUY": {
              "type": "integer",
              "description": "The total number of buy trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total)."
            },
            "MOVING_90_DAY_TOTAL_TRADES_SELL": {
              "type": "integer",
              "description": "The total number of sell trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total)."
            },
            "MOVING_90_DAY_TOTAL_TRADES_UNKNOWN": {
              "type": "integer",
              "description": "The total number of unknown trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total)."
            },
            "MOVING_180_DAY_VOLUME": {
              "type": "integer",
              "description": "The sum of all trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset."
            },
            "MOVING_180_DAY_VOLUME_BUY": {
              "type": "integer",
              "description": "The sum of all trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset."
            },
            "MOVING_180_DAY_VOLUME_SELL": {
              "type": "integer",
              "description": "The sum of all sell trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset."
            },
            "MOVING_180_DAY_VOLUME_UNKNOWN": {
              "type": "integer",
              "description": "The sum of all unknown trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset."
            },
            "MOVING_180_DAY_QUOTE_VOLUME": {
              "type": "integer",
              "description": "The sum of all trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset."
            },
            "MOVING_180_DAY_QUOTE_VOLUME_BUY": {
              "type": "integer",
              "description": "The sum of all buy trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset."
            },
            "MOVING_180_DAY_QUOTE_VOLUME_SELL": {
              "type": "integer",
              "description": "The sum of all sell trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset."
            },
            "MOVING_180_DAY_QUOTE_VOLUME_UNKNOWN": {
              "type": "integer",
              "description": "The sum of all unknown trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset."
            },
            "MOVING_180_DAY_OPEN": {
              "type": "integer",
              "description": "The price of the closest trade to the period start date (179 days + current day - 00:00:00 GMT/UTC to now). This will always be supplied and there is no need to do any calculation to get the full 180 day value. Given in the quote asset."
            },
            "MOVING_180_DAY_HIGH": {
              "type": "integer",
              "description": "The  highest traded price of the period. Here, the period runs from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset."
            },
            "MOVING_180_DAY_LOW": {
              "type": "integer",
              "description": "The lowest traded price of the period. Here, the period runs from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset."
            },
            "MOVING_180_DAY_TOTAL_TRADES": {
              "type": "integer",
              "description": "The total number of trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total)."
            },
            "MOVING_180_DAY_TOTAL_TRADES_BUY": {
              "type": "integer",
              "description": "The total number of buy trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total)."
            },
            "MOVING_180_DAY_TOTAL_TRADES_SELL": {
              "type": "integer",
              "description": "The total number of sell trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total)."
            },
            "MOVING_180_DAY_TOTAL_TRADES_UNKNOWN": {
              "type": "integer",
              "description": "The total number of unknown trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total)."
            },
            "MOVING_365_DAY_VOLUME": {
              "type": "integer",
              "description": "The sum of all trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset."
            },
            "MOVING_365_DAY_VOLUME_BUY": {
              "type": "integer",
              "description": "The sum of all trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset."
            },
            "MOVING_365_DAY_VOLUME_SELL": {
              "type": "integer",
              "description": "The sum of all sell trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset."
            },
            "MOVING_365_DAY_VOLUME_UNKNOWN": {
              "type": "integer",
              "description": "The sum of all unknown trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset."
            },
            "MOVING_365_DAY_QUOTE_VOLUME": {
              "type": "integer",
              "description": "The sum of all trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset."
            },
            "MOVING_365_DAY_QUOTE_VOLUME_BUY": {
              "type": "integer",
              "description": "The sum of all buy trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset."
            },
            "MOVING_365_DAY_QUOTE_VOLUME_SELL": {
              "type": "integer",
              "description": "The sum of all sell trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset."
            },
            "MOVING_365_DAY_QUOTE_VOLUME_UNKNOWN": {
              "type": "integer",
              "description": "The sum of all unknown trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset."
            },
            "MOVING_365_DAY_OPEN": {
              "type": "integer",
              "description": "The price of the closest trade to the period start date (364 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 365 day value. Given in the quote asset."
            },
            "MOVING_365_DAY_HIGH": {
              "type": "integer",
              "description": "The highest price of the period. Here, the period runs from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset."
            },
            "MOVING_365_DAY_LOW": {
              "type": "integer",
              "description": "The lowest traded price of the period. Here, the period runs from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset."
            },
            "MOVING_365_DAY_TOTAL_TRADES": {
              "type": "integer",
              "description": "The total number of trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total)."
            },
            "MOVING_365_DAY_TOTAL_TRADES_BUY": {
              "type": "integer",
              "description": "The total number of buy trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total)."
            },
            "MOVING_365_DAY_TOTAL_TRADES_SELL": {
              "type": "integer",
              "description": "The total number of sell trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total)."
            },
            "MOVING_365_DAY_TOTAL_TRADES_UNKNOWN": {
              "type": "integer",
              "description": "The total number of unknown trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total)."
            },
            "LIFETIME_FIRST_TRADE_TS": {
              "type": "integer",
              "description": "The timestamp of the first trade ever recorded for the instrument"
            },
            "LIFETIME_VOLUME": {
              "type": "integer",
              "description": "The sum of all trade quantities of all the trades of this instrument. Given in the base asset."
            },
            "LIFETIME_VOLUME_BUY": {
              "type": "integer",
              "description": "The sum of all buy trade quantities of all the trades of this instrument. Given in the base asset."
            },
            "LIFETIME_VOLUME_SELL": {
              "type": "integer",
              "description": "The sum of all sell trade quantities of all the trades of this instrument. Given in the base asset."
            },
            "LIFETIME_VOLUME_UNKNOWN": {
              "type": "integer",
              "description": "The sum of all unknown trade quantities of all the trades of this instrument. Given in the base asset."
            },
            "LIFETIME_QUOTE_VOLUME": {
              "type": "integer",
              "description": "The sum of all trade quote quantities of all the trades of this instrument. Given in the quote asset."
            },
            "LIFETIME_QUOTE_VOLUME_BUY": {
              "type": "integer",
              "description": "The sum of all buy trade quote quantities of all the trades of this instrument. Given in the quote asset."
            },
            "LIFETIME_QUOTE_VOLUME_SELL": {
              "type": "integer",
              "description": "The sum of all sell trade quote quantities of all the trades of this instrument. Given in the quote asset."
            },
            "LIFETIME_QUOTE_VOLUME_UNKNOWN": {
              "type": "integer",
              "description": "The sum of all unknown trade quote quantities of all the trades of this instrument. Given in the quote asset."
            },
            "LIFETIME_OPEN": {
              "type": "integer",
              "description": "The price of the first trade of the instrument. Given in the quote asset."
            },
            "LIFETIME_HIGH": {
              "type": "integer",
              "description": "The price of the highest trade ever executed for this instrument. Given in the quote asset."
            },
            "LIFETIME_HIGH_TS": {
              "type": "integer",
              "description": "The the timestamp of the highest trade ever executed for this instrument. Given in the quote asset."
            },
            "LIFETIME_LOW": {
              "type": "integer",
              "description": "The price of the lowest trade ever executed for this instrument. Given in the quote asset."
            },
            "LIFETIME_LOW_TS": {
              "type": "integer",
              "description": "The timestamp of the lowest trade ever executed for this instrument. Given in the quote asset."
            },
            "LIFETIME_TOTAL_TRADES": {
              "type": "integer",
              "description": "The total number of all trades that have ever been executed for this instrument."
            },
            "LIFETIME_TOTAL_TRADES_BUY": {
              "type": "integer",
              "description": "The total number of all buy trades that have ever been executed for this instrument."
            },
            "LIFETIME_TOTAL_TRADES_SELL": {
              "type": "integer",
              "description": "The total number of all sell trades that have ever been executed for this instrument."
            },
            "LIFETIME_TOTAL_TRADES_UNKNOWN": {
              "type": "integer",
              "description": "The total number of all unknown trades that have ever been executed for this instrument."
            }
          }
        },
        "SPOT_INSTRUMENT_MARKET_DATA_RESPONSE": {
          "type": "object",
          "properties": {
            "Data": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "TYPE": {
                    "type": "string",
                    "description": "The type of the message."
                  },
                  "MARKET": {
                    "type": "string",
                    "description": "The market / exchange under consideration (e.g. coinbase, kraken, etc)."
                  },
                  "INSTRUMENT": {
                    "type": "string",
                    "description": "The unmapped instrument ID"
                  },
                  "MAPPED_INSTRUMENT": {
                    "type": "string",
                    "description": "The mapped instrument ID, derived from our mapping rules. This takes the form: \"BASE-QUOTE\" (e.g. BTC-USD). Only available on instruments that have been mapped."
                  },
                  "BASE": {
                    "type": "string",
                    "description": "The mapped from asset (base / symbol/ coin), e.g. BTC. Only available on instruments that have been mapped."
                  },
                  "QUOTE": {
                    "type": "string",
                    "description": "The mapped to asset (quote / counter symbol / coin), e.g. USD. Only available on instruments that have been mapped."
                  },
                  "CCSEQ": {
                    "type": "integer",
                    "description": "Our internal sequence number for this tick update. This is unique per market / exchange and trading pair / instrument. It will always be increasing by 1 for each new tick update we send."
                  },
                  "PRICE": {
                    "type": "integer",
                    "description": "The price in the to asset (quote / number symbol / coin) of the latest trade. I.e. for a BTC-USD trade, how much was paid for one BTC in USD)."
                  },
                  "PRICE_FLAG": {
                    "type": "string",
                    "description": "The flag indicating whether the price has increased, decreased, or not changed"
                  },
                  "PRICE_LAST_UPDATE_TS": {
                    "type": "integer",
                    "description": "The timestamp in seconds as reported by the market / exchange. If the market /exchange does not provide this information, the received timestamp will be returned."
                  },
                  "LAST_TRADE_QUANTITY": {
                    "type": "integer",
                    "description": "The quantity of the latest trade in the from symbol (base / coin)."
                  },
                  "LAST_TRADE_QUOTE_QUANTITY": {
                    "type": "integer",
                    "description": "The volume of the latest trade in the to asset / quote."
                  },
                  "LAST_TRADE_ID": {
                    "type": "string",
                    "description": "The ID of the latest trade."
                  },
                  "LAST_TRADE_CCSEQ": {
                    "type": "string",
                    "description": "The CCSEQ of the latest trade."
                  },
                  "LAST_TRADE_SIDE": {
                    "type": "string",
                    "description": "The side of the latest trade."
                  },
                  "LAST_PROCESSED_TRADE_TS": {
                    "type": "integer",
                    "description": "The timestamp in seconds that the last trade was processed, as reported by the market / exchange. If the market / exchange does not provide this information, the timestamp that the trade was received will be returned."
                  },
                  "LAST_PROCESSED_TRADE_PRICE": {
                    "type": "integer",
                    "description": "The price in the quote asset of the last trade processed, as reported by the market / exchange."
                  },
                  "LAST_PROCESSED_TRADE_QUANTITY": {
                    "type": "integer",
                    "description": "The quantity of the last processed trade in the from symbol (base / coin)."
                  },
                  "LAST_PROCESSED_TRADE_QUOTE_QUANTITY": {
                    "type": "integer",
                    "description": "The  volume of the last processed trade in the to asset / quote."
                  },
                  "LAST_PROCESSED_TRADE_SIDE": {
                    "type": "string",
                    "description": "The side of the last processed trade."
                  },
                  "LAST_PROCESSED_TRADE_CCSEQ": {
                    "type": "string",
                    "description": "The CCSEQ of the latest trade."
                  },
                  "TOP_BID_PRICE": {
                    "type": "integer",
                    "description": "The price of the top bid in the to asset (quote / numberer symbol / coin). For a BTC-USD order book, this will be the highest price a person is willing to pay for some BTC in USD, as quoted for 1 full BTC."
                  },
                  "TOP_BID_QUANTITY": {
                    "type": "integer",
                    "description": "The quantity of the top bid in the from asset (base / coin). For a BTC-USD order book , this will be the amount of BTC someone is willing to buy at the best price."
                  },
                  "TOP_BID_LAST_UPDATE_TS": {
                    "type": "integer",
                    "description": "The timestamp in seconds of the last time the top bid was updated, as reported by the market / exchange. If the market / exchange does not provide this information, the received timestamp will be returned."
                  },
                  "TOP_ASK_PRICE": {
                    "type": "integer",
                    "description": "The price of the top ask in the to asset (quote / numberer symbol / coin). For a BTC-USD order book, this will be the best price someone is willing to sell some BTC in USD, as quoted for 1 full BTC."
                  },
                  "TOP_ASK_QUANTITY": {
                    "type": "integer",
                    "description": "The quantity of the top ask in the from asset (base / coin). For a BTC-USD order book, this will be the amount of BTC a person is willing to sell at the best price."
                  },
                  "TOP_ASK_LAST_UPDATE_TS": {
                    "type": "integer",
                    "description": "The timestamp in seconds of the last time the top ask was updated, as reported by the market / exchange. If the market / exchange does not provide this information, the received timestamp will be returned."
                  },
                  "CURRENT_HOUR_VOLUME": {
                    "type": "integer",
                    "description": "The sum of all trade quantities from the start of the current hour until now. Given in the base asset."
                  },
                  "CURRENT_HOUR_VOLUME_BUY": {
                    "type": "integer",
                    "description": "The sum of all buy trade quantities from the start of the current hour until now. Given in the base asset."
                  },
                  "CURRENT_HOUR_VOLUME_SELL": {
                    "type": "integer",
                    "description": "The sum of all sell trade quantities from the start of the current hour until now. Given in the base asset."
                  },
                  "CURRENT_HOUR_VOLUME_UNKNOWN": {
                    "type": "integer",
                    "description": "The sum of all trade quote quantities from the start of the current hour until now. Given in the base asset."
                  },
                  "CURRENT_HOUR_QUOTE_VOLUME": {
                    "type": "integer",
                    "description": "The sum of all trade quote quantities from the start of the current hour until now. Given in the quote asset."
                  },
                  "CURRENT_HOUR_QUOTE_VOLUME_BUY": {
                    "type": "integer",
                    "description": "The sum of all buy trade quote quantities from the start of the current hour until now. Given in the quote asset."
                  },
                  "CURRENT_HOUR_QUOTE_VOLUME_SELL": {
                    "type": "integer",
                    "description": "The sum of all sell trade quote quantities from the start of the current hour until now. Given in the quote asset."
                  },
                  "CURRENT_HOUR_QUOTE_VOLUME_UNKNOWN": {
                    "type": "integer",
                    "description": "The sum of all unknown trade quote quantities from the start of the current hour until now. Given in the quote asset."
                  },
                  "CURRENT_HOUR_OPEN": {
                    "type": "integer",
                    "description": "The open price for the current hour, this is based on the closest trade occurring before the start of the current hour. Given in the quote asset."
                  },
                  "CURRENT_HOUR_HIGH": {
                    "type": "integer",
                    "description": "The highest trade price of the current hour. If there were no updates in the time period, the open price will be given. Given in the quote asset."
                  },
                  "CURRENT_HOUR_LOW": {
                    "type": "integer",
                    "description": "The lowest trade price of the current hour. If there were no updates in the time period, the open price will be given. Given in the quote asset."
                  },
                  "CURRENT_HOUR_TOTAL_TRADES": {
                    "type": "integer",
                    "description": "The total number of trades that have occurred since the start of the current hour."
                  },
                  "CURRENT_HOUR_TOTAL_TRADES_BUY": {
                    "type": "integer",
                    "description": "The total number of buy trades since the start of the current hour."
                  },
                  "CURRENT_HOUR_TOTAL_TRADES_SELL": {
                    "type": "integer",
                    "description": "The total number of sell trades since the start of the current hour."
                  },
                  "CURRENT_HOUR_TOTAL_TRADES_UNKNOWN": {
                    "type": "integer",
                    "description": "The total number of unknown trades since the start of the current hour."
                  },
                  "CURRENT_DAY_VOLUME": {
                    "type": "integer",
                    "description": "The sum of all trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset."
                  },
                  "CURRENT_DAY_VOLUME_BUY": {
                    "type": "integer",
                    "description": "The sum of all buy trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset."
                  },
                  "CURRENT_DAY_VOLUME_SELL": {
                    "type": "integer",
                    "description": "The sum of all sell trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset."
                  },
                  "CURRENT_DAY_VOLUME_UNKNOWN": {
                    "type": "integer",
                    "description": "The sum of all unknown trade quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the base asset."
                  },
                  "CURRENT_DAY_QUOTE_VOLUME": {
                    "type": "integer",
                    "description": "The sum of all trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset."
                  },
                  "CURRENT_DAY_QUOTE_VOLUME_BUY": {
                    "type": "integer",
                    "description": "The sum of all buy trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset."
                  },
                  "CURRENT_DAY_QUOTE_VOLUME_SELL": {
                    "type": "integer",
                    "description": "The sum of all sell trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset."
                  },
                  "CURRENT_DAY_QUOTE_VOLUME_UNKNOWN": {
                    "type": "integer",
                    "description": "The sum of all unknown trade quote quantities from the start of the current day (00:00:00 GMT/UTC) until now. Given in the quote asset."
                  },
                  "CURRENT_DAY_OPEN": {
                    "type": "integer",
                    "description": "The open price for the current day, this is based on the closest trade occurring before the start of the current day (00:00:00 GMT/UTC). Given in the quote asset."
                  },
                  "CURRENT_DAY_HIGH": {
                    "type": "integer",
                    "description": "The highest trade price of the current day (00:00:00 GMT/UTC). If there were no updates in the time period, the open price will be given. Given in the quote asset."
                  },
                  "CURRENT_DAY_LOW": {
                    "type": "integer",
                    "description": "The lowest trade price of the current day (00:00:00 GMT/UTC). If there were no updates in the time period, the open price will be given. Given in the quote asset."
                  },
                  "CURRENT_DAY_TOTAL_TRADES": {
                    "type": "integer",
                    "description": "The total number of trades that have occurred since the start of the current day (00:00:00 GMT/UTC)."
                  },
                  "CURRENT_DAY_TOTAL_TRADES_BUY": {
                    "type": "integer",
                    "description": "The total number of buy trades since the start of the current day (00:00:00 GMT/UTC)."
                  },
                  "CURRENT_DAY_TOTAL_TRADES_SELL": {
                    "type": "integer",
                    "description": "The total number of sell trades since the start of the current day (00:00:00 GMT/UTC)."
                  },
                  "CURRENT_DAY_TOTAL_TRADES_UNKNOWN": {
                    "type": "integer",
                    "description": "The total number of unknown trades since the start of the current day (00:00:00 GMT/UTC)."
                  },
                  "CURRENT_WEEK_VOLUME": {
                    "type": "integer",
                    "description": "The sum of all trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset."
                  },
                  "CURRENT_WEEK_VOLUME_BUY": {
                    "type": "integer",
                    "description": "The sum of all buy trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset."
                  },
                  "CURRENT_WEEK_VOLUME_SELL": {
                    "type": "integer",
                    "description": "The sum of all sell trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset."
                  },
                  "CURRENT_WEEK_VOLUME_UNKNOWN": {
                    "type": "integer",
                    "description": "The sum of all unknown trade quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the base asset."
                  },
                  "CURRENT_WEEK_QUOTE_VOLUME": {
                    "type": "integer",
                    "description": "The sum of all trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset."
                  },
                  "CURRENT_WEEK_QUOTE_VOLUME_BUY": {
                    "type": "integer",
                    "description": "The sum of all buy trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset."
                  },
                  "CURRENT_WEEK_QUOTE_VOLUME_SELL": {
                    "type": "integer",
                    "description": "The sum of all sell trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset."
                  },
                  "CURRENT_WEEK_QUOTE_VOLUME_UNKNOWN": {
                    "type": "integer",
                    "description": "The sum of all unknown trade quote quantities from Monday (00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0. Given in the quote asset."
                  },
                  "CURRENT_WEEK_OPEN": {
                    "type": "integer",
                    "description": "The price of the closest trade to Monday (00:00:00 GMT/UTC) of this week. In a highly liquid market, this would be the last trade that happened on the previous Sunday at (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full weekly value. Given in the quote asset."
                  },
                  "CURRENT_WEEK_HIGH": {
                    "type": "integer",
                    "description": "The highest traded price of the week excluding the current day. The period will run from Monday - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the week. If today is Monday, this value will be the same as CURRENT_WEEK_OPEN. Given in the quote asset."
                  },
                  "CURRENT_WEEK_LOW": {
                    "type": "integer",
                    "description": "The lowest traded price of the week excluding the current day. The period will run from Monday - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the week. If today is Monday, this value will be CURRENT_WEEK_LOW. Given in the quote asset."
                  },
                  "CURRENT_WEEK_TOTAL_TRADES": {
                    "type": "integer",
                    "description": "The total number of trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0."
                  },
                  "CURRENT_WEEK_TOTAL_TRADES_BUY": {
                    "type": "integer",
                    "description": "The total number of buy trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0."
                  },
                  "CURRENT_WEEK_TOTAL_TRADES_SELL": {
                    "type": "integer",
                    "description": "The total number of sell trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0."
                  },
                  "CURRENT_WEEK_TOTAL_TRADES_UNKNOWN": {
                    "type": "integer",
                    "description": "The total number of unknown trades between Monday (00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the week. If today is Monday, this value will be 0."
                  },
                  "CURRENT_MONTH_VOLUME": {
                    "type": "integer",
                    "description": "The sum of all trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset."
                  },
                  "CURRENT_MONTH_VOLUME_BUY": {
                    "type": "integer",
                    "description": "The sum of all buy trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset."
                  },
                  "CURRENT_MONTH_VOLUME_SELL": {
                    "type": "integer",
                    "description": "The sum of all sell trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset."
                  },
                  "CURRENT_MONTH_VOLUME_UNKNOWN": {
                    "type": "integer",
                    "description": "The sum of all unknown trade quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the base asset."
                  },
                  "CURRENT_MONTH_QUOTE_VOLUME": {
                    "type": "integer",
                    "description": "The sum of all trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset."
                  },
                  "CURRENT_MONTH_QUOTE_VOLUME_BUY": {
                    "type": "integer",
                    "description": "The sum of all buy trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset."
                  },
                  "CURRENT_MONTH_QUOTE_VOLUME_SELL": {
                    "type": "integer",
                    "description": "The sum of all sell trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset."
                  },
                  "CURRENT_MONTH_QUOTE_VOLUME_UNKNOWN": {
                    "type": "integer",
                    "description": "The sum of all unknown trade quote quantities from the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the first of the month, this value will be 0. Given in the quote asset."
                  },
                  "CURRENT_MONTH_OPEN": {
                    "type": "integer",
                    "description": "The price of the closest trade to the 1st day (00:00:00 GMT/UTC) of this month. In a highly liquid market, this would be the last trade that happened on the previous month at (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full monthly value. Given in the quote asset."
                  },
                  "CURRENT_MONTH_HIGH": {
                    "type": "integer",
                    "description": "The highest traded price of the month excluding the current day. The period will run from the 1st of the month - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the month. If today is the 1st of the month, this value will be CURRENT_MONTH_OPEN. Given in the quote asset."
                  },
                  "CURRENT_MONTH_LOW": {
                    "type": "integer",
                    "description": "The lowest traded price of the month excluding the current day. The period will run from the 1st of the month - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the month. If today is the 1st of the month, this value will be CURRENT_MONTH_OPEN. Given in the quote asset."
                  },
                  "CURRENT_MONTH_TOTAL_TRADES": {
                    "type": "integer",
                    "description": "The total number of trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0."
                  },
                  "CURRENT_MONTH_TOTAL_TRADES_BUY": {
                    "type": "integer",
                    "description": "The total number of buy trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0."
                  },
                  "CURRENT_MONTH_TOTAL_TRADES_SELL": {
                    "type": "integer",
                    "description": "The total number of sell trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0."
                  },
                  "CURRENT_MONTH_TOTAL_TRADES_UNKNOWN": {
                    "type": "integer",
                    "description": "The total number of unknown trades between the 1st of the month (xxxx:xx:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the month. If today is the 1st of the month, this value will be 0."
                  },
                  "CURRENT_YEAR_VOLUME": {
                    "type": "integer",
                    "description": "The sum of all trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset."
                  },
                  "CURRENT_YEAR_VOLUME_BUY": {
                    "type": "integer",
                    "description": "The sum of all buy trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset."
                  },
                  "CURRENT_YEAR_VOLUME_SELL": {
                    "type": "integer",
                    "description": "The sum of all sell trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset."
                  },
                  "CURRENT_YEAR_VOLUME_UNKNOWN": {
                    "type": "integer",
                    "description": "The sum of all unknown trade quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the base asset."
                  },
                  "CURRENT_YEAR_QUOTE_VOLUME": {
                    "type": "integer",
                    "description": "The sum of all trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset."
                  },
                  "CURRENT_YEAR_QUOTE_VOLUME_BUY": {
                    "type": "integer",
                    "description": "The sum of all buy trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset."
                  },
                  "CURRENT_YEAR_QUOTE_VOLUME_SELL": {
                    "type": "integer",
                    "description": "The sum of all sell trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset."
                  },
                  "CURRENT_YEAR_QUOTE_VOLUME_UNKNOWN": {
                    "type": "integer",
                    "description": "The sum of all unknown trade quote quantities from the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) to the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0. Given in the quote asset."
                  },
                  "CURRENT_YEAR_OPEN": {
                    "type": "integer",
                    "description": "The price of the closest trade to the 1st of January (00:00:00 GMT/UTC) of this year. In a highly liquid market, this would be the last trade that happened on on the 31st of December of the previous year (23:59:59 999 GMT/UTC). This will always be supplied and there is no need to do any calculation to get the full yearly value. Given in the quote asset."
                  },
                  "CURRENT_YEAR_HIGH": {
                    "type": "integer",
                    "description": "The highest traded price of the year excluding the current day. The period runs from the 1st of January - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the year. If today is the 1st of January, this value will be CURRENT_YEAR_OPEN. Given in the quote asset."
                  },
                  "CURRENT_YEAR_LOW": {
                    "type": "integer",
                    "description": "The lowest traded price of the year excluding the current day. The period runs from the 1st of January - 00:00:00 GMT/UTC to the beginning - 00:00:00 GMT/UTC of the current day of the year. If today is the 1st of January, this value will be CURRENT_YEAR_OPEN. Given in the quote asset."
                  },
                  "CURRENT_YEAR_TOTAL_TRADES": {
                    "type": "integer",
                    "description": "The total number of trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0."
                  },
                  "CURRENT_YEAR_TOTAL_TRADES_BUY": {
                    "type": "integer",
                    "description": "The total number of buy trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0."
                  },
                  "CURRENT_YEAR_TOTAL_TRADES_SELL": {
                    "type": "integer",
                    "description": "The total number of sell trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0."
                  },
                  "CURRENT_YEAR_TOTAL_TRADES_UNKNOWN": {
                    "type": "integer",
                    "description": "The total number of unknown trades between the 1st of January (xxxx:01:01 00:00:00 GMT/UTC) and the beginning (00:00:00 GMT/UTC) of the current day of the year. If today is the 1st of January, this value will be 0."
                  },
                  "MOVING_24_HOUR_VOLUME": {
                    "type": "integer",
                    "description": "The sum of all trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset."
                  },
                  "MOVING_24_HOUR_VOLUME_BUY": {
                    "type": "integer",
                    "description": "The sum of all buy trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset."
                  },
                  "MOVING_24_HOUR_VOLUME_SELL": {
                    "type": "integer",
                    "description": "The sum of all sell trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset."
                  },
                  "MOVING_24_HOUR_VOLUME_UNKNOWN": {
                    "type": "integer",
                    "description": "The sum of all unknown trade quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the base asset."
                  },
                  "MOVING_24_HOUR_QUOTE_VOLUME": {
                    "type": "integer",
                    "description": "The sum of all trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset."
                  },
                  "MOVING_24_HOUR_QUOTE_VOLUME_BUY": {
                    "type": "integer",
                    "description": "The sum of all buy trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset."
                  },
                  "MOVING_24_HOUR_QUOTE_VOLUME_SELL": {
                    "type": "integer",
                    "description": "The sum of all sell trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset."
                  },
                  "MOVING_24_HOUR_QUOTE_VOLUME_UNKNOWN": {
                    "type": "integer",
                    "description": "The sum of all unknown trade quote quantities from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset."
                  },
                  "MOVING_24_HOUR_OPEN": {
                    "type": "integer",
                    "description": "The price of the closest trade to the period start date (23 hours + current hour ago). This will always be supplied and there is no need to do any calculation to get the full 24 hour value. Given in the quote asset."
                  },
                  "MOVING_24_HOUR_HIGH": {
                    "type": "integer",
                    "description": "The highest traded price of the period. Here, the period runs from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset."
                  },
                  "MOVING_24_HOUR_LOW": {
                    "type": "integer",
                    "description": "The lowest traded price of the period. Here, the period runs from 24 hours ago up to the beginning of the current hour (23 hours in total). Given in the quote asset."
                  },
                  "MOVING_24_HOUR_TOTAL_TRADES": {
                    "type": "integer",
                    "description": "The total number of trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total)."
                  },
                  "MOVING_24_HOUR_TOTAL_TRADES_BUY": {
                    "type": "integer",
                    "description": "The total number of buy trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total)."
                  },
                  "MOVING_24_HOUR_TOTAL_TRADES_SELL": {
                    "type": "integer",
                    "description": "The total number of sell trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total)."
                  },
                  "MOVING_24_HOUR_TOTAL_TRADES_UNKNOWN": {
                    "type": "integer",
                    "description": "The total number of unknown trades that have occurred in the period running from 24 hours ago to the beginning (xx:00:00) of the current hour (23 hours in total)."
                  },
                  "MOVING_7_DAY_VOLUME": {
                    "type": "integer",
                    "description": "The sum of all trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset."
                  },
                  "MOVING_7_DAY_VOLUME_BUY": {
                    "type": "integer",
                    "description": "The sum of all buy trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset."
                  },
                  "MOVING_7_DAY_VOLUME_SELL": {
                    "type": "integer",
                    "description": "The sum of all sell trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset."
                  },
                  "MOVING_7_DAY_VOLUME_UNKNOWN": {
                    "type": "integer",
                    "description": "The sum of all unknown trade quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the base asset."
                  },
                  "MOVING_7_DAY_QUOTE_VOLUME": {
                    "type": "integer",
                    "description": "The sum of all trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset."
                  },
                  "MOVING_7_DAY_QUOTE_VOLUME_BUY": {
                    "type": "integer",
                    "description": "The sum of all buy trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset."
                  },
                  "MOVING_7_DAY_QUOTE_VOLUME_SELL": {
                    "type": "integer",
                    "description": "The sum of all sell trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset."
                  },
                  "MOVING_7_DAY_QUOTE_VOLUME_UNKNOWN": {
                    "type": "integer",
                    "description": "The sum of all unknown trade quote quantities from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset."
                  },
                  "MOVING_7_DAY_OPEN": {
                    "type": "integer",
                    "description": "The price of the closest trade to the period start date (6 days + current day - 00:00:00 GMT/UTC to now). This will always be supplied and there is no need to do any calculation to get the full 7 day value. Given in the quote asset."
                  },
                  "MOVING_7_DAY_HIGH": {
                    "type": "integer",
                    "description": "The highest traded price of the period. Here, the period runs from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset."
                  },
                  "MOVING_7_DAY_LOW": {
                    "type": "integer",
                    "description": "The lowest traded price of the period. Here, the period runs from 7 days ago up to the beginning of the current day (6 days in total). Given in the quote asset."
                  },
                  "MOVING_7_DAY_TOTAL_TRADES": {
                    "type": "integer",
                    "description": "The total number of trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total)."
                  },
                  "MOVING_7_DAY_TOTAL_TRADES_BUY": {
                    "type": "integer",
                    "description": "The total number of buy trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total)."
                  },
                  "MOVING_7_DAY_TOTAL_TRADES_SELL": {
                    "type": "integer",
                    "description": "The total number of sell trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total)."
                  },
                  "MOVING_7_DAY_TOTAL_TRADES_UNKNOWN": {
                    "type": "integer",
                    "description": "The total number of unknown trades that have occurred in the period running from 7 days ago to the beginning (00:00:00 GMT/UTC) of the current day (6 days in total)."
                  },
                  "MOVING_30_DAY_VOLUME": {
                    "type": "integer",
                    "description": "The sum of all trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset."
                  },
                  "MOVING_30_DAY_VOLUME_BUY": {
                    "type": "integer",
                    "description": "The sum of all buy trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset."
                  },
                  "MOVING_30_DAY_VOLUME_SELL": {
                    "type": "integer",
                    "description": "The sum of all sell trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset."
                  },
                  "MOVING_30_DAY_VOLUME_UNKNOWN": {
                    "type": "integer",
                    "description": "The sum of all unknown trade quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the base asset."
                  },
                  "MOVING_30_DAY_QUOTE_VOLUME": {
                    "type": "integer",
                    "description": "The sum of all trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset."
                  },
                  "MOVING_30_DAY_QUOTE_VOLUME_BUY": {
                    "type": "integer",
                    "description": "The sum of all buy trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset."
                  },
                  "MOVING_30_DAY_QUOTE_VOLUME_SELL": {
                    "type": "integer",
                    "description": "The sum of all sell trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset."
                  },
                  "MOVING_30_DAY_QUOTE_VOLUME_UNKNOWN": {
                    "type": "integer",
                    "description": "The sum of all unknown trade quote quantities from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset."
                  },
                  "MOVING_30_DAY_OPEN": {
                    "type": "integer",
                    "description": "The price of the closest trade to the period start date (29 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 30 day value. Given in the quote asset."
                  },
                  "MOVING_30_DAY_HIGH": {
                    "type": "integer",
                    "description": "The highest traded price of the period. Here, the period runs from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset."
                  },
                  "MOVING_30_DAY_LOW": {
                    "type": "integer",
                    "description": "The lowest traded price of the period. Here, the period runs from 30 days ago up to the beginning of the current day (29 days in total). Given in the quote asset."
                  },
                  "MOVING_30_DAY_TOTAL_TRADES": {
                    "type": "integer",
                    "description": "The total number of trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total)."
                  },
                  "MOVING_30_DAY_TOTAL_TRADES_BUY": {
                    "type": "integer",
                    "description": "The total number of buy trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total)."
                  },
                  "MOVING_30_DAY_TOTAL_TRADES_SELL": {
                    "type": "integer",
                    "description": "The total number of sell trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total)."
                  },
                  "MOVING_30_DAY_TOTAL_TRADES_UNKNOWN": {
                    "type": "integer",
                    "description": "The total number of unknown trades that have occurred in the period running from 30 days ago to the beginning (00:00:00 GMT/UTC) of the current day (29 days in total)."
                  },
                  "MOVING_90_DAY_VOLUME": {
                    "type": "integer",
                    "description": "The sum of all trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset."
                  },
                  "MOVING_90_DAY_VOLUME_BUY": {
                    "type": "integer",
                    "description": "The sum of all trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset."
                  },
                  "MOVING_90_DAY_VOLUME_SELL": {
                    "type": "integer",
                    "description": "The sum of all sell trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset."
                  },
                  "MOVING_90_DAY_VOLUME_UNKNOWN": {
                    "type": "integer",
                    "description": "The sum of all unknown trade quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the base asset."
                  },
                  "MOVING_90_DAY_QUOTE_VOLUME": {
                    "type": "integer",
                    "description": "The sum of all trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset."
                  },
                  "MOVING_90_DAY_QUOTE_VOLUME_BUY": {
                    "type": "integer",
                    "description": "The sum of all buy trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset."
                  },
                  "MOVING_90_DAY_QUOTE_VOLUME_SELL": {
                    "type": "integer",
                    "description": "The sum of all sell trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset."
                  },
                  "MOVING_90_DAY_QUOTE_VOLUME_UNKNOWN": {
                    "type": "integer",
                    "description": "The sum of all unknown trade quote quantities from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset."
                  },
                  "MOVING_90_DAY_OPEN": {
                    "type": "integer",
                    "description": "The price of the closest trade to the period start date (89 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 90 day value. Given in the quote asset."
                  },
                  "MOVING_90_DAY_HIGH": {
                    "type": "integer",
                    "description": "The highest value between the MOVING_90_DAY_OPEN and the highest traded price of the period. Here, the period runs from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset."
                  },
                  "MOVING_90_DAY_LOW": {
                    "type": "integer",
                    "description": "The lowest traded price of the period. Here, the period runs from 90 days ago up to the beginning of the current day (89 days in total). Given in the quote asset."
                  },
                  "MOVING_90_DAY_TOTAL_TRADES": {
                    "type": "integer",
                    "description": "The total number of trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total)."
                  },
                  "MOVING_90_DAY_TOTAL_TRADES_BUY": {
                    "type": "integer",
                    "description": "The total number of buy trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total)."
                  },
                  "MOVING_90_DAY_TOTAL_TRADES_SELL": {
                    "type": "integer",
                    "description": "The total number of sell trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total)."
                  },
                  "MOVING_90_DAY_TOTAL_TRADES_UNKNOWN": {
                    "type": "integer",
                    "description": "The total number of unknown trades that have occurred in the period running from 90 days ago to the beginning (00:00:00 GMT/UTC) of the current day (89 days in total)."
                  },
                  "MOVING_180_DAY_VOLUME": {
                    "type": "integer",
                    "description": "The sum of all trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset."
                  },
                  "MOVING_180_DAY_VOLUME_BUY": {
                    "type": "integer",
                    "description": "The sum of all trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset."
                  },
                  "MOVING_180_DAY_VOLUME_SELL": {
                    "type": "integer",
                    "description": "The sum of all sell trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset."
                  },
                  "MOVING_180_DAY_VOLUME_UNKNOWN": {
                    "type": "integer",
                    "description": "The sum of all unknown trade quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the base asset."
                  },
                  "MOVING_180_DAY_QUOTE_VOLUME": {
                    "type": "integer",
                    "description": "The sum of all trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset."
                  },
                  "MOVING_180_DAY_QUOTE_VOLUME_BUY": {
                    "type": "integer",
                    "description": "The sum of all buy trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset."
                  },
                  "MOVING_180_DAY_QUOTE_VOLUME_SELL": {
                    "type": "integer",
                    "description": "The sum of all sell trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset."
                  },
                  "MOVING_180_DAY_QUOTE_VOLUME_UNKNOWN": {
                    "type": "integer",
                    "description": "The sum of all unknown trade quote quantities from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset."
                  },
                  "MOVING_180_DAY_OPEN": {
                    "type": "integer",
                    "description": "The price of the closest trade to the period start date (179 days + current day - 00:00:00 GMT/UTC to now). This will always be supplied and there is no need to do any calculation to get the full 180 day value. Given in the quote asset."
                  },
                  "MOVING_180_DAY_HIGH": {
                    "type": "integer",
                    "description": "The  highest traded price of the period. Here, the period runs from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset."
                  },
                  "MOVING_180_DAY_LOW": {
                    "type": "integer",
                    "description": "The lowest traded price of the period. Here, the period runs from 180 days ago up to the beginning of the current day (179 days in total). Given in the quote asset."
                  },
                  "MOVING_180_DAY_TOTAL_TRADES": {
                    "type": "integer",
                    "description": "The total number of trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total)."
                  },
                  "MOVING_180_DAY_TOTAL_TRADES_BUY": {
                    "type": "integer",
                    "description": "The total number of buy trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total)."
                  },
                  "MOVING_180_DAY_TOTAL_TRADES_SELL": {
                    "type": "integer",
                    "description": "The total number of sell trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total)."
                  },
                  "MOVING_180_DAY_TOTAL_TRADES_UNKNOWN": {
                    "type": "integer",
                    "description": "The total number of unknown trades that have occurred in the period from 180 days ago to the beginning (00:00:00 GMT/UTC) of the current day (179 days in total)."
                  },
                  "MOVING_365_DAY_VOLUME": {
                    "type": "integer",
                    "description": "The sum of all trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset."
                  },
                  "MOVING_365_DAY_VOLUME_BUY": {
                    "type": "integer",
                    "description": "The sum of all trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset."
                  },
                  "MOVING_365_DAY_VOLUME_SELL": {
                    "type": "integer",
                    "description": "The sum of all sell trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset."
                  },
                  "MOVING_365_DAY_VOLUME_UNKNOWN": {
                    "type": "integer",
                    "description": "The sum of all unknown trade quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the base asset."
                  },
                  "MOVING_365_DAY_QUOTE_VOLUME": {
                    "type": "integer",
                    "description": "The sum of all trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset."
                  },
                  "MOVING_365_DAY_QUOTE_VOLUME_BUY": {
                    "type": "integer",
                    "description": "The sum of all buy trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset."
                  },
                  "MOVING_365_DAY_QUOTE_VOLUME_SELL": {
                    "type": "integer",
                    "description": "The sum of all sell trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset."
                  },
                  "MOVING_365_DAY_QUOTE_VOLUME_UNKNOWN": {
                    "type": "integer",
                    "description": "The sum of all unknown trade quote quantities from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset."
                  },
                  "MOVING_365_DAY_OPEN": {
                    "type": "integer",
                    "description": "The price of the closest trade to the period start date (364 days + current day - 00:00:00 GMT/UTC to now).  This will always be supplied and there is no need to do any calculation to get the full 365 day value. Given in the quote asset."
                  },
                  "MOVING_365_DAY_HIGH": {
                    "type": "integer",
                    "description": "The highest price of the period. Here, the period runs from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset."
                  },
                  "MOVING_365_DAY_LOW": {
                    "type": "integer",
                    "description": "The lowest traded price of the period. Here, the period runs from 365 days ago up to the beginning of the current day (364 days in total). Given in the quote asset."
                  },
                  "MOVING_365_DAY_TOTAL_TRADES": {
                    "type": "integer",
                    "description": "The total number of trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total)."
                  },
                  "MOVING_365_DAY_TOTAL_TRADES_BUY": {
                    "type": "integer",
                    "description": "The total number of buy trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total)."
                  },
                  "MOVING_365_DAY_TOTAL_TRADES_SELL": {
                    "type": "integer",
                    "description": "The total number of sell trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total)."
                  },
                  "MOVING_365_DAY_TOTAL_TRADES_UNKNOWN": {
                    "type": "integer",
                    "description": "The total number of unknown trades that have occurred during the period running from 365 days ago to the beginning (00:00:00 GMT/UTC) of the current day (364 days in total)."
                  },
                  "LIFETIME_FIRST_TRADE_TS": {
                    "type": "integer",
                    "description": "The timestamp of the first trade ever recorded for the instrument"
                  },
                  "LIFETIME_VOLUME": {
                    "type": "integer",
                    "description": "The sum of all trade quantities of all the trades of this instrument. Given in the base asset."
                  },
                  "LIFETIME_VOLUME_BUY": {
                    "type": "integer",
                    "description": "The sum of all buy trade quantities of all the trades of this instrument. Given in the base asset."
                  },
                  "LIFETIME_VOLUME_SELL": {
                    "type": "integer",
                    "description": "The sum of all sell trade quantities of all the trades of this instrument. Given in the base asset."
                  },
                  "LIFETIME_VOLUME_UNKNOWN": {
                    "type": "integer",
                    "description": "The sum of all unknown trade quantities of all the trades of this instrument. Given in the base asset."
                  },
                  "LIFETIME_QUOTE_VOLUME": {
                    "type": "integer",
                    "description": "The sum of all trade quote quantities of all the trades of this instrument. Given in the quote asset."
                  },
                  "LIFETIME_QUOTE_VOLUME_BUY": {
                    "type": "integer",
                    "description": "The sum of all buy trade quote quantities of all the trades of this instrument. Given in the quote asset."
                  },
                  "LIFETIME_QUOTE_VOLUME_SELL": {
                    "type": "integer",
                    "description": "The sum of all sell trade quote quantities of all the trades of this instrument. Given in the quote asset."
                  },
                  "LIFETIME_QUOTE_VOLUME_UNKNOWN": {
                    "type": "integer",
                    "description": "The sum of all unknown trade quote quantities of all the trades of this instrument. Given in the quote asset."
                  },
                  "LIFETIME_OPEN": {
                    "type": "integer",
                    "description": "The price of the first trade of the instrument. Given in the quote asset."
                  },
                  "LIFETIME_HIGH": {
                    "type": "integer",
                    "description": "The price of the highest trade ever executed for this instrument. Given in the quote asset."
                  },
                  "LIFETIME_HIGH_TS": {
                    "type": "integer",
                    "description": "The the timestamp of the highest trade ever executed for this instrument. Given in the quote asset."
                  },
                  "LIFETIME_LOW": {
                    "type": "integer",
                    "description": "The price of the lowest trade ever executed for this instrument. Given in the quote asset."
                  },
                  "LIFETIME_LOW_TS": {
                    "type": "integer",
                    "description": "The timestamp of the lowest trade ever executed for this instrument. Given in the quote asset."
                  },
                  "LIFETIME_TOTAL_TRADES": {
                    "type": "integer",
                    "description": "The total number of all trades that have ever been executed for this instrument."
                  },
                  "LIFETIME_TOTAL_TRADES_BUY": {
                    "type": "integer",
                    "description": "The total number of all buy trades that have ever been executed for this instrument."
                  },
                  "LIFETIME_TOTAL_TRADES_SELL": {
                    "type": "integer",
                    "description": "The total number of all sell trades that have ever been executed for this instrument."
                  },
                  "LIFETIME_TOTAL_TRADES_UNKNOWN": {
                    "type": "integer",
                    "description": "The total number of all unknown trades that have ever been executed for this instrument."
                  }
                }
              }
            },
            "Err": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "integer",
                  "description": "A public facing error type. If you want to treat a specific error use the type.",
                  "format": "int32",
                  "example": 1
                },
                "message": {
                  "type": "string",
                  "description": "A message describing the error",
                  "example": "Not found: instruments parameter. One or multiple instruments on coinbase not integrated yet or not supported. Instruments are case sensitive, make sure you check the https://data-api.cryptocompare.com/spot/v1/markets/instruments endpoint for a list of all the supported TRADE_SPOT market and instrument combinations. Invalid instruments: INSTRUMENT-DOES-NOT-EXIST"
                },
                "other_info": {
                  "type": "object",
                  "properties": {
                    "param": {
                      "type": "string",
                      "description": "The parameter that is resposible for the error",
                      "example": "instruments"
                    },
                    "values": {
                      "type": "array",
                      "description": "The values resposible for the error",
                      "example": [
                        "INSTRUMENT-DOES-NOT-EXIST"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "SPOT_INSTRUMENT_HISTO_DATA": {
          "type": "object",
          "properties": {
            "UNIT": {
              "type": "string",
              "description": "The unit of the historical period update: MINUTE for minute, HOUR for hour and DAY for day."
            },
            "TIMESTAMP": {
              "type": "integer",
              "description": "The timestamp in seconds of the beginning of the histo period. For minute it would be every minute at the beginning of the minute, for hour it would be the start of the hour and for daily it is 00:00 GMT."
            },
            "TYPE": {
              "type": "string",
              "description": "The type of the message."
            },
            "MARKET": {
              "type": "string",
              "description": "The market / exchange under consideration (e.g. gemini, kraken, coinbase, etc)."
            },
            "INSTRUMENT": {
              "type": "string",
              "description": "The unmapped instrument ID"
            },
            "MAPPED_INSTRUMENT": {
              "type": "string",
              "description": "The instrument ID, as derived from our mapping rules. This takes the form \"BASE-QUOTE\" (e.g. BTC-USD). Only available on instruments that have been mapped."
            },
            "BASE": {
              "type": "string",
              "description": "The mapped from asset (base / symbol/ coin) (e.g. BTC). Only available on instruments that have mapping."
            },
            "QUOTE": {
              "type": "string",
              "description": "The mapped to asset (quote / counter symbol / coin) (e.g. USD). Only available on instruments that have mapping."
            },
            "OPEN": {
              "type": "integer",
              "description": "The open price for the historical period, this is based on the closest trade before the period start."
            },
            "HIGH": {
              "type": "integer",
              "description": "The highest trade price in the time period. If there were no trades in the time period, the open price will be given."
            },
            "LOW": {
              "type": "integer",
              "description": "The lowest trade price in the time period. If there were no trades in the time period, the open price will be given."
            },
            "CLOSE": {
              "type": "integer",
              "description": "The price of the last trade in this time period. If there were no trades in the time period, the open price will be given."
            },
            "FIRST_TRADE_TIMESTAMP": {
              "type": "integer",
              "description": "The timestamp, in seconds, of the first trade in this time perio. This is only available when there is at least one trade in the time period."
            },
            "LAST_TRADE_TIMESTAMP": {
              "type": "integer",
              "description": "The timestamp, in seconds, of the last trade in this time period. This is only available when there is at least one trade in the time period."
            },
            "FIRST_TRADE_PRICE": {
              "type": "integer",
              "description": "The price of the first trade in the time period. This is only available when there is at least one trade in the time period."
            },
            "HIGH_TRADE_PRICE": {
              "type": "integer",
              "description": "The highest value of the trades in the time period. This is only available when there is at least one trade in the time period."
            },
            "HIGH_TRADE_TIMESTAMP": {
              "type": "integer",
              "description": "The timestamp, in seconds, of the highest trade in the time period. This is only available when there is at least one trade in the time period."
            },
            "LOW_TRADE_PRICE": {
              "type": "integer",
              "description": "The lowest value of the trades in the time period. This is only available when there is at least one trade in the time period."
            },
            "LOW_TRADE_TIMESTAMP": {
              "type": "integer",
              "description": "The timestamp, in seconds, of the lowest trade in the time period. This is only available when there is at least one trade in the time period."
            },
            "LAST_TRADE_PRICE": {
              "type": "integer",
              "description": "The last trade price in the time period. This is only available when there is at least one trade in the time period."
            },
            "TOTAL_TRADES": {
              "type": "integer",
              "description": "The total number of trades seen in this time period. If there were no trades in the time period, 0 will be returned."
            },
            "TOTAL_TRADES_BUY": {
              "type": "integer",
              "description": "The total number of BUY trades seen in this time period. If there were no trades in the time period, 0 will be returned."
            },
            "TOTAL_TRADES_SELL": {
              "type": "integer",
              "description": "The total number of SELL trades seen in this time period. If there were no trades in the time period, 0 will be returned."
            },
            "TOTAL_TRADES_UNKNOWN": {
              "type": "integer",
              "description": "The total number of UNKNOWN trades seen in this time period. If there were no trades in the time period, 0 will be returned."
            },
            "VOLUME": {
              "type": "integer",
              "description": "The sum of all the trade volumes in the from asset (base symbol / coin) for the time period. If there were no trades in the time period, 0 will be returned."
            },
            "QUOTE_VOLUME": {
              "type": "integer",
              "description": "The sum of all the trade volumes in the To asset (quote/counter symbol/coin) for the time period. If there were no trades in the time period, 0 will be returned."
            },
            "VOLUME_BUY": {
              "type": "integer",
              "description": "The sum of all the BUY trade volumes in the from asset (base symbol / coin) for the time period."
            },
            "QUOTE_VOLUME_BUY": {
              "type": "integer",
              "description": "The sum of all the BUY trade volumes in the to asset (quote/counter symbol/coin) for the time period."
            },
            "VOLUME_SELL": {
              "type": "integer",
              "description": "The sum of all the SELL trade volumes in the from asset (base symbol / coin) for the time period."
            },
            "QUOTE_VOLUME_SELL": {
              "type": "integer",
              "description": "The sum of all the SELL trade volumes in the To asset (quote/counter symbol/coin) for the time period."
            },
            "VOLUME_UNKNOWN": {
              "type": "integer",
              "description": "The sum of all the UNKNOWN trade volumes in the from asset (base symbol / coin) for the time period."
            },
            "QUOTE_VOLUME_UNKNOWN": {
              "type": "integer",
              "description": "The sum of all the UNKNOWN trade volumes in the To asset (quote/counter symbol/coin) for the time period."
            }
          }
        },
        "SPOT_INSTRUMENT_HISTO_DATA_RESPONSE": {
          "type": "object",
          "properties": {
            "Data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "UNIT": {
                    "type": "string",
                    "description": "The unit of the historical period update: MINUTE for minute, HOUR for hour and DAY for day."
                  },
                  "TIMESTAMP": {
                    "type": "integer",
                    "description": "The timestamp in seconds of the beginning of the histo period. For minute it would be every minute at the beginning of the minute, for hour it would be the start of the hour and for daily it is 00:00 GMT."
                  },
                  "TYPE": {
                    "type": "string",
                    "description": "The type of the message."
                  },
                  "MARKET": {
                    "type": "string",
                    "description": "The market / exchange under consideration (e.g. gemini, kraken, coinbase, etc)."
                  },
                  "INSTRUMENT": {
                    "type": "string",
                    "description": "The unmapped instrument ID"
                  },
                  "MAPPED_INSTRUMENT": {
                    "type": "string",
                    "description": "The instrument ID, as derived from our mapping rules. This takes the form \"BASE-QUOTE\" (e.g. BTC-USD). Only available on instruments that have been mapped."
                  },
                  "BASE": {
                    "type": "string",
                    "description": "The mapped from asset (base / symbol/ coin) (e.g. BTC). Only available on instruments that have mapping."
                  },
                  "QUOTE": {
                    "type": "string",
                    "description": "The mapped to asset (quote / counter symbol / coin) (e.g. USD). Only available on instruments that have mapping."
                  },
                  "OPEN": {
                    "type": "integer",
                    "description": "The open price for the historical period, this is based on the closest trade before the period start."
                  },
                  "HIGH": {
                    "type": "integer",
                    "description": "The highest trade price in the time period. If there were no trades in the time period, the open price will be given."
                  },
                  "LOW": {
                    "type": "integer",
                    "description": "The lowest trade price in the time period. If there were no trades in the time period, the open price will be given."
                  },
                  "CLOSE": {
                    "type": "integer",
                    "description": "The price of the last trade in this time period. If there were no trades in the time period, the open price will be given."
                  },
                  "FIRST_TRADE_TIMESTAMP": {
                    "type": "integer",
                    "description": "The timestamp, in seconds, of the first trade in this time perio. This is only available when there is at least one trade in the time period."
                  },
                  "LAST_TRADE_TIMESTAMP": {
                    "type": "integer",
                    "description": "The timestamp, in seconds, of the last trade in this time period. This is only available when there is at least one trade in the time period."
                  },
                  "FIRST_TRADE_PRICE": {
                    "type": "integer",
                    "description": "The price of the first trade in the time period. This is only available when there is at least one trade in the time period."
                  },
                  "HIGH_TRADE_PRICE": {
                    "type": "integer",
                    "description": "The highest value of the trades in the time period. This is only available when there is at least one trade in the time period."
                  },
                  "HIGH_TRADE_TIMESTAMP": {
                    "type": "integer",
                    "description": "The timestamp, in seconds, of the highest trade in the time period. This is only available when there is at least one trade in the time period."
                  },
                  "LOW_TRADE_PRICE": {
                    "type": "integer",
                    "description": "The lowest value of the trades in the time period. This is only available when there is at least one trade in the time period."
                  },
                  "LOW_TRADE_TIMESTAMP": {
                    "type": "integer",
                    "description": "The timestamp, in seconds, of the lowest trade in the time period. This is only available when there is at least one trade in the time period."
                  },
                  "LAST_TRADE_PRICE": {
                    "type": "integer",
                    "description": "The last trade price in the time period. This is only available when there is at least one trade in the time period."
                  },
                  "TOTAL_TRADES": {
                    "type": "integer",
                    "description": "The total number of trades seen in this time period. If there were no trades in the time period, 0 will be returned."
                  },
                  "TOTAL_TRADES_BUY": {
                    "type": "integer",
                    "description": "The total number of BUY trades seen in this time period. If there were no trades in the time period, 0 will be returned."
                  },
                  "TOTAL_TRADES_SELL": {
                    "type": "integer",
                    "description": "The total number of SELL trades seen in this time period. If there were no trades in the time period, 0 will be returned."
                  },
                  "TOTAL_TRADES_UNKNOWN": {
                    "type": "integer",
                    "description": "The total number of UNKNOWN trades seen in this time period. If there were no trades in the time period, 0 will be returned."
                  },
                  "VOLUME": {
                    "type": "integer",
                    "description": "The sum of all the trade volumes in the from asset (base symbol / coin) for the time period. If there were no trades in the time period, 0 will be returned."
                  },
                  "QUOTE_VOLUME": {
                    "type": "integer",
                    "description": "The sum of all the trade volumes in the To asset (quote/counter symbol/coin) for the time period. If there were no trades in the time period, 0 will be returned."
                  },
                  "VOLUME_BUY": {
                    "type": "integer",
                    "description": "The sum of all the BUY trade volumes in the from asset (base symbol / coin) for the time period."
                  },
                  "QUOTE_VOLUME_BUY": {
                    "type": "integer",
                    "description": "The sum of all the BUY trade volumes in the to asset (quote/counter symbol/coin) for the time period."
                  },
                  "VOLUME_SELL": {
                    "type": "integer",
                    "description": "The sum of all the SELL trade volumes in the from asset (base symbol / coin) for the time period."
                  },
                  "QUOTE_VOLUME_SELL": {
                    "type": "integer",
                    "description": "The sum of all the SELL trade volumes in the To asset (quote/counter symbol/coin) for the time period."
                  },
                  "VOLUME_UNKNOWN": {
                    "type": "integer",
                    "description": "The sum of all the UNKNOWN trade volumes in the from asset (base symbol / coin) for the time period."
                  },
                  "QUOTE_VOLUME_UNKNOWN": {
                    "type": "integer",
                    "description": "The sum of all the UNKNOWN trade volumes in the To asset (quote/counter symbol/coin) for the time period."
                  }
                }
              }
            },
            "Err": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "SPOT_INSTRUMENT_TRADE": {
          "type": "object",
          "properties": {
            "TYPE": {
              "type": "string",
              "description": "The type of the message."
            },
            "MARKET": {
              "type": "string",
              "description": "The market / exchange under consideration (e.g. Coinbase, Kraken, etc.)."
            },
            "INSTRUMENT": {
              "type": "string",
              "description": "The unmapped instrument ID as given by the exchange (e.g. BTCUSD, BTC_USD, XBT-ZUSD, BTC-USD)."
            },
            "MAPPED_INSTRUMENT": {
              "type": "string",
              "description": "The mapped instrument ID, as derived from our mapping rules. This takes the form: \"BASE-QUOTE\". Only available on instruments that have been mapped (e.g. BTC-USD)."
            },
            "BASE": {
              "type": "string",
              "description": "The mapped from asset (base / symbol/ coin). Only available on instruments that have been mapped (e.g. BTC)."
            },
            "QUOTE": {
              "type": "string",
              "description": "The mapped to asset (quote / counter symbol / coin). Only available on instruments that have been mapped (e.g. USD)."
            },
            "SIDE": {
              "type": "string",
              "description": "The side of the trade: SELL, BUY or UNKNOWN. If the exchange / api does not provide a side, \"UNKNOWN\" will be returned."
            },
            "ID": {
              "type": "string",
              "description": "The trade ID as reported by the market / exchange. If the exchange does not provide a trade ID, this will be the timestamp of the trade + a number from 0 - 999. This preserves uniqueness, assuming there would never be more than 999 trades in any given second."
            },
            "TIMESTAMP": {
              "type": "integer",
              "description": "The timestamp in seconds as reported by the market / exchange or the received timestamp if the market / exchange does not provide one."
            },
            "TIMESTAMP_NS": {
              "type": "integer",
              "description": "The nanosecond part of the reported timestamp."
            },
            "RECEIVED_TIMESTAMP": {
              "type": "integer",
              "description": "The timestamp in seconds that the trade was received. This varies from the trade taking place on the market by a few millisconds to a few seconds depending on the market / exchange API options / rate limits."
            },
            "RECEIVED_TIMESTAMP_NS": {
              "type": "integer",
              "description": "The nanosecond part of the received timestamp."
            },
            "QUANTITY": {
              "type": "integer",
              "description": "The volume of the trade, given in the from instrument (base symbol / coin/ contract). For a spot BTC-USD trade, this is how much BTC was traded at the trade price. For a futures BTCUSDPERP, this is the BTC equivalent for the contracts traded."
            },
            "PRICE": {
              "type": "integer",
              "description": "The price in the to instrument (quote / counter symbol / coin) of the trade. For a BTC-USD trade, this is how much was paid for one BTC in USD. For futures, this will be the price of the contract."
            },
            "QUOTE_QUANTITY": {
              "type": "integer",
              "description": "The volume of the trade, given in the to instrument (quote / counter symbol / coin). This is equivalent to QUANTITY * PRICE. E.g. for a BTC-USD trade, this is how much USD was paid in total for the volume of BTC traded. For futures this is the quote currency equivalent for the contracts traded."
            },
            "SOURCE": {
              "type": "string",
              "description": "The source of the trade update: POLLING, STREAMING, GO, BLOB etc."
            },
            "CCSEQ": {
              "type": "integer",
              "description": "Our internal sequence number for this trade, this is unique per market / exchange and trading pair. Should always be increasing by 1 for each new trade we discover, not in chronological order."
            }
          }
        },
        "SPOT_INSTRUMENT_TRADE_RESPONSE": {
          "type": "object",
          "properties": {
            "Data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "TYPE": {
                    "type": "string",
                    "description": "The type of the message."
                  },
                  "MARKET": {
                    "type": "string",
                    "description": "The market / exchange under consideration (e.g. Coinbase, Kraken, etc.)."
                  },
                  "INSTRUMENT": {
                    "type": "string",
                    "description": "The unmapped instrument ID as given by the exchange (e.g. BTCUSD, BTC_USD, XBT-ZUSD, BTC-USD)."
                  },
                  "MAPPED_INSTRUMENT": {
                    "type": "string",
                    "description": "The mapped instrument ID, as derived from our mapping rules. This takes the form: \"BASE-QUOTE\". Only available on instruments that have been mapped (e.g. BTC-USD)."
                  },
                  "BASE": {
                    "type": "string",
                    "description": "The mapped from asset (base / symbol/ coin). Only available on instruments that have been mapped (e.g. BTC)."
                  },
                  "QUOTE": {
                    "type": "string",
                    "description": "The mapped to asset (quote / counter symbol / coin). Only available on instruments that have been mapped (e.g. USD)."
                  },
                  "SIDE": {
                    "type": "string",
                    "description": "The side of the trade: SELL, BUY or UNKNOWN. If the exchange / api does not provide a side, \"UNKNOWN\" will be returned."
                  },
                  "ID": {
                    "type": "string",
                    "description": "The trade ID as reported by the market / exchange. If the exchange does not provide a trade ID, this will be the timestamp of the trade + a number from 0 - 999. This preserves uniqueness, assuming there would never be more than 999 trades in any given second."
                  },
                  "TIMESTAMP": {
                    "type": "integer",
                    "description": "The timestamp in seconds as reported by the market / exchange or the received timestamp if the market / exchange does not provide one."
                  },
                  "TIMESTAMP_NS": {
                    "type": "integer",
                    "description": "The nanosecond part of the reported timestamp."
                  },
                  "RECEIVED_TIMESTAMP": {
                    "type": "integer",
                    "description": "The timestamp in seconds that the trade was received. This varies from the trade taking place on the market by a few millisconds to a few seconds depending on the market / exchange API options / rate limits."
                  },
                  "RECEIVED_TIMESTAMP_NS": {
                    "type": "integer",
                    "description": "The nanosecond part of the received timestamp."
                  },
                  "QUANTITY": {
                    "type": "integer",
                    "description": "The volume of the trade, given in the from instrument (base symbol / coin/ contract). For a spot BTC-USD trade, this is how much BTC was traded at the trade price. For a futures BTCUSDPERP, this is the BTC equivalent for the contracts traded."
                  },
                  "PRICE": {
                    "type": "integer",
                    "description": "The price in the to instrument (quote / counter symbol / coin) of the trade. For a BTC-USD trade, this is how much was paid for one BTC in USD. For futures, this will be the price of the contract."
                  },
                  "QUOTE_QUANTITY": {
                    "type": "integer",
                    "description": "The volume of the trade, given in the to instrument (quote / counter symbol / coin). This is equivalent to QUANTITY * PRICE. E.g. for a BTC-USD trade, this is how much USD was paid in total for the volume of BTC traded. For futures this is the quote currency equivalent for the contracts traded."
                  },
                  "SOURCE": {
                    "type": "string",
                    "description": "The source of the trade update: POLLING, STREAMING, GO, BLOB etc."
                  },
                  "CCSEQ": {
                    "type": "integer",
                    "description": "Our internal sequence number for this trade, this is unique per market / exchange and trading pair. Should always be increasing by 1 for each new trade we discover, not in chronological order."
                  }
                }
              }
            },
            "Err": {
              "type": "object",
              "properties": {}
            }
          }
        }
      },
      "requestBodies": {},
      "securitySchemes": {
        "api_key_query": {
          "type": "apiKey",
          "name": "api_key",
          "description": "If there is a query api_key it will overwrite the cookie value",
          "in": "query"
        },
        "api_key_header": {
          "type": "apiKey",
          "name": "authorization",
          "description": "If there is a header authorization: Apikey <api key value> or authorization: Basic <api key value> this will overwrite the cookie and the api_key",
          "in": "header"
        }
      }
    },
    "tags": [
      {
        "x-id": "IndexCC",
        "name": "Reference Rates",
        "x-icon": "calculator",
        "description": "Reference rates endpoints for the CryptoCompare cryptocurrency indices provide access to real-time and historical data for a specific cryptocurrency index or group of indices. These endpoints can be used to retrieve information such as the current value, high and low values, and volume of a cryptocurrency index, as well as historical data such as the open, high, low, close, and volume values for a specific time period. This information can be useful for a variety of purposes, including tracking the performance of a cryptocurrency index over time, analyzing market trends, and conducting technical analysis. Cryptocurrency indices are often used as benchmarks to measure the performance of a particular cryptocurrency or group of cryptocurrencies, and reference rates endpoints can provide valuable data for these purposes."
      },
      {
        "x-id": "Spot",
        "name": "Spot",
        "x-icon": "btc",
        "description": "Spot endpoints for the cryptocurrency market provide access to real-time and historical data for the prices of specific cryptocurrencies or groups of cryptocurrencies. These endpoints can be used to retrieve information such as the current spot price of a cryptocurrency, as well as historical data such as the open, high, low, close, and volume values for a specific time period. This information can be useful for a variety of purposes, including tracking the performance of specific cryptocurrencies over time, analyzing market trends, and conducting technical analysis. Spot endpoints can provide valuable data for anyone interested in the current and past prices of cryptocurrencies, as well as anyone looking to buy or sell cryptocurrencies."
      },
      {
        "x-id": "Futures",
        "name": "Futures",
        "x-icon": "balance-scale",
        "description": "Futures endpoints provide access to real-time and historical data for the prices of futures contracts for specific cryptocurrencies or groups of cryptocurrencies. These endpoints can be used to retrieve information such as the current price of a futures contract, as well as historical data such as the open, high, low, close, and volume values for a specific time period. Futures contracts are financial instruments that allow users to buy or sell an asset at a predetermined price at a future date, and the prices of these contracts can be influenced by a variety of factors including market demand, supply, and external events. Futures endpoints can provide valuable data for anyone interested in the current and past prices of futures contracts for cryptocurrencies, as well as anyone looking to buy or sell futures contracts."
      },
      {
        "x-id": "Overview",
        "name": "Overview",
        "x-icon": "table",
        "description": "A set of endpoints that provide aggregated metrics data about the overall health of the cryptocurrency industry offer access to a range of data points that can be used to measure the performance and vitality of the cryptocurrency market. These endpoints can be used to retrieve information such as the total market capitalization of all cryptocurrencies, the total volume of trades, the number of active cryptocurrencies, and other metrics that can be used to gauge the overall health of the industry. This information can be useful for anyone interested in understanding the current state of the cryptocurrency market and tracking its development over time."
      },
      {
        "x-id": "News",
        "name": "News",
        "x-icon": "newspaper-o",
        "description": "A set of endpoints that provide aggregated news for the cryptocurrency industry offer access to articles and other content related to the cryptocurrency industry. These endpoints can be used to retrieve news articles about various topics within the cryptocurrency industry, including new developments, trends, and events. The news articles may be organized into categories, such as market analysis, regulation, or technology, to help users easily find articles on specific topics of interest. These endpoints can provide valuable information for anyone interested in staying up to date with the latest news and developments in the cryptocurrency industry."
      },
      {
        "x-id": "Asset",
        "name": "Asset",
        "x-icon": "sitemap",
        "description": "Asset endpoints provide access to data about specific assets, such as cryptocurrencies or other digital assets. These endpoints can be used to retrieve information about the asset, including its identifier, symbol, name, description, and other metadata. Asset endpoints may also provide information about the asset's type, such as whether it is a blockchain asset or a token, as well as information about the supported blockhain platforms of the asset. This information can be useful for anyone interested in learning more about specific assets and their characteristics."
      }
    ]
  }